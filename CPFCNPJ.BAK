PARAMETERS A


   B= CLCalc_cgc(A)
   IF B = "3"
   		WAIT WINDOW "VALIDO"
   ELSE
   		WAIT WINDOW "INVALIDO"
   ENDIF
   
   

RETURN


*--------------------------------------------------------------------*
* objetivo : consiste CGC ou CPF                                     *
*--------------------------------------------------------------------*
FUNCTION CLCalc_Cgc
   parameter p_cgc
   PRIVATE TMPcgccpf

   
   TMPcgccpf= alltrim(str(p_cgc,14))

   cgc_aux  = strtran(str(p_cgc,14)," ","0")


   if p_cgc = 0
     return "3"			&& INVALIDO
   endif



   *---------------------------------------------------------*
*  if CLcgc1(cgc_aux)
*     return "2"			&& CGC OK
*  endif
   *---------------------------------------------------------*
   if LEN(TMPcgccpf) > 11 
   	 IF CLcgc1(cgc_aux)
	      return "2"			&& CGC OK
	 ELSE
	      return "3"			&& CGC OK
	 ENDIF
   endif
   *---------------------------------------------------------*
	
   acumulo  = 0
   resto    = 0
   digito_1 = 0
   digito_2 = 0
   cont     = 0
   for cont = 1 to 9
       acumulo = acumulo + val(subs(cgc_aux,cont+3,1))*cont
   next 
   resto = mod(acumulo,11)
   if resto = 10
      digito_1 = 0
   else
      digito_1 = val(right(str(resto,3),1))
   endif          
   acumulo = digito_1 * 9

   for cont = 1 to 8
       acumulo = acumulo + val(subs(cgc_aux,cont+4,1))*cont
   next
   resto = mod(acumulo,11)
   if resto = 10
      digito_2 = 0
   else
      digito_2 = val(right(str(resto,3),1))
   endif          

*   A = str(digito_1,1) + str(digito_2,1)
*   wait window "Digitos : "+ a

   if subst(cgc_aux,13,2) # str(digito_1,1) + str(digito_2,1)

	   if CLcgc1(cgc_aux)
    	  return "2"			&& CGC OK
	   endif

      return "3"			&& CODIGO INVALIDO
   else
      return "1"			&& CPF OK
   endif
return

*--------------------------------------------------------------------*
* objetivo : funcao auxiliar a funcao Calc_Cgc                       *
*--------------------------------------------------------------------*
function CLCgc1
    parameter p_cgc1
    acumulo1    = 0
    digito_11   = 0
    digito_21   = 0
    resto1      = 0
    cont1       = 0
    cont2       = 12
    for cont1 = 2 to 9
        acumulo1 = acumulo1 + val(subst(p_cgc1,cont2,1))*cont1
        cont2    = cont2 - 1
    next 
    cont2 = 4
    for cont1 = 2 to 5
        acumulo1 = acumulo1 + val(subst(p_cgc1,cont2,1))*cont1
        cont2    = cont2 - 1
    next 
    resto1 = mod(acumulo1,11)
    if resto1 = 0 or resto1 = 1
       digito_11 = 0
    else
       digito_11 = 11 - resto1 
       digito_11 = val(right(str(digito_11,3),1))
    endif          
    acumulo1 = digito_11 * 2
    cont2 = 12
    for cont1 = 3 to 9
        acumulo1 = acumulo1 + val(subst(p_cgc1,cont2,1))*cont1
        cont2    = cont2 - 1
    next 
    cont2 = 5
    for cont1 = 2 to 6
        acumulo1 = acumulo1 + val(subst(p_cgc1,cont2,1))*cont1
        cont2    = cont2 - 1
    next 
    resto1 = mod(acumulo1,11)
    if resto1 = 0 or resto1 = 1
       digito_21 = 0
    else
       digito_21 = 11 - resto1 
       digito_21 = val(right(str(digito_21,3),1))
    endif          
* 	 a = str(digito_11,1) + str(digito_21,1)
*     wait window "Digitos : "+ a

    if subst(p_cgc1,13,2) # str(digito_11,1) + str(digito_21,1)
       return (.f.)
    endif
return
