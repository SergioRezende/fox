*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º 29/05/2015           OBJ_ITEN.SPR              09:21:12 º
*       º                                                         º
*       ÇÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¶
*       º                                                         º
*       º Author's Name                                           º
*       º                                                         º
*       º Copyright (c) 2015 Company Name                         º
*       º Address                                                 º
*       º City,     Zip                                           º
*       º                                                         º
*       º Description:                                            º
*       º This program was automatically generated by GENSCRN.    º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½


#REGION 0
REGIONAL m.currarea, m.talkstat, m.compstat

IF SET("TALK") = "ON"
	SET TALK OFF
	m.talkstat = "ON"
ELSE
	m.talkstat = "OFF"
ENDIF
m.compstat = SET("COMPATIBLE")
SET COMPATIBLE FOXPLUS

*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º                MS-DOS Window definitions                º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*


*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º         OBJ_ITEN/MS-DOS Setup Code - SECTION 2          º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*

#REGION 1
*---------------------------------------------------------------*
* OPERA ARQUIVOS :   (obs: ARQ. PASSADOS ABERTOS
*			NOTAITE
*           TIPOOPER
* OBJETIVO:  PROGRAMA PRINCIPAL PARA EDICAO DE ITENS RELACIONADOS
*			 compras,TRANSFERENCIA, DEVOL, REQUIS, REMESS,...
*---------------------------------------------------------------*
PUSH KEY CLEAR		&& desabilita teclas de atalho def. anteriormente
ON KEY LABEL F1		DO HLP2000.SPR WITH  POPUP(),PROMPT(),PROGRAM(),;
							WONTOP(),VARREAD()

******>>>> INICIO CONTROLE AMBIENTAL

ON KEY LABEL ESCAPE

wl_areant 	= ALLTRIM(ALIAS()) && PERMITE RETORNAR A AREA ANTER. A CHAMADA

LForcfecha	= .F.		&& .F. =>  DEVE SER FECHADA NA SAIDA
wp_flgfecha = .F. 		&& defaut nao fechamento da secao
PRIVATE wzalias
m.wzalias=SELECT()

******>>>> FIM CONTROLE AMBIENTAL

******>>>> INICIO CONTROLE ARQUIVOS

m.codigo = ""


SELE notaite
wl_arqtmp = ""
LNtmp     = 65		&& TABELA ASCII A = 65
IF !UPabretmp("not")
	wp_flgfecha = .t.
ENDIF
******>>>> INICIO CONTROLE LOCAL
DO CASE
	CASE !wp_flgfecha
		SELECT  notaite
		SET ORDER TO TAG orcamento
		SEEK STR(wp_empresa,3)+STR(m.referencia,6)+;
				   STR(m.codforn,5)+STR(m.nota,6)+m.serie+LEFT(m.tipo,1)
		***
		SET SAFET OFF
		LStmp = "\TMP\"+"&wl_arqtmp"
		COPY TO &LStmp WHILE !eof() ;
						AND wp_empresa 		= EMPRESA ;
						AND m.referencia 	= orcamento ;
						AND m.codforn 	 	= codforn ;
						AND m.nota 			= nota ;
						AND m.serie			= serie ;
						AND LEFT(m.tipo,1)  = LEFT(tipo,1)
	    SELE 0
	    USE "\TMP\"+"&wl_arqtmp" exclu
	    INDEX ON orcamento TAG orcamento ADDITIVE
		GO TOP
 	    DO brappend
   ************************* 	
		DEFINE WINDOW item ;
			FROM INT((SROW()-9)/2),INT((SCOL()-77)/2) ;
			TO INT((SROW()-9)/2)+8,INT((SCOL()-77)/2)+76 ;
			FLOAT ;
			GROW;
			NOCLOSE ;
			SHADOW ;
			ZOOM;
			MINIMIZE ;
			COLOR SCHEME 1
		KEYBOARD "ESCAPE"

ENDCASE

ON KEY LABEL CTRL-I


*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º              OBJ_ITEN/MS-DOS Screen Layout              º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*

#REGION 1



READ CYCLE


#REGION 0
IF m.talkstat = "ON"
	SET TALK ON
ENDIF
IF m.compstat = "ON"
	SET COMPATIBLE ON
ENDIF


*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º              OBJ_ITEN/MS-DOS Cleanup Code               º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*

#REGION 1



IF LEFT(m.situacao,1) = "A"
	SET POINT TO
	SET SEPARATOR  TO
ENDIF
PRIVATE LSmascara

LSmascara = STRTRAN(masc_codi,"9","X")

IF notaent.informaiva $ "O"
	SET POINT TO
	SET SEPARATOR  TO
ENDIF
DO CASE
	CASE !wp_flgfecha
		ON KEY LABEL ESCAPE DO ULvoltacampo
		ON KEY LABEL F4     DO ULposiclinha
		ON KEY LABEL F5     DO ULposiccampo with "CODIGO"
		ON KEY LABEL CTRL-T DO brtotal WITH .T.
		ON KEY LABEL CTRL-Y DO brdeleta
		ON KEY LABEL CTRL-N DO brappend
		ON KEY LABEL CTRL-C DO ULDisplayCusto
		BROWSE  FIELDS ;
				CODIGO		:H="CODIGO";
					:P=LSmascara;
					:W=ULgetOld()  or .t. ;
					:V=ULverprod();
					:E =wp_msg	;
					:F,;
				QTDE		:H="QTDE";
					:P="@r 99,999";
					:W=left(situacao,1) $ "A";
					:V=ULverqtde()	;
					:E =wp_msg	;
					:F,;
				UNIDADE 	:H="UN";
					:P="XX";
					:W=FLG_DESCRI = "S" and left(situacao,1) $ "A",;
				DESCRICAO	:H="DESCRICAO"  :20;
					:W=(FLG_DESCRI = "S" );
					    AND LEFT(SITUACAO,1) $ "A",;
				ORIGEM			:H="O.";
					:P="9";
					:W=.F. OR  notaent.informaiva $ "SO";
					:V=.t.;
					:F,;
				CST			:H="ST";
					:P="9";
					:W=.T.;
					:V= ULcalcrduc() and ULAlq_icms();
					:F,;
				IVA	:H="IVA";
					:P="@r 99.99999";
					:W=.F. OR  notaent.informaiva $ "SO";
					:V=.t.;
					:F,;
				ALIQ_RDU	:H="%RedICMS";
					:P="@r 99.9999";
					:W=.F. OR  notaent.informaiva $ "SO";
					:V=.t.;
					:F,;
				ALIQ_ICMS	:H="ICMS%";
					:P="@r 99.99";
					:W=.t.;
					:V=.T.;
					:F,;
				VLRVENDA	:H="V Total";
					:P="@r 999,999.99";
					:W=.t.;
					:V=.T.,;
				BSBR_ICMS	:H="MERCADORIA";
					:P="@r 999,999.99";
					:W=.T.;
					:V=.T.,;
				VLRIPI	:H="IPI";
					:P="@r 999,999.99";
					:W= .t.;
					:V=ULcalcbase();
					:F,;
				BASE_CALC	:H="BC ICMS";
					:P="@r 999,999.99";
					:W=ULvalorg() AND notaent.informaiva $ "SO" ;
					:V=ULvalorg();
					:F,;
				VLR_ICMS	:H="VLR ICMS";
					:P="@r 999,999.99";
					:W=notaent.informaiva $ "SO" AND ULvalorg();
					:V=.t. ;
					:F,;
				BASE_SUBS	:H="BC.Rtdo";
					:P="@r 999,999.99";
					:W=notaent.informaiva $ "SO" AND ULvalorg();
					:V=.t. ;
					:F,;
				ICMS_SUBS	:H="V.Retido";
					:P="@r 999,999.99";
					:W=notaent.informaiva $ "SO" AND ULvalorg();
					:V=.t. ;
					:F,;
				SITUACAO	:H="";
					:P="@X";
					:W=.f.,;
				VLR_FINAL=VLRVENDA+VLRIPI+ICMS_SUBS	:H="Vlr.Final";
					:P="@r 999,999.99";
					:W=.f.	OR UL1passalin();
					:V=UL2passalin();
				TITLE "ITENS";
				COLOR SCHEME 10 ;
				  NODELETE NOAPPEND NORMAL WINDOW ITEM

ENDCASE
*---
IF LEFT(m.situacao,1) = "A" OR notaent.informaiva $ "O"
	SET POINT TO ","
	SET SEPARATOR  TO "."
ENDIF

RELEASE WINDOW ITEM
ON KEY LABEL CTRL-I DO ULitens
ON KEY LABEL ESCAPE
ON KEY LABEL F4
ON KEY LABEL F5
ON KEY LABEL CTRL-T
ON KEY LABEL CTRL-Y
ON KEY LABEL CTRL-N


SET FORMAT TO


#DEFINE C_ABORTA      'Deseja Gravar as Alteracoes ?.'

IF !(LEFT(m.situacao,1) $ "A"))
    IF !(notaent.informaiva $ "O")
		KEYBOARD CHR(27)
		DO ULencerra
		POP KEY 			&& reabilita teclas de atalho def. anteriormente
	   	RETURN
	ENDIF
ENDIF

IF LASTKEY() = 27
	DO ULencerra
	POP KEY 			&& reabilita teclas de atalho def. anteriormente
   	RETURN
ENDIF
LFflgtrans = .t.
************************************
=UPtransacao("INICIAR")
************************************
     m.valor     = 0
	 m.LNqtde    =  0 	&& soma das qtdes
	 m.LNbs_ipi  = 0         && base para calculo ipi
	 m.LNbs_icms = 0         && base para calculo icms
	 m.LNbs_subs = 0	     && base para calculo subs
     m.LNbs_sbbrt= 0	     && base para abater icms do icms da subs
	 m.LNbs_iss  = 0        && base para calculo iss
	 m.LNbs_isen = 0        && mercadorias isentas
	 m.LNbs_outr = 0        && outras tributacoes
	 m.LNalqicms = 0		&& aliquota de icms
	 m.LNalqiss  = 0		&& aliquota de iss
	 m.LNicms 	 = 0		&& valor de icms
	 m.LNsubs 	 = 0		&& valor de icms por substituicao
	 m.LNiss  	 = 0		&& valor de iss
	 m.LNtotprod  = 0		&& soma dos valores dos produtos
	 m.LNtot  	 = 0		&& total da nota

SELECT &wl_arqtmp
SET ORDER TO
GO TOP
DO WHILE !EOF() AND EMPTY(ALLTRIM(&wl_arqtmp .codigo))
	SKIP
ENDDO
SCATTER MEMVAR MEMO
m.ordem		= RECNO()      && ESTABELECE UMA DIFERENCA P/ ITENS QDO.
							&& UM PRODUTO FOR INFORMADO 2 OU + VEZES
wl_oper = " "
IF EOF()
   wl_oper = "D"           && NAO EXISTEM REG. P/ LANCAR -> DELETAR
ENDIF

SELE notaent
SCATTER MEMVAR FIELDS empresa,referencia,codforn,nota,serie

SELECT notaite
SET ORDER TO TAG orcamento
SEEK STR(wp_empresa,3)+STR(m.referencia,6)+;
		   STR(m.codforn,5)+STR(m.nota,6)+m.serie+LEFT(m.tipo,1)

IF wl_oper <> "D"
   IF !EOF() 	AND wp_empresa 		 = notaite.EMPRESA ;
				AND m.referencia 	 = notaite.orcamento ;
				AND m.codforn 	 	 = notaite.codforn ;
				AND m.nota 			 = notaite.nota ;
				AND m.serie			 = notaite.serie ;
				AND LEFT(m.tipo,1)   = LEFT(notaite.tipo,1)

      wl_oper   = "A"      && ALTERAR O REGISTRO
   ELSE
      wl_oper   = "I"      && INCLUIR REGISTROS
   ENDIF
ENDIF

IF !FOUND() AND wl_oper = "D"
   wl_flg = .F.
ELSE
   wl_flg = .T.
ENDIF

wp_record = RECNO()
DO WHILE wl_flg
   DO CASE
      CASE wl_oper = "A"
           IF !RLOCK()
              LOOP
           ENDIF
		   =edithand('REGRAVA')
*		   =W_DEFPROC("notaite.spr")
*		   =IEVerifCustoDistocido(notaent.Empresa,;
*	                       notaent.FAVORECIDO,;
*	                       notaent.referencia,;
*	                       notaite.ordem)

      CASE wl_oper = "D"
           IF !RLOCK()
              LOOP
           ENDIF
		   =edithand('APAGA')
           SKIP
           IF EOF()	OR wp_empresa 	 <> notaite.EMPRESA ;
					OR m.referencia  <> notaite.orcamento ;
					OR m.codforn 	 <> notaite.codforn ;
					OR m.nota 		 <> notaite.nota ;
					OR m.serie		 <> notaite.serie ;
					OR LEFT(m.tipo,1) <> LEFT(notaite.tipo,1)
              EXIT
           ENDIF
           wp_record = RECNO()
		   LOOP
      CASE wl_oper = "I"
		   =edithand('SAVE')
*		   =W_DEFPROC("notaite.spr")
*		   =IEVerifCustoDistocido(notaent.Empresa,;
*	                       notaent.FAVORECIDO,;
*	                       notaent.referencia,;
*	                       notaite.ordem)
           wp_record = RECNO()
   ENDCASE

   SELECT &wl_arqtmp
   IF !EOF()

        LNbs_ipi  = LNbs_ipi + vlripi
		LNbs_outr = m.LNbs_outr + vlripi
		LNtotprod = LNtotprod + vlrvenda
		LNqtde	  = LNqtde + qtde
        m.valor   = m.valor + vlrvenda

*		DO UPimpent		&& TOTALIZA P/ ATUALIZAR A NOTA ENTRADA
*
   		SKIP
		DO WHILE !EOF() AND EMPTY(ALLTRIM(&wl_arqtmp .codigo))
			SKIP
		ENDDO
   ENDIF
   IF EOF()
      wl_oper   = "D"      && DELETAR REG. SEGUINTES DO ORCAMENTO EM ARQTMP
   ELSE
      SCATTER MEMVAR MEMO
	  m.ordem = RECNO()      && ESTABELECE UMA DIFERENCA P/ ITENS QDO.
							&& UM PRODUTO FOR INFORMADO 2 OU + VEZES
   ENDIF

   SELECT notaite
   GO wp_record
   SKIP
   wp_record = RECNO()

   IF (EOF() OR wp_empresa 	 <> notaite.EMPRESA ;
			 OR m.referencia  <> notaite.orcamento ;
			 OR m.codforn 	 <> notaite.codforn ;
			 OR m.nota 		 <> notaite.nota ;
			 OR m.serie		 <> notaite.serie ;
			 OR LEFT(m.tipo,1) <> LEFT(notaite.tipo,1)) ;
   			AND wl_oper = "D"
      EXIT
   ENDIF
   IF (EOF() OR wp_empresa 	 <> notaite.EMPRESA ;
			 OR m.referencia  <> notaite.orcamento ;
			 OR m.codforn 	 <> notaite.codforn ;
			 OR m.nota 		 <> notaite.nota ;
			 OR m.serie		 <> notaite.serie ;
			 OR LEFT(m.tipo,1) <> LEFT(notaite.tipo,1)) ;
   			AND wl_oper <> "D"
      wl_oper = "I"
   ENDIF
ENDDO
SELECT &wl_arqtmp
m.totproduto 	= m.LNtotprod
m.vlr_ipi		= m.LNbs_ipi

***************************************************************
DO ULencerra
************************************
=UPtransacao("TERMINAR")
************************************
POP KEY 			&& reabilita teclas de atalho def. anteriormente

RETURN



*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º  OBJ_ITEN/MS-DOS Supporting Procedures and Functions    º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*

#REGION 1
PROCEDURE ANTESITENS
IF LEFT(m.situacao,1) = "A"
	SET POINT TO
	SET SEPARATOR  TO
ENDIF


IF notaent.informaiva $ "O"
	SET POINT TO
	SET SEPARATOR  TO
ENDIF
DO CASE
	CASE !wp_flgfecha
		ON KEY LABEL ESCAPE DO ULvoltacampo
		ON KEY LABEL F4     DO ULposiclinha
		ON KEY LABEL F5     DO ULposiccampo with "CODIGO"
		ON KEY LABEL CTRL-T DO brtotal WITH .T.
		ON KEY LABEL CTRL-Y DO brdeleta
		ON KEY LABEL CTRL-N DO brappend
		ON KEY LABEL CTRL-C DO ULDisplayCusto
		BROWSE  FIELDS ;
				CODIGO		:H="CODIGO";
					:P=masc_codi;
					:W=.T.;
					:V=ULverprod();
					:E =wp_msg;
					:F,;
				QTDE		:H="QTDE";
					:P="@r 99,999";
					:W=left(situacao,1) $ "A";
					:V=ULverqtde();
					:E =wp_msg,;
				UNIDADE 	:H="UN";
					:P="XX";
					:W=FLG_DESCRI = "S" and left(situacao,1) $ "A",;
				DESCRICAO	:H="DESCRICAO"  :20;
					:W=(FLG_DESCRI = "S" );
					    AND LEFT(SITUACAO,1) $ "A",;
				VLRVENDA	:H="TOTAL";
					:P="@r 999,999.99";
					:W=Left(situacao,1) $ "A" ;
					   OR notaent.informaiva $ "O";
					:V=ULcalcbase(),;
				ORIGEM			:H="O.";
					:P="9";
					:W=.F. OR  notaent.informaiva $ "SO";
					:V=ULvalorg(),;
				CST			:H="ST";
					:P="9";
					:W=Left(situacao,1) $ "A";
					   OR notaent.informaiva $ "SO";
					:V=ULvalcst();
					:F,;
				VLRIPI	:H="IPI";
					:P="@r 999,999.99";
					:W=Left(situacao,1) $ "A";
					   OR notaent.informaiva $ "O";
					:V=ULcalcbase() ;
					:F,;
				SITUACAO	:H="";
					:P="@X";
					:W=.f.,;
				IVA	:H="IVA";
					:P="@r 99.99999";
					:W=.F. OR  notaent.informaiva $ "SO",;
				ALIQ_ICMS	:H="ICMS%";
					:P="@r 99.99";
					:W=.F. OR  notaent.informaiva $ "SO",;
				ALIQ_RDU	:H="RDUC%";
					:P="@r 99.9999";
					:W=.F. OR  notaent.informaiva $ "SO",;
				RETIDO=ICMS_SUBS	:H="Retido";
					:P="@r 999,999.99";
					:W=.F. OR  notaent.informaiva $ "SO",;
				VLR_FINAL=VLRVENDA+VLRIPI+ICMS_SUBS	:H="Vlr.Final";
					:P="@r 999,999.99";
					:W=.f.	OR UL1passalin();
					:V=UL2passalin();
				TITLE "ITENS";
				COLOR SCHEME 10 ;
				  NODELETE NOAPPEND NORMAL WINDOW ITEM

ENDCASE
*---
IF LEFT(m.situacao,1) = "A" OR notaent.informaiva $ "O"
	SET POINT TO ","
	SET SEPARATOR  TO "."
ENDIF

RELEASE WINDOW ITEM
ON KEY LABEL CTRL-I DO ULitens
ON KEY LABEL ESCAPE
ON KEY LABEL F4
ON KEY LABEL F5
ON KEY LABEL CTRL-T
ON KEY LABEL CTRL-Y
ON KEY LABEL CTRL-N


SET FORMAT TO


#DEFINE C_ABORTA      'Deseja Gravar as Alteracoes ?.'

IF !(LEFT(m.situacao,1) $ "A"))
    IF !(notaent.informaiva $ "O")
		KEYBOARD CHR(27)
		DO ULencerra
		POP KEY 			&& reabilita teclas de atalho def. anteriormente
	   	RETURN
	ENDIF
ENDIF

IF LASTKEY() = 27
	DO ULencerra
	POP KEY 			&& reabilita teclas de atalho def. anteriormente
   	RETURN
ENDIF
LFflgtrans = .t.
************************************
=UPtransacao("INICIAR")
************************************
     m.valor     = 0
	 m.LNqtde    =  0 	&& soma das qtdes
	 m.LNbs_ipi  = 0         && base para calculo ipi
	 m.LNbs_icms = 0         && base para calculo icms
	 m.LNbs_subs = 0	     && base para calculo subs
     m.LNbs_sbbrt= 0	     && base para abater icms do icms da subs
	 m.LNbs_iss  = 0        && base para calculo iss
	 m.LNbs_isen = 0        && mercadorias isentas
	 m.LNbs_outr = 0        && outras tributacoes
	 m.LNalqicms = 0		&& aliquota de icms
	 m.LNalqiss  = 0		&& aliquota de iss
	 m.LNicms 	 = 0		&& valor de icms
	 m.LNsubs 	 = 0		&& valor de icms por substituicao
	 m.LNiss  	 = 0		&& valor de iss
	 m.LNtotprod  = 0		&& soma dos valores dos produtos
	 m.LNtot  	 = 0		&& total da nota

SELECT &wl_arqtmp
SET ORDER TO
GO TOP
DO WHILE !EOF() AND EMPTY(ALLTRIM(&wl_arqtmp .codigo))
	SKIP
ENDDO
SCATTER MEMVAR MEMO
m.ordem		= RECNO()      && ESTABELECE UMA DIFERENCA P/ ITENS QDO.
							&& UM PRODUTO FOR INFORMADO 2 OU + VEZES
wl_oper = " "
IF EOF()
   wl_oper = "D"           && NAO EXISTEM REG. P/ LANCAR -> DELETAR
ENDIF

SELE notaent
SCATTER MEMVAR FIELDS empresa,referencia,codforn,nota,serie

SELECT notaite
SET ORDER TO TAG orcamento
SEEK STR(wp_empresa,3)+STR(m.referencia,6)+;
		   STR(m.codforn,5)+STR(m.nota,6)+m.serie+LEFT(m.tipo,1)

IF wl_oper <> "D"
   IF !EOF() 	AND wp_empresa 		 = notaite.EMPRESA ;
				AND m.referencia 	 = notaite.orcamento ;
				AND m.codforn 	 	 = notaite.codforn ;
				AND m.nota 			 = notaite.nota ;
				AND m.serie			 = notaite.serie ;
				AND LEFT(m.tipo,1)   = LEFT(notaite.tipo,1)

      wl_oper   = "A"      && ALTERAR O REGISTRO
   ELSE
      wl_oper   = "I"      && INCLUIR REGISTROS
   ENDIF
ENDIF

IF !FOUND() AND wl_oper = "D"
   wl_flg = .F.
ELSE
   wl_flg = .T.
ENDIF

wp_record = RECNO()
DO WHILE wl_flg
   DO CASE
      CASE wl_oper = "A"
           IF !RLOCK()
              LOOP
           ENDIF
		   =edithand('REGRAVA')
*		   =W_DEFPROC("notaite.spr")
*		   =IEVerifCustoDistocido(notaent.Empresa,;
*	                       notaent.FAVORECIDO,;
*	                       notaent.referencia,;
*	                       notaite.ordem)

      CASE wl_oper = "D"
           IF !RLOCK()
              LOOP
           ENDIF
		   =edithand('APAGA')
           SKIP
           IF EOF()	OR wp_empresa 	 <> notaite.EMPRESA ;
					OR m.referencia  <> notaite.orcamento ;
					OR m.codforn 	 <> notaite.codforn ;
					OR m.nota 		 <> notaite.nota ;
					OR m.serie		 <> notaite.serie ;
					OR LEFT(m.tipo,1) <> LEFT(notaite.tipo,1)
              EXIT
           ENDIF
           wp_record = RECNO()
		   LOOP
      CASE wl_oper = "I"
		   =edithand('SAVE')
*		   =W_DEFPROC("notaite.spr")
*		   =IEVerifCustoDistocido(notaent.Empresa,;
*	                       notaent.FAVORECIDO,;
*	                       notaent.referencia,;
*	                       notaite.ordem)
           wp_record = RECNO()
   ENDCASE

   SELECT &wl_arqtmp
   IF !EOF()

        LNbs_ipi  = LNbs_ipi + vlripi
		LNbs_outr = m.LNbs_outr + vlripi
		LNtotprod = LNtotprod + vlrvenda
		LNqtde	  = LNqtde + qtde
        m.valor   = m.valor + vlrvenda

*		DO UPimpent		&& TOTALIZA P/ ATUALIZAR A NOTA ENTRADA
*
   		SKIP
		DO WHILE !EOF() AND EMPTY(ALLTRIM(&wl_arqtmp .codigo))
			SKIP
		ENDDO
   ENDIF
   IF EOF()
      wl_oper   = "D"      && DELETAR REG. SEGUINTES DO ORCAMENTO EM ARQTMP
   ELSE
      SCATTER MEMVAR MEMO
	  m.ordem = RECNO()      && ESTABELECE UMA DIFERENCA P/ ITENS QDO.
							&& UM PRODUTO FOR INFORMADO 2 OU + VEZES
   ENDIF

   SELECT notaite
   GO wp_record
   SKIP
   wp_record = RECNO()

   IF (EOF() OR wp_empresa 	 <> notaite.EMPRESA ;
			 OR m.referencia  <> notaite.orcamento ;
			 OR m.codforn 	 <> notaite.codforn ;
			 OR m.nota 		 <> notaite.nota ;
			 OR m.serie		 <> notaite.serie ;
			 OR LEFT(m.tipo,1) <> LEFT(notaite.tipo,1)) ;
   			AND wl_oper = "D"
      EXIT
   ENDIF
   IF (EOF() OR wp_empresa 	 <> notaite.EMPRESA ;
			 OR m.referencia  <> notaite.orcamento ;
			 OR m.codforn 	 <> notaite.codforn ;
			 OR m.nota 		 <> notaite.nota ;
			 OR m.serie		 <> notaite.serie ;
			 OR LEFT(m.tipo,1) <> LEFT(notaite.tipo,1)) ;
   			AND wl_oper <> "D"
      wl_oper = "I"
   ENDIF
ENDDO
SELECT &wl_arqtmp
m.totproduto 	= m.LNtotprod
m.vlr_ipi		= m.LNbs_ipi

***************************************************************
DO ULencerra
************************************
=UPtransacao("TERMINAR")
************************************
POP KEY 			&& reabilita teclas de atalho def. anteriormente

RETURN

***************************************
PROCEDURE ULencerra
	=UP_fecha("&wl_arqtmp")
	wp_flgfecha = .F. 		&& defaut nao fechamento da secao
	IF !EMPTY(wl_areant)
		SELECT &wl_areant
	ENDIF
	ON KEY LABEL ESCAPE
	SET FORMAT TO
RETURN

*******




*------------->>>>>>>>

FUNCTION ULverprod
	IF LASTKEY() = -3 OR LASTKEY() = 27
		CLEAR TYPEAHEAD
		RETURN .T.
	ENDIF


	IF EMPTY(ALLTRIM(&wl_arqtmp .codigo)) AND LASTKEY() = 13
	   IF fox_alert('Confirma edicao e grava itens ?')
 		    ON KEY LABEL ESCAPE DO ULvoltacampo
			KEYBOARD '{CTRL-W}'
		   RETURN .T.
	   ENDIF					
	   RETURN .f.
	ENDIF
	IF !(LEFT(&wl_arqtmp .situacao,1) $ "A")
	   RETURN .T.
    ENDIF


    IF  ;
    	(m.codigo <> &wl_arqtmp .codigo) ;
    	AND ;
    	( ;
    	m.codforn = 1 OR ;
        m.codforn = 2 OR ;
        m.codforn = 3136 OR ;
        m.codforn = 3541  ;
        ) ;
        AND LASTKEY() = 13
		IF !EMPTY( &wl_arqtmp .codigo )
		   	SELECT tabforn
    		SET ORDER TO  TAG cod_forn
    		SEEK RTRIM(&wl_arqtmp .codigo)
	    	IF FOUND()
			   	SELECT grupo
			    SET ORDER TO  TAG codigo
			    SEEK RTRIM(tabforn.codigo)
			ELSE
			    WAIT WINDOW ;
			     "Informe codigo de produto do FORNECEDOR <ENTER>"
			     replace &wl_arqtmp .situacao with ""
			    RETURN .f.
    		ENDIF
    	ENDIF
	ELSE
	   	SELECT grupo
	    SET ORDER TO  TAG codigo
	    SET NEAR ON
    	SEEK RTRIM(&wl_arqtmp .codigo)

		IF LASTKEY() = 9
	        SET NEAR OFF
			ON KEY LABEL ESCAPE
		    DO brbrow
			ON KEY LABEL ESCAPE DO ULvoltacampo
		    IF LASTKEY() = 27
			   wp_msg = "Nao Foi selecionado item da lista."
		       RETURN .F.
			ENDIF
		    IF !ULtipoprod()
	    	   RETURN .F.
		    ENDIF
			DO ULatrcampo
			IF notaent.pedido > 0
				SELE pedite
				SET ORDER TO TAG pedido
				SEEK STR(m.empresa,3)+STR(notaent.pedido,6)+ ;
					&wl_arqtmp .codigo
				IF !FOUND()
				   SELE &wl_arqtmp
				   wp_msg =  "Produto nao consta no pedido => "  + ;
				   			  STR(notaent.pedido,6)
				   RETURN .F.
				ENDIF
				SELE &wl_arqtmp
			ENDIF
			RETURN .T.
	    ENDIF

	    IF !FOUND()   && TENTAR PELO CODIGO DA COMPANHIA
			IF !EMPTY( &wl_arqtmp .codigo )
			   	SELECT tabforn
    			SET ORDER TO  TAG cod_forn
    			SEEK RTRIM(&wl_arqtmp .codigo)
	    		IF FOUND()
				   	SELECT grupo
				    SET ORDER TO  TAG codigo
				    SEEK RTRIM(tabforn.codigo)
    			ENDIF
	    	ENDIF
		ENDIF
	ENDIF
	
    IF FOUND()
	   IF !ULtipoprod()
			RETURN .F.
	   ENDIF			
       SET NEAR OFF
       SELECT notaite
	   SELE &wl_arqtmp
	   DO ULatrcampo
	   IF notaent.pedido > 0
			SELE pedite
			SET ORDER TO TAG pedido
			SEEK STR(m.empresa,3)+STR(notaent.pedido,6)+ &wl_arqtmp .codigo
			IF !FOUND()
			   SELE &wl_arqtmp
			   wp_msg =  "Produto nao consta no pedido => "  + ;
			   			  STR(notaent.pedido,6)
			   RETURN .F.
			ENDIF
			SELE &wl_arqtmp
	   ENDIF
       RETURN .T.
    ENDIF
    SET NEAR OFF
	IF LASTKEY() = 27
		REPLACE &wl_arqtmp .codigo	WITH  " "
	ENDIF
RETURN .F.

***************
*------------->>>>>>>>

FUNCTION ULverqtde
	IF LASTKEY() = -3 OR LASTKEY() = 27
		CLEAR TYPEAHEAD
		RETURN .T.
	ENDIF


	IF notaent.pedido = 0
		CLEAR TYPEAHEAD
		RETURN .T.
	ENDIF

	LNpendencia = pedite.qtde - pedite.qtdetr - pedite.qtdeatd
	IF &wl_arqtmp .qtde > LNpendencia
	   wp_msg =  "Quantidade superior a Pendencia => "  + ;
			   			  STR(LNpendencia,6)
			   RETURN .F.
    ENDIF

RETURN .T.

***

FUNCTION ULtipoprod  && VERIFICA SE O PRODUTO PODE SER INCL. NA OPERACAO
	SELE grfiscal
	SET ORDER TO TAG tributacao
	SEEK empresa.estado+LEFT(grupo.classifica,5)

	IF CHRTRAN(STR(grfiscal.tp_mercad,1)," ","-")  $ tipooper.tipo_produ
		RETURN .T.
	ENDIF
	wp_msg =  "Produto nao pode ser incluido nesta operacao."
RETURN .F.		

****-------------->>>>>

PROCEDURE brbrow
   	SELECT grupo
    SET ORDER TO TAG classifica
    wl_tmp =  STRTRAN(STR(wp_empresa,3),' ','0')
	DO loc_dlog WITH .T., " '&wl_tmp' $ empresas"
    IF !(LEFT(&wl_arqtmp .situacao,1) $ "A")
       WAIT WINDOW " Registro nao esta ABERTO, nao pode ser alterado."
       SELECT &wl_arqtmp
       RETURN
    ENDIF
    SELECT &wl_arqtmp


RETURN

*---->
PROCEDURE ULatrcampo

	PRIVATE LSufOrigem
	PRIVATE LSufDestino


	REPLACE &wl_arqtmp .codigo     WITH  grupo.codigo

	REPLACE &wl_arqtmp .flg_descri WITH grupo.flg_descri
    IF !(GRUPO.FLG_DESCRI = "S" AND LEFT(m.SITUACAO,1) $ "A")
		REPLACE &wl_arqtmp .descricao  WITH  LTRIM(grupo.descricao)
	ENDIF

	REPLACE &wl_arqtmp .classifica WITH  grupo.classifica
	REPLACE &wl_arqtmp .unidade    WITH  grupo.unidade

	REPLACE &wl_arqtmp .movfin     WITH  tipooper.info_vlr

	REPLACE &wl_arqtmp .movestq    WITH  tipooper.movestq
	REPLACE &wl_arqtmp .movvalor   WITH  tipooper.movvalor
	REPLACE &wl_arqtmp .movcusto   WITH  tipooper.movcusto

	REPLACE &wl_arqtmp .cfo        WITH  tipooper.cfo

	IF  tipooper.TIPO $ "QLA/SCA"
		=W_DEFPROC("ITEMMOV.SPR")
         LNvalor = IMGetUltCstMedioEstq(NOTAENT.EMPRESA, ;
                                        NOTAENT.data, ;
                                          &wl_arqtmp .codigo )

         REPLACE &wl_arqtmp .VLRVENDA WITH LNvalor * &wl_arqtmp .QTDE

    ENDIF



*------------------------------------------------------------
*** 18/01//13  A ALIQUOTA PASSA A SER DEFINADO NO ITEM
*** NA VALIDACAO DA ORIGEM DO PRODUTO
*------------------------------------------------------------
**	REPLACE &wl_arqtmp .aliq_icms  WITH  notaent.aliq_icms
*------------------------------------------------------------
    IF notaent.informaiva = "N"
		REPLACE &wl_arqtmp .aliq_rdu   WITH  notaent.reduc_icms
	ENDIF
*----
    REPLACE &wl_arqtmp .preco WITH  0
    REPLACE &wl_arqtmp .clas_cms WITH  ""
*-->

	=W_DEFPROC("notaent.spr")
	LSufOrigem  = NEGetUFOrigem(notaent.empresa,;
	                       notaent.referencia,;
		                   notaent.codforn)


	=W_DEFPROC("notaent.spr")
	LSufDestino = NEGetUFDestino(notaent.empresa,;
	                       notaent.referencia,;
		                   notaent.codforn)


	= W_DEFPROC("TRIBUTAR.spr")
	LNtmptp_mercad=TRDef_RgTrbMercad(LSufDestino, &wl_arqtmp .codigo)

	REPLACE &wl_arqtmp .tp_mercad  WITH  LNtmptp_mercad



    IF notaent.informaiva = "N"
		=W_DEFPROC("TRIBUTAR.spr")
		LNF_IVA= TRGet_IVA(LSufOrigem, &wl_arqtmp .codigo,LSufDestino,;
	                     notaent.DATA, &wl_arqtmp .origem)

		REPLACE &wl_arqtmp .iva        WITH  LNF_IVA
	ENDIF

	*------------------------------------------------------------*



	*------------------------------------------------------------*

*-->
    SELECT &wl_arqtmp
*--->

RETURN
****-------------->>>>>

***-------------->>>>>

****-------------->>>>>

PROCEDURE  brtotal
  PARAMETERS wl_ms
     GO TOP
     m.valor     = 0
	 m.LNqtde    =  0 	&& soma das qtdes
	 m.LNbs_ipi  = 0         && base para calculo ipi
	 m.LNbs_icms = 0         && base para calculo icms
	 m.LNbs_subs = 0	     && base para calculo subs
     m.LNbs_sbbrt= 0	     && base para abater icms do icms da subs
	 m.LNbs_iss  = 0        && base para calculo iss
	 m.LNbs_isen = 0        && mercadorias isentas
	 m.LNbs_outr = 0        && outras tributacoes
	 m.LNalqicms = 0		&& aliquota de icms
	 m.LNalqiss  = 0		&& aliquota de iss
	 m.LNicms 	 = 0		&& valor de icms
	 m.LNsubs 	 = 0		&& valor de icms por substituicao
	 m.LNiss  	 = 0		&& valor de iss
	 m.LNtotprod  = 0		&& soma dos valores dos produtos
	 m.LNtot  	 = 0		&& total da nota


     DO WHILE !EOF()
        LNbs_ipi  = LNbs_ipi + vlripi
		LNbs_outr = m.LNbs_outr + vlripi
		LNtotprod = LNtotprod + vlrvenda
		LNqtde	  = LNqtde + qtde

        m.valor   = m.valor + vlrvenda

		LNsubs    = LNsubs + icms_subs


*		DO UPimpent
        skip
     ENDDO
     skip -1

	 m.LNtot  = m.valor + LNbs_ipi + m.LNsubs + ;
				m.vlrdespes + m.vlrseguro


	 m.valor 		= m.LNtot
	 m.totproduto 	= m.LNtotprod
	 m.vlr_ipi		= m.LNbs_ipi
     m.base_icms	= m.LNbs_icms
     m.vlr_icms		= m.LNicms
     m.base_subs	= m.LNbs_subs
	 m.base_sbbrt	= m.LNbs_sbbrt
     m.icms_subs	= m.LNsubs
     m.base_isent	= m.LNbs_isen
	 m.total_nota	= m.LNtot
	******************  VALOR PARA FECHAMENTO ********************
	m.soma_comp  = (m.LNqtde/100) + m.totproduto + m.vlr_ipi ;
					+  m.vlr_icms + m.base_subs	+  m.icms_subs ;
                    +  m.vlrfrete + m.vlrdespes + m.vlrseguro	
	***************************************************************

	******************  VALOR PARA FECHAMENTO ********************

     IF wl_ms
        DO OBJ_MENS.SPR WITH  ;
        "[Merc:"+ALLTRIM(transform(m.LNtotprod,"@RT 999,999.99"))+;
		"] [ISS:"+ALLTRIM(transform(m.LNiss,"@RT 999,999.99"))+;
		"] [ICMS:"+ALLTRIM(transform(m.LNicms,"@RT 999,999.99"))+;
		"] [IPI:"+ALLTRIM(transform(m.LNbs_ipi,"@RT 999,999.99"))+;
        "] [Base Subs:"+ALLTRIM(transform(m.LNbs_subs,"@RT 999,999.99"))+;
        "] [Subs:"+ALLTRIM(transform(m.LNsubs,"@RT 999,999.99"))+;
        "] =>"+ALLTRIM(transform(m.LNtot,"@RT 999,999.99"))+ ;
        "-----------------"+;
        "] [FECHAM.INF.:"+ALLTRIM(transform(m.soma_qtde,"@RT 999,999.99"))+;
        "] [FECHAM.ENC.:"+ALLTRIM(transform(m.soma_comp,"@RT 999,999.99"))
     ENDIF

RETURN

****-------------->>>>>

PROCEDURE brdeleta
  IF !(LEFT(&wl_arqtmp .situacao,1) $ "A")
     WAIT WINDOW " Registro nao esta ABERTO, nao pode ser apagado."
     RETURN
  ENDIF
  IF DELETED()
     RECALL
  ELSE
     DELETE
  ENDIF
RETURN

****-------------->>>>>

PROCEDURE brappend
  IF !(LEFT(m.situacao,1) $ "A")
     WAIT WINDOW " Boletim esta Fechado. Nao pode ser alterado."
     RETURN
  ENDIF
  APPEND BLANK
  GATHER MEMVAR FIELDS EMPRESA, DATA, HORA, SITUACAO,;
                       MOTIVO, ch_opera,;
                       ch_produ, ch_motiv, ch_desti, ch_contr, ch_condi,;
                       tipo, cfo MEMO
  REPLACE FAVORECIDO WITH m.favorecido
  REPLACE CODFORN    WITH m.codforn
  REPLACE ORCAMENTO  WITH m.referencia
  REPLACE DTFAT	     WITH m.data_emi
  REPLACE NOTA       WITH m.nota
  REPLACE SERIE      WITH m.serie
  REPLACE origem     WITH 0
  REPLACE origem     WITH 0

  REPLACE CODIGO     WITH SPACE(11)

  REPLACE situacao with "A"+RIGHT(situacao,1)
  KEYBOARD "{F5}"

RETURN
**---->


PROCEDURE ULposiccampo
	PARAMETERS LScampo
	IF UPPER(LScampo) <> UPPER(VARREAD())
		KEYBOARD "{BACKTAB}"
		KEYBOARD "{F5}"
	ENDIF
	
RETURN
PROCEDURE ULposiclinha
		IF !EOF()
			SKIP
			IF EOF()
			   DO brappend
			ENDIF
		ELSE
			KEYBOARD "{F5}"
		ENDIF
RETURN
PROCEDURE ULvoltacampo
        LCAMPO  = VARREAD()
		IF UPPER(VARREAD()) = 'CODIGO'
			IF !BOF()
				SKIP -1
			ENDIF
			IF BOF()
			   IF !(left(situacao,1) $ "AC")
                 IF !(notaent.informaiva $ "O")
					ON KEY LABEL ESCAPE DO ULvoltacampo
					KEYBOARD CHR(27)
				   RETURN .T.
                 ENDIF

			   ENDIF
			   IF fox_alert('Abandonar Alteracoes nos itens ?')
					ON KEY LABEL ESCAPE
					KEYBOARD CHR(27)
				   RETURN .T.
			   ENDIF
			   GO TOP
			ENDIF					
		ELSE
			KEYBOARD "{BACKTAB}"
		ENDIF
RETURN

FUNCTION UL1passalin



	IF !(Left(situacao,1) $ "AC" AND INFO_BASE = "S")
      IF !(notaent.informaiva $ "O")
			KEYBOARD "{F4}"
	   ENDIF
	ENDIF

RETURN(.F.)    && A CLAUSULA OU IMPEDE EFEITO NA CONDICAO

FUNCTION UL2passalin
	KEYBOARD "{F4}"
RETURN(.T.)

procedure ULDisplayCusto
	=W_DEFPROC("NOTAITE.SPR")
	=IEDisplCusto(notaent.empresa, ;
				   notaent.Favorecido,;
				   notaent.referencia,;
					RECNO())
RETURN





FUNCTION ULvalcst  && VERIFICA SE FOI INDORMADO O CST

	IF &wl_arqtmp .CST = " " OR &wl_arqtmp .CST = ""
	   wp_msg =  "Informe Codigo CST"
 	   RETURN(.F.)
    ENDIF

RETURN(.T.)



FUNCTION ULvalorg  && VALIDA ORIGEM DO PRODUTO IMPACAT IVA

	PRIVATE LSufOrigem
	PRIVATE LSufDestino

*-->

	=W_DEFPROC("notaent.spr")
	LSufOrigem  = NEGetUFOrigem(notaent.empresa,;
	                       notaent.referencia,;
		                   notaent.codforn)


	=W_DEFPROC("notaent.spr")
	LSufDestino = NEGetUFDestino(notaent.empresa,;
	                       notaent.referencia,;
		                   notaent.codforn)


	=W_DEFPROC("TRIBUTAR.spr")



    IF notaent.informaiva = "N"
		=W_DEFPROC("TRIBUTAR.spr")
		LNF_IVA= TRGet_IVA(LSufOrigem, &wl_arqtmp .codigo,LSufDestino,;
	                     notaent.DATA, &wl_arqtmp .origem)

        MSG = "Deseja substituir o IVA digitado " ;
           + STR(  &wl_arqtmp .iva ,6,4) ;
           + " por ";
           + STR(  LNF_IVA ,6,4) ;
           + " ?"
        if  &wl_arqtmp .iva   <>  LNF_IVA
            IF fox_alert(MSG)
 	   	       REPLACE &wl_arqtmp .iva        WITH  LNF_IVA
 		    ENDIF
 		ENDIF

	ENDIF






    =ULcalcicms()


    =ULCalcRetido()

RETURN(.T.)



FUNCTION ULcalcrduc


     IF !(notaent.informaiva $ "O")
		 IF origem = 1		&& importado
		     REPLACE aliq_rdu with  (base_calc * 100 / bsbr_icms) / 100
	     endif
	     if  aliq_rdu  = 1
	         REPLACE aliq_rdu with 0
    	 endif
     ENDIF

RETURN .T.


FUNCTION ULAlq_icms  && VALIDA ORIGEM DO PRODUTO IMPACAT IVA

	PRIVATE LSufOrigem
	PRIVATE LSufDestino

*-->

	=W_DEFPROC("notaent.spr")
	LSufOrigem  = NEGetUFOrigem(notaent.empresa,;
	                       notaent.referencia,;
		                   notaent.codforn)


	=W_DEFPROC("notaent.spr")
	LSufDestino = NEGetUFDestino(notaent.empresa,;
	                       notaent.referencia,;
		                   notaent.codforn)


	=W_DEFPROC("TRIBUTAR.spr")

    IF LSufOrigem <> LSufDestino
			LNalq_ICM = TRAlqIcmOuUF(LSufOrigem, &wl_arqtmp .origem)
	ELSE
			LNalq_ICM = TRAlqIcmInUF(LSufDestino)
	ENDIF


    IF notaent.informaiva = "N"
		REPLACE &wl_arqtmp .aliq_icms  WITH  LNalq_ICM
	endif

RETURN(.T.)


FUNCTION ULcalcbase



	=W_DEFPROC("NOTAENT.SPR")


	LNBCicms = NEClcBCICMS(	notaent.empresa,   ;
							notaent.referencia,;
							notaent.codforn,   ;
							&wl_arqtmp .codigo,    ;
							&wl_arqtmp .vlrvenda,;
							&wl_arqtmp .origem,;
							0,;
							&wl_arqtmp .aliq_rdu,;
							&wl_arqtmp .aliq_icms)





     IF !(notaent.informaiva $ "O")
	     REPLACE base_calc with LNBCicms
	 ENDIF






RETURN .T.




FUNCTION ULcalcicms

	LNicms		  =	0


*	LNbaseicms    = 0
*	LNreducao     = aliq_rdu
*	LNaliq_icms   = aliq_icms
*	
*
*
*   IF origem = 1		&& importado
*		     LNbaseicms =  (base_calc + VLRIPI)
*		     LNbaseicms =  LNbaseicms - (LNbaseicms * LNreducao /100)
*   else
*
*		     LNbaseicms =  (base_calc)
*		     LNbaseicms =  LNbaseicms - (LNbaseicms * LNreducao /100)
*   endif
*
*
*
*	IF     notaent .vlr_icms > 0 ;
*	    OR notaent .base_icms > 0 ;
*	    OR notaent .icms_subs > 0
*
*		LNbaseicms  = lnvlrmercadoria - (lnvlrmercadoria * LNreducao /100)
*		LNicms	= (LNbaseicms * LNaliq_icms)/100  && 2o MEMBRO DA SOMA
*
*	ENDIF	
*



	=W_DEFPROC("NOTAENT.SPR")

	LNicms = NEClcICMS(	notaent.empresa,   ;
							notaent.referencia,;
							notaent.codforn,   ;
							&wl_arqtmp .codigo,    ;
							&wl_arqtmp .vlrvenda,;
							&wl_arqtmp .origem,;
							0,;
							&wl_arqtmp .aliq_rdu,;
							&wl_arqtmp .aliq_icms)






    IF !(notaent.informaiva $ "O")
	     REPLACE  vlr_icms with  LNicms
    ENDIF


RETURN .T.



RETURN

FUNCTION ULCalcRetido


	*-------------------------------------------------------------*

	LNBsBrRetido   = 0
	


	=W_DEFPROC("NOTAENT.SPR")
	LNBsBrRetido = NEBsBrRetido( notaent.empresa,   ;
							notaent.referencia,;
							notaent.codforn,   ;
							&wl_arqtmp .codigo,    ;
							&wl_arqtmp .vlrvenda,  ;
							&wl_arqtmp .vlripi,    ;
							0,;
						    &wl_arqtmp .origem,;
							&wl_arqtmp .cst,;
							&wl_arqtmp .aliq_rdu)
	

    IF !(notaent.informaiva $ "O")
	     REPLACE  Base_sbbrt with  LNBsBrRetido
    ENDIF

	*-------------------------------------------------------------*

	LNBsRetido   = 0

	=W_DEFPROC("NOTAENT.SPR")
	LNBsRetido  = NEBsRetido( notaent.empresa,   ;
							notaent.referencia,;
							notaent.codforn,   ;
							&wl_arqtmp .codigo,    ;
							&wl_arqtmp .Base_sbbrt,    ;
							0,;
							&wl_arqtmp .origem,;
							&wl_arqtmp .cst,;
							&wl_arqtmp .IVA)
	

    IF !(notaent.informaiva $ "O")
	     REPLACE  Base_subs with  LNBsRetido
    ENDIF


	*-------------------------------------------------------------*

	LNicmssoper   = 0



	=W_DEFPROC("NOTAENT.SPR")
	LNicmssoper = NEIcmsOper(	notaent.empresa,   ;
							notaent.referencia,;
							notaent.codforn,   ;
							&wl_arqtmp .codigo,    ;
							&wl_arqtmp .vlrvenda,;
							&wl_arqtmp .origem,;
							0,;
							&wl_arqtmp .aliq_rdu,;
							&wl_arqtmp .aliq_icms)


    IF !(notaent.informaiva $ "O")
	     REPLACE icmssoper with  LNBsRetido
    ENDIF


	*-------------------------------------------------------------*

	LNRetido   = 0

	
	
	=W_DEFPROC("NOTAENT.SPR")
	LNRetido  = NEClcRetido(	notaent.empresa,   ;
							notaent.referencia,;
							notaent.codforn,   ;
							&wl_arqtmp .codigo,    ;
							&wl_arqtmp .vlr_icms,;
							&wl_arqtmp .Base_subs,;
							&wl_arqtmp .icmssoper,    ;
							0 ,;
							&wl_arqtmp .origem,;
							&wl_arqtmp .cst)
	

    IF !(notaent.informaiva $ "O")
	     REPLACE  icms_subs with  LNRetido
    ENDIF





RETURN(.t.)



FUNCTION ULcalcALQICMS
*     IF !(notaent.informaiva $ "O")
*		 IF origem = 1		&& importado
*		     IF (base_calc+ VLRIPI) <> 0
*			     REPLACE  aliq_icms with  vlr_icms * 100 ;
*			           / (base_calc+ VLRIPI)
*			 ELSE
*			     REPLACE  aliq_icms with  0
*			 ENDIF
*	     else
*
*		     IF (base_calc) <> 0
*			     REPLACE  aliq_icms with  vlr_icms * 100 ;
*			           / (base_calc)
*			 ELSE
*			     REPLACE  aliq_icms with  0
*			 ENDIF
*
*	     endif
*	 ENDIF

RETURN .T.


FUNCTION ulcalcs

*        = ULcalcrduc()
*		BSBR_ICMS	 =  BSBR_ICMS

RETURN .t.

FUNCTION ULgetOld

	m.codigo =	&wl_arqtmp .codigo

RETURN(.f.)