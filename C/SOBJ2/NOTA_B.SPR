*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º 05/07/10             NOTA_B.SPR                08:45:16 º
*       º                                                         º
*       ÇÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¶
*       º                                                         º
*       º Author's Name                                           º
*       º                                                         º
*       º Copyright (c) 2010 Company Name                         º
*       º Address                                                 º
*       º City,     Zip                                           º
*       º                                                         º
*       º Description:                                            º
*       º This program was automatically generated by GENSCRN.    º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½


#REGION 0
REGIONAL m.currarea, m.talkstat, m.compstat

IF SET("TALK") = "ON"
	SET TALK OFF
	m.talkstat = "ON"
ELSE
	m.talkstat = "OFF"
ENDIF
m.compstat = SET("COMPATIBLE")
SET COMPATIBLE FOXPLUS

*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º                MS-DOS Window definitions                º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*


*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º          NOTA_B/MS-DOS Setup Code - SECTION 2           º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*

#REGION 1
return

*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º               NOTA_B/MS-DOS Screen Layout               º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*

#REGION 1
@ 4,1 GET NFRot_Fat ;
	PICTURE "@*HN NFRot_Fat- Rotina GERAL de Faturamento " ;
	SIZE 1,41,1 ;
	DEFAULT 1 ;
	VALID _2xh0irida()
@ 2,5 GET NFregEnvioFat ;
	PICTURE "@*HN NFregEnvioFat- Prepara Enviop para Processo de Faturamento" ;
	SIZE 1,60,1 ;
	DEFAULT 1 ;
	VALID _2xh0iridl()
@ 8,0 GET antNFProcessFat ;
	PICTURE "@*HN antNFProcessFat- Efetiva Processo Faturamento  apos 15/03/2006" ;
	SIZE 1,64,1 ;
	DEFAULT 1 ;
	VALID _2xh0iridu() ;
	DISABLE
@ 15,5 GET NF_DefFat ;
	PICTURE "@*HN NF_DefFat-Controla Def Dt,Nro p/ NF,Cupom,NFservc,NFe Apos 15/03/2006" ;
	SIZE 1,71,1 ;
	DEFAULT 1 ;
	VALID _2xh0irief()
@ 12,5 GET NFchq_Final ;
	PICTURE "@*HN NFchq_Final- Checagem de Dados OSI/ITENS para Liberar Processo de Faturamento" ;
	SIZE 1,79,1 ;
	DEFAULT 1 ;
	VALID _2xh0iriem()
@ 16,8 GET NF_01DefProcess ;
	PICTURE "@*HN NF_01DefProcess-Def Processo DocFiscal CUPOM,NF,... ate 30/09/2006" ;
	SIZE 1,68,1 ;
	DEFAULT 1 ;
	VALID _2xh0irif3() ;
	DISABLE
@ 17,8 GET ANTNF_02DefProcess ;
	PICTURE "@*HN ANTNF_02DefProcess-Def Processo DocFiscal CUPOM,NF,...apos 15/03/2006" ;
	SIZE 1,71,1 ;
	DEFAULT 1 ;
	VALID _2xh0irifd() ;
	DISABLE
@ 19,8 GET NF_02NroNota ;
	PICTURE "@*HN NF_02NroNota-Obtem o Numero para proximo NF,NFe,NFServico ou Cupom " ;
	SIZE 1,69,1 ;
	DEFAULT 1 ;
	VALID _2xh0irife()
@ 44,4 GET NFFatura ;
	PICTURE "@*HN NFFatura-Controla Fat. Conjunto Produto e Servico mesma NF" ;
	SIZE 1,60,1 ;
	DEFAULT 1 ;
	VALID _2xh0irig0()
@ 46,7 GET NFAbreNota ;
	PICTURE "@*HN NFAbreNota  - Abre Registro de Nota/Cupom (Com dados Basicos)" ;
	SIZE 1,63,1 ;
	DEFAULT 1 ;
	VALID _2xh0irih2()
@ 47,10 GET NFFat_Item ;
	PICTURE "@*HN NFFat_Item- Fatura um Item (Orcatmp ==> Itemmov )" ;
	SIZE 1,51,1 ;
	DEFAULT 1 ;
	VALID _2xh0irihc()
@ 49,1 GET antNF_02ImpFatura ;
	PICTURE "@*HN antNF_02ImpFatura  - Controla Impressao de NOTA/CUPOM apos 15/03" ;
	SIZE 1,66,1 ;
	DEFAULT 1 ;
	VALID _2xh0irihq() ;
	DISABLE
@ 67,7 GET NFinfo_Nf ;
	PICTURE "@*HN NFinfo_Cobr - Funcoes P/Fornecer Info. Adicionais p/ Imp.NF/CUPOM" ;
	SIZE 1,67,1 ;
	DEFAULT 1 ;
	VALID _2xh0irihr()
@ 68,7 GET NFinfoCbrSrv ;
	PICTURE "@*HN NFinfoCbrSrv - Funcoes P/Fornecer Info. Adicionais p/ Imp.NF.Servico" ;
	SIZE 1,70,1 ;
	DEFAULT 1 ;
	VALID _2xh0iriiw()
@ 69,7 GET NFinfoSrvCbr ;
	PICTURE "@*HN NFinfoSrvCbr - Idem NFinfoCbrSrv - adaptada para layout menor de 01/05/2006" ;
	SIZE 1,77,1 ;
	DEFAULT 1 ;
	VALID _2xh0irij3()
@ 83,2 GET UNFmarcanf ;
	PICTURE "@*HN ESP - UNFmarcanf - Set Status de Processo no Registro NF" ;
	SIZE 1,58,1 ;
	DEFAULT 1 ;
	VALID _2xh0irij9()
@ 84,2 GET UNFEmpMarcanf ;
	PICTURE "@*HN ESP - UNFEmpMarcanf - Set Status de Processo no Registro NF" ;
	SIZE 1,61,1 ;
	DEFAULT 1 ;
	VALID _2xh0irijd()
@ 85,2 GET ULbaixa_Saldo ;
	PICTURE "@*HN ESP - ULbaixa_Saldo - Solicita Baixa de Saldo Para Faturamento" ;
	SIZE 1,64,1 ;
	DEFAULT 1 ;
	VALID _2xh0iriji()
@ 29,7 GET NFNfSrvExstCop ;
	PICTURE "@*HN NFNfSrvExstCop - Verifica se Existe Copia Ativa NF SERVICO" ;
	SIZE 1,60,1 ;
	DEFAULT 1 ;
	VALID _2xh0irijm()
@ 30,7 GET NFNfN1ExstCop ;
	PICTURE "@*HN NFNfN1ExstCop - Verifica se Existe Copia Ativa NF N1" ;
	SIZE 1,56,1 ;
	DEFAULT 1 ;
	VALID _2xh0irijs()
@ 28,3 GET NFProcessCopia ;
	PICTURE "@*HN NFProcessCopia-Controla Geracao Copia de Cupon em NF e NF.Servico" ;
	SIZE 1,67,1 ;
	DEFAULT 1 ;
	VALID _2xh0irijy()
@ 31,7 GET NFGerCopia ;
	PICTURE "@*HN NFGerCopia - Gera Copia de Cupom Fiscal em NF(Produto e Servico)" ;
	SIZE 1,66,1 ;
	DEFAULT 1 ;
	VALID _2xh0iriki()
@ 5,6 GET NFverClasOSI ;
	PICTURE "@*HN NFverClasOSI- Verifica Consistencia da Classificacao da Operacao OSI" ;
	SIZE 1,70,1 ;
	DEFAULT 1 ;
	VALID _2xh0iril1()
@ 6,6 GET NFchqLiberCred ;
	PICTURE "@*HN NFchqLiberCred- Verifica se houve Liberacao e Credito para Venda" ;
	SIZE 1,66,1 ;
	DEFAULT 1 ;
	VALID _2xh0iril6()
@ 7,6 GET NFinfoCompl ;
	PICTURE "@*HN NFinfoCompl- Info Complementares do Vendedor" ;
	SIZE 1,46,1 ;
	DEFAULT 1 ;
	VALID _2xh0irilb()
@ 23,1 GET FCHrot_fat ;
	PICTURE "@*HN FCHrot_fat" ;
	SIZE 1,12,1 ;
	DEFAULT 1 ;
	VALID _2xh0irilh()
@ 1,1 GET NFEnvioParaFat ;
	PICTURE "@*HN NFEnvioParaFat- Prepara Enviop para Processo de Faturamento" ;
	SIZE 1,61,1 ;
	DEFAULT 1 ;
	VALID _2xh0irilm()
@ 20,0 SAY "----------------------------------------------------------------------------" ;
	SIZE 1,76, 0
@ 22,1 GET NFRecuperaFat ;
	PICTURE "@*HN NFRecuperaFat- Rotina Recuperacao de NF" ;
	SIZE 1,41,1 ;
	DEFAULT 1 ;
	VALID _2xh0iriln()
@ 34,2 GET ULGerCupom ;
	PICTURE "@*HN ULGerCupom" ;
	SIZE 1,12,1 ;
	DEFAULT 1 ;
	VALID _2xh0irim1()
@ 35,2 GET ULGerNFSU ;
	PICTURE "@*HN ULGerNFSU  NF ou NFe" ;
	SIZE 1,22,1 ;
	DEFAULT 1 ;
	VALID _2xh0irim7()
@ 36,2 GET ULGerServicoNf ;
	PICTURE "@*HN ULGerServicoNf NFS ou NFSe" ;
	SIZE 1,28,1 ;
	DEFAULT 1 ;
	VALID _2xh0irimc()
@ 13,5 GET NFBloqEmpresa ;
	PICTURE "@*HN NFBloqEmpresa - Bloq de Empresa para uso como SEMAFORO" ;
	SIZE 1,56,1 ;
	DEFAULT 1 ;
	VALID _2xh0irimh()
@ 43,0 SAY "----------------------------------------------------------------------------" ;
	SIZE 1,76, 0
@ 33,1 GET ANTNFGeraDocFiscais ;
	PICTURE "@*HN ANTNFGeraDocFiscais" ;
	SIZE 1,21,1 ;
	DEFAULT 1 ;
	VALID _2xh0irimo() ;
	DISABLE
@ 70,2 GET NFatlzOrcament ;
	PICTURE "@*HN NFatlzOrcament" ;
	SIZE 1,16,1 ;
	DEFAULT 1 ;
	VALID _2xh0irimt()
@ 82,0 SAY "--------------------------------------------------------------------------" ;
	SIZE 1,74, 0
@ 25,0 SAY "----------------------------------------------------------------------------" ;
	SIZE 1,76, 0
@ 3,0 SAY "----------------------------------------------------------------------------" ;
	SIZE 1,76, 0
@ 26,1 GET NF_02ImpCopia ;
	PICTURE "@*HN NF_02ImpCopia - Solicita Copia Cupom em NF e Imprime apos 15/03/2006" ;
	SIZE 1,70,1 ;
	DEFAULT 1 ;
	VALID _2xh0irimz()
@ 65,4 GET NFAjustTmpItens ;
	PICTURE "@*HN NFAjustTmpItens - Preenche o TMP com reg em branco e linha de impressao para novo LAYOUT" ;
	SIZE 1,90,1 ;
	DEFAULT 1 ;
	VALID _2xh0irin0()
@ 50,1 GET antNF_03ImpFatura ;
	PICTURE "@*HN antNF_03ImpFatura- Imp NFS com Grides separadas de Prod e Servicos" ;
	SIZE 1,68,1 ;
	DEFAULT 1 ;
	VALID _2xh0irini() ;
	DISABLE
@ 66,4 GET NFLinhaProd ;
	PICTURE "@*HN NFLinhaProd - Formata String para Linha na grid de Produtos do Formulario NFs" ;
	SIZE 1,79,1 ;
	DEFAULT 1 ;
	VALID _2xh0irinj()
@ 32,0 SAY "----------------------------------------------------------------------------" ;
	SIZE 1,76, 0
@ 71,0 SAY "--------------------------------------------------------------------------" ;
	SIZE 1,74, 0
@ 72,2 GET NFGeraXML_NOTA ;
	PICTURE "@*HN NFGeraXML_NOTA-Gera XML do DocFiscal ref a NF informada " ;
	SIZE 1,58,1 ;
	DEFAULT 1 ;
	VALID _2xh0irip6()
@ 73,2 GET NFEnviaNfe_NOTA ;
	PICTURE "@*HN NFEnviaNfe_NOTA-Envia XML do DocFiscal para NFe ref a NF informada " ;
	SIZE 1,69,1 ;
	DEFAULT 1 ;
	VALID _2xh0iripc()
@ 74,2 GET NFRtrnoNfe_NOTA ;
	PICTURE "@*HN NFRtrnoNfe_NOTA-Busca retorno NFe do DocFiscal ref a NF informada " ;
	SIZE 1,68,1 ;
	DEFAULT 1 ;
	VALID _2xh0iripi()
@ 51,1 GET antNF_03ImpDocFiscal ;
	PICTURE "@*HN antNF_03ImpDocFiscal -  Impressao do Documento Fiscal Principar - CUPOM / NF / NFSrv" ;
	SIZE 1,86,1 ;
	DEFAULT 1 ;
	VALID _2xh0iripr() ;
	DISABLE
@ 52,1 GET antNF_ImpCopDocFiscal ;
	PICTURE "@*HN antNF_ImpCopDocFiscal -  Impressao de Copi de Documento Fiscal Principar - CUPOM / NF / NFSrv" ;
	SIZE 1,95,1 ;
	DEFAULT 1 ;
	VALID _2xh0iriql() ;
	DISABLE
@ 9,0 GET antNFProcessFat ;
	PICTURE "@*HN antNFProcessFat- Efetiva Processo Faturamento  apos 15/03/2006" ;
	SIZE 1,64,1 ;
	DEFAULT 1 ;
	VALID _2xh0irira() ;
	DISABLE
@ 27,3 GET antNFProcessCopia ;
	PICTURE "@*HN antNFProcessCopia-Controla Geracao Copia de Cupon em NF e NF.Servico" ;
	SIZE 1,70,1 ;
	DEFAULT 1 ;
	VALID _2xh0irirb() ;
	DISABLE
@ 10,0 GET NFProcessFat ;
	PICTURE "@*HN NFProcessFat- Efetiva Processo Faturamento  apos 15/03/2006" ;
	SIZE 1,61,1 ;
	DEFAULT 1 ;
	VALID _2xh0iris8()
@ 53,1 GET NF_ImpCupomFiscal ;
	PICTURE "@*HN NF_ImpCupomFiscal -  Impressao do Cupom Fiscal" ;
	SIZE 1,48,1 ;
	DEFAULT 1 ;
	VALID _2xh0irisv()
@ 54,1 GET NF_ImpNFFiscal ;
	PICTURE "@*HN NF_ImpNFFiscal - Impressao da Nota Fiscal" ;
	SIZE 1,43,1 ;
	DEFAULT 1 ;
	VALID _2xh0irisw()
@ 55,1 GET NF_ImpNFSrvico ;
	PICTURE "@*HN NF_ImpNFSrvico -  Impressao da NF de Servico" ;
	SIZE 1,46,1 ;
	DEFAULT 1 ;
	VALID _2xh0iritr()
@ 60,1 GET ANTNF_ImpNFe ;
	PICTURE "@*HN ANTNF_ImpNFe - Impressao da Nota Fiscal Eletronica" ;
	SIZE 1,52,1 ;
	DEFAULT 1 ;
	VALID _2xh0iriu8() ;
	DISABLE
@ 57,1 GET NF_CopNF_Imprime ;
	PICTURE "@*HN NF_CopNF_Imprime -  Impressao de Copia de cupom em NF convencional" ;
	SIZE 1,68,1 ;
	DEFAULT 1 ;
	VALID _2xh0iriup()
@ 62,1 GET ANTNF_CopNFe_Imprime ;
	PICTURE "@*HN ANTNF_CopNFe_Imprime -  Impressao de Copia de cupom em NFe" ;
	SIZE 1,60,1 ;
	DEFAULT 1 ;
	VALID _2xh0iriv5() ;
	DISABLE
@ 58,1 GET NF_CopNFSrvImprime ;
	PICTURE "@*HN NF_CopNFSrvImprime -  Impressao de Copia do cupom em NF Servico" ;
	SIZE 1,65,1 ;
	DEFAULT 1 ;
	VALID _2xh0irivk()
@ 79,0 SAY "--------------------------------------------------------------------------" ;
	SIZE 1,74, 0
@ 80,2 GET NFAtlzDadosNFe ;
	PICTURE "@*HN NFAtlzDadosNFe -Atlz retorno NFe no Orcamento, Nota e Doc Fiscal/Emp/ Periodo" ;
	SIZE 1,79,1 ;
	DEFAULT 1 ;
	VALID _2xh0irivl()
@ 81,2 GET NFVrfSeqNroNotas ;
	PICTURE "@*HN NFVrfSeqNroNotas-Verifica a seq nro nota gera arq. log em loc informado" ;
	SIZE 1,73,1 ;
	DEFAULT 1 ;
	VALID _2xh0irivm()
@ 18,8 GET NF_02DefProcess ;
	PICTURE "@*HN NF_02DefProcess-Def Processo DocFiscal CUPOM,NF,NFe,NFS,NFSe 15/03/2010" ;
	SIZE 1,73,1 ;
	DEFAULT 1 ;
	VALID _2xh0irivq()
@ 61,1 GET ANTNF_ImpNFSe ;
	PICTURE "@*HN ANTNF_ImpNFSe - Impressao da Nota Fiscal Servico Eletronica" ;
	SIZE 1,61,1 ;
	DEFAULT 1 ;
	VALID _2xh0irixo() ;
	DISABLE
@ 63,1 GET ANTNF_CopNFSe_Imprime ;
	PICTURE "@*HN ANTNF_CopNFSe_Imprime -  Impressao de Copia de cupom em NFe" ;
	SIZE 1,61,1 ;
	DEFAULT 1 ;
	VALID _2xh0irixp() ;
	DISABLE
@ 45,6 GET NFSerie ;
	PICTURE "@*HN NFSerie" ;
	SIZE 1,9,1 ;
	DEFAULT 1 ;
	VALID _2xh0irixq()
@ 37,0 SAY "--------------------------------------------------------------------------" ;
	SIZE 1,74, 0
@ 64,0 SAY "--------------------------------------------------------------------------" ;
	SIZE 1,74, 0
@ 42,4 GET NF_CancDFis ;
	PICTURE "@*HN NF_CancDFis - Cancela Documento Fiscal (NF/NFS/NFe/NFSe/CUPOM)" ;
	SIZE 1,64,1 ;
	DEFAULT 1 ;
	VALID _2xh0irixr()
@ 41,4 GET NF_GeraDFis ;
	PICTURE "@*HN NF_GeraDFis - Gera Documento Fiscal(NF/NFS/NFe/NFSe/CUPOM)" ;
	SIZE 1,60,1 ;
	DEFAULT 1 ;
	VALID _2xh0iriz2()
@ 48,0 SAY "----------------------------------------------------------------------------" ;
	SIZE 1,76, 0
@ 38,4 GET NFDefCancDFis ;
	PICTURE "@*HN NFDefCancDFis - Define Objetivo Canc DFis (ESCRITURACAO/CANCELAMENTO)" ;
	SIZE 1,71,1 ;
	DEFAULT 1 ;
	VALID _2xh0iriz3()
@ 39,4 GET NFDefEnvDFis ;
	PICTURE "@*HN NFDefEnvDFis - Define Objetivo Envio DFis (ESCRITURACAO/CANCELAMENTO)" ;
	SIZE 1,71,1 ;
	DEFAULT 1 ;
	VALID _2xh0iriz4()
@ 77,2 GET NFReenvNFe ;
	PICTURE "@*HN NFReenvNFe - Renvia- NFe ->NF->DOC->XML->NFe" ;
	SIZE 1,46,1 ;
	DEFAULT 1 ;
	WHEN .f. ;
	VALID _2xh0iriz5()



READ CYCLE


#REGION 0
IF m.talkstat = "ON"
	SET TALK ON
ENDIF
IF m.compstat = "ON"
	SET COMPATIBLE ON
ENDIF


*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _2XH0IRIDA           NFRot_Fat VALID                    º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         NOTA_B,     Record Number:    2    º
*       º Variable:            NFRot_Fat                          º
*       º Called By:           VALID Clause                       º
*       º Object Type:         Push Button                        º
*       º Snippet Number:      1                                  º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*

FUNCTION _2xh0irida     &&  NFRot_Fat VALID
#REGION 1
return

*---------------------------------------------------------------*

FUNCTION  NFrot_fat
	PARAMETERS  LSsolicitante,LSemcaminhar
	*------------------------------------------------------------*
	* CLASSIFICACAO:  [*****]
	*------------------------------------------------------------*
	* OBJETIVO....: Controla o processo de Faturamento
	*				Esta e a primeira instancia de rotinas para
	*				FATURAMENTO/PREPARACAO
	*------------------------------------------------------------*
	* COMENTARIO..: A rotina serve a dois objetivos
	*				1- Preparacao para  Faturamento
	*				2- Preparacao e  Faturamento
	*				
	*------------------------------------------------------------*
	* OBS........ :
	*------------------------------------------------------------*
	*  TABELAS....:
	*------------------------------------------------------------*
	*  PARAMETROS AMBIENTAIS..:
	*					LNecf.......: Nro da Conexao aberta com
	*							ECF no programa OBJ_ECF.SPR
	*						OBS: Quando o Sistema nao esta usando
	*							ECF esta variavel nao e inicializada
	*							portanto ela e inicializada com
	*							valor = 0 nesta rotina
	*  PARAMETROS..:
	*		LSsolicitante..: Identifica os Pontos em que esta
	*				 rotina pode ser chamada
	*			   		LSsolicitante = "VENDEDOR"
	*					LSsolicitante = "CAIXA"
	*					LSsolicitante = "FATURISTA SIMPLES"	&& SCGC201A
	*					LSsolicitante = "FATURISTA RESERVA"	&& SCGC201A
	*					LSsolicitante = "IMPORTACAO"		&& SCGC008
	*                   LSsolicitante = "RECUPERACAO"
	*
	*		LSemcaminhar....: Orienta o processo para :
	*					LSemcaminhar	  = "PREPARAR FATURAMENTO"
	*					LSemcaminhar	  = "EFETIVAR FATURAMENTO"			
	*		LFretorno.......:
	*------------------------------------------------------------*
	*  RETORNO.....: .f. ou .t.
	*------------------------------------------------------------*
	* EXEMPLO : CHAMADA DO PROGRAMA SCGC2.prg
	*------------------------------------------------------------*
	=W_DEFPROC("rotinas.spr")
	*------------------------------------------------------------*

	PUSH KEY CLEAR		&& desabilita teclas de atalho def. anteriormente
	ON KEY LABEL F1		DO HLP2000.SPR WITH  POPUP(),PROMPT(),PROGRAM(),;
							WONTOP(),VARREAD()

	PRIVATE LStp_proces		&& = "CUPOM", "NOTA", "NOTA/CUPOM",
							&&   "RECUP.CUPOM", "RECUP.NOTA",
							&&			 "RECUP.NOTA/CUPOM"
	PRIVATE LFservico		&&   INDICA SE EXISTE SERVICO P/ FATURAR
	PRIVATE LFflagtrans		&&   INDICA SITUACAO DE CONCLUSAO DO PROCESSO
	PRIVATE LSsitRequerida  &&   Armazena a SITUACAO requrida para
							&& a operacao e repassa a ORloc_orc

	PRIVATE LForcament,LFclienc,LFclientes,LFliberacao
	PRIVATE LSalias

	*------------------------------------------------------------*
	LSalias  		= ALIAS()  && P/ RETORNAR A AREA ANTERIOR
	*------------------------------------------------------------*
	LForcament		= NetArq("orcament")
	LFclienc		= NetArq("clienc")
	LFclientes		= NetArq("clientes")
	LFliberacao		= NetArq("liberaco")
	*--------------------------------------------------------

    IF (LForcament+LFclienc+LFclientes) > 100000  && HOUVE FALHA ABERT
		DO FCHrot_fat
		RETURN(.f.)
	ENDIF



	*****************************************************************
	* 				Inicio Verificacao de Requisitos				*
	*****************************************************************
	IF TYPE("LNecf") = "U"
		LNecf	=	0
	ENDIF
	LSsitRequerida = ""
	DO CASE
		CASE LSsolicitante = "CAIXA"				&& OBJ_ECF
			LSsitRequerida =  "o"
		CASE LSsolicitante = "RECUPERACAO"			&& OBJ_ECF
			LSsitRequerida =  "AIMo"
		CASE LSsolicitante = "IMPORTACAO"			&& SCGC008
								&& REGISTRO JA E PASSADO PASICIONADO
	ENDCASE
	CLEAR TYPEAHEAD

	SELE orcament
	
	CLEAR TYPEAHEAD

	LNregvolta = RECNO()



	IF orcament.valor = 0
		IF !fox_alert("Orcamento com VALOR = 0. [ Continua ? ]")
			DO FCHrot_fat
			RETURN(.f.)
		ENDIF
	ENDIF




	*----------------------------------------------------------------*
	IF LSsolicitante <> "IMPORTACAO"
		IF !NFverClasOSI(orcament.empresa,orcament.orcamento)
			DO FCHrot_fat
			RETURN(.F.)
		ENDIF
	ENDIF

	*----------------------------------------------------------------*

	IF LSsolicitante <> "IMPORTACAO"
		IF !NFchqLiberCred(orcament.empresa,orcament.orcamento)
			DO FCHrot_fat
			RETURN(.F.)
		ENDIF
	ENDIF

	*----------------------------------------------------------------*


	SELE orcament

	*****************************************************************
	* 				Fim Informacoes Complementares
	*****************************************************************
	LFretorno = .t.




	IF LSsolicitante <> "IMPORTACAO"
		DO SVD0205.spr with;
			 orcament.empresa,orcament.orcamento,LFretorno

	ENDIF

	IF LFretorno
		LFretorno = NFProcessFat(orcament.empresa,;
					 orcament.orcamento,LSsolicitante)
	ENDIF


	DO FCHrot_fat
	UNLOCK ALL
RETURN(LFretorno)






*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _2XH0IRIDL           NFregEnvioFat VALID                º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         NOTA_B,     Record Number:    3    º
*       º Variable:            NFregEnvioFat                      º
*       º Called By:           VALID Clause                       º
*       º Object Type:         Push Button                        º
*       º Snippet Number:      2                                  º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*

FUNCTION _2xh0iridl     &&  NFregEnvioFat VALID
#REGION 1
return
*---------------------------------------------------------------*
FUNCTION  NFregEnvioFat
PARAMETERS LNemp,LNorcamento
	*------------------------------------------------------------*
	* CLASSIFICACAO:  [*****]
	*------------------------------------------------------------*
	* OBJETIVO....: Alterar o STATUS do orcamento e dos itens
	*			para "o" que equivale a enviado para faturamento
	*
	*------------------------------------------------------------*
	* COMENTARIO..: O status "o"  verificado com requisito no
	*    processo que efetiva o faturamento				
	*------------------------------------------------------------*
	* OBS........ :
	*------------------------------------------------------------*
	*  TABELAS....:
	*------------------------------------------------------------*
	*  PARAMETROS..:
	*		LNemp......:
	*		LNorcamento:
	*------------------------------------------------------------*
	*  RETORNO.....: .f. ou .t.
	*------------------------------------------------------------*
	* EXEMPLO :
	*------------------------------------------------------------*
	=W_DEFPROC("rotinas.spr")
	*------------------------------------------------------------*
	************************************
	=UPtransacao("INICIAR")
	************************************
	LFflgtrans = .t.

	SELE orcament
	SET ORDER TO TAG orcamento
	SEEK STR(LNemp,3)+STR(LNorcamento,6)

	IF orcament.flgtransac = .f.
		DO OBJ_MENS.SPR WITH " O orcamento Selecionado Sofreu" +;
		" Alteracoes que Afetam Valores e Nao Foi Recalculado." +;
		CHR(13)+;
		" Reedite os Itens e Grave para Forcar o Calculo."
		RETURN(.f.)
	ENDIF

	SELECT tipooper
	SET ORDER TO TAG tipo
	SEEK 'S'+orcament.tipo
	IF !FOUND()
		SEEK 's'+orcament.tipo
	ENDIF
	IF !found()
		SELECT orcament
		RETURN(.f.)
	ENDIF
	
	SELECT  orcatmp
	SET ORDER TO TAG orcamento
	SET NEAR ON
	SEEK STR(LNemp,3)+STR(LNorcamento,6)
	SET NEAR OFF

	LFflgtrans = .F.  && Se nenhum item for processado no laco
					  && o processo deve ser rejeitado

	DO WHILE !EOF() AND LNemp 		= orcatmp.empresa ;
					AND LNorcamento = orcatmp.orcamento
		***  NAO PROCESSAR ITENS CANCELADOS
		IF LEFT(orcatmp.situacao,1) $ "YykeZ"
			SKIP
			LOOP
		ENDIF
		LFflgtrans = .T.

		***** SO SERA PROCESSADO QDO TODOS OS ITENS SE ENCONTRAREM EM
		***** SITUACAO DE CANCELAMENTO OU PRONTOS P/ FATURAR
		IF !(LEFT(orcatmp.situacao,1) $ "Mo") && OSI e FECHADO
			LFflgtrans = .F.
			EXIT
		ENDIF
		*----------------------------------------------------------*
		IF tipooper.movestq = "S"
	    	SELECT orcatmp
			IF REGLOCK()
			   REPLACE situacao WITH "o"+RIGHT(orcatmp.situacao,1)
			ELSE
				LFflgtrans = .F.
				EXIT
			ENDIF
			SELECT  orcatmp
		ELSE
	    	SELECT orcatmp
			IF REGLOCK()
			   REPLACE situacao WITH "o"+RIGHT(orcatmp.situacao,1)
			ELSE
				LFflgtrans = .F.
				EXIT
			ENDIF
		ENDIF
		SELE orcatmp
		SKIP
	ENDDO
	IF !LFflgtrans
		SELECT orcament
		RETURN(.f.)
	ENDIF			
	SELECT orcament
	REPLACE situacao WITH "o"+RIGHT(situacao,1)
	************************************
	=UPtransacao("TERMINAR")
	************************************
RETURN(.t.)


*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _2XH0IRIDU           antNFProcessFat VALID              º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         NOTA_B,     Record Number:    4    º
*       º Variable:            antNFProcessFat                    º
*       º Called By:           VALID Clause                       º
*       º Object Type:         Push Button                        º
*       º Snippet Number:      3                                  º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*

FUNCTION _2xh0iridu     &&  antNFProcessFat VALID
#REGION 1
return
*---------------------------------------------------------------*
FUNCTION antNFProcessFat
PARAMETERS LNemp,LNorcamento,PrmSolicitante
	*------------------------------------------------------------*
	* CLASSIFICACAO:  [*****]
	*------------------------------------------------------------*
	* OBJETIVO....: Controle o Processo de Faturamento
	*
	*------------------------------------------------------------*
	* COMENTARIO..:
	*------------------------------------------------------------*
	* OBS........ :
	*------------------------------------------------------------*
	*  TABELAS....:
	*------------------------------------------------------------*
	*  PARAMETROS..:
	*		LNemp......:
	*		LNorcamento:
	*		PrmSolicitante..: Identifica os Pontos em que esta
	*				 rotina pode ser chamada
	*			   		PrmSolicitante = "VENDEDOR"
	*					PrmSolicitante = "CAIXA"
	*					PrmSolicitante = "FATURISTA SIMPLES"	&& SCGC201A
	*					PrmSolicitante = "FATURISTA RESERVA"	&& SCGC201A
	*					PrmSolicitante = "IMPORTACAO"		&& SCGC008
	* 					PrmSolicitante = "RECUPERACAO"
	*
	*------------------------------------------------------------*
	*  RETORNO.....: .f. ou .t.
	*------------------------------------------------------------*
	* EXEMPLO :
	*------------------------------------------------------------*
	=W_DEFPROC("rotinas.spr")
	*------------------------------------------------------------*

	*********************************************************
	*---->   (Preparacao para controle de SATUS DO PROCESSO
	*********************************************************	

	PRIVATE FlgImpFatura

	PRIVATE LNnfinicio    , LNnffim
	PRIVATE LNnfsrvIni    , LNnfsrvFim
	PRIVATE LNCtrlCpmIni, LNCtrlCpmFim
	PRIVATE LNnfCopInicio , LNnfCopFim
	PRIVATE LNSrvCopIni , LNSrvCopFim


	PRIVATE LNnroNF, LNNfServico, LNCtrlCpm
	PRIVATE LNNFCop, LNnfSrvCop

    PRIVATE LFGerNF,LFGerNFS  && INDICADORES QUE FOI GERADO
	PRIVATE LNcupom
	PRIVATE LStp_process
	PRIVATE datanf,horanf,LsOrientacao
	PRIVATE LFabrecupom				&& FLAG PARA MANDAR ABIR CUPOM
	PRIVATE LFservico				&& CASO EXISTA SERVICO (TP_MERCAD = 7)
	PRIVATE LFproduto 				&& CASO EXISTA PRODUTO (TP_MERCAD <> 7)
	PRIVATE LFipi    				&& CASO EXISTA IPI > 0

	*********************************************************	
	PRIVATE LFretorno
	LFretorno = .T.

	STORE 0  TO LNnfinicio ,LNnffim
	STORE 0  TO LNnfsrvIni ,LNnfsrvFim
	STORE 0  TO LNCtrlCpmIni, LNCtrlCpmFim
	STORE 0  TO LNnfCopInicio , LNnfCopFim
	STORE 0  TO LNSrvCopIni , LNSrvCopFim
	STORE 0  TO LNnroNF, LNNfServico, LNCtrlCpm
	STORE 0  TO LNNFCop, LNnfSrvCop
	

	STORE 0  TO LNcupom
	STORE "" TO LStp_process
	STORE {} TO datanf
	STORE "" TO horanf,LsOrientacao
    STORE .F. TO LFGerNF,LFGerNFS


	SELE orcament
	SET ORDER TO TAG orcamento
	SEEK STR(LNemp,3)+STR(LNorcamento,6)

	IF orcament.flgtransac = .f.
		DO OBJ_MENS.SPR WITH " O orcamento Selecionado Sofreu" +;
		" Alteracoes que Afetam Valores e Nao Foi Recalculado." +;
		CHR(13)+;
		" Reedite os Itens e Grave para Forcar o Calculo."
		RETURN(.f.)
	ENDIF
	*----------------------------------------------------------------*
	SELECT tipooper
	SET ORDER TO TAG tipo
	SEEK 'S'+orcament.tipo
	IF !FOUND()
		SEEK 's'+orcament.tipo
	ENDIF
	IF !found()
		SELECT orcament
		RETURN(.f.)
	ENDIF
	*---------------------------------------------------------*
	*   (Fim Preparacao para controle de SATUS DO PROCESSO
	*---------------------------------------------------------*



	LFservico	= .F.		&& CASO EXISTA SERVICO (TP_MERCAD = 7)
	LFproduto 	= .F.		&& CASO EXISTA PRODUTO (TP_MERCAD <> 7)
	LFIPI    	= .F.		&& CASO EXISTA IPI > 0
	*---------------------------------------------------------*

	=W_DEFPROC("NOTA.SPR")
	IF !NFchq_Final((orcament.empresa),(orcament.orcamento),;
				(PrmSolicitante),LFservico,LFproduto)
	    SELE orcament
		RETURN(.F.)
	ENDIF

	*---------------------------------------------------------------*
	* 				Inicio  ---- F A T U R A M E N T O  ----
	*---------------------------------------------------------------*

	
	IF !NFBlocEmpresa(orcament.empresa,PrmSolicitante)
	    SELE orcament
		RETURN(.F.)
	ENDIF


	*---------------------------------------------------------------*

	LFflgtrans 		= .t.
	m.LNalqicms 	= 0		&& aliquota de icms
	m.tot_fatura 	= 0		&& acumula valore de varias notas pra duplicatas


	m.nota   = 0   && utilizados para atualizar Orcamento
	m.cupom  = 0   && utilizados para atualizar Orcamento

	*---------------------------------------------------------------*
	* 		No trecho seguinte sao definidor DATA,HORA,NUMERO DE NOTA
	*	E NUMERO DE CUPOM sendo que estes dados ja vem definido no
	*	registro do orcamento quando esta IMPORTANDO ja no processo
	*	operacional normal rotinas sao ativadas para atribuir valores
	*	a estes dados
	*---------------------------------------------------------------*
	

		
	IF !NF_DefFat(PrmSolicitante)
   		SELE orcament
		RETURN(.F.)
	ENDIF

	*---------------------------------------------------------------*
	*  ESTA CHAMADA ESTA PROVOCANDO ESTOURO DE PILHA DE PROCESSOS
	* ATE SEGUNDA ORDEM EVITA-SE O ANIHAMENTO EXESSIVO TROCANDO A
	* CHAMADA PELO CODIGO DIRETO
	*--------------------------------------------------------------*

*	IF !NFGeraDocFiscais(orcament.empresa)
*   		SELE orcament
*		RETURN(.F.)
*	ENDIF

*FUNCTION NFGeraDocFiscais
*PARAMETERS PrmEmpresa

	DO CASE
		CASE orcament.empresa = 6

			IF  "CUPOM" $ LStp_proces
				LsOrientacao = "PRODUTO/SERVICO"
				*--------------------------------------------*

				IF !ULGerCupom()
					RETURN(.F.)
				ENDIF
			ENDIF


			IF "NF SERVICO" $ LStp_proces AND !("COPIA" $ LStp_proces)
				LsOrientacao = "SERVICO"
				*--------------------------------------------*
				IF !ULGerServicoNf()
					RETURN(.F.)
				ENDIF
			ENDIF


			IF  "NOTA" $ LStp_proces AND !("COPIA" $ LStp_proces)
				LsOrientacao = "PRODUTO/SERVICO"
				IF  "NF SERVICO" $ LStp_proces
					LsOrientacao = "PRODUTO"
				ENDIF
				*--------------------------------------------*
				IF !ULGerNFSU()
					RETURN(.F.)
				ENDIF
			ENDIF





		CASE orcament.empresa <> 6
			IF  "CUPOM" $ LStp_proces
				LsOrientacao = "PRODUTO/SERVICO"
				*--------------------------------------------*
				IF !ULGerCupom()
					RETURN(.F.)
				ENDIF
			ENDIF

			IF  "NOTA" $ LStp_proces AND !("COPIA" $ LStp_proces)
				LsOrientacao = "PRODUTO/SERVICO"
				*--------------------------------------------*
				IF !ULGerNFSU()
					RETURN(.F.)
				ENDIF
			ENDIF
	ENDCASE


*RETURN(.T.)







	*---------------------------------------------------------------*
	* 				Fim  ---- F A T U R A M E N T O  ----
	*---------------------------------------------------------------*


	=NFatlzOrcament()


	*----------------------------------------------------------------*
	*     O ajuste no sistema para registrar duplicatas para operaäes
	*  A VISTA e Para CARTåES.
	*    Como a ImplantaÆo da VersÆo nas Filiais ocorre de maneira
	*  gradativa  necess rio direcionar para rotina adequada a situaÆo
	*  da filial sendo:
	*    FILIAL ATUALIZADA   => CRgeradupl
	*    FILIAL N.ATUALIZADA => CRnrmgeradupl
	*----------------------------------------------------------------*


 	=W_DEFPROC("DUPLICAT.spr")

	DO CASE

		CASE  orcament.empresa = 10
			IF  dt_fat < {26.03.2008}
				DO  CRidlate26geradupl WITH;
					 (orcament.empresa),(orcament.orcamento)
			ELSE
			
				DO  CRIDLApos26geradupl WITH ;
				    (orcament.empresa),(orcament.orcamento)
			ENDIF

		CASE dt_fat >= {12.03.2008}
				DO  CRgeraDE12MAR08 WITH ;
				    (orcament.empresa),(orcament.orcamento)

		CASE dt_fat >= {10.03.2008} AND ;
			(orcament.empresa = 01 or orcament.empresa = 02)		
				DO  CRgeraDE12MAR08 WITH ;
				    (orcament.empresa),(orcament.orcamento)
		otherwise
			DO  CRgeraATE10MAR08 WITH ;
			     (orcament.empresa),(orcament.orcamento)
	ENDCASE



	*----------------------------------------------------------------*
    *     Registrar Comando para sistema de Caixa
	*----------------------------------------------------------------*

	IF !(PrmSolicitante $ "IMPORTACAO/RECUPERACAO")
		DO CASE
    		CASE "CUPOM" $ LStp_process
				=NFRgAvisoCaixa((LNemp), (LNCtrlCpmIni))
	    	CASE "NOTA" $ LStp_process
				=NFRgAvisoCaixa((LNemp), (LNnfinicio))
	    	CASE "NF SERVICO" $ LStp_process
				=NFRgAvisoCaixa((LNemp), (LNnfsrvIni))
		ENDCASE
	ENDIF


	*----------------------------------------------------------------*

	SELECT orcament
	IF wp_dtsys = wp_dtoper
		IF 	!UPtransacao("TERMINAR")
			WAIT WINDOW "TRANSACAO PERMANECEU ABERTA. VER SUPORTE."
		ENDIF			
	ENDIF
	*---------------------------------------------------------------*
	* 				Fim  ---- F A T U R A M E N T O  ----
	*---------------------------------------------------------------*

	*---------------------------------------------------------------*
	* 				Inicio ---- Impressao  ----
	*---------------------------------------------------------------*



	LFretorno = .T.






	IF  PrmSolicitante = "IMPORTACAO"

		=UNFempmarca(4,LStp_proces,LSOrientacao)

		wp_msg = "Faturamento Concluido "
		WAIT WINDOW wp_msg NOWAIT
	    RETURN(.T.)
	ENDIF



	IF  PrmSolicitante = "RECUPERACAO"
		=UNFempmarca(4,LStp_proces,LSOrientacao)
		IF  "COPIA" $ LStp_proces
	       LFretorno = ;
		    	NFProcessCopia(orcament.empresa,LNCtrlCpmIni,;
		    	    PrmSolicitante,"ROTINA FATURAMENTO",.T.,.T.)
		ENDIF

	    RETURN(LFretorno)

	ENDIF


	IF LStp_proces $ "NOTA-CUPOM-NF SERVICO-NOTA/NF SERVICO";
	    OR "COPIA" $ LStp_proces


		*----------------------------------------------------------------*
		wp_msg = "Imprimindo NOTA/CUPOM Refrente OSI: "+;
							 STR(orcament.orcamento,6)
		WAIT WINDOW wp_msg NOWAIT
		*----------------------------------------------------------------*

		=W_DEFPROC("NOTA.SPR")

		*---------------------------------------------------------*
		*  DESVIO PARA NOVO LAYOUT DE NOTA DE 2009
		*---------------------------------------------------------*

		FlgImpFatura =  NF_03ImpFatura(;
				(orcament.empresa),(orcament.orcamento),(LStp_process),;
				(wp_TipoEcf),(LNecf),(LNCtrlCpmIni), (LNCtrlCpmFim),;
				(LNnfinicio),(LNnffim),(LNnfsrvIni),(LNnfsrvFim),;
				(LNnfCopInicio),(LNnfCopFim),(LNSrvCopIni),(LNSrvCopFim))			


		=W_DEFPROC("rotinas.spr")

		IF FlgImpFatura



			*-------------------------------------------------*
			*  DEFINIR SOLICITACAO DE COPIA
			*-------------------------------------------------*

			IF  "COPIA" $ LStp_proces

 		        * LFretorno = ;
		    	*NFProcessCopia(orcament.empresa,LNCtrlCpmIni,;
		    	*    PrmSolicitante,"ROTINA FATURAMENTO",.T.,.T.)


 		      LFretorno = ;
		    	NF_02ImpCopia(PrmSolicitante,LNCtrlCpmIni)

			ELSE
				=NF_aviso(orcament.Empresa,LNNfinicio,LNCtrlCpmIni,;
						PrmSolicitante,LStp_proces)
		
			ENDIF

		ELSE

	    	WAIT WINDOW "Houve Falha no Impressao do Doc.Fiscal!!!!"
			LFretorno = .F.

		ENDIF
	ENDIF


	*----------------------------------------------------------------*
	wp_msg = "Faturamento Concluido "
	WAIT WINDOW wp_msg NOWAIT
	*----------------------------------------------------------------*

RETURN(LFretorno)







*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _2XH0IRIEF           NF_DefFat VALID                    º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         NOTA_B,     Record Number:    5    º
*       º Variable:            NF_DefFat                          º
*       º Called By:           VALID Clause                       º
*       º Object Type:         Push Button                        º
*       º Snippet Number:      4                                  º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*

FUNCTION _2xh0irief     &&  NF_DefFat VALID
#REGION 1
return
*---------------------------------------------------------------*
*  Define numero para faturamento nomal, ou seja, Nota Fiscal serie
* Unica e Cupom
*---------------------------------------------------------------*
FUNCTION NF_DefFat
PARAMETERS PrmSolicitante

	=W_DEFPROC("NOTA.SPR")


	*---------------------------------------------------------*

	IF PrmSolicitante <> "IMPORTACAO"
		m.datanf =	wp_dtoper    && REGISTRA A DATA DA GERACAO DA NF
	ELSE
		m.datanf = orcament.dt_fat    && REG. DATA DA GERACAO DA NF
	ENDIF


	*--------------------------------------------------------*
	

	DO CASE
		CASE orcament.empresa = 6 and (orcament.orcamento = 49275 or ;
		                               orcament.orcamento = 49546)
			IF !NF_02DefProcess((orcament.empresa),(orcament.tipo),;
					(LFproduto),(LFservico),(LFipi),(m.datanf),;
					LStp_process,clienc.tp_pessoa,clienc.tp_inscr,;
					clienc.inscricao,PrmSolicitante)
	  				SELE orcament
				RETURN(.F.)
			ENDIF

		CASE m.datanf < {30.09.2006}
			IF !NF_01DefProcess((orcament.empresa),(orcament.tipo),;
					(LFproduto),(LFservico),;
					LStp_process,PrmSolicitante)
	  				SELE orcament
				RETURN(.F.)
			ENDIF
		OTHERWISE
			IF !NF_02DefProcess((orcament.empresa),(orcament.tipo),;
					(LFproduto),(LFservico),(LFipi),(m.datanf),;
					LStp_process,clienc.tp_pessoa,clienc.tp_inscr,;
					clienc.inscricao,PrmSolicitante)
	  				SELE orcament
				RETURN(.F.)
			ENDIF
	ENDCASE



	IF PrmSolicitante <> "IMPORTACAO"
		*---------------------------------------------------------*
		STORE 0  TO LNnroNF, LNNfServico, LNCtrlCpm
		STORE 0  TO LNNFCop, LNnfSrvCop,LNcupom
		*---------------------------------------------------------*

		=W_DEFPROC("NOTA.SPR")
		IF !NF_02NroNota((orcament.empresa),(LStp_process),;
				LNnroNF, LNNfServico, LNCtrlCpm,;		
				LNNFCop, LNnfSrvCop,LNcupom)
		    WAIT WINDOW ;
		    	"Nao foram atribuidos NUMEROS AO REGISTRO DE NOTA/CUPOM"
    		SELE orcament
			RETURN(.F.)
		ENDIF
		m.datanf		=	wp_dtoper    && REGISTRA A DATA DA GERACAO DA NF
		m.horanf		=	time()		 && REGISTRA A HORA

	ELSE
		STORE 0  TO LNnroNF, LNNfServico, LNCtrlCpm
		STORE 0  TO LNNFCop, LNnfSrvCop,LNcupom

		m.datanf	   = orcament.dt_fat    && REG. DATA DA GERACAO DA NF
		m.horanf	   = orcament.hora_fat  && REG. HORA - nao inf. impor

		LNnroNF		   = orcament.nota - 1
		LNCtrlCpm = orcament.nota - 1
		LNNfServico = orcament.NFSERVICO - 1
		LNcupom		   = orcament.cupom
		LNNFCop     = 0
		LNnfSrvCop  = 0
	ENDIF



	*---------------------------------------------------------*

	STORE LNnroNF        +1 TO LNnfinicio
	STORE LNNfServico    +1	TO LNnfsrvIni
	STORE LNCtrlCpm      +1 TO LNCtrlCpmIni

	STORE LNnroNF  		TO LNnffim
	STORE LNNfServico	TO LNnfsrvFim
	STORE LNCtrlCpm  	TO LNCtrlCpmFim


	STORE LNNFCop     TO LNnfCopInicio , LNnfCopFim
	STORE LNnfSrvCop  TO LNSrvCopIni  , LNSrvCopFim

	*---------------------------------------------------------*

	IF LNnroNF+LNNfServico+LNCtrlCpm+;
		 LNNFCop+LNnfSrvCop+LNcupom = 0
		   WAIT WINDOW ;
		   	"Nao foram atribidos NUMEROS AO REGISTRO DE NOTA/CUPOM"
	   		SELE orcament
			RETURN(.F.)
	ENDIF
	*---------------------------------------------------------*
RETURN(.t.)



*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _2XH0IRIEM           NFchq_Final VALID                  º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         NOTA_B,     Record Number:    6    º
*       º Variable:            NFchq_Final                        º
*       º Called By:           VALID Clause                       º
*       º Object Type:         Push Button                        º
*       º Snippet Number:      5                                  º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*

FUNCTION _2xh0iriem     &&  NFchq_Final VALID
#REGION 1
return
*---------------------------------------------------------------*

FUNCTION NFchq_Final
PARAMETERS LNemp,LNorcamento,LSsolicitante,LFservico,LFproduto
	*------------------------------------------------------------*
	* CLASSIFICACAO:  [*****]
	*------------------------------------------------------------*
	* OBJETIVO....: 	Consite a OSI/ITENS de Controlar o Faturamento
	*------------------------------------------------------------*
	* COMENTARIO..: 	Antes de Liberar para Faturamento pode
	*				ser feita  a consistencia dos dados da osi
	*				
	*------------------------------------------------------------*
	* OBS........ :
	*------------------------------------------------------------*
	*  TABELAS....:
	*------------------------------------------------------------*
	*  PARAMETROS..:
	*		LNemp..........: Empresa que Esta Faturando
	*		LNorcamento....: Nro do Orcamento para Consistir
	*		LSsolicitante..: Informacao ultizada para orientar
	*						a Baixa de saldo indicando se
	*						deve ser cancelada reservas e......
	*			   		LSsolicitante = "VENDEDOR"
	*					LSsolicitante = "CAIXA"
	*					LSsolicitante = "FATURISTA SIMPLES"	&& SCGC201A
	*					LSsolicitante = "FATURISTA RESERVA"	&& SCGC201A
	*					LSsolicitante = "IMPORTACAO"	&& SCGC201A
	*
	*------------------------------------------------------------*
	*  RETORNO.....: .f. ou .t.
	*------------------------------------------------------------*
	* EXEMPLO : CHAMADA DO PROGRAMA SCGC2.prg
	*------------------------------------------------------------*
	=W_DEFPROC("rotinas.spr")
	PRIVATE LSalias
	PRIVATE FCHvlr,FCHqtde
	PRIVATE	LSret1_cita, LSret2_cita
	
	
*	IF	LSsolicitante = "IMPORTACAO"
*		RETURN(.T.)
*	ENDIF


	*-----------------------------------------------------------*
	*  Esta chamada a EMGet_UF nao tem efeito logico e sim
	* estrutural forcando o instanciamento de EMPRESA evitando
	* que este estaciamento ocorra em um nivel mais profundo do
	* aninhamento de rotinas o que estava provocando o erro
	* (DO nesting too deep). Se forcamos a criacao nesti nivel
	* evitamos o erro
	*-----------------------------------------------------------*

	=W_DEFPROC("empresa.spr")
	=EMVerifyInst()

	=W_DEFPROC("grfiscal.spr")
	=GFVerifyInst()

	=W_DEFPROC("notaite.spr")
	=IEVerifyInst()

	*-----------------------------------------------------------*
	LSalias		= 	ALIAS()
	LFretorno	=	.t.
	STORE "" TO LSret1_cita, LSret2_cita
	*------------------------------------------------------------*
	SELE orcament
	SET ORDER TO TAG orcamento
	SEEK STR(LNemp,3)+STR(LNorcamento,6)
	IF !FOUND()
		DO OBJ_MENS.SPR WITH "Nao Foi Possivel Localizar Orcamento."
		IF !EMPTY(LSalias) AND USED(LSalias)
			SELECT &LSalias
		ENDIF
		RETURN(.F.)
	ENDIF

	SELE tipooper
	SET ORDER TO TAG tipo
	SEEK 's'+orcament.tipo
	IF !FOUND()
		SEEK 'S'+orcament.tipo
	ENDIF
	IF !FOUND()
		DO OBJ_MENS.SPR WITH ;
	   		"Nao foi possivel classificar a OPERACAO. PROCURE SUPORTE..."
		IF !EMPTY(LSalias) AND USED(LSalias)
			SELECT &LSalias
		ENDIF
		RETURN(.F.)
	ENDIF
	*------------------------------------------------------------------*
	*	Reposiciona clienc
	*------------------------------------------------------------------*
	SELE clienc
	SET ORDER TO TAG emporca
	SEEK STR(LNemp,3)+STR(LNorcamentoi,6)
	IF !FOUND()
		WAIT WINDOW "Dados do Cliente Referente Orcamento ";
				+STR(LNorcamento,6)+" Nao Estao Disponiveis."	
		IF !EMPTY(LSalias) AND USED(LSalias)
			SELECT &LSalias
		ENDIF
		RETURN(.f.)
	ENDIF



	=W_DEFPROC("CLIENTES.SPR")
	IF !CLVld_CPF_CNPJ( clienc.cliente )
		WAIT WINDOW "CPF/CNPJ Invalido <ENTER>"
		IF !EMPTY(LSalias) AND USED(LSalias)
			SELECT &LSalias
		ENDIF
		RETURN(.f.)
	ENDIF


	*------------------------------------------------------------------*
	*     Vendas em CHEQUE A PRAZO (3) OU DUPLICATA (4) o cliente deve
	* ser cadasatrado
	*------------------------------------------------------------------*
	SELE clientes
	SET ORDER TO TAG cliente
	SEEK clienc.cliente

	*--------------------------------------------------------------*
	*  Vendas Parceladas no Cartao Sao Liberadas Sem Cadastro      *
	*			 orcament.tp_parcela <> 4						   *
	*--------------------------------------------------------------*
	IF !FOUND()
		IF orcament.tp_parcela > 1 and orcament.tp_parcela <> 4 and ;
								   orcament.tp_parcela <> 5
			WAIT WINDOW "Cliente deve ser Cadastrado . Execute <Cad> "
			IF !EMPTY(LSalias) AND USED(LSalias)
				SELECT &LSalias
			ENDIF
			RETURN(.F.)
		ENDIF
	ENDIF


*-----------------------------------*

	IF orcament.tp_parcela = 6 && VENDOR


		IF LSsolicitante = "IMPORTACAO"	
			m.dt_emi = orcament.dt_fat
		ELSE
			m.dt_emi = wp_dtoper
		ENDIF

		=W_DEFPROC("duplicat.spr")
		IF !CRVerifTxsVendor(orcament.Empresa,;
							 m.Dt_Emi,;
							 orcament.Prazo)
			WAIT WINDOW ;
				"Taxas de Vendor nao Cadastradas <ENTER>  "
			IF !EMPTY(LSalias) AND USED(LSalias)
				SELECT &LSalias
			ENDIF
			RETURN(.F.)
		ENDIF
	ENDIF



	IF FOUND()
		IF clientes.cliente = 0
			WAIT WINDOW ";
			  Existe Cadastro Cliente com CPF = 0.<Tente Novamente!>  "
	
			=REGLOCK(.T.)
			=edithand('APAGA')
			IF !EMPTY(LSalias) AND USED(LSalias)
				SELECT &LSalias
			ENDIF
			RETURN(.F.)
		ENDIF
	ENDIF



	SELE orcatmp
	SET ORDER TO TAG orcamento
	SET NEAR ON
	SEEK STR(LNemp,3)+STR(LNorcamento,6)
	SET NEAR OFF
	IF orcament.empresa <> orcatmp.empresa ;
		OR orcament.orcamento <> orcatmp.orcamento
		DO OBJ_MENS.SPR WITH ;
	   		"Nao foi possivel Localizar Itens para Faturar.."
		IF !EMPTY(LSalias) AND USED(LSalias)
			SELECT &LSalias
		ENDIF
		RETURN(.F.)
	ENDIF
	*********************************************************	
	m.FCHvlr     = 0		&& P/ CONFERIR FECHAMENTO
	m.FCHqtde    = 0        && P/ CONFERIR FECHAMENTO
	LFservico	= .F.		&& CASO EXISTA SERVICO (TP_MERCAD = 7)
	LFproduto 	= .F.		&& CASO EXISTA PRODUTO (TP_MERCAD <> 7)
	LFIPI    	= .F.		&& CASO EXISTA IPI
    LSchq_CFO   = ""        && Se os Itens nao Apresentarem variacao
                            && de CFO => este e transportado para
                            && campo padrao
	m.Vlr_Subst = 0        && Verifica Destaque de ICMS substituicao FECHAMENTO

	*********************************************************


	DO WHILE !eof() AND LNorcamento = orcatmp.orcamento ;
					AND LNemp 		= orcatmp.empresa

        LSchq_CFO   = orcatmp.cfo


		***  VERIFICA SE CANCELAMENTO FOI INCLUIDO NA DESCRICAO

		IF LEFT(orcatmp.situacao,1) $ "Yy" ;
           and  !("CANCELA" $ UPPER(orcatmp.descricao))

		    DO OBJ_ALER.SPR WITH ;
			   "Existem itens com cancelamento incompleto. Verifique" +;
			   CHR(13)+" <ENTER>  "
			LFretorno	=	.F.

			EXIT
		ENDIF



		***  NAO PROCESSAR ITENS CANCELADOS, ALEM DO FECHAMENTO

		IF LEFT(orcatmp.situacao,1) $ "YykeZ"
			SKIP
			LOOP
		ENDIF

		***** SO SERA PROCESSADO QDO TODOS OS ITENS SE ENCONTRAREM EM
		***** SITUACAO DE CANCELAMENTO OU PRONTOS P/ FATURAR
		Ltmpst = LEFT(orcatmp.situacao,1)

		IF (LSsolicitante = "FATURISTA RESERVA" AND !(Ltmpst $ "I")) OR ;
		   (LSsolicitante = "FATURISTA SIMPLES" AND !(Ltmpst $ "A")) OR ;
		   (LSsolicitante = "VENDEDOR" 			AND !(Ltmpst $ "M")) OR ;
		   (LSsolicitante = "CAIXA" 			AND !(Ltmpst $ "o")) OR ;
		   (LSsolicitante = "IMPORTACAO"		AND !(Ltmpst $ "A"))
			LFretorno	=	.F.
			EXIT
		ENDIF
		m.FCHvlr  = m.FCHvlr  + orcatmp.precofinal
		m.FCHqtde = m.FCHqtde + orcatmp.qtde
		IF orcatmp.tp_mercad = 7		&& EXISTE SERVICO
			LFservico	= .T.		&& CASO EXISTA SERVICO (TP_MERCAD = 7)
		ELSE
			LFproduto	= .T.		&& CASO EXISTA PRODUTO (TP_MERCAD <> 7)
		ENDIF
		IF orcatmp.vlripi > 0
			LFipi = .t.
		ENDIF
		********************************************************


		IF EMPTY(ALLTRIM(orcatmp.cst))
		    DO OBJ_ALER.SPR WITH ;
			   "Existem itens sem CST (Codigo de Situacao Tributaria.)" +;
			   CHR(13)+;
			   "Verificar Tabela de Situacao Tributaria <ENTER>  "
			LFretorno	=	.F.
			EXIT
		ENDIF

		IF "CANCELA" $ UPPER(orcatmp.descricao)
		    DO OBJ_ALER.SPR WITH ;
			   "Existem itens com cancelamento incompleto. Verifique" +;
			   CHR(13)+" <ENTER>  "
			LFretorno	=	.F.
			EXIT
		ENDIF

		*----------------------------------------------------------*
		*  		A situacao "O" indica que o item ja foi faturado
		*  A permissao de reprocessar visa corrigir problemas por
		*  interrupcao de faturamento anterior (TRANSACAO)
		*----------------------------------------------------------*
	    IF !ULbaixa_Saldo(LSsolicitante) ;
	    	AND !(LEFT(orcatmp.situacao,1) $ "O")
			LFretorno	=	.F.
			EXIT
		ENDIF


		SELE orcatmp
		SKIP
	ENDDO

  	SELECT orcament
	=REGLOCK(.T.)
	REPLACE orcament.cfo with LSchq_CFO



	m.LNfch  = m.FCHvlr + (m.FCHqtde / 100)

	DO CASE
		CASE !LFretorno
		   	WAIT WINDOW "Os itens apresentam irregularidades. "
		CASE  LNfch <> orcament.fecha
	   		WAIT WINDOW ;
	   				"Os itens nao batem com valor de fechamento.  <ENTER> "
			LFretorno	=	.F.
	ENDCASE
	*--------------------------------------------------------------*


	IF !EMPTY(LSalias) AND USED(LSalias)
		SELECT &LSalias
	ENDIF
RETURN(LFretorno)




*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _2XH0IRIF3           NF_01DefProcess VALID              º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         NOTA_B,     Record Number:    7    º
*       º Variable:            NF_01DefProcess                    º
*       º Called By:           VALID Clause                       º
*       º Object Type:         Push Button                        º
*       º Snippet Number:      6                                  º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*

FUNCTION _2xh0irif3     &&  NF_01DefProcess VALID
#REGION 1
return
*---------------------------------------------------------------*



FUNCTION NF_01DefProcess
PARAMETERS PrmEmpresa,LStipo,LFproduto,LFservico,LStp_process,;
     PrmSolicitante


	*------------------------------------------------------------*
	* CLASSIFICACAO:  [*****]
	*------------------------------------------------------------*
	* OBJETIVO....: Definir o processo que orienta o faturamento
	*		em relacao a NOTA e ou ECF
	*------------------------------------------------------------*
	* COMENTARIO..: Exitem diferencas de tratamento do ECF/NOTA
	*			entre as filiais que implicam na emissao ou nao
	*			de CUPOM ou NOTA
	*		LStp_process...: Processo definido em NF_02DefProcess
	*				LStp_proces	= "CUPOM"
	*				LStp_proces	= "CUPOM/COPIA EM NOTA"
	*				LStp_proces	= "CUPOM/COPIA EM NF SERVICO"
	*				LStp_proces	= "CUPOM/COPIA EM NOTA/COPIA EM NF SERVICO"
    *
	*				LStp_proces	= "NOTA"
	*
	*				LStp_proces	= "NF SERVICO"
	*
	*				LStp_proces	= "NOTA/NF SERVICO"
    *
	*				LStp_proces	= "REC.CUPOM"
	*				LStp_proces	= "REC.NOTA"
	*				LStp_proces	= "REC.NF SERVICO"
	*				LStp_proces	= "REC.NOTA/REC.NF SERVICO"
	*   Existem dois pocessos extras definidos na rotina que solicita
	*  copia de cupom.
	*					LStp_proces	= "COPIA CUPOM EM NOTA"
	*					LStp_proces	= "COPIA CUPOM EM NF SERVICO"
	**********************************************************************
	*  INICIO DESCRICAO DE PASSOS
	*	WP_ECF = [S]	= ECF CONECTADO EM PROCESSO NORMAL
	*			 [R]	= ECF CONECTADO EM PROCESSO DE RECUPERACAO DE DADOS	
	*
	*			 [I]	= ECF CONECTADO SEM AUTORIZACAO P/ SERVICO
	*			 [Q]	= ECF CONECTADO SEM AUTORIZACAO P/ SERVICO EM
	*						 RECUPERACAO DADOS
	*
	*			 [N]	= ECF NAO CONECTADO
	*			 [E]	= ECF NAO CONECTADO EM PROCESSO DE RECUPERACAO DADOS
	*	
	* 		Se for imprimir CUPOM (FOR (VENDA INTERNA A CONTRIBUITE
	*				ESTADUAL(1) OU INSCRITO(2) OU NAO INSCRITO(3))  OU VENDA
	*				EXTERNA PARA CONTRIBUINTE NAO INSCRITO(3))
	*	=> LER NUMERO DO CUPOM ; LER ULTIMO REGISTRO DE CUPOM (EMPRESA) ;
	*	   	DIFERENCIAR NRO. REGISTRO DO CUPOM DO NRO DE NF . COM + 100000
	**********************************************************************
	*------------------------------------------------------------*
	* OBS........ :
	*------------------------------------------------------------*
	*  TABELAS....:
	*------------------------------------------------------------*
	*  PARAMETROS..:
	*		LNtipo.........: Tipo da Operacao
	*		LFproduto......: Flag indicando existencia de produto
	*		LFservico......: Flag indicando existencia de servico
	*						para faturar
	*						.T. => Sera faturado servico
	*						.F. => Nao Sera faturado servico
	*------------------------------------------------------------*
	*  RETORNO.....:
	*			LStp_process : Identificacao do processo
	*
	*					FUNCAO RETORNA .T. ou .F.
	*------------------------------------------------------------*
	* EXEMPLO : CHAMADA DO PROGRAMA SCGC2.prg
	*------------------------------------------------------------*
	=W_DEFPROC("rotinas.spr")
	PRIVATE LSalias
	PRIVATE LSecf
	PRIVATE LSmarca

	*-----------------------------------------------------------*
	LSalias	= ALIAS()
	SELE parametr
	GO TOP
	LSecf		= parametr.usa_ecf

	LSmarca		= parametr.tipo_ecf

	SELECT tipooper
	SET ORDER TO TAG tipo
	SEEK 's'+LStipo
	IF !FOUND()
		SEEK 'S'+LStipo  	
	ENDIF
	IF !FOUND()
		DO OBJ_MENS.SPR WITH ;
	   		"Nao foi possivel Localizar Tipo de Operacao (TIPOOPER)."
		IF !EMPTY(LSalias) AND USED(LSalias)
			SELECT &LSalias
		ENDIF
		RETURN(.f.)
	ENDIF
	*-----------------------------------------------------------*
	*<<<<<<<<<<<<<<< DEFININDO MODELO DO PROCESSO FATURAMENTO >>>>>>>>>>>>>
	DO CASE
		CASE LSecf $ "I/Q/S/R"	
			DO CASE
				CASE tipooper.ch_opera <> "1"
					LStp_proces	= "NOTA"
			    CASE orcament.tp_parcela = 4 or orcament.tp_parcela = 5
					LStp_proces	= "CUPOM"
				CASE tipooper.ch_contr $ "13"
					LStp_proces	= "CUPOM"
				CASE tipooper.ch_contr $ "4"    && REVENDEDOR
					LStp_proces	= "NOTA"
				CASE tipooper.ch_desti = "2" AND tipooper.ch_contr $ "2"
					LStp_proces	= "NOTA"
				OTHERWISE
					LStp_proces	= "NOTA"
			ENDCASE			
		CASE LSecf $ "N"	
			LStp_proces	= "NOTA"
		OTHERWISE
			DO OBJ_MENS.SPR WITH " Nao esta definido Parametro para " +;
				"Forma de tratamento do ECF/FATURAMENTO"
			IF !EMPTY(LSalias) AND USED(LSalias)
				SELECT &LSalias
			ENDIF
			RETURN(.f.)
			
	ENDCASE

	*--------------------------------------------------------------*
	DO CASE
		CASE LStp_proces	= "CUPOM"
			IF PrmEmpresa = 6
				DO CASE
					CASE LFservico = .T. AND LFproduto = .T.
						LStp_proces	= ;
						   "CUPOM/COPIA EM NOTA/COPIA EM NF SERVICO"
					CASE LFservico = .T. AND LFproduto = .F.
						LStp_proces	= "CUPOM/COPIA EM NF SERVICO"
				ENDCASE
			ELSE
				DO CASE
					CASE LSecf $ "I/Q"	AND LFservico = .T.
						LStp_proces	= "CUPOM/COPIA EM NOTA"
					CASE tipooper.ch_contr $ "4"    && REVENDEDOR
						LStp_proces	= "CUPOM/COPIA EM NOTA"
					CASE tipooper.ch_desti = "2" AND tipooper.ch_contr $ "2"
						LStp_proces	= "CUPOM/COPIA EM NOTA"
				ENDCASE
			ENDIF
		CASE LStp_proces	= "NOTA"
			IF PrmEmpresa = 6
				DO CASE
					CASE LFservico = .T. AND LFproduto = .T.
						LStp_proces	= "NOTA/NF SERVICO"
					CASE LFservico = .T. AND LFproduto = .F.
						LStp_proces	= "NF SERVICO"
				ENDCASE
			ENDIF

	ENDCASE
	*--------------------------------------------------------------*
	IF LSecf $ "Q/R/E"	OR 	PrmSolicitante = "IMPORTACAO"
		LStp_proces	= "REC."+LStp_proces
	ENDIF
	*--------------------------------------------------------------*
	IF !EMPTY(LSalias) AND USED(LSalias)
		SELECT &LSalias
	ENDIF
RETURN(.t.)



*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _2XH0IRIFD           ANTNF_02DefProcess VALID           º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         NOTA_B,     Record Number:    8    º
*       º Variable:            ANTNF_02DefProcess                 º
*       º Called By:           VALID Clause                       º
*       º Object Type:         Push Button                        º
*       º Snippet Number:      7                                  º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*

FUNCTION _2xh0irifd     &&  ANTNF_02DefProcess VALID
#REGION 1
return
*---------------------------------------------------------------*

FUNCTION ANTNF_02DefProcess
PARAMETERS PrmEmpresa,LStipo,LFproduto,LFservico,LFipi,;
		LDdatanf,LStp_process,PrmTpPessoa,PrmTpInscr,PrmInscricao,;
	     PrmSolicitante


	*------------------------------------------------------------*
	* CLASSIFICACAO:  [*****]
	*------------------------------------------------------------*
	* OBJETIVO....: Definir o processo que orienta o faturamento
	*		em relacao a NOTA e ou ECF
	*------------------------------------------------------------*
	* COMENTARIO..: Exitem diferencas de tratamento do ECF/NOTA
	*			entre as filiais que implicam na emissao ou nao
	*			de CUPOM ou NOTA
	*		LStp_process...: Processo definido em NF_02DefProcess
	*				LStp_proces	= "CUPOM"
	*				LStp_proces	= "CUPOM/COPIA EM NOTA"
	*				LStp_proces	= "CUPOM/COPIA EM NF SERVICO"
	*				LStp_proces	= "CUPOM/COPIA EM NOTA/COPIA EM NF SERVICO"
    *
	*				LStp_proces	= "NOTA"
	*
	*				LStp_proces	= "NF SERVICO"
	*
	*				LStp_proces	= "NOTA/NF SERVICO"
    *
	*				LStp_proces	= "REC.CUPOM"
	*				LStp_proces	= "REC.NOTA"
	*				LStp_proces	= "REC.NF SERVICO"
	*				LStp_proces	= "REC.NOTA/REC.NF SERVICO"
	*   Existem dois pocessos extras definidos na rotina que solicita
	*  copia de cupom.
	*					LStp_proces	= "COPIA CUPOM EM NOTA"
	*					LStp_proces	= "COPIA CUPOM EM NF SERVICO"
	**********************************************************************
	*  INICIO DESCRICAO DE PASSOS
	*	WP_ECF = [S]	= ECF CONECTADO EM PROCESSO NORMAL
	*			 [R]	= ECF CONECTADO EM PROCESSO DE RECUPERACAO DE DADOS	
	*
	*			 [I]	= ECF CONECTADO SEM AUTORIZACAO P/ SERVICO
	*			 [Q]	= ECF CONECTADO SEM AUTORIZACAO P/ SERVICO EM
	*						 RECUPERACAO DADOS
	*
	*			 [N]	= ECF NAO CONECTADO
	*			 [E]	= ECF NAO CONECTADO EM PROCESSO DE RECUPERACAO DADOS
	*	
	* 		Se for imprimir CUPOM (FOR (VENDA INTERNA A CONTRIBUITE
	*				ESTADUAL(1) OU INSCRITO(2) OU NAO INSCRITO(3))  OU VENDA
	*				EXTERNA PARA CONTRIBUINTE NAO INSCRITO(3))
	*	=> LER NUMERO DO CUPOM ; LER ULTIMO REGISTRO DE CUPOM (EMPRESA) ;
	*	   	DIFERENCIAR NRO. REGISTRO DO CUPOM DO NRO DE NF . COM + 100000
	**********************************************************************
	*------------------------------------------------------------*
	* OBS........ :
	*------------------------------------------------------------*
	*  TABELAS....:
	*------------------------------------------------------------*
	*  PARAMETROS..:
	*		LNtipo.........: Tipo da Operacao
	*		LFproduto......: Flag indicando existencia de produto
	*		LFservico......: Flag indicando existencia de servico
	*						para faturar
	*						.T. => Sera faturado servico
	*						.F. => Nao Sera faturado servico
	*------------------------------------------------------------*
	*  RETORNO.....:
	*			LStp_process : Identificacao do processo
	*
	*					FUNCAO RETORNA .T. ou .F.
	*------------------------------------------------------------*
	* EXEMPLO : CHAMADA DO PROGRAMA SCGC2.prg
	*------------------------------------------------------------*
	=W_DEFPROC("rotinas.spr")
	PRIVATE LSalias
	PRIVATE LSecf
	PRIVATE LSmarca

	*-----------------------------------------------------------*
	PRIVATE  LNCheque1Vlr,LNCheque2Vlr,LNCheque3Vlr,;
				 LNDinheiroVlr, LNCartaoVlr,LNTicketVlr,LNDuplicatVlr
	STORE 0 TO   LNCheque1Vlr,LNCheque2Vlr,LNCheque3Vlr,;
				 LNDinheiroVlr, LNCartaoVlr,LNTicketVlr,LNDuplicatVlr

	*-----------------------------------------------------------*
	LSalias	= ALIAS()
	SELE parametr
	SET ORDER TO TAG EMPRESA
	SEEK PrmEmpresa
	IF !FOUND()
		GO TOP
	ENDIF
	LSecf		= parametr.usa_ecf
	LSmarca		= parametr.tipo_ecf

	SELECT tipooper
	SET ORDER TO TAG tipo
	SEEK 's'+LStipo
	IF !FOUND()
		SEEK 'S'+LStipo  	
	ENDIF
	IF !FOUND()
		DO OBJ_MENS.SPR WITH ;
	   		"Nao foi possivel Localizar Tipo de Operacao (TIPOOPER)."
		IF !EMPTY(LSalias) AND USED(LSalias)
			SELECT &LSalias
		ENDIF
		RETURN(.f.)
	ENDIF
	*-----------------------------------------------------------*
	*<<<<<<<<<<<<<<< DEFININDO MODELO DO PROCESSO FATURAMENTO >>>>>>>>>>>>>
	*-----------------------------------------------------------*
	=W_DEFPROC("ORCAMENT.SPR")
	=ORVlr_e_FormPgto(PrmEmpresa,;
		  orcament.orcamento,;
		  LNCheque1Vlr,;
		  LNDinheiroVlr,;
		  LNCartaoVlr,;
		  LNDuplicatVlr)
	*-----------------------------------------------------------*
    * 1-DEFININE DOCUMENTO FISCAL PRINCIPAL
	*-----------------------------------------------------------*
	DO CASE
		CASE LSecf $ "I/Q/S/R"	
			DO CASE
				CASE LNCartaoVlr > 0
					LStp_proces	= "CUPOM"
				CASE tipooper.ch_opera <> "1"
					LStp_proces	= "NOTA"
				CASE PrmTpPessoa = 2	&& JURIDICA
					LStp_proces	= "NOTA"
				CASE PrmTpInscr  = 1   && ESTADUAL
					LStp_proces	= "NOTA"
				CASE tipooper.ch_contr $ "13"
					LStp_proces	= "CUPOM"
				CASE tipooper.ch_contr $ "4"    && REVENDEDOR
					LStp_proces	= "NOTA"
				CASE tipooper.ch_desti = "2" AND tipooper.ch_contr $ "2"
					LStp_proces	= "NOTA"
				OTHERWISE
					LStp_proces	= "NOTA"
			ENDCASE			
		CASE LSecf $ "N"	
			LStp_proces	= "NOTA"
		OTHERWISE
			DO OBJ_MENS.SPR WITH " Nao esta definido Parametro para " +;
				"Forma de tratamento do ECF/FATURAMENTO"
			IF !EMPTY(LSalias) AND USED(LSalias)
				SELECT &LSalias
			ENDIF
			RETURN(.f.)
			
	ENDCASE

	*-----------------------------------------------------------*
    * 2-DEFININE DOCUMENTOS AUXILIARES (COPIA) / NF.SERVICO
	*-----------------------------------------------------------*
	*---------------------------------------------------------*
	* AS CAPAS DAS COPIAS SAO IMPORTADAS JUNTO COM AS CAPAS
	* DAS NOTAS CANCELADAS. SENDO ASSIM NA IMPORTACAO NAO SERA
	* FEITA GERACAO DE COPIAS PELA RORINA FATURAMENTO
	*---------------------------------------------------------*
	DO CASE
			CASE LStp_proces	= "CUPOM"


				IF PrmSolicitante <> "IMPORTACAO"

					IF PrmEmpresa <>  6
						*-----------------------------------------------*
						* COM USO DE ECF TERMICA DEFINIU-SE QUE SEMPRE
						* SERA EMITIDA COPIA PARA OS CUPOSN
						*-----------------------------------------------*
						LStp_proces	= LStp_proces+"/COPIA EM NOTA"

					ELSE
						*---------------------------------------------*
						* EM 28/03 ADOTOU-SE IMPRESSORA TERMICA
						* COM 1 SO VIA ENTAO PASSOU-SE A IMPRIMIR
						* NOTAS PARA TODAS OPERACOES
						*---------------------------------------------*
						IF  LDdatanf >= {28.03.2007} AND ;
							(LFipi= .T. OR LFproduto = .T.)
								LStp_proces	= LStp_proces+"/COPIA EM NOTA"

						ENDIF


						IF LFservico = .T.
							LStp_proces	= LStp_proces+"/COPIA EM NF SERVICO"
						ENDIF
	
					ENDIF
				ENDIF

			CASE LStp_proces	= "NOTA"

				IF PrmEmpresa = 6
					DO CASE
						CASE LFservico = .T. AND LFproduto = .T.
							LStp_proces	= LStp_proces+"/NF SERVICO"
						CASE LFservico = .T. AND LFproduto = .F.
							LStp_proces	= "NF SERVICO"
					ENDCASE
				ENDIF
	ENDCASE
	*--------------------------------------------------------------*
	IF LSecf $ "Q/R/E"	OR 	PrmSolicitante $ "RECUPERACAO"
		LStp_proces	= "REC."+LStp_proces
	ENDIF



	*---------------------------------------------------------------*
	*  NA IMPORTACAO NAO HA COMO SABER A SITUACAO DOS PARAMETROS
	* NO MOMENTO DO FATURAMENTO,SENDO ASSIM A DEFINICAO DO PROCESSO
	* E FEITA CONFORME O TIPO DE DOCUMENTO GERADO NO FATURAMENTO
	*---------------------------------------------------------------*
	* NO CASO DE COPIA ELAS SAO IMPORTAS JUNTO COM AS NOTAS CANCELADAS
	* E SOMENTE AS CAPAS
	*---------------------------------------------------------------*
	

	IF PrmSolicitante $ "IMPORTACAO"

		DO CASE
			CASE  orcament.nota >= 3000000 ;
			  AND orcament.nota <= 3999999
					LStp_proces	= "NOTA"

					IF   orcament.NFSERVICO >= 2000000 ;
					 AND orcament.NFSERVICO <  3000000
					   LStp_proces	= LStp_proces+"/NF SERVICO"
					ENDIF

			CASE  orcament.nota < 1000000  && 0 ---> 999999
					LStp_proces	= "NOTA"

					IF   orcament.NFSERVICO >= 2000000 ;
					 AND orcament.NFSERVICO <  3000000
					   LStp_proces	= LStp_proces+"/NF SERVICO"
					ENDIF

			CASE  orcament.nota < 2000000  && 1000000 ---> 2000000
					LStp_proces	= "CUPOM"

			OTHERWISE
					LStp_proces	= "NF SERVICO"
		ENDCASE
		LStp_proces	= "REC."+LStp_proces
	ENDIF
	*--------------------------------------------------------------*
	IF !EMPTY(LSalias) AND USED(LSalias)
		SELECT &LSalias
	ENDIF
RETURN(.t.)



*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _2XH0IRIFE           NF_02NroNota VALID                 º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         NOTA_B,     Record Number:    9    º
*       º Variable:            NF_02NroNota                       º
*       º Called By:           VALID Clause                       º
*       º Object Type:         Push Button                        º
*       º Snippet Number:      8                                  º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*

FUNCTION _2xh0irife     &&  NF_02NroNota VALID
#REGION 1
return
*---------------------------------------------------------------*

FUNCTION NF_02NroNota
PARAMETERS LNemp,LStp_process,LNnroNF, LNNfServico,;
			 LNCtrlCupom,LNNFCop, LNnfSrvCop, LNcupom

	*------------------------------------------------------------*
	=W_DEFPROC("rotinas.spr")
	PRIVATE LSalias

	PRIVATE LNnotaAnterior
	*-----------------------------------------------------------*
	LSalias	= ALIAS()
	*------------------------------------------------------------*
	SELECT empresa
	SET ORDER TO tag empresa
	SEEK LNemp
	IF !FOUND()
		IF !EMPTY(LSalias) AND USED(LSalias)
			SELECT &LSalias
		ENDIF
		RETURN(.f.)
	ENDIF
	*------------------------------------------------------------*
	DO  CASE
		CASE !("REC." $ LStp_proces)

			LNnroNF         = empresa.nota

			IF UPPER(empresa.emite_NFe) = "S"
				LNnroNF = LNnroNF + 3000000
			ENDIF



			LNNfServico  = empresa.ult_nfsrvc
			IF UPPER(empresa.emite_NFSe) = "S"
				LNNfServico = LNNfServico + 4000000

			ELSE
				IF LNNfServico < 2000000
					LNNfServico = LNNfServico + 2000000
				ENDIF
			ENDIF

			LNCtrlCupom = empresa.ult_cupom
			IF LNCtrlCupom < 1000000
				LNCtrlCupom = LNCtrlCupom + 1000000
			ENDIF

			LNcupom = 0
		OTHERWISE
			DO OBJ_3FAT.SPR WITH LNnroNF,LNNfServico,;
				LNCtrlCupom,LNNFCop,LNnfSrvCop,LNcupom,LStp_proces

			IF "NOTA" $ LStp_proces AND !("COPIA" $ LStp_proces)
				LNnroNF = LNnroNF - 1
			ENDIF
			IF "NF SERVICO" $ LStp_proces AND !("COPIA" $ LStp_proces)
				LNNfServico = LNNfServico - 1
			ENDIF
			IF "CUPOM" $ LStp_proces
				LNCtrlCupom = LNCtrlCupom - 1
			ENDIF
	ENDCASE
	*--------------------------------------------------------------*


	IF "NOTA" $ LStp_proces AND !("COPIA" $ LStp_proces)
		SELE nota
		SET ORDER TO TAG nota
		SEEK STR(LNemp,3)+STR(LNnroNF+1,7)  && VER SE PROXIMO NUM JA GRAVADO
		IF FOUND()
		   	WAIT WINDOW "No. Nota ja emitida. "+STR(LNnroNF+1,7)
			IF !EMPTY(LSalias) AND USED(LSalias)
				SELECT &LSalias
			ENDIF
			RETURN(.f.)
		ENDIF


		IF (LNnroNF > 1 AND LNnroNF <= 999999);
		   OR  ;
		   (LNnroNF > 3000001 AND LNnroNF <= 3999999)

			LNnotaAnterior = VAL(SUBS(STR(LNnroNF-1,7),2))
			SEEK STR(LNemp,3)+STR(LNnroNF-1,7) &&VER SE ULT NRO JA GRAVADO
			IF (LNnotaAnterior > 0) AND !FOUND()
			   	WAIT WINDOW "No. Nota anterior nao gravada. ";
							+STR(LNnroNF-1,7)
				IF !EMPTY(LSalias) AND USED(LSalias)
					SELECT &LSalias
				ENDIF
				RETURN(.f.)
			ENDIF
		ENDIF

	ENDIF
	IF "NF SERVISO" $ LStp_proces AND !("COPIA" $ LStp_proces)
		SELE nota
		SET ORDER TO TAG nota
		SEEK STR(LNemp,3)+STR(LNNfServico+1,7)
		IF FOUND()
		   	WAIT WINDOW "No.NF Servico ja emitida. "+STR(LNNfServico+1,7)
			IF !EMPTY(LSalias) AND USED(LSalias)
				SELECT &LSalias
			ENDIF
			RETURN(.f.)
		ENDIF

		IF (LNNfServico > 2000001 AND LNNfServico <= 2999999) ;
		  OR ;
		   (LNNfServico > 4000001 AND LNNfServico <= 4999999)
			LNnotaAnterior = VAL(SUBS(STR(LNNfServico-1,7),2))
			SEEK STR(LNemp,3)+STR(LNNfServico-1,7)
			IF (LNnotaAnterior) > 0 AND !FOUND()
		   		WAIT WINDOW "No.Anterior NF Servico nao gravado. "+;
								STR(LNNfServico-1,7)
				IF !EMPTY(LSalias) AND USED(LSalias)
					SELECT &LSalias
				ENDIF
				RETURN(.f.)
			ENDIF
		ENDIF
	ENDIF
	IF "CUPOM" $ LStp_proces
		SELE nota
		SET ORDER TO TAG nota
		SEEK STR(LNemp,3)+STR(LNCtrlCupom+1,7)
		IF FOUND()
		   	WAIT WINDOW "No. Cupom ja emitido. "+STR(LNCtrlCupom+1,7)
			IF !EMPTY(LSalias) AND USED(LSalias)
				SELECT &LSalias
			ENDIF
			RETURN(.f.)
		ENDIF
		
		IF (LNCtrlCupom > 1000001 AND LNCtrlCupom <= 1999999)
			LNnotaAnterior = VAL(SUBS(STR(LNCtrlCupom-1,7),2))
			SEEK STR(LNemp,3)+STR(LNCtrlCupom-1,7)
			IF (LNnotaAnterior) >0 AND !FOUND()
			   	WAIT WINDOW "No.Anterior Cupom nao gravado emitido. "+;
					STR(LNCtrlCupom-1,7)
				IF !EMPTY(LSalias) AND USED(LSalias)
					SELECT &LSalias
				ENDIF
				RETURN(.f.)
			ENDIF
		ENDIF
	ENDIF
	*--------------------------------------------------------------*
	IF !EMPTY(LSalias) AND USED(LSalias)
		SELECT &LSalias
	ENDIF
RETURN(.t.)



*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _2XH0IRIG0           NFFatura VALID                     º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         NOTA_B,     Record Number:   10    º
*       º Variable:            NFFatura                           º
*       º Called By:           VALID Clause                       º
*       º Object Type:         Push Button                        º
*       º Snippet Number:      9                                  º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*

FUNCTION _2xh0irig0     &&  NFFatura VALID
#REGION 1
return
*---------------------------------------------------------------*

FUNCTION NFFatura
PARAMETERS 	LNemp,;
  			LNosi,;
  			LNnroNF,;
  			LNcupom,;
  			LStp_proces,;
  			LDdtnf,;
  			LShoranf,;
			LSsolicitante,;
			LNnffim,;
			PrmOrientacao
			
	*------------------------------------------------------------*
	* CLASSIFICACAO:  [*****]
	*------------------------------------------------------------*
	* OBJETIVO....: 	Controlar o Faturamento
	*------------------------------------------------------------*
	* COMENTARIO..:
	*				
	*------------------------------------------------------------*
	* OBS........ :
	*------------------------------------------------------------*
	*  TABELAS....:
	*------------------------------------------------------------*
	*  PARAMETROS..:
	*		LNemp..........: Empresa que Esta Faturando
	*		LNosi..........: Nro da OSI para Faturar
	*		LNnroNF........: Numero  Inicial para Nota Fiscal
	*		LNcupom........: Numero do Cupo Relacionado a Nota
	*						No caso recuperacao ja vem informado
	*						caso contrario e determinado na
	*						abertura da nota
	*		LStp_process...: Processo definido em NFDefProcess
	*
	*              Antes de 15/03/2006
	*					LStp_proces	= "NOTA/CUPOM"
	*					LStp_proces	= "CUPOM"
	*					LStp_proces	= "NOTA"
	*					LStp_proces	= "REC.NOTA/CUPOM"
	*					LStp_proces	= "REC.CUPOM"
	*					LStp_proces	= "REC.NOTA"
	*              apos 15/03/2006
	*					LStp_proces	= "CUPOM"
	*					LStp_proces	= "CUPOM/COPIA EM NOTA"
	*					LStp_proces	= "CUPOM/COPIA EM NF SERVICO"
	*					LStp_proces	= "CUPOM/COPIA EM NOTA/NF SERVICO"
	*					LStp_proces	= "NOTA"
	*					LStp_proces	= "NF SERVICO"
	*					LStp_proces	= "NOTA/NF SERVICO"
	*					LStp_proces	= "REC.CUPOM"
	*					LStp_proces	= "REC.NOTA"
	*					LStp_proces	= "REC.NF SERVICO"
	*					LStp_proces	= "REC.NOTA/NF SERVICO"
	*					LStp_proces	= "COPIA CUPOM EM NOTA"
	*					LStp_proces	= "COPIA CUPOM EM NF SERVICO"
	*
	*		LDdtnf.........: Data para Registrar a Nota
	*		LShoranf.......: Hora para Registrar a Nota
	*		LSsolicitante..: Informacao ultizada para orientar
	*						a Baixa de saldo indicando se
	*						deve ser cancelada reservas e......
	*			   		LSsolicitante = "VENDEDOR"
	*					LSsolicitante = "CAIXA"
	*					LSsolicitante = "FATURISTA SIMPLES"	&& SCGC201A
	*					LSsolicitante = "FATURISTA RESERVA"	&& SCGC201A
	*					LSsolicitante = "IMPORTACAO"		&& SCGC201A
	*			OBS: ("IMPORTACAO" tem comportamento igual a
	*				"FATURISTA SIMPLES", como a passagem de
	*				parametro  por valor LSsolicitante pode
	*				ser alterado para  "FATURISTA SIMPLES" para
	*				evitar mudancas em subrotinas para tratar
	*				"IMPORTACAO"
	*	    	PrmOrientacao..: Devido a exigencia de prefeituras como a de
	*                Varzea Grande para emitir sevico em formulario proprio
	*                este processo passou a ter tres orientacoes
	*               "PRODUTO/SERVICO" => Fatura todos itens sem filtro
	*               "PRODUTO"         => Fatura so itens ref a produtos
	*               "SERVICO"         => Fatura so itens ref a servicos
	*------------------------------------------------------------*
	*  RETORNO.....:
	*		LNnffim........: Numero da Ultima Nota
	*------------------------------------------------------------*
	* EXEMPLO : CHAMADA DO PROGRAMA SCGC2.prg
	*------------------------------------------------------------*
	=W_DEFPROC("rotinas.spr")
	PRIVATE LSalias
	PRIVATE LNctritens
	PRIVATE LFretorno		
	PRIVATE LNsoma_vlr,;
			LNbs_iss,LNvl_iss,LNvl_issrtd,LNbs_icms,LNvl_icms,LNbs_sbbrt,;
			LNbs_subs,LNvl_subs,LNbs_isent,LNbs_outr,LNbs_isipi,;
			LNbs_isipi,LNbs_ipi,LNvl_ipi
	PRIVATE LNpneus,LNcamaras,LNrodas,LNacessorios,LNmatborrach,;
			LNrecauchuta,LNalinhament,LNbalanceame,LNconserto,LNoutras

	PRIVATE LNpeso
	PRIVATE LNvlr_item

	IF TYPE ("LNecf") = "U"
		private LNecf
		LNecf = 0	&& NO CASO DE IMPORTACAO LNecf nao existe
	ENDIF
	*-----------------------------------------------------------*

	IF LSsolicitante = "IMPORTACAO"
		LSsolicitante = "FATURISTA SIMPLES"	&& SCGC201A		
	ENDIF
	*-----------------------------------------------------------*
	LSalias		= 	ALIAS()
	LFretorno	=	.t.
	*------------------------------------------------------------*
	SELE empresa
	SET ORDER TO TAG empresa
	SEEK LNemp
	IF !FOUND()
   		WAIT WINDOW "Empresa Localizada."+;
		   		STR(LNemp,3)+" - "+STR(LNosi,6)
		IF !EMPTY(LSalias) AND USED(LSalias)
			SELECT &LSalias
		ENDIF
		RETURN(.F.)
	ENDIF
	*------------------------------------------------------------*
	SELE orcament

	*--------*  FORCA DESLOCAMENTO DA PAGINACAO DE INDICE
	
	GO BOTT
	GO TOP
	
	*-------*

	SET ORDER TO TAG orcamento
	SEEK STR(LNemp,3)+STR(LNosi,6)
	IF !FOUND()
   		WAIT WINDOW "Orcamento Nao Localizado."+;
		   		STR(LNemp,3)+" - "+STR(LNosi,6)
		IF !EMPTY(LSalias) AND USED(LSalias)
			SELECT &LSalias
		ENDIF
		RETURN(.F.)
	ENDIF

	IF !REGLOCK()
   		WAIT WINDOW "Orcamento em uso em outro ponto. Tente novamente."+;
		   		STR(LNemp,3)+" - "+STR(LNosi,6)
		IF !EMPTY(LSalias) AND USED(LSalias)
			SELECT &LSalias
		ENDIF
		RETURN(.F.)
	ENDIF

	SELE orc_anex
	*--------*  FORCA DESLOCAMENTO DA PAGINACAO DE INDICE
	
	GO BOTT
	GO TOP
	
	*-------*
	SET ORDER TO TAG orcamento
	SEEK STR(LNemp,3)+STR(LNosi,6)
	IF !FOUND()
   		WAIT WINDOW "Anexo de Orcamento Nao Localizado."+;
		   		STR(LNemp,3)+" - "+STR(LNosi,6)
	ENDIF


	SELE clienc
	*--------*  FORCA DESLOCAMENTO DA PAGINACAO DE INDICE
	
	GO BOTT
	GO TOP
	
	*-------*
	SET ORDER TO TAG emporca
	SEEK STR(LNemp,3)+STR(LNosi,6)
	IF !FOUND()
   		WAIT WINDOW "Dados do Cliente  Nao Localizado  (CLIENC). "+;
		   		STR(LNemp,3)+" - "+STR(LNosi,6)
		IF !EMPTY(LSalias) AND USED(LSalias)
			SELECT &LSalias
		ENDIF
		RETURN(.F.)
	ENDIF

	*---------------------------------------------------------*

	=W_DEFPROC("clientes.spr")
	=CLSetUltAtendimento(Clienc.Cliente,Clienc.Inscricao, LDdtnf)

	*---------------------------------------------------------*

	SELE orcatmp
	*--------*  FORCA DESLOCAMENTO DA PAGINACAO DE INDICE
	
	GO BOTT
	GO TOP
	
	*-------*
	SET ORDER TO TAG orcamento
	SET NEAR ON
	SEEK STR(LNemp,3)+STR(LNosi,6)
	SET NEAR OFF
	IF orcament.empresa <> orcatmp.empresa ;
		OR orcament.orcamento <> orcatmp.orcamento
   		WAIT WINDOW "Itens do Orcamento Nao Localizados."+;
		   		STR(LNemp,3)+" - "+STR(LNosi,6)
		IF !EMPTY(LSalias) AND USED(LSalias)
			SELECT &LSalias
		ENDIF
		RETURN(.F.)
	ENDIF

	SELECT tipooper
	*--------*  FORCA DESLOCAMENTO DA PAGINACAO DE INDICE
	
	GO BOTT
	GO TOP
	
	*-------*
	SET ORDER TO TAG tipo
	SEEK 's'+orcament.tipo
	IF !FOUND()
		SEEK 'S'+orcament.tipo
	ENDIF
	IF !FOUND()
   		WAIT WINDOW "Tipo de Operacao  Nao Localizado."+;
		   		STR(LNemp,3)+" - "+STR(LNosi,6)
		IF !EMPTY(LSalias) AND USED(LSalias)
			SELECT &LSalias
		ENDIF
		RETURN(.f.)
	ENDIF
	*------------------------------------------------------------*

	SELE orcatmp

    *--------------------------------------------------------------*
    *   SUBTRAI 1 EM LNnroNF PARA COMPENSAR A SOMA NO INICIO DO
    * COMANDO (DO WHILE)  A SEGUIR
    *--------------------------------------------------------------*

	m.vlrfrete  = orcament.vlrfrete
	m.vlrseguro = orcament.vlrseguro





	LNnroNF  = LNnroNF 	- 1       &&

	DO WHILE !eof() AND LNosi = orcatmp.orcamento ;
					AND LNemp = orcatmp.empresa

		IF LEFT(orcatmp.situacao,1) $ "YykeZO"
			***  NAO PROCESSAR ITENS CANCELADOS
			SKIP
			LOOP
		ENDIF

		DO CASE
			CASE PrmOrientacao = "PRODUTO/SERVICO"
		        STORE .T. TO LFGerNF   && SINALIZA QUE FOI GERADA
		                               && NOTA SERIE UNICA
			CASE PrmOrientacao = "PRODUTO"
				IF orcatmp.tp_mercad = 7 && SERVICO
					SKIP
					LOOP
				ENDIF
		        STORE .T. TO LFGerNF   && SINALIZA QUE FOI GERADA
		                               && NOTA SERIE UNICA
			CASE PrmOrientacao = "SERVICO"
				IF orcatmp.tp_mercad <> 7 && NAO SERVICO
					SKIP
					LOOP
				ENDIF
		        STORE .T. TO LFGerNFS   && SINALIZA QUE FOI GERADA
		                                && NOTA FISCAL DE SERVICO
		ENDCASE

		LNnroNF  = LNnroNF 	+ 1

		*-----------------<<<<<<<<<<    >>>>>>>>>--------------------*

		
		m.serie 	=	"U"

		m.serie 	=	NFSerie(empresa.empresa,;
		                        empresa.muni_ibge,;
		                        LNnroNF)




		m.referencia = 	orcament.orcamento
		m.cgc_emit	= 	empresa.cgc
		LTmp        =   "empresa.insc_"+empresa.estado
		m.insc_emit	= 	&LTmp
		m.insc_muni =	empresa.insc_munic
		m.uf		=	clienc.estado
		m.favorecido=	clienc.cliente
		***********************************************
		m.inscsubst		= 	empresa.insc_&uf
		m.aliq_iss		= 	empresa.aliq_iss

		IF tipooper.ch_opera = "1" ;
			AND (orcament.tp_parcela = 4 OR orcament.tp_parcela = 5)
			m.natureza		=	"VENDA CARTAO"
		ELSE
			m.natureza		=	tipooper.descricao
		ENDIF

		IF  PrmOrientacao = "SERVICO"
			m.natureza		=	"PRESTACAO DE SERVICO"
		ENDIF
		



		m.cod_cita		=	tipooper.citacao
		IF 	!EMPTY(ALLTRIM(orc_anex.mens1)) ;
			AND !EMPTY(ALLTRIM(orc_anex.mens2))
			m.citacao 	= LEFT(ALLTRIM(orc_anex.mens1)+";";
						      +ALLTRIM(orc_anex.mens2),64)
			m.citacao1 	= SUBS(ALLTRIM(orc_anex.mens1)+";";
							  +ALLTRIM(orc_anex.mens2),65)
		ELSE
			m.citacao 	= 	" "
			m.citacao1 	= 	" "
		ENDIF
		m.citacao3 	= orc_anex.mens3

		*-----> BUSCA NUMERO DA NOTA FISCAL


		**** LNnroNF  = LNnroNF 	+ 1

		m.nota   = LNnroNF 	
		m.cupom  = LNcupom
		m.operacao = "S"		&& NOTA FISCAL DE SAIDA
		m.data = LDdtnf
		m.hora = LShoranf
		m.dtorcament = orcament.data
		m.hrorcament = orcament.hora		
		m.orcamento  = orcament.orcamento
		m.status = 1
		*---------------------------------------------------------*
		=W_DEFPROC("NOTA.SPR")
		IF !NFAbreNota(orcament.empresa,LFabrecupom,(LStp_process),;
					m.nota,m.cupom,m.operacao,;
					m.data,m.hora,m.status,wp_tipoecf,LNecf)
	   		WAIT WINDOW "Comando para Abertura do Reg. Nota nao foi " +;
	   			" Acatado."
			LFretorno = .F.
			EXIT
		ENDIF
		LNcupom = m.cupom	
		*---------------------------------------------------------*
		M.FLAGPROCES	=	1	&& GRAVACAO DA CAPA DA NOTA
		******************************************************
		*	ATENCAO : FIM  DE FASE CRITICA
		*				A- O CUPOM ABERTO
		*				B- JA EXISTE REGISTRO EQUIVALENTE NO SISTEMA
		*					P/ ORIENTAR UM POSSIVEL CANCELAMENTO CASO
		*				    O SISTEMA CAIA APARTIR DESTE PONTO
		******************************************************
		*---------------------------------------------------------*

		IF  LSsolicitante <> "IMPORTACAO" AND !("REC." $ LStp_proces)
			SELECT empresa
			SET ORDER TO tag empresa
			=REGLOCK(.T.)
			DO CASE
				CASE PrmOrientacao = "SERVICO"
					REPLACE empresa.Ult_NFsrvc WITH empresa.Ult_NFsrvc + 1
					REPLACE FLAGIMPSRV 	WITH 1
				CASE "NOTA" = LStp_proces ;
					AND PrmOrientacao = "PRODUTO/SERVICO"
						REPLACE empresa.nota WITH empresa.nota + 1
						REPLACE FLAGIMPNF 	WITH 1
				CASE "NOTA/CUPOM" = LStp_proces
						REPLACE empresa.nota WITH empresa.nota + 1
						REPLACE FLAGIMPNF 	WITH 1
				CASE "NOTA" = LStp_proces AND PrmOrientacao = "PRODUTO"
					REPLACE empresa.nota WITH empresa.nota + 1
					REPLACE FLAGIMPNF 	WITH 1
				CASE "NOTA/NF SERVICO" = LStp_proces ;
				   AND PrmOrientacao = "PRODUTO"
					REPLACE empresa.nota WITH empresa.nota + 1
					REPLACE FLAGIMPNF 	WITH 1
				CASE "NOTA/NF SERVICO" = LStp_proces ;
				   AND PrmOrientacao = "SERVICO"
					REPLACE empresa.Ult_NFsrvc WITH empresa.Ult_NFsrvc + 1
					REPLACE FLAGIMPSRV 	WITH 1
				CASE "NF SERVICO" = LStp_proces
					REPLACE empresa.Ult_NFsrvc WITH empresa.Ult_NFsrvc + 1
					REPLACE FLAGIMPSRV 	WITH 1
				CASE "CUPOM" $ LStp_proces
					REPLACE empresa.ult_cupom  WITH empresa.ult_cupom + 1
					REPLACE FLAGIMPCPM 	WITH 1
			ENDCASE
		ENDIF
		*---------------------------------------------------------*
		* 		  Processo para evitar duplicacoes de itens provocada por
    	* 	falha durante possivel faturamento anterior
		*   Processo adotado para compensar a transacao
		*---------------------------------------------------------*
		=W_DEFPROC("NOTA.SPR")
		=NFDelItensNf(orcament.empresa,(m.nota))
		*---------------------------------------------------------*
		=UNFmarcanf(2) 	&& CAPA GRAVADA E ITENS VERIFICADOS
		=UNFempmarca(2,LStp_proces,PrmOrientacao)
		*---------------------------------------------------------*


		SELE NOTA
		STORE 0 TO LNsoma_vlr,;
			LNbs_iss,LNvl_iss,LNvl_issrtd,LNbs_icms,LNvl_icms,LNbs_sbbrt,;
			LNbs_subs,LNvl_subs,LNbs_isent,LNbs_outr,LNbs_isipi,;
			LNbs_isipi,LNbs_ipi,LNvl_ipi

		STORE 0 TO LNsoma_vlr,;
			LNpneus,LNcamaras,LNrodas,LNacessorios,LNmatborrach,;
			LNrecauchuta,LNalinhament,LNbalanceame,LNconserto,LNoutras
		STORE 0 TO LNpeso
		*---------------------------------------------------------*


		LNctritens = 0
		SELECT  orcatmp
	    DO WHILE !eof() AND LNosi = orcatmp.orcamento ;
    				AND LNemp = orcatmp. empresa



			*---------------------------------------------------*
			*  A PARTIR DE 10/09/2008 SE O NUMERO DE ITENS OCUPAR
			* MAIS DE UM FORMULARIO SERAMANTIDO O MESMO NUMERO DE
			* NF E A TATALIZACAO DAIMPRESSAO OCORRERA NA ULTIMA NF
			*------> REQUISICAO ? JOAO NUNES CONTADOR
			*---------------------------------------------------*
			IF LDdtnf < {28.09.2008}
				IF  LNnroNF < 1000000 OR  LNnroNF > 2000000
					IF  LNctritens >= 11
						EXIT
					ENDIF
				ENDIF
			ENDIF


			***  NAO PROCESSAR ITENS CANCELADOS

			IF LEFT(orcatmp.situacao,1) $ "YykeZO"
				SKIP
				LOOP
			ENDIF
			DO CASE
				CASE PrmOrientacao = "PRODUTO"
					IF orcatmp.tp_mercad = 7 && SERVICO
						SKIP
						LOOP
					ENDIF
				CASE PrmOrientacao = "SERVICO"
					IF orcatmp.tp_mercad <> 7 && NAO SERVICO
						SKIP
						LOOP
					ENDIF
			ENDCASE
			*-----------------------------------------------------*
			wp_msg = "Faturando OSI: "+STR(LNosi,6)+" - Item : "+;
					STR(orcatmp.ordem,2)+" - "+orcatmp.codigo
			WAIT WINDOW wp_msg NOWAIT
			*-----------------------------------------------------*
		    IF ULbaixa_Saldo(LSsolicitante)
		    	SELECT orcatmp
				IF REGLOCK()
					*--------------------------------------------------*
					=W_DEFPROC("NOTA.SPR")
					=NFFat_Item(orcament.empresa,(m.nota),(LDdtnf),;
										(LShoranf))
					*--------------------------------------------------*


			    	SELECT orcatmp
					IF tipooper.ch_opera $ "4/2" && devolucao / transf
				        LNvlr_item = (orcatmp.vlrvenda)
					ELSE
				        LNvlr_item = (orcatmp.vlrvenda - orcatmp.vlripi)
					ENDIF


			        LNsoma_vlr = LNsoma_vlr + LNvlr_item


					=W_DEFPROC("grupo.spr")
					LNpeso      = LNpeso + ;
					     GRGetPeso(orcatmp.codigo) * orcatmp.qtde

					LNbs_iss	= 	LNbs_iss	+	orcatmp.base_iss
					LNvl_iss	= 	LNvl_iss	+	orcatmp.vlr_iss
					LNvl_issrtd =   LNvl_issrtd +   orcatmp.vlr_issrtd
					LNbs_icms	= 	LNbs_icms	+	orcatmp.base_calc
					LNvl_icms	=	LNvl_icms	+	orcatmp.vlr_icms
					LNbs_sbbrt	=	LNbs_sbbrt	+	orcatmp.base_sbbrt					
					LNbs_subs 	=	LNbs_subs 	+	orcatmp.base_subs 					
					LNvl_subs 	=	LNvl_subs 	+	orcatmp.icms_subs 					
					LNbs_isent	=	LNbs_isent	+	orcatmp.base_isent					
					LNbs_outr 	=	LNbs_outr 	+	orcatmp.base_outr 					
					LNbs_isipi	=	LNbs_isipi	+	orcatmp.base_isipi					
					LNbs_ipi  	=	LNbs_ipi  	+	orcatmp.base_ipi  					
					LNvl_ipi  	=	LNvl_ipi  	+	orcatmp.vlripi   					
					*--------------------------------------------------*
					IF tipooper.ch_opera = "1"
						SELE grupo
						SET ORDER TO TAG codigo
						SEEK orcatmp.codigo
						SELE orcatmp

						*-----> APURA VALORES P/ RESUMO ANEXO SO PARA VENDAS
						DO CASE
							CASE LEFT(grupo.classifica,2) = "00"
								LNpneus		= 	LNpneus + LNvlr_item
							CASE LEFT(grupo.classifica,2) = "01"
								LNcamaras	=	LNcamaras + LNvlr_item
							CASE LEFT(grupo.classifica,2) = "02"
								LNrodas   	= 	LNrodas  + LNvlr_item
							CASE LEFT(grupo.classifica,2) = "04"
								LNacessorios= LNacessorios+ LNvlr_item
							CASE LEFT(grupo.classifica,2) = "05"
								LNmatborrach= LNmatborrach+ LNvlr_item
							CASE LEFT(grupo.classifica,5) = "09094"
								LNrecauchuta= LNrecauchuta+ LNvlr_item
							CASE LEFT(grupo.classifica,5) = "09091"
								LNalinhament= LNalinhament+ LNvlr_item
							CASE LEFT(grupo.classifica,5) = "09092"
								LNbalanceame= LNbalanceame+ LNvlr_item
							CASE LEFT(grupo.classifica,5) = "09093"
								LNconserto  = LNconserto + LNvlr_item
							OTHERWISE
								LNoutras	= LNoutras   + LNvlr_item
						ENDCASE
				    	SELECT orcatmp
					ENDIF
				ELSE
			   		WAIT WINDOW ;
			   			"Registro de Item do Orcamento Esta Bloqueado"
					LFretorno = .F.
					EXIT
				ENDIF
			ELSE
		   		WAIT WINDOW  "Foi Negada a Baixa no Estoque."
				LFretorno = .F.
				EXIT
			ENDIF
			SELECT  orcatmp
			SKIP
			LNctritens = LNctritens + 1
		ENDDO
		IF LNctritens = 0
	   		WAIT WINDOW  "Nenhum Item Faturado."
			LFretorno = .F.
			EXIT
		ENDIF
		IF !LFretorno
			EXIT
		ENDIF			

		SELE orcament
		SCATTER MEMVAR FIELDS banco,agencia


		m.nome		=	clienc.nome
		m.endereco	=	clienc.endereco
		m.bairro	=	clienc.bairro
		m.cidade	=	clienc.cidade
		m.MUNI_IBGE	=	clienc.MUNI_IBGE
		m.uf		=	clienc.estado
		m.cep		=	clienc.cep
		m.fone		=	clienc.fone
		m.regiao 	= 	clienc.regiao
		m.revendedor=	clienc.revendedor
		m.natu_cli	=	clienc.natu_cli
		m.tp_pessoa	=	clienc.tp_pessoa
		m.tp_inscr	=	clienc.tp_inscr
		m.inscricao	=	clienc.inscricao
		m.e_mail    =	clienc.e_mail
		m.e_mail_nfe=	clienc.e_mail_nfe
		m.im_tomador=   clienc.im_tomador


		SELE tipooper
		SCATTER MEMVAR FIELDS ch_opera,ch_produ, ;
						ch_motiv,ch_desti,ch_contr,ch_condi
		SELE nota
		m.operacao = "S"		&& NOTA FISCAL DE SAIDA
		m.data = LDdtnf
		m.hora = LShoranf
		m.orcamento = orcament.orcamento
		m.status = 1
		*-------------------------------------------------------------*
		m.serv_1     = orcament.operador

		STORE 0 TO   serv_2,serv_3,serv_4,serv_5,serv_6,;
				 serv_7,serv_8,serv_9,serv_10,serv_11,;
				 serv_12
		STORE "" TO  mens1,mens2

		SELE orc_anex
		SET ORDER TO TAG orcamento
		SEEK STR(orcament.EMPRESA,3)+STR(orcament.ORCAMENTO,6)
		IF FOUND()
			SCATTER MEMVAR FIELDS mens1,mens2,;
								  serv_2,serv_3,serv_4,serv_5,serv_6,;
								  serv_7,serv_8,serv_9,serv_10,serv_11,;
								  serv_12
		ENDIF
		*-------------------------------------------------------------*
		SELE nota
		m.negociacao = orcament.negociacao

		*-----------------------------------------------*


		IF orcament.tp_parcela = 1
			m.tp_pgto   =   1   && A Vista
		ELSE
			m.tp_pgto   =   3 	&& Parcelado
		ENDIF



		m.pes_brt   =   LNpeso
		m.pes_liq   =   LNpeso
		
	 	m.base_iss	=	LNbs_iss
		m.aliq_iss	=	empresa.aliq_iss
		m.vlr_iss	=	ROUND(m.base_iss * ROUND(m.aliq_iss  / 100,4),2)


        m.vlr_issrtd = 	LNvl_issrtd

		m.totservico=	LNbs_iss

		m.base_icms	=	LNbs_icms
		m.aliq_icms	= 	ORCAMENT.aliq_icms
		m.vlr_icms	=	m.base_icms * m.aliq_icms / 100

		m.base_sbbrt= 	LNbs_sbbrt
		m.base_subs	=	LNbs_subs
		m.icms_subs	=	LNvl_subs

		m.base_isipi=	LNbs_isipi
		m.base_ipi	=	LNbs_ipi
		m.vlr_ipi	=	LNvl_ipi


		m.base_isent=	LNbs_isent
		m.base_outr	=	LNbs_outr

		m.totservico =	LNbs_iss
		m.totproduto =  LNsoma_vlr - m.totservico
		m.total_nota =	LNsoma_vlr + m.icms_subs + ;
						m.vlrfrete + m.vlrseguro + ;
						m.vlr_ipi
		m.status = 1
		M.FLAGPROCES	=	3	&& NOTA E ITENS FATURADOS NORMALMENTE
							&& FALTANDO A IMPRESSAO

		SELE nota
		=edithand('REGRAVA')
		*************  RODANDO A NUMERACAO E MARCANDO O FLAG  **************
		=UNFempmarca(3,LStp_proces,PrmOrientacao)
		***************************************************************	**
		SELE nf_anexo
		m.pneus			= LNpneus
		m.camaras		= LNcamaras
		m.rodas			= LNrodas
		m.acessorios    = LNacessorios
		m.matborrach	= LNmatborrach
		m.recauchuta	= LNrecauchuta
		m.alinhament	= LNalinhament
		m.balanceame	= LNbalanceame
		m.conserto		= LNconserto
	    =edithand('SAVE')
		SELE orcatmp
		m.vlrfrete = 0    && valor apenas na primeira nota
		m.vlrseguro =0    && valor apenas na primeira nota

	    IF eof() OR orcament.orcamento <> orcatmp.orcamento ;
    		OR LNemp <> orcatmp. empresa
			EXIT
		ENDIF
	ENDDO
	*-----------------------------------------------------*
	wp_msg = "Fechado Faturamento Itens OSI: "+STR(LNosi,6)
	WAIT WINDOW wp_msg NOWAIT
	*-----------------------------------------------------*
	m.LNnffim      = LNnroNF 	
	*--------------------------------------------------------------*
	IF !EMPTY(LSalias) AND USED(LSalias)
		SELECT &LSalias
	ENDIF
RETURN(LFretorno)


*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _2XH0IRIH2           NFAbreNota VALID                   º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         NOTA_B,     Record Number:   11    º
*       º Variable:            NFAbreNota                         º
*       º Called By:           VALID Clause                       º
*       º Object Type:         Push Button                        º
*       º Snippet Number:      10                                 º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*
FUNCTION _2xh0irih2     &&  NFAbreNota VALID
#REGION 1
return
*---------------------------------------------------------------*

FUNCTION NFAbreNota
PARAMETERS LNemp,LFabrecupom,LStp_process,m.nota,m.cupom,m.operacao,;
			m.data,m.hora,m.status,wp_tipoecf,LNecf

	*------------------------------------------------------------*
	* CLASSIFICACAO:  [*****]
	*------------------------------------------------------------*
	* OBJETIVO....: Abrir o Registro de Nota no Arquivo com os
	*		dados Basicos
	*	
	*------------------------------------------------------------*
	* COMENTARIO..:
	*				
	*------------------------------------------------------------*
	* OBS........ :
	*------------------------------------------------------------*
	*  TABELAS....:
	*------------------------------------------------------------*
	*  PARAMETROS..:
	*		LNemp..........: Empresa que Esta Faturando
	*		LFabrecupom....: Indica Necessidade de Abrir Cupom ECF
	*		LStp_process...: Processo definido em NFDefProcess
	*		m.nota,m.cupom,m.operacao,m.data,m.hora,m.status
	*						,wp_tipoecf,LNecf  DADOS PARA GRAVACAO
	*
	*------------------------------------------------------------*
	*  RETORNO.....:
	*------------------------------------------------------------*
	* EXEMPLO : CHAMADA DO PROGRAMA SCGC2.prg
	*------------------------------------------------------------*
	=W_DEFPROC("rotinas.spr")
	PRIVATE LSalias
	PRIVATE LSstatus
	PRIVATE LSnronf,LSnrocp,LNnrocpAnt
	*-----------------------------------------------------------*
	LSalias	= ALIAS()
	*------------------------------------------------------------*
	SELECT empresa
	SET ORDER TO tag empresa
	SEEK LNemp
	IF !FOUND()
		IF !EMPTY(LSalias) AND USED(LSalias)
			SELECT &LSalias
		ENDIF
		RETURN(.f.)
	ENDIF
	*------------------------------------------------------------*
	LNnrocpAnt = 0
	IF LFabrecupom
		LFabrecupom = .F. 		&& NAO TENTAR ABRIR DE NOVO
		******************************************************
		*	ATENCAO : INICIO DE FASE CRITICA
		*				A- O CUPOM SERA ABERTO
		*				B- NAO EXISTE REGISTRO EQUIVALENTE NO SISTEMA
		*					P/ ORIENTAR UM POSSIVEL CANCELAMENTO CASO
		*				    O SISTEMA CAIA ANTES DA GRAVACAO DA CAPA
		*					NO REGISTRO DE NOTAS
		******************************************************

		IF "CUPOM" $ LStp_proces
			IF !("REC." $ LStp_proces)
				=W_DEFPROC("ECF.SPR")
				LNnrocpAnt = INT(ECFnrocupom())
			ENDIF
		ELSE
				LNnrocpAnt = 0
		ENDIF


		=W_DEFPROC("ECF.SPR")
		LSstatus = ECFabrecupom()

		IF SUBS(LSstatus,7,1) = "E"
			LSnronf    = empresa.ult_cupom 						 				
			IF LSnronf < 1000000
				LSnronf = LSnronf + 1000000
			ENDIF
			=W_DEFPROC("ECF.SPR")
			LSnrocp = STR(INT(ECFnrocupom()),7)
			LSnronf = STR(LSnronf,7)
			DO OBJ_MENS.SPR WITH "   ATENCAO !!! " +CHR(13)+CHR(13)+;
				" Nao Foi Possivel Abrir CUPOM FISCAL. Faturamento Nao "+;
				"Iniciado. "+CHR(13)+;
				" CUPOM ANTERIOR [ REGISTRO nro: "+LSnronf+;
				" CUPOM nro : "+LSnrocp +"]  CONTINUA ABERTO."+;
				" Cancele Este Registro."
			IF !EMPTY(LSalias) AND USED(LSalias)
				SELECT &LSalias
			ENDIF
			RETURN(.F.)
		ENDIF			

		*------ aguarda atualizacao do nro cupom pela ecf ------*

		IF "CUPOM" $ LStp_proces
			IF !("REC." $ LStp_proces)
			    LFcotinua = .T.
				DO WHILE LFcotinua

		 		    =W_DEFPROC("ECF.SPR")
					LSmarca = ECFGetPropVT("TIPOECF")
					IF  LSmarca = "TESTE"
						EXIT
					ENDIF

		 		    =W_DEFPROC("ECF.SPR")
					LSstatus=ECFsituacao()
					IF ("CUPOM ABERTO" $ UPPER(LSstatus))
						=W_DEFPROC("ECF.SPR")
						m.cupom = INT(ECFnrocupom())

						
						IF  m.cupom <> LNnrocpAnt  AND m.cupom <> 0
							EXIT
						ENDIF
					ENDIF

					WAIT WINDOW ;
					"Aguardando Atualizacao do Nro do Cupom na ECF" nowait
					=INKEY(1)
					IF LASTKEY() = 27
					   LFcotinua = .f.
					ENDIF
				ENDDO
			    IF LFcotinua = .f.
					DO OBJ_MENS.SPR WITH "  ATENCAO !!! " +CHR(13)+CHR(13)+;
						" Nao Foi Possivel Obter Numero do CUPOM FISCAL."
					IF !EMPTY(LSalias) AND USED(LSalias)
						SELECT &LSalias
					ENDIF
					RETURN(.F.)
				ENDIF
			ENDIF
		ELSE
			m.cupom = 0
		ENDIF
	ENDIF
	SELE nota
	m.empresa = LNemp
	=edithand('SAVE')
	*--------------------------------------------------------------*
	IF !EMPTY(LSalias) AND USED(LSalias)
	    SELECT &LSalias
	ENDIF
RETURN(.t.)



*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _2XH0IRIHC           NFFat_Item VALID                   º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         NOTA_B,     Record Number:   12    º
*       º Variable:            NFFat_Item                         º
*       º Called By:           VALID Clause                       º
*       º Object Type:         Push Button                        º
*       º Snippet Number:      11                                 º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*

FUNCTION _2xh0irihc     &&  NFFat_Item VALID
#REGION 1
return
*---------------------------------------------------------------*

FUNCTION NFFat_Item
PARAMETERS LNemp,LNnota,LDdtfat,LShorafat
	*------------------------------------------------------------*
	* CLASSIFICACAO:  [*****]
	*------------------------------------------------------------*
	* OBJETIVO....: Realiza todo circuito para Fturar um item
	*				CANCELAR RESERVA/REGISTRAR MOV/ATULIZAR SALDO
	*------------------------------------------------------------*
	* COMENTARIO..:
	*				
	*------------------------------------------------------------*
	* OBS........ :
	*------------------------------------------------------------*
	*  TABELAS....:
	*------------------------------------------------------------*
	*  PARAMETROS..:
	*		LNemp..........: Empresa que Esta Faturando
	*		LNnota.........: Nro da Nota para eliminar itens
	*		LDdtfat........: Data de Faturamento
	*		LShorafat......: Hora do Faturamento
	*------------------------------------------------------------*
	*  RETORNO.....:
	*------------------------------------------------------------*
	* EXEMPLO : CHAMADA DO PROGRAMA SCGC2.prg
	*------------------------------------------------------------*
	=W_DEFPROC("rotinas.spr")
	PRIVATE LSalias
	PRIVATE  LFfoundres   && f=> NAO ENCONTROU REGISTRO DE RESERVA
   	PRIVATE LNfatreg
	*------------------------------------------------------------*
	LSalias	= ALIAS()
	*------------------------------------------------------------*
	SELECT orcatmp

	SELE grupo
	SET ORDER TO TAG codigo
	SEEK orcatmp.codigo
	

	*-----------------  CANCELAR AS RESERVAS --------------------*
    LFfoundres = .f.   && f=> NAO ENCONTROU REGISTRO DE RESERVA
	*------------------------------------------------------------*

   	SELECT itemmov
   	SET ORDER TO TAG itensosi
   	SEEK STR(LNemp,3)+"R"+STR(orcatmp.orcamento,7)+;
					   			orcatmp.codigo+STR(orcatmp.ordem,3)

   	IF FOUND()
	    LFfoundres = .T.   && f=> ENCONTROU REGISTRO DE RESERVA
	    SET ORDER TO TAG movimento
		=REGLOCK(.T.)
		REPLACE operacao WITH "****"   && faz o reg ser ignorado no saldo
									   && anulando seu efeito
		***********************************************************
		SELE itemmov
		LNregmov = RECNO()

		SELE itemmov
	   	=W_DEFPROC("moviment.spr")
		=MVatu_cmd(itemmov.empresa,;
					itemmov.codigo,;
					itemmov.classifica,;
					itemmov.data,;
					itemmov.hora,;
					itemmov.tipo,;
					itemmov.nota,;
					itemmov.ordem)
	    					&& ROTINA DE VERIFICACAO E ATUALIZACAO DO SALDO
							&& VAI DEVOLVER m.sld_atu e

		SELE itemmov
		GO LNregmov
		***********************************************************
	    SET ORDER TO TAG movimento
		=REGLOCK(.T.)
   	ENDIF
	******************** FIM CNCELAR AS RESERVAS ************************

   	SELECT orcatmp
	*-------------------------------------------------------------*
	SELE orc_anex
	SET ORDER TO TAG orcamento
	SEEK STR(orcatmp.EMPRESA,3)+STR(orcatmp.ORCAMENTO,6)
   	m.negociacao = orc_anex.negociacao  && RECUPERA O VALOR DO CAMPO
   									    && ALTERADO PELO SCATTER
	*-------------------------------------------------------------*
   	DO CASE
		CASE FOUND("GRUPO") AND grupo.TP_CONTROL = 9
	    	  m.operacao = 'SINF'   && MERA INFORMACAO SEM EFEITO ESTOQUE
		CASE tipooper.movestq = "N"
	    	  m.operacao = 'SINF'   && MERA INFORMACAO SEM EFEITO ESTOQUE
		CASE orcament.natu_oper = 1
		   IF LEFT(orcatmp.situacao,1) $ 'I'  && BAIXA REZERVA E SALDO
	    	  m.operacao = 'SVPS'   && SAIDA/VENDA/PROCESSADA/COM RESERVA
		   ELSE
    		  m.operacao = 'SVPN'   && SAIDA/VENDA/PROCESSADA/SEM RESERVA
		   ENDIF
		CASE orcament.natu_oper = 2
		   IF LEFT(orcatmp.situacao,1) $ 'I'  && BAIXA REZERVA E SALDO
		      m.operacao = 'STPS'   && SAIDA/COMERCIAL/PROC/COM RESERVA
		   ELSE
		      m.operacao = 'STPN'   && SAIDA/COMERCIAL/PROCE/SEM RESERVA
		   ENDIF
		CASE orcament.natu_oper = 3
		   IF LEFT(orcatmp.situacao,1) $ 'I'  && BAIXA REZERVA E SALDO
		      m.operacao = 'SRPS'   && SAIDA/REMESSA/PROCESSADA/COM RESERVA
		   ELSE                                && BAIXA SALDO SEM REZERVA
		      m.operacao = 'SRPN'   && SAIDA/REMESSA/PROCESSADA/SEM RESERVA
		   ENDIF
 		CASE orcament.natu_oper = 4
		   IF LEFT(orcatmp.situacao,1) $ 'I'  && BAIXA REZERVA E SALDO
		      m.operacao = 'SDPS'   && SAIDA/COMERCIAL/PROC/COM RESERVA
		   ELSE
		      m.operacao = 'SDPN'   && SAIDA/COMERCIAL/PROCE/COM RESERVA
		   ENDIF
 		CASE orcament.natu_oper = 7
	       m.operacao = 'SOPS'   && SAIDA/COMERCIAL/PROC/COM RESERVA

   	ENDCASE
	*---------------------------------------------------------------*
	* 	LSprograma  uma variavel publica recebida como parametro em
	* SVD2 e que identifica a forma de operacao do sistema de
	* faturamento
	*	 	LSprograma = "VENDA"
	*		LSprograma = "BALCAO"
	*		LSprograma = "BALCAO-2"
	*---------------------------------------------------------------*
	*		LSsolicitante..: Identifica os Pontos em que esta
	*				 rotina pode ser chamada
	*			   		LSsolicitante = "VENDEDOR"
	*					LSsolicitante = "CAIXA"
	*					LSsolicitante = "FATURISTA SIMPLES"	&& SCGC201A
	*					LSsolicitante = "FATURISTA RESERVA"	&& SCGC201A
	*					LSsolicitante = "IMPORTACAO"		&& SCGC008
	IF  LSsolicitante $  "VENDEDOR/CAIXA"
		m.situacao 	= "O"+RIGHT(orcatmp.situacao,1)
   	ELSE
		m.situacao 	= "OC" && FAT. PELO FAT.RISTA SEM OSI
   	ENDIF
   	m.nota 		= LNnota
   	m.dtfat 	= LDdtfat
   	SELECT orcatmp
	*------------------------------------------------------------*
	SET FIELDS TO dtregis, hregis, usrregis,deletado
    SET FIELDS TO situacao
	=edithand('REGRAVA')
	CLEAR FIELDS
	SET FIELDS OFF
	*------------------------------------------------------------*
   	SELECT itemmov
   	m.sld_estq = 0
   	m.vlr_estq = 0

	m.empresa 	=	orcatmp.empresa

*	m.serie 	=	"UN"

   	m.dtfat 	= 	LDdtfat
  	m.data     	= 	LDdtfat
   	m.hora     	= 	LShorafat
	m.orcamento	=	orcatmp.orcamento
	m.operador	=	orcament.operador
	m.motivo	=	orcament.motivo

	SELE TIPOOPER
	SCATTER MEMVAR FIELDS;
		 CH_OPERA,CH_PRODU,CH_MOTIV,CH_DESTI,CH_CONTR,CH_CONDI,TIPO

	m.FAVORECIDO  =    clienc.cliente
	m.NATU_CLI    =    clienc.NATU_CLI
	m.CODFORN     =    0
	m.PRAZOMEDIO  =    orcament.PRAZOMEDIO
	m.TP_parcela  =    orcament.TP_parcela
	m.TAXA        =    orcament.TAXA
	m.DESCONTO    =    orcatmp.DESCONTO
	m.DESC_ALT    =    orcatmp.DESC_ALT
	m.USR_DALT    =    orcatmp.USR_DALT
	m.NEGOCIACAO  =    orcament.NEGOCIACAO

	IF FOUND("GRUPO") AND grupo.TP_CONTROL = 9
		m.MOVESTQ     =    "N"
	ELSE
		m.MOVESTQ     =    tipooper.MOVESTQ
	ENDIF
	m.MOVVALOR    =    tipooper.MOVVALOR
	m.MOVCUSTO    =    tipooper.MOVCUSTO
	m.INFO_VLR    =    tipooper.INFO_VLR
	m.INFO_ICMS   =    tipooper.INFO_ICMS
	m.INFO_BASE   =    tipooper.INFO_BASE


	m.ORDEM       =    orcatmp.ORDEM
	m.CODIGO      =    orcatmp.CODIGO
	m.CLASSIFICA  =    grupo.CLASSIFICA
	m.UNIDADE     =    orcatmp.UNIDADE
	m.DESCRICAO   =    orcatmp.DESCRICAO
	m.DESCRCOMPL  =    orcatmp.DESCRCOMPL
	m.INFO_COMPL  =    orcatmp.INFO_COMPL

	m.TP_MERCAD   =    orcatmp.TP_MERCAD

	=W_DEFPROC("GRUPO.SPR")
	m.peso = GRGetPeso(orcatmp.codigo)

*************************************
*  m.PESO        =    orcatmp.PESO  *
*************************************

	m.IVA         =    orcatmp.IVA
	m.CLAS_CMS    =    orcatmp.CLAS_CMS
	m.CFO         =    orcatmp.CFO
	m.ORIGEM      =    orcatmp.ORIGEM
	m.CST         =    orcatmp.CST
	m.BASE_ISS    =    orcatmp.BASE_ISS
	m.ALIQ_ISS    =    orcatmp.ALIQ_ISS
	m.VLR_ISS     =    orcatmp.VLR_ISS
	m.VLR_ISSRTD  =    orcatmp.VLR_ISSRTD
	m.BSBR_ICMS   =    orcatmp.BSBR_ICMS
	m.ALIQ_RDU    =    orcatmp.ALIQ_RDU
	m.BASE_CALC   =    orcatmp.BASE_CALC
	m.ALIQ_ICMS   =    orcatmp.ALIQ_ICMS
	m.VLR_ICMS    =    orcatmp.VLR_ICMS
	m.BASE_SBBRT  =    orcatmp.BASE_SBBRT
	m.BASE_SUBS   =    orcatmp.BASE_SUBS
	m.ICMS_SUBS   =    orcatmp.ICMS_SUBS
	m.BASE_ISENT  =    orcatmp.BASE_ISENT
	m.BASE_OUTR   =    orcatmp.BASE_OUTR
	m.BASE_ISIPI  =    orcatmp.BASE_ISIPI
	m.BASE_IPI    =    orcatmp.BASE_IPI
	m.ALIQ_IPI    =    orcatmp.ALIQ_IPI
	m.VLRIPI      =    orcatmp.VLRIPI
	m.PRECO       =    orcatmp.PRECO
	m.PRECOFINAL  =    orcatmp.PRECOFINAL
	m.QTDE        =    orcatmp.QTDE


	IF tipooper.ch_opera $ "4/2" && devolucao / transf
        LNvlr_item = (orcatmp.vlrvenda)
	ELSE
        LNvlr_item = (orcatmp.vlrvenda - orcatmp.vlripi)
	ENDIF


	m.VLRVENDA    =    LNvlr_item


	m.DESC_ADICI  =	   orcatmp.DESC_ADICI

	m.SLD_ESTQ    =    0
	m.VLR_ESTQ    =    0
	m.SLD_RESE    =    0

	
   	SELECT itemmov
	IF !(LFfoundres)
	   	=edithand('SAVE')
	ELSE
        =REGLOCK(.T.)
	   	=edithand('REGRAVA')
	ENDIF
	SET ORDER TO TAG movimento

   	=W_DEFPROC("moviment.spr")
	=MVatu_cmd(itemmov.empresa,;
				itemmov.codigo,;
				itemmov.classifica,;
				itemmov.data,;
				itemmov.hora,;
				itemmov.tipo,;
				itemmov.nota,;
				itemmov.ordem)
	    					&& ROTINA DE VERIFICACAO E ATUALIZACAO DO SALDO
							&& VAI DEVOLVER m.sld_atu e

	*--------------------------------------------------------------*
	IF !EMPTY(LSalias) AND USED(LSalias)
		SELECT &LSalias
	ENDIF
RETURN(.t.)



*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _2XH0IRIHQ           antNF_02ImpFatura VALID            º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         NOTA_B,     Record Number:   13    º
*       º Variable:            antNF_02ImpFatura                  º
*       º Called By:           VALID Clause                       º
*       º Object Type:         Push Button                        º
*       º Snippet Number:      12                                 º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*

FUNCTION _2xh0irihq     &&  antNF_02ImpFatura VALID
#REGION 1
return
*---------------------------------------------------------------*

FUNCTION antNF_02ImpFatura
PARAMETERS LNemp,LNorcament,LStp_process,;
			wp_TipoEcf,LNecf,;
			LNCtrlCupomIni, LNCtrlCupomFim,;
			LNnfinicio    , LNnffim,;
			LNnfsrvIni    , LNnfsrvFim,;
			LNnfCopInicio , LNnfCopFim,;
			LNSrvCopIni , LNSrvCopFim
			

	*---------------------------------------------------------*



	*------------------------------------------------------------*
	* CLASSIFICACAO:  [*****]
	*------------------------------------------------------------*
	* OBJETIVO....: 	Controlar impressao NOTA/CUPOM
	*------------------------------------------------------------*
	* COMENTARIO..:
	*				
	*------------------------------------------------------------*
	* OBS........ :
	*------------------------------------------------------------*
	*  TABELAS....:
	*------------------------------------------------------------*
	*  PARAMETROS..:
	*		LNemp..........: Empresa que Esta Faturando
	*		LNorcament.....: Nro da OSI para Faturar
	*		LNNfInicio.....: Numero  Inicial de Nota para Impressao
	*		LNNfFim........: Numero  Final de Nota para Impressao
	*		LStp_process...: Processo definido em NF_02DefProcess
	*		wp_TipoEcf.....: Parametro Repassado para ECF
	*		LNecf..........: Parametro Repassado para ECF
	*------------------------------------------------------------*
	*  RETORNO.....:
	*------------------------------------------------------------*
	* EXEMPLO : CHAMADA DO PROGRAMA SCGC2.prg
	*------------------------------------------------------------*
	=W_DEFPROC("rotinas.spr")
	PRIVATE LSalias,LFretorno
	PRIVATE LNvalor
	PRIVATE LScupom	
	PRIVATE LFcpm
	PRIVATE LSstatus
	*-----------------------------------------------------------*
	LSalias		= 	ALIAS()
	LFretorno	=	.t.
	LSstatus    = ""
	*------------------------------------------------------------*
	*------------------------------------------------------------*

	IF "REC." $ LStp_proces
		LsOrientacao = "PRODUTO/SERVICO"
		=UNFempmarca(4,LStp_proces,LSOrientacao)
		LsOrientacao = "SERVICO"
		=UNFempmarca(4,LStp_proces,LSOrientacao)
		RETURN(.T.)
	ENDIF
	*------------------------------------------------------------*
	*------------------------------------------------------------*
	*------------------------------------------------------------*
	
	
	SELE empresa
	SET ORDER TO TAG empresa
	SEEK LNemp
	IF !FOUND()
		IF !EMPTY(LSalias) AND USED(LSalias)
			SELECT &LSalias
		ENDIF
		RETURN(.F.)
	ENDIF
	*------------------------------------------------------------*
	SELE clienc
	SET ORDER TO TAG emporca
	SEEK STR(LNemp,3)+STR(LNorcament,6)
	IF !FOUND()
		IF !EMPTY(LSalias) AND USED(LSalias)
			SELECT &LSalias
		ENDIF
		RETURN(.F.)
	ENDIF

	SELE orcament
	SET ORDER TO TAG geral
	SEEK STR(LNemp,3)+STR(LNorcament,6)
	IF !FOUND()
		IF !EMPTY(LSalias) AND USED(LSalias)
			SELECT &LSalias
		ENDIF
		RETURN(.F.)
	ENDIF

	SELE orc_anex
	SET ORDER TO TAG orcamento
	SEEK STR(LNemp,3)+STR(LNorcament,6)
	IF !FOUND()
		IF !EMPTY(LSalias) AND USED(LSalias)
			SELECT &LSalias
		ENDIF
		RETURN(.F.)
	ENDIF


	*--------------------------------------------------------------*
	*****************************************************************
	* 				Inicio ---- Impressao  ----
	*****************************************************************
	IF !(EMPTY(ALLTRIM(wp_impfat)))
		LNmtmp =UPnometmp("tmp",2)
		DELETE FILE &LNmtmp
		RUN &wp_impfat > &LNmtmp
	ELSE
		SET PRINTER TO &wp_prtfat
	ENDIF
	*****************************************************************


	SELE empresa					&& altera parametros em empresa
	=REGLOCK(.T.)

	IF NOT USED("TAB002")
		=NetArq("TAB002") && REABR
	ENDIF
	SELE TAB002
	SET ORDER TO TAG codigo

	SELE usuario
	SET ORDER TO TAG usuario
	SELE transprt
	SET ORDER TO TAG CGC

	SET POINT TO ","
	SET SEPARATOR  TO "."
	m.sOldError=ON('error')
	ON ERROR *
	*--------------------------------------------------
	LNvalor = orcament.valor  && REPASSADO PARA FECHAMENTO DO CUPOM
	*--------------------------------------------------
	*   O cupom  processado em primeiro lugar por poder agregar
	* um numero idefinido de itens
	*-----------------------------------------------------
	*--------------------------------------------------
	LNvalor = orcament.valor  && REPASSADO PARA FECHAMENTO DO CUPOM
	*--------------------------------------------------

	IF  "CUPOM" $ LStp_proces
		LsOrientacao = "PRODUTO/SERVICO"
		SELE nota
		SET ORDER TO TAG NOTA
		SEEK STR(LNemp,3)+STR(LNCtrlCupomIni,7)

		SELE itemmov
		SET ORDER TO TAG itensnota
		SET NEAR ON
		SEEK STR(nota.empresa,3)+nota.OPERACAO+STR(nota.NOTA,7)
		SET NEAR OFF			
		*------------------------------------------------------------*
		*  INICIA GERACAO DE ARQUIVO TEMPORARIO
		*------------------------------------------------------------*
		LSarqtmp 	= "" 			&& EX: C:\TMP\TMP0001
		LSaliastmp 	= "TMP" 		&&     TMP001
		LSaliastmp = UPopentmp(wp_dirtmp,LSarqtmp,LSaliastmp,1)
		IF EMPTY(LSaliastmp)
			WAIT WINDOWS " Nao Foi Gerado Arq TMP. <ENTER> Continua"
			LOOP
	 	ENDIF		

	   	=up_fecha("ITNFSTMP")
		WAIT WINDOW "AGUARDE. Gerando Arq. Temporario." NOWAIT
		SELE itemmov
		COPY TO &LSarqtmp  FOR nota.tipo = itemmov.tipo ;
				WHILE nota.empresa = itemmov.empresa ;
					  AND itemmov.nota	<= LNCtrlCupomFim


		SELE 0
		USE  &LSarqtmp  ALIAS ITNFSTMP EXCL
		INDEX ON nota   TAG nota ADDITIVE
		go top
		*----------------------------------------------------------*
		SELE nota

		SET RELATION TO  operador INTO usuario
		***************************************************

		=W_DEFPROC("ECF.SPR")
		LSstatus=ECFctrlimpcupom((LNCtrlCupomIni),;
		       (LNCtrlCupomFim),(LNvalor), nota.total_nota)

		*-----------------------------------------------------------*
		*   Se nao houve erro "E" e o processo emite so "CUPOM"
		* faz a marca (4) fechando o faturamento
		*-----------------------------------------------------------*


		IF SUBS(LSstatus,7,1) = "E"
		   	=up_fecha("ITNFSTMP")
		  	SELECT &LSalias
			*--------------------------------------------------*
			DO CASE
				CASE "NCN - EXECUTADO" $ UPPER(LSstatus)
					IF !NFCancNCN(LNemp,LNCtrlCupomIni)
						wp_msg = "Cupom "+STR(LNCtrlCupomIni,7)+;
						 " nao foi cacelado. Comande Cancelamento < ENTER >"
						WAIT WINDOWS wp_msg
					   	RETURN(.f.)
					ELSE
						=UNFempmarca(4,LStp_proces,LSOrientacao)
					   	RETURN(.f.)
					ENDIF
				OTHERWISE
					IF !NFCancCupom(LNemp,LNCtrlCupomIni)
						wp_msg = "Cupom "+STR(LNCtrlCupomIni,7)+;
						 " nao foi cacelado. Comande Cancelamento < ENTER >"
						WAIT WINDOWS wp_msg
					   	RETURN(.f.)
					ELSE
						=UNFempmarca(4,LStp_proces,LSOrientacao)
					   	RETURN(.f.)
					ENDIF
					*--------------------------------------------------*
			ENDCASE
		  	SELECT &LSalias
		   	RETURN(.F.)
		ENDIF

		=UNFempmarca(4,LStp_proces,LSOrientacao)
	   	=up_fecha("ITNFSTMP")
	ENDIF


	IF  "NOTA" $ LStp_proces AND !("COPIA" $ LStp_proces)
		LsOrientacao = "PRODUTO/SERVICO"
		IF  "NF SERVICO" $ LStp_proces
			LsOrientacao = "PRODUTO"
		ENDIF

		DO WHILE LNnfinicio  <= LNnffim
			SELE nota
			SET ORDER TO TAG NOTA
			SEEK STR(LNemp,3)+STR(LNnfinicio,7)

			SELECT tipooper
			SET ORDER TO TAG tipo
			SEEK 'S'+nota.tipo
			IF !FOUND()
				SEEK 's'+orcament.tipo
			ENDIF

			SELE itemmov
			SET ORDER TO TAG itensnota
			SET NEAR ON
			SEEK STR(nota.empresa,3)+nota.OPERACAO+STR(nota.NOTA,7)
			SET NEAR OFF			
			*------------------------------------------------------------*
			*  INICIA GERACAO DE ARQUIVO TEMPORARIO
			*------------------------------------------------------------*
			LSarqtmp 	= "" 			&& EX: C:\TMP\TMP0001
			LSaliastmp 	= "TMP" 		&&     TMP001
			LSaliastmp = UPopentmp(wp_dirtmp,LSarqtmp,LSaliastmp,1)
			IF EMPTY(LSaliastmp)
				WAIT WINDOWS " Nao Foi Gerado Arq TMP. <ENTER> Continua"
				LOOP
		 	ENDIF		

		   	=up_fecha("ITNFSTMP")
			WAIT WINDOW "AGUARDE. Gerando Arq. Temporario." NOWAIT
			SELE itemmov
			COPY TO &LSarqtmp  FOR nota.tipo = itemmov.tipo ;
					WHILE nota.empresa = itemmov.empresa ;
						  AND nota.nota	= itemmov.nota
			SELE 0
			USE &LSarqtmp   ALIAS ITNFSTMP EXCL
			INDEX ON nota   TAG nota ADDITIVE

			LNimpressao = RECCOUNT()
			go top

			*----------------------------------------------------------*
			IF NOT USED("BANCO")
				=NetArq("BANCO") && REABR
			ENDIF

			SELE banco
			SET ORDER TO TAG banco

			SELE nota
			SET RELATION TO NOTA INTO ITNFSTMP
			SET RELATION TO  operador INTO usuario 		 ADDITIVE
			SET RELATION TO  banco INTO banco  			 ADDITIVE

			SET SKIP TO ITNFSTMP
			DO CASE
				CASE  (nota.empresa = 5 ;
					OR nota.empresa = 1 OR nota.empresa = 9;
			        OR nota.empresa = 7 OR nota.empresa = 10;
			        OR nota.empresa = 11);
			        and nota.data >= {26.09.2002}

				=W_DEFPROC("duplicat.spr")
				IF CRQtdeParcelas(orcament.prazo) > 5
					REPORT FORM relnfs3C ;
						WHILE nota.nota = LNnfinicio AND;
	  					nota.empresa = LNemp AND UNFmarcanf(4) ;
	 						NOCONSOLE TO PRINTER
				ELSE
					REPORT FORM relnfs3 ;
						WHILE nota.nota = LNnfinicio AND;
	  					nota.empresa = LNemp AND UNFmarcanf(4) ;
	 						NOCONSOLE TO PRINTER
	 			ENDIF
				CASE  (nota.empresa = 14)

				=W_DEFPROC("duplicat.spr")
				IF CRQtdeParcelas(orcament.prazo) > 5
					REPORT FORM relnfs5C ;
						WHILE nota.nota = LNnfinicio AND;
	  					nota.empresa = LNemp AND UNFmarcanf(4) ;
	 						NOCONSOLE TO PRINTER
				ELSE
					REPORT FORM relnfs5 ;
						WHILE nota.nota = LNnfinicio AND;
	  					nota.empresa = LNemp AND UNFmarcanf(4) ;
	 						NOCONSOLE TO PRINTER
	 			ENDIF
			OTHERWISE

				=W_DEFPROC("duplicat.spr")
				IF CRQtdeParcelas(orcament.prazo) > 5
					REPORT FORM relnfs2C ;
						WHILE nota.nota = LNnfinicio AND;
  						nota.empresa = LNemp AND UNFmarcanf(4) ;
	 						NOCONSOLE TO PRINTER
	 			ELSE
					REPORT FORM relnfs2 ;
						WHILE nota.nota = LNnfinicio AND;
  						nota.empresa = LNemp AND UNFmarcanf(4) ;
	 						NOCONSOLE TO PRINTER
	 			ENDIF
	 						
			ENDCASE
			=UNFempmarca(4,LStp_proces,LSOrientacao)
		   	=up_fecha("ITNFSTMP")

			LNnfinicio	= LNnfinicio + 1

		ENDDO
	ENDIF

	IF  "COPIA EM NOTA" $ LStp_proces
		LsOrientacao = "PRODUTO/SERVICO"
		IF  "NF SERVICO" $ LStp_proces
			LsOrientacao = "PRODUTO"
		ENDIF

		DO WHILE LNnfCopInicio  <= LNnfCopFim
			SELE nota
			SET ORDER TO TAG NOTA
			SEEK STR(LNemp,3)+STR(LNnfCopInicio,7)

			SELECT tipooper
			SET ORDER TO TAG tipo
			SEEK 'S'+nota.tipo
			IF !FOUND()
				SEEK 's'+orcament.tipo
			ENDIF

			SELE itemmov
			SET ORDER TO TAG itenscopia
			SET NEAR ON
			SEEK STR(nota.empresa,3)+STR(nota.NOTA,7)
			SET NEAR OFF			
			*------------------------------------------------------------*
			*  INICIA GERACAO DE ARQUIVO TEMPORARIO
			*------------------------------------------------------------*
			LSarqtmp 	= "" 			&& EX: C:\TMP\TMP0001
			LSaliastmp 	= "TMP" 		&&     TMP001
			LSaliastmp = UPopentmp(wp_dirtmp,LSarqtmp,LSaliastmp,1)
			IF EMPTY(LSaliastmp)
				WAIT WINDOWS " Nao Foi Gerado Arq TMP. <ENTER> Continua"
				LOOP
		 	ENDIF		


		   	=up_fecha("ITNFSTMP")
			WAIT WINDOW "AGUARDE. Gerando Arq. Temporario." NOWAIT
			SELE itemmov
			COPY TO &LSarqtmp FOR LEFT(itemmov.operacao,1) = "S" ;
					WHILE nota.empresa = itemmov.empresa ;
						  AND nota.nota	= itemmov.nf_copia
			SELE 0
			USE &LSarqtmp   ALIAS ITNFSTMP EXCL
			INDEX ON nf_copia   TAG nota ADDITIVE


			LNimpressao = RECCOUNT()
			go top
			*----------------------------------------------------------*
			IF NOT USED("BANCO")
				=NetArq("BANCO") && REABR
			ENDIF

			SELE banco
			SET ORDER TO TAG banco

			SELE nota
			SET RELATION TO NOTA INTO ITNFSTMP
			SET RELATION TO  operador INTO usuario 		 ADDITIVE
			SET RELATION TO  banco INTO banco  			 ADDITIVE

			SET SKIP TO ITNFSTMP
            DO CASE
            CASE (nota.empresa = 5 OR nota.empresa = 1 OR nota.empresa = 9;
			       OR nota.empresa = 7 OR nota.empresa = 10);
			    and nota.data >= {26.09.2002}

				=W_DEFPROC("duplicat.spr")
				IF CRQtdeParcelas(orcament.prazo) > 5
					REPORT FORM relnfs3C ;
						WHILE nota.nota = LNnfCopInicio AND;
	  					nota.empresa = LNemp AND UNFmarcanf(4) ;
	 						NOCONSOLE TO PRINTER
				ELSE
					REPORT FORM relnfs3 ;
						WHILE nota.nota = LNnfCopInicio AND;
		  				nota.empresa = LNemp AND UNFmarcanf(4) ;
		 					NOCONSOLE TO PRINTER
				ENDIF
            CASE (nota.empresa = 14)
				=W_DEFPROC("duplicat.spr")
				IF CRQtdeParcelas(orcament.prazo) > 5
					REPORT FORM relnfs5C ;
						WHILE nota.nota = LNnfCopInicio AND;
	  					nota.empresa = LNemp AND UNFmarcanf(4) ;
	 						NOCONSOLE TO PRINTER
				ELSE
					REPORT FORM relnfs5 ;
						WHILE nota.nota = LNnfCopInicio AND;
		  				nota.empresa = LNemp AND UNFmarcanf(4) ;
		 					NOCONSOLE TO PRINTER
				ENDIF
			OTHERWISE
				=W_DEFPROC("duplicat.spr")
				IF CRQtdeParcelas(orcament.prazo) > 5
					REPORT FORM relnfs2C ;
						WHILE nota.nota = LNnfCopInicio AND;
	  					nota.empresa = LNemp AND UNFmarcanf(4) ;
	 						NOCONSOLE TO PRINTER
	 			ELSE
					REPORT FORM relnfs2 ;
						WHILE nota.nota = LNnfCopInicio AND;
	  					nota.empresa = LNemp AND UNFmarcanf(4) ;
	 						NOCONSOLE TO PRINTER
	 			ENDIF
 			ENDCASE
			=UNFempmarca(4,LStp_proces,LSOrientacao)
		   	=up_fecha("ITNFSTMP")

			LNnfCopInicio  = LNnfCopInicio + 1

		ENDDO
	ENDIF

	*---------- IMPRESSAO DE NOTA FISCAL DE SERVICO ------------*
	*****************************************************************
	*--> Redireciona impressora de NOTA FISCAL DE SERVICO
	* APROVEITA CAMPO WP_IMPORC que nao teve  aplicacao no sistema
	*****************************************************************

	IF  "NF SERVICO" $ LStp_proces AND !("COPIA" $ LStp_proces)
		LsOrientacao = "SERVICO"
		IF !(EMPTY(ALLTRIM(wp_imporc)))
			LNmtmp =UPnometmp("tmp",2)
			DELETE FILE &LNmtmp
			RUN &wp_imporc > &LNmtmp
		ELSE
			SET PRINTER TO &wp_prtorc
		ENDIF
		*************************************************************
		*--------------------------------------------------
		DO WHILE LNnfSrvIni  <= LNnfSrvFim
			SELE nota
			SET ORDER TO TAG NOTA
			SEEK STR(LNemp,3)+STR(LNnfsrvIni,7)

			SELECT tipooper
			SET ORDER TO TAG tipo
			SEEK 'S'+nota.tipo
			IF !FOUND()
				SEEK 's'+orcament.tipo
			ENDIF

			SELE itemmov
			SET ORDER TO TAG itensnota
			SET NEAR ON
			SEEK STR(nota.empresa,3)+nota.OPERACAO+STR(nota.NOTA,7)
			SET NEAR OFF			
			*------------------------------------------------------------*
			*  INICIA GERACAO DE ARQUIVO TEMPORARIO
			*------------------------------------------------------------*
			LSarqtmp 	= "" 			&& EX: C:\TMP\TMP0001
			LSaliastmp 	= "TMP" 		&&     TMP001
			LSaliastmp = UPopentmp(wp_dirtmp,LSarqtmp,LSaliastmp,1)
			IF EMPTY(LSaliastmp)
				WAIT WINDOWS " Nao Foi Gerado Arq TMP. <ENTER> Continua"
				LOOP
		 	ENDIF		

			=up_fecha("ITNFSTMP")
			WAIT WINDOW "AGUARDE. Gerando Arq. Temporario." NOWAIT
			SELE itemmov
			COPY TO &LSarqtmp  FOR nota.tipo = itemmov.tipo ;
				WHILE nota.empresa = itemmov.empresa ;
					  AND nota.nota	= itemmov.nota





			SELE 0
			USE &LSarqtmp   ALIAS ITNFSTMP EXCL
			INDEX ON nota   TAG nota ADDITIVE

			LNimpressao = RECCOUNT()
			go top
			*----------------------------------------------------------*
			IF NOT USED("BANCO")
				=NetArq("BANCO") && REABR
			ENDIF

			SELE banco
			SET ORDER TO TAG banco

			SELE nota
			SET RELATION TO NOTA INTO ITNFSTMP
			SET RELATION TO  operador INTO usuario 		 ADDITIVE
			SET RELATION TO  banco INTO banco  			 ADDITIVE

			SET SKIP TO ITNFSTMP

	
			IF wp_dtoper < {01.05.2006}
				REPORT FORM relnfsrv ;
					WHILE nota.nota = LNnfsrvIni AND;
  					nota.empresa = LNemp AND UNFmarcanf(4) ;
						NOCONSOLE TO PRINTER
			ELSE
				REPORT FORM relsrv02 ;
					WHILE nota.nota = LNnfsrvIni AND;
  					nota.empresa = LNemp AND UNFmarcanf(4) ;
	 					NOCONSOLE TO PRINTER
			ENDIF
	
	
	
			=UNFempmarca(4,LStp_proces,LSOrientacao)
		   	=up_fecha("ITNFSTMP")

			LNnfsrvIni	= LNnfsrvIni + 1
			
		ENDDO
	ENDIF




	IF  "COPIA EM NF SERVICO" $ LStp_proces
		LsOrientacao = "SERVICO"
		IF !(EMPTY(ALLTRIM(wp_imporc)))
			LNmtmp =UPnometmp("tmp",2)
			DELETE FILE &LNmtmp
			RUN &wp_imporc > &LNmtmp
		ELSE
			SET PRINTER TO &wp_prtorc
		ENDIF
		*************************************************************
		*--------------------------------------------------
		DO WHILE LNSrvCopIni  <= LNSrvCopFim

			SELE nota
			SET ORDER TO TAG NOTA
			SEEK STR(LNemp,3)+STR(LNSrvCopIni,7)

			SELECT tipooper
			SET ORDER TO TAG tipo
			SEEK 'S'+nota.tipo
			IF !FOUND()
				SEEK 's'+orcament.tipo
			ENDIF

			SELE itemmov
			SET ORDER TO TAG itenscopia
			SET NEAR ON
			SEEK STR(nota.empresa,3)+STR(nota.NOTA,7)
			SET NEAR OFF			
			*------------------------------------------------------------*

			*------------------------------------------------------------*
			*  INICIA GERACAO DE ARQUIVO TEMPORARIO
			*------------------------------------------------------------*
			LSarqtmp 	= "" 			&& EX: C:\TMP\TMP0001
			LSaliastmp 	= "TMP" 		&&     TMP001
			LSaliastmp = UPopentmp(wp_dirtmp,LSarqtmp,LSaliastmp,1)
			IF EMPTY(LSaliastmp)
				WAIT WINDOWS " Nao Foi Gerado Arq TMP. <ENTER> Continua"
				LOOP
		 	ENDIF		

	   		=up_fecha("ITNFSTMP")
			WAIT WINDOW "AGUARDE. Gerando Arq. Temporario." NOWAIT
			SELE itemmov
			COPY TO &LSarqtmp FOR LEFT(itemmov.operacao,1) = "S" ;
				WHILE nota.empresa = itemmov.empresa ;
					  AND nota.nota	= itemmov.nf_copia
			SELE 0
			USE &LSarqtmp   ALIAS ITNFSTMP EXCL
			INDEX ON nf_copia   TAG nota ADDITIVE

			LNimpressao = RECCOUNT()
			go top
			*----------------------------------------------------------*
			IF NOT USED("BANCO")
				=NetArq("BANCO") && REABR
			ENDIF

			SELE banco
			SET ORDER TO TAG banco

			SELE nota
			SET RELATION TO NOTA INTO ITNFSTMP
			SET RELATION TO  operador INTO usuario 		 ADDITIVE
			SET RELATION TO  banco INTO banco  			 ADDITIVE

			SET SKIP TO ITNFSTMP

	
			IF wp_dtoper < {01.05.2006}
				REPORT FORM relnfsrv ;
					WHILE nota.nota = LNSrvCopIni AND;
  					nota.empresa = LNemp AND UNFmarcanf(4) ;
	 					NOCONSOLE TO PRINTER
			ELSE
				REPORT FORM relsrv02 ;
					WHILE nota.nota = LNSrvCopIni  AND;
  					nota.empresa = LNemp AND UNFmarcanf(4) ;
	 					NOCONSOLE TO PRINTER
			ENDIF

			=UNFempmarca(4,LStp_proces,LSOrientacao)
		   	=up_fecha("ITNFSTMP")

			LNSrvCopIni	= LNSrvCopIni + 1
		ENDDO
	ENDIF


	SELE NOTA
	SET RELATION TO
	ON ERROR &sOldError

	****  SO PARA FECHAR ARQUIVO P/ IMP
	IF !(EMPTY(ALLTRIM(wp_imposi)))
		LNmtmp =UPnometmp("ost",2)
		DELETE FILE &LNmtmp
		RUN &wp_imposi > &LNmtmp
	ENDIF
	SET PRINTER TO &wp_prtosi

	SET PRINTER TO SET('PRINTER',1)
	SET RELATION TO
	SET POINT TO
	SET SEPARATOR  TO
	*--------------------------------------------------------------*
	IF !EMPTY(LSalias) AND USED(LSalias)
		SELECT &LSalias
	ENDIF
RETURN(LFretorno)






*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _2XH0IRIHR           NFinfo_Nf VALID                    º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         NOTA_B,     Record Number:   14    º
*       º Variable:            NFinfo_Nf                          º
*       º Called By:           VALID Clause                       º
*       º Object Type:         Push Button                        º
*       º Snippet Number:      13                                 º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*

FUNCTION _2xh0irihr     &&  NFinfo_Nf VALID
#REGION 1
return
*---------------------------------------------------------------*


FUNCTION NFinfo_Cobr
PARAMETERS  LNemp,LNnronota,LNserie
	*------------------------------------------------------------*
	* CLASSIFICACAO:  [*****]
	*------------------------------------------------------------*
	* OBJETIVO....: 	Fornece Numero,DataVenc. e Valor de Duplicata
	*			Formatados para RELNFS
	*------------------------------------------------------------*
	* COMENTARIO..:
	*				
	*------------------------------------------------------------*
	* OBS........ :
	*------------------------------------------------------------*
	*  TABELAS....:
	*------------------------------------------------------------*
	*  PARAMETROS..:
	*		LNemp..........: Empresa que Esta Faturando
	*		LNnronota......: Nro da Nata p/ busca de dados
	*		LNserie........: Ordem do Doc. a ser Buscado (1,2,3..)
	*------------------------------------------------------------*
	*  RETORNO.....:   NUMERODUP+ DT.VENC + VLR.DUP
	*					99999-99 dd.mm.aa  999999,99
	*------------------------------------------------------------*
	* EXEMPLO : CHAMADA DO PROGRAMA RELNFS
	*------------------------------------------------------------*
	=W_DEFPROC("rotinas.spr")
	PRIVATE LSalias
	PRIVATE LSretorno
	PRIVATE LNNroDup
	*-----------------------------------------------------------*
	LSalias		= 	ALIAS()
	LSretorno	=	REPLICATE("-",44)
	*------------------------------------------------------------*
*	IF LNemp <> 10
*		LNNroDup = INT( VAL(   CHRTRAN(STR(LNnronota,7)," ","0")+;
*								  CHRTRAN(STR(LNserie,1)," ","0")+;
*								  STR(LNemp,1)))   && 1 => DUPLICATA
*	ELSE
*		LNNroDup = INT( VAL(   CHRTRAN(STR(LNnronota,7)," ","0")+;
*								  CHRTRAN(STR(LNserie,1)," ","0")+;
*								  "0"))   && 1 => DUPLICATA
*	ENDIF

	LNNroDup = INT( VAL(   CHRTRAN(STR(LNnronota,7)," ","0")+;
								  CHRTRAN(STR(LNserie,2)," ","0");
								  ))   && 1 => DUPLICATA

	SELE duplicat
	SET ORDER TO TAG doc
	SEEK STR(LNemp,3)+STR(LNNroDup,9)


	*--------------------------------------------------------------------*
	*    Serao retornados dados para doc com :
	*			Forma de Pagamento =  3  (CHEQUE EM GARANTIA)
	*			Forma de Pagamento =  4  (DUPLICATA)
	*
	*--------------------------------------------------------------------*
	IF FOUND() AND (duplicat.tp_parcela = 2 OR duplicat.tp_parcela = 3 )

		LSretorno = TRANSF(duplicat.duplicata,"@r 999999999")
		LSretorno = LSretorno + " "+;
			   	    TRANSF(duplicat.vlr_doc,"@r 99,999.99");
				   +SPACE(1)


		IF (duplicat.dt_venc - duplicat.dt_emi) < 8
			LSretorno = LSretorno + "C/APRES."	
		ELSE



			LStmp = ;
			    STR(DAY(duplicat.dt_venc),2);
			    +"/";
			    +RIGHT(STR(MONTH(duplicat.dt_venc),2),2) ;
			    +"/";
			    +STR(YEAR(duplicat.dt_venc),4)


			LStmp =	CHRTRAN(LStmp," ","0")			

			LSretorno = LSretorno + LSTmp
			
			
		ENDIF
	ENDIF
	*--------------------------------------------------------------*
	IF !EMPTY(LSalias) AND USED(LSalias)
		SELECT &LSalias
	ENDIF
RETURN(LSretorno)






*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _2XH0IRIIW           NFinfoCbrSrv VALID                 º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         NOTA_B,     Record Number:   15    º
*       º Variable:            NFinfoCbrSrv                       º
*       º Called By:           VALID Clause                       º
*       º Object Type:         Push Button                        º
*       º Snippet Number:      14                                 º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*

FUNCTION _2xh0iriiw     &&  NFinfoCbrSrv VALID
#REGION 1
return
*---------------------------------------------------------------*


FUNCTION NFinfoCbrSrv
PARAMETERS  LNemp,LNnronota,LNserie
	*------------------------------------------------------------*
	* CLASSIFICACAO:  [*****]
	*------------------------------------------------------------*
	* OBJETIVO....: 	Fornece Numero,DataVenc. e Valor de Duplicata
	*			Formatados para RELNFS
	*------------------------------------------------------------*
	* COMENTARIO..:
	*				
	*------------------------------------------------------------*
	* OBS........ :
	*------------------------------------------------------------*
	*  TABELAS....:
	*------------------------------------------------------------*
	*  PARAMETROS..:
	*		LNemp..........: Empresa que Esta Faturando
	*		LNnronota......: Nro da Nata p/ busca de dados
	*		LNserie........: Ordem do Doc. a ser Buscado (1,2,3..)
	*------------------------------------------------------------*
	*  RETORNO.....:   NUMERODUP+ DT.VENC + VLR.DUP
	*					99999-99 dd.mm.aa  999999,99
	*------------------------------------------------------------*
	* EXEMPLO : CHAMADA DO PROGRAMA RELNFS
	*------------------------------------------------------------*
	=W_DEFPROC("rotinas.spr")
	PRIVATE LSalias
	PRIVATE LSretorno
	PRIVATE LNNroDup
	*-----------------------------------------------------------*
	LSalias		= 	ALIAS()
	LSretorno	=	REPLICATE("-",44)
	*------------------------------------------------------------*
	IF LNemp <> 10
		LNNroDup = INT( VAL(   CHRTRAN(STR(LNnronota,7)," ","0")+;
								  CHRTRAN(STR(LNserie,1)," ","0")+;
								  STR(LNemp,1)))   && 1 => DUPLICATA
	ELSE
		LNNroDup = INT( VAL(   CHRTRAN(STR(LNnronota,7)," ","0")+;
								  CHRTRAN(STR(LNserie,1)," ","0")+;
								  "0"))   && 1 => DUPLICATA
	ENDIF
	SELE duplicat
	SET ORDER TO TAG doc
	SEEK STR(LNemp,3)+STR(LNNroDup,9)
	*--------------------------------------------------------------------*
	*    Serao retornados dados para doc com :
	*			Forma de Pagamento =  3  (CHEQUE EM GARANTIA)
	*			Forma de Pagamento =  4  (DUPLICATA)
	*
	*--------------------------------------------------------------------*
	IF FOUND() AND (duplicat.tp_parcela = 2 OR duplicat.tp_parcela = 3 )
		LSretorno = TRANSF(duplicat.duplicata,"@r 999999999")+SPACE(1)
		IF (duplicat.dt_venc - duplicat.dt_emi) < 8
			LSretorno = LSretorno + "C/APRES."+SPACE(4)
		ELSE
			LSretorno = LSretorno + DTOC(duplicat.dt_venc)+SPACE(4)
		ENDIF

		LSretorno = LSretorno + ;
				TRANSF(duplicat.vlr_doc,"@r 999,999.99")
	ENDIF
	*--------------------------------------------------------------*
	IF !EMPTY(LSalias) AND USED(LSalias)
		SELECT &LSalias
	ENDIF
RETURN(LSretorno)






*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _2XH0IRIJ3           NFinfoSrvCbr VALID                 º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         NOTA_B,     Record Number:   16    º
*       º Variable:            NFinfoSrvCbr                       º
*       º Called By:           VALID Clause                       º
*       º Object Type:         Push Button                        º
*       º Snippet Number:      15                                 º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*

FUNCTION _2xh0irij3     &&  NFinfoSrvCbr VALID
#REGION 1
return
*---------------------------------------------------------------*


FUNCTION NFinfoSrvCbr
PARAMETERS  LNemp,LNnronota,LNserie
	*------------------------------------------------------------*
	* CLASSIFICACAO:  [*****]
	*------------------------------------------------------------*
	* OBJETIVO....: 	Fornece Numero,DataVenc. e Valor de Duplicata
	*			Formatados para RELNFS
	*------------------------------------------------------------*
	* COMENTARIO..:
	*				
	*------------------------------------------------------------*
	* OBS........ :
	*------------------------------------------------------------*
	*  TABELAS....:
	*------------------------------------------------------------*
	*  PARAMETROS..:
	*		LNemp..........: Empresa que Esta Faturando
	*		LNnronota......: Nro da Nata p/ busca de dados
	*		LNserie........: Ordem do Doc. a ser Buscado (1,2,3..)
	*------------------------------------------------------------*
	*  RETORNO.....:   NUMERODUP+ DT.VENC + VLR.DUP
	*					99999-99 dd.mm.aa  999999,99
	*------------------------------------------------------------*
	* EXEMPLO : CHAMADA DO PROGRAMA RELNFS
	*------------------------------------------------------------*
	=W_DEFPROC("rotinas.spr")
	PRIVATE LSalias
	PRIVATE LSretorno
	PRIVATE LNNroDup
	*-----------------------------------------------------------*
	LSalias		= 	ALIAS()
	LSretorno	=	REPLICATE("-",44)
	*------------------------------------------------------------*
	IF LNemp <> 10
		LNNroDup = INT( VAL(   CHRTRAN(STR(LNnronota,7)," ","0")+;
								  CHRTRAN(STR(LNserie,1)," ","0")+;
								  STR(LNemp,1)))   && 1 => DUPLICATA
	ELSE
		LNNroDup = INT( VAL(   CHRTRAN(STR(LNnronota,7)," ","0")+;
								  CHRTRAN(STR(LNserie,1)," ","0")+;
								  "0"))   && 1 => DUPLICATA
	ENDIF
	SELE duplicat
	SET ORDER TO TAG doc
	SEEK STR(LNemp,3)+STR(LNNroDup,9)
	*--------------------------------------------------------------------*
	*    Serao retornados dados para doc com :
	*			Forma de Pagamento =  3  (CHEQUE EM GARANTIA)
	*			Forma de Pagamento =  4  (DUPLICATA)
	*
	*--------------------------------------------------------------------*
	IF FOUND() AND (duplicat.tp_parcela = 2 OR duplicat.tp_parcela = 3 )
		LSretorno = TRANSF(duplicat.duplicata,"@r 999999999")+SPACE(1)
		IF (duplicat.dt_venc - duplicat.dt_emi) < 8
			LSretorno = LSretorno + "C/APRES."+SPACE(9)
		ELSE
			LSretorno = LSretorno + DTOC(duplicat.dt_venc)+SPACE(9)
		ENDIF

		LSretorno = LSretorno + ;
				TRANSF(duplicat.vlr_doc,"@r 999,999.99")
	ENDIF
	*--------------------------------------------------------------*
	IF !EMPTY(LSalias) AND USED(LSalias)
		SELECT &LSalias
	ENDIF
RETURN(LSretorno)






*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _2XH0IRIJ9           UNFmarcanf VALID                   º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         NOTA_B,     Record Number:   17    º
*       º Variable:            UNFmarcanf                         º
*       º Called By:           VALID Clause                       º
*       º Object Type:         Push Button                        º
*       º Snippet Number:      16                                 º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*
FUNCTION _2xh0irij9     &&  UNFmarcanf VALID
#REGION 1
RETURN

FUNCTION UNFmarcanf
	PARAMETERS LNflag
	SELE nota
	=REGLOCK(.T.)
	REPLACE FLAGPROCES	WITH 	LNflag	
RETURN(.T.)


*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _2XH0IRIJD           UNFEmpMarcanf VALID                º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         NOTA_B,     Record Number:   18    º
*       º Variable:            UNFEmpMarcanf                      º
*       º Called By:           VALID Clause                       º
*       º Object Type:         Push Button                        º
*       º Snippet Number:      17                                 º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*
FUNCTION _2xh0irijd     &&  UNFEmpMarcanf VALID
#REGION 1
RETURN

FUNCTION UNFempmarca
	PARAMETERS PrmFlag,PrmTp_Process,PrmOrientacao
	SELE empresa					&& altera parametros em empresa
	=REGLOCK(.T.)
	
	DO CASE

		* CASES ANTIGOS ==> ANTES 15/03/2006

		CASE PrmOrientacao  = "SERVICO"
			REPLACE FLAGIMPSRV 	WITH PrmFlag	

		CASE PrmTp_Process = "NOTA" OR PrmTp_Process = "NOTA/CUPOM"
			REPLACE FLAGIMPNF 	WITH PrmFlag	

		CASE PrmTp_Process = "CUPOM"
			REPLACE FLAGIMPCPM 	WITH PrmFlag	


		* CASE NOVOS ==> APOS 15/03/2006


		CASE "CUPOM" $ Prmtp_proces
			REPLACE FLAGIMPCPM 	WITH PrmFlag	

		CASE "NOTA" = Prmtp_proces ;
			AND PrmOrientacao = "PRODUTO/SERVICO"
			REPLACE FLAGIMPNF 	WITH PrmFlag	

		CASE "NOTA" = Prmtp_proces AND PrmOrientacao = "PRODUTO"
			REPLACE FLAGIMPNF 	WITH PrmFlag	

		CASE "NOTA/NF SERVICO" = Prmtp_proces ;
		   AND PrmOrientacao = "PRODUTO"
			REPLACE FLAGIMPNF 	WITH PrmFlag	

		CASE "NOTA/NF SERVICO" = Prmtp_proces ;
		   AND PrmOrientacao = "SERVICO"
			REPLACE FLAGIMPSRV 	WITH PrmFlag	

		CASE "NF SERVICO" = Prmtp_proces
			REPLACE FLAGIMPSRV 	WITH PrmFlag	


		CASE "COPIA EM NOTA" $ Prmtp_proces
			REPLACE FLAGIMPNF 	WITH PrmFlag	


		CASE "COPIA EM NF SERVICO" = Prmtp_proces
			REPLACE FLAGIMPSRV 	WITH PrmFlag	




	ENDCASE
RETURN(.T.)


*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _2XH0IRIJI           ULbaixa_Saldo VALID                º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         NOTA_B,     Record Number:   19    º
*       º Variable:            ULbaixa_Saldo                      º
*       º Called By:           VALID Clause                       º
*       º Object Type:         Push Button                        º
*       º Snippet Number:      18                                 º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*
FUNCTION _2xh0iriji     &&  ULbaixa_Saldo VALID
#REGION 1
RETURN

PROCEDURE ULbaixa_saldo  && VERIFICA POSSIBILIDADE DE  BAIXA  NO ESTOQUE
PARAMETERS LSsolicitante
	*----------------------------------------------------------*
   	PRIVATE LFlockReg
	PRIVATE LFabreAuto
   	LFlockReg	= .t.	&& BLOQUEAR REGISTRO
    LFabreAuto	= .f. 	&& NAO ABRIR CONTROLE AUTOMATICAMENTE
	=W_DEFPROC("ESTOQUE.SPR")
	IF !ESversaldo(orcatmp.empresa,orcatmp.codigo ,;
					wp_dtoper,orcatmp.qtde,orcatmp.qtderes,LFabreAuto,;
					LFlockReg,"SAIDA",orcament.hora_fat,tipooper.movestq)
     	RETURN .F.
   	ENDIF
	*----------------------------------------------------------*
RETURN .T.



*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _2XH0IRIJM           NFNfSrvExstCop VALID               º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         NOTA_B,     Record Number:   20    º
*       º Variable:            NFNfSrvExstCop                     º
*       º Called By:           VALID Clause                       º
*       º Object Type:         Push Button                        º
*       º Snippet Number:      19                                 º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*

FUNCTION _2xh0irijm     &&  NFNfSrvExstCop VALID
#REGION 1
return
*---------------------------------------------------------------*


FUNCTION NFNfSrvExstCop
PARAMETER PrmEmpresa,PrmNota

	=W_DEFPROC("rotinas.spr")
	PRIVATE LSalias,LFretorno
	*-----------------------------------------------------------*
	LSalias		= 	ALIAS()
	LFretorno	=	.t.
	*-----------------------------------------------------------*
	PRIVATE LStipo,LNnf, LNcopiaNF
    PRIVATE LFGerNF,LFGerNFS  && INDICADORES QUE FOI GERADO
	PRIVATE LNemp,LNosi


	SET NEAR ON
	SELE nota
	SET ORDER TO TAG referencia
	SEEK STR(PrmEmpresa,3)+STR(PrmNota,7)
	SET NEAR OFF

	DO WHILE !EOF() AND nota.referencia = PrmNota
		IF nota.nota > 2000000 and nota.nota < 3000000
			IF nota.STATUS <> 2
				IF !EMPTY(LSalias) AND USED(LSalias)
					SELECT &LSalias
				ENDIF
				RETURN(.T.)
			ENDIF
		ENDIF
		SKIP
	ENDDO
	*---------------------------------------------------------------*
	IF !EMPTY(LSalias) AND USED(LSalias)
		SELECT &LSalias
	ENDIF
RETURN(.F.)
	






*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _2XH0IRIJS           NFNfN1ExstCop VALID                º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         NOTA_B,     Record Number:   21    º
*       º Variable:            NFNfN1ExstCop                      º
*       º Called By:           VALID Clause                       º
*       º Object Type:         Push Button                        º
*       º Snippet Number:      20                                 º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*

FUNCTION _2xh0irijs     &&  NFNfN1ExstCop VALID
#REGION 1
return
*---------------------------------------------------------------*


FUNCTION NFNfN1ExstCop
PARAMETER PrmEmpresa,PrmNota

	=W_DEFPROC("rotinas.spr")
	PRIVATE LSalias,LFretorno
	*-----------------------------------------------------------*
	LSalias		= 	ALIAS()
	LFretorno	=	.t.
	*-----------------------------------------------------------*
	PRIVATE LStipo,LNnf, LNcopiaNF
    PRIVATE LFGerNF,LFGerNFS  && INDICADORES QUE FOI GERADO
	PRIVATE LNemp,LNosi


	SET NEAR ON
	SELE nota
	SET ORDER TO TAG referencia
	SEEK STR(PrmEmpresa,3)+STR(PrmNota,7)
	SET NEAR OFF

	DO WHILE !EOF() AND nota.referencia = PrmNota
		IF nota.nota < 1000000 ;
		  OR (nota.nota > 3000000 and nota.nota < 4000000)
			IF nota.STATUS <> 2
				IF !EMPTY(LSalias) AND USED(LSalias)
					SELECT &LSalias
				ENDIF
				RETURN(.T.)
			ENDIF
		ENDIF
		SKIP
	ENDDO
	*---------------------------------------------------------------*
	IF !EMPTY(LSalias) AND USED(LSalias)
		SELECT &LSalias
	ENDIF
RETURN(.F.)
	






*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _2XH0IRIJY           NFProcessCopia VALID               º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         NOTA_B,     Record Number:   22    º
*       º Variable:            NFProcessCopia                     º
*       º Called By:           VALID Clause                       º
*       º Object Type:         Push Button                        º
*       º Snippet Number:      21                                 º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*

FUNCTION _2xh0irijy     &&  NFProcessCopia VALID
#REGION 1
return
*---------------------------------------------------------------*


FUNCTION NFProcessCopia
PARAMETER ;
	PrmEmpresa,;
	PrmNota,;
	PrmSolicitante,;
	PrmChamadoPor,;
	PrmCopySrvAutoriza,;
	PrmCopyN1Autoriza



	=W_DEFPROC("rotinas.spr")
	PRIVATE LSalias,LFretorno
	*-----------------------------------------------------------*
	LSalias		= 	ALIAS()
	LFretorno	=	.t.
	*-----------------------------------------------------------*

	PRIVATE FlgImpFatura


	PRIVATE LStipo,LNnf, LNcopiaNF
    PRIVATE LFGerNF,LFGerNFS  && INDICADORES QUE FOI GERADO
	PRIVATE LNemp,LNosi

	SELE nota
	SET ORDER TO TAG nota
	SEEK STR(PrmEmpresa,3)+STR(PrmNota,7)

	IF !FOUND() OR nota.nota < 1000000 && < 1000000 nao e cupom
	   WAIT WINDOW ;
   		" Item selecionado nao e um Cumpom <ENTER>"
		IF !EMPTY(LSalias) AND USED(LSalias)
			SELECT &LSalias
		ENDIF
		RETURN(.F.)
	ENDIF

	SCATTER MEMVAR
	*-------------------------------------------------------------------*
	LNCtrlCupomIni = m.nota
	LNCtrlCupomFim = m.nota


	IF TYPE("LStp_proces") = "U" OR !("REC." $ LStp_proces)
	    LNnfInicio     = 0
	    LNnfFim        = 0
	    LNnfsrvIni     = 0
	    LNnfsrvFim     = 0
		LNnfCopInicio  = 0
		LNnfCopFim	   = 0
		LNSrvCopIni  = 0
		LNSrvCopFim  = 0
	ENDIF

	LNemp        = m.empresa
	LNosi        = m.referencia
	*-------------------------------------------------------------------*
	*----------  				INICIA COPIA DO CUPOM			--------*
	*-------------------------------------------------------------------*



	LFipi = .f.
	LFproduto = .f.
	LFservico = .f.
	IF nota.totproduto > 0
		LFproduto = .T.
	ENDIF
	IF nota.totservico >0
		LFservico = .T.
	ENDIF
	IF nota.vlr_ipi > 0
		LFipi = .T.
	ENDIF


	*-----------------------------------------------------------------*
	*  DefProcessCopia - Define Processao para  emissao da copia
	*-----------------------------------------------------------------*
	*-----------------------------------------------------------*
	PRIVATE LSemi_NF,LSemi_NFe,LSemi_NFS,LSemi_NFSe,LSemi_ECF
	PRIVATE LSscr_NF,LSscr_NFe,LSscr_NFS,LSscr_NFSe,LSscr_ECF

	*------------------------------------------------------------*

	=W_DEFPROC("EMPRESA.SPR")
	LSemi_NF = EMGetFieldValue(PrmEmpresa,"EMITE_NF")
	
	=W_DEFPROC("EMPRESA.SPR")
	LSemi_NFe = EMGetFieldValue(PrmEmpresa,"EMITE_NFE")

	=W_DEFPROC("EMPRESA.SPR")
	LSemi_NFS = EMGetFieldValue(PrmEmpresa,"EMITE_NFS")

	=W_DEFPROC("EMPRESA.SPR")
	LSemi_NFSe = EMGetFieldValue(PrmEmpresa,"EMITE_NFSE")

	=W_DEFPROC("EMPRESA.SPR")
	LSemi_ecf = EMGetFieldValue(PrmEmpresa,"EMITE_ECF")

	*------------------------------------------------------------*

	
	=W_DEFPROC("EMPRESA.SPR")
	LSscr_NF = EMGetFieldValue(PrmEmpresa,"ESCRT_NF")
	
	=W_DEFPROC("EMPRESA.SPR")
	LSscr_NFe = EMGetFieldValue(PrmEmpresa,"ESCRT_NFE")

	=W_DEFPROC("EMPRESA.SPR")
	LSscr_NFS = EMGetFieldValue(PrmEmpresa,"ESCRT_NFS")

	=W_DEFPROC("EMPRESA.SPR")
	LSscr_NFSe = EMGetFieldValue(PrmEmpresa,"ESCRT_NFSE")

	=W_DEFPROC("EMPRESA.SPR")
	LSscr_ecf = EMGetFieldValue(PrmEmpresa,"ESCRT_ECF")


	*------------------------------------------------------------*

	*------------------------------------------------------------*

	LStp_process = ""


 	*----------------------------------------*
 	**  SE HOUVER COPIA EM NOTA N1
 	*----------------------------------------*
	IF PrmCopyN1Autoriza
		DO CASE		&& DEFINE SE HAVERA COPIA EM NOTA

			CASE  LFipi= .T.
				LStp_proces	= LStp_proces+"/COPIA EM NOTA"

			CASE  LFproduto = .T.
				LStp_proces	= LStp_proces+"/COPIA EM NOTA"

			CASE  LFservico = .T. ;
				  AND (LSemi_NFS = "N" AND LSemi_NFSe = "N")
				LStp_proces	= LStp_proces+"/COPIA EM NOTA"

		ENDCASE
	ENDIF


 	*----------------------------------------*
 	**  SE HOUVER COPIA EM NOTA SERVICO
 	*----------------------------------------*
	IF LSemi_NFS = "S" OR  LSemi_NFSe = "S"
		IF	PrmCopySrvAutoriza
			IF LFservico = .T.
					LStp_proces	= LStp_proces+"/COPIA EM NF SERVICO"
			ENDIF
		ENDIF
		*-----------------------------------------
	ENDIF


	*-----------------------------------------------------------*
	

	PrmObjetivo = "NAO INTEGRAR"

	
	DO CASE
		CASE (PrmSolicitante $ "IMPORTACAO/RECUPERACAO")


			IF "COPIA EM NF SERVICO" $ LStp_proces
				DO CASE
					CASE LSemi_NFS = "S" OR LSemi_NFSe = "S" 				
		 				PrmObjetivo = "ESCRITURACAO"

					CASE LSscr_NFS = "S" OR LSscr_NFSe = "S" 				
		 				PrmObjetivo = "ESCRITURACAO"

					OTHERWISE
						PrmObjetivo = "NAO INTEGRAR"
				ENDCASE
			ENDIF


			IF  "COPIA EM NOTA" $ LStp_proces
				DO CASE
					CASE LSemi_NF = "S" OR LSemi_NFe = "S" 				
		 				PrmObjetivo = "ESCRITURACAO"

					CASE LSscr_NF = "S" OR LSscr_NFe = "S" 				
		 				PrmObjetivo = "ESCRITURACAO"

					OTHERWISE
						PrmObjetivo = "NAO INTEGRAR"
				ENDCASE

			ENDIF



		CASE (PrmSolicitante $ "RECUPERACAO")

			IF "COPIA EM NF SERVICO" $ LStp_proces
				DO CASE
					CASE LSemi_NFS = "S" OR LSemi_NFSe = "S" 				
		 				PrmObjetivo = "ESCRITURACAO"

					CASE LSscr_NFS = "S" OR LSscr_NFSe = "S" 				
		 				PrmObjetivo = "ESCRITURACAO"

					OTHERWISE
						PrmObjetivo = "NAO INTEGRAR"
				ENDCASE
			ENDIF


			IF  "COPIA EM NOTA" $ LStp_proces
				DO CASE
					CASE LSemi_NF = "S" OR LSemi_NFe = "S" 				
		 				PrmObjetivo = "ESCRITURACAO"

					CASE LSscr_NF = "S" OR LSscr_NFe = "S" 				
		 				PrmObjetivo = "ESCRITURACAO"

					OTHERWISE
						PrmObjetivo = "NAO INTEGRAR"
				ENDCASE
	
			ENDIF

		OTHERWISE

			IF "COPIA EM NF SERVICO" $ LStp_proces
				DO CASE
					CASE LSemi_NFS = "S" OR LSemi_NFSe = "S" 				
		 				PrmObjetivo = "EMISSAO"

					CASE LSscr_NFS = "S" OR LSscr_NFSe = "S" 				
		 				PrmObjetivo = "ESCRITURACAO"

					OTHERWISE
						PrmObjetivo = "NAO INTEGRAR"
				ENDCASE
			ENDIF


			IF  "COPIA EM NOTA" $ LStp_proces
				DO CASE
					CASE LSemi_NF = "S" OR LSemi_NFe = "S" 				
		 				PrmObjetivo = "EMISSAO"

					CASE LSscr_NF = "S" OR LSscr_NFe = "S" 				
		 				PrmObjetivo = "ESCRITURACAO"

					OTHERWISE
						PrmObjetivo = "NAO INTEGRAR"
				ENDCASE

			ENDIF
		

	ENDCASE


	*--------------------------------------------------------------*

	*--------------------------------------------------------------*

	*-----------------------------------------------------------------*
	*  GeraDocCopia - Gera Documento Fiscal de Copia
	*-----------------------------------------------------------------*


	IF  "COPIA EM NOTA" $ LStp_proces
		LsOrientacao = "PRODUTO/SERVICO"

		IF  "NF SERVICO" $ LStp_proces OR nota.empresa = 6
			LsOrientacao = "PRODUTO"
		ENDIF
		*--------------------------------------------*
		IF !NFGerCopia(nota.empresa,LNCtrlCupomIni,;
  	     "NOTA",LNnfCopInicio,LNnfCopFim,LSOrientacao,;
  	     (PrmSolicitante),LStp_proces)
			SELE orcament
			RETURN(.F.)
		ENDIF	

	ENDIF
		
		

	IF "COPIA EM NF SERVICO" $ LStp_proces
		LsOrientacao = "SERVICO"
		*--------------------------------------------*
		IF !NFGerCopia(nota.empresa,LNCtrlCupomIni,;
		 "NF SERVICO",LNSrvCopIni,LNSrvCopFim,LSOrientacao,;
			(PrmSolicitante),LStp_proces)
			SELE orcament
			RETURN(.F.)
		ENDIF	
	ENDIF

	*---------------------------------------------------------------*
	* PARA NFe GERAR DOCFISCA E DOCFISIT
	*---------------------------------------------------------------*



	*---------------------------------------------------------------*
	* PARA IMPORTACAO E RECUPERACAO NAO FAZER IMPRESSAO NEM XML NFe
	*---------------------------------------------------------------*
	=W_DEFPROC("NOTA.SPR")
	IF  PrmSolicitante $ "IMPORTACAO - RECUPERACAO"
		IF !EMPTY(LSalias) AND USED(LSalias)
			SELECT &LSalias
		ENDIF
		=UNFempmarca(4,"COPIA EM NOTA","")
		=UNFempmarca(4,"COPIA EM NF SERVICO","")
		wp_msg = "Faturamento Concluido "
		WAIT WINDOW wp_msg NOWAIT
	    RETURN(.T.)
	ENDIF


    WAIT WINDOW "Aguarde a Impressao." NOWAIT

	*---------------------------------------------------------------*
	* PARA NFe GERAR XML OU IMPRIMIR QUANDO FOR NOTA NORMAL
	*---------------------------------------------------------------*

	FlgImpFatura =  NF_CopNFSrvImprime(;
			(LNemp),(LNosi),(LStp_process),;
			(wp_TipoEcf),(LNecf),(LNCtrlCupomIni), (LNCtrlCupomFim),;
			(LNnfinicio),(LNnffim),(LNnfsrvIni),(LNnfsrvFim),;
			(LNnfCopInicio),(LNnfCopFim),(LNSrvCopIni),(LNSrvCopFim))


	IF FlgImpFatura  = .T.
		FlgImpFatura =  NF_CopNF_Imprime(;
			(LNemp),(LNosi),(LStp_process),;
			(wp_TipoEcf),(LNecf),(LNCtrlCupomIni), (LNCtrlCupomFim),;
			(LNnfinicio),(LNnffim),(LNnfsrvIni),(LNnfsrvFim),;
			(LNnfCopInicio),(LNnfCopFim),(LNSrvCopIni),(LNSrvCopFim))
	ENDIF




*	IF FlgImpFatura  = .T.
*		FlgImpFatura =  NF_CopNFe_Imprime(;
*			(LNemp),(LNosi),(LStp_process),;
*			(wp_TipoEcf),(LNecf),(LNCtrlCupomIni), (LNCtrlCupomFim),;
*			(LNnfinicio),(LNnffim),(LNnfsrvIni),(LNnfsrvFim),;
*			(LNnfCopInicio),(LNnfCopFim),(LNSrvCopIni),(LNSrvCopFim))
*	ENDIF

*	IF FlgImpFatura  = .T.
*		FlgImpFatura =  NF_CopNFSe_Imprime(;
*			(LNemp),(LNosi),(LStp_process),;
*			(wp_TipoEcf),(LNecf),(LNCtrlCupomIni), (LNCtrlCupomFim),;
*			(LNnfinicio),(LNnffim),(LNnfsrvIni),(LNnfsrvFim),;
*			(LNnfCopInicio),(LNnfCopFim),(LNSrvCopIni),(LNSrvCopFim))
*	ENDIF
*

	=W_DEFPROC("rotinas.spr")

	*---------------------------------------------------------------*
	IF !FlgImpFatura
			
	    	WAIT WINDOW "Houve Falha no Impressao do Doc.Fiscal!!!!"
			IF !EMPTY(LSalias) AND USED(LSalias)
				SELECT &LSalias
			ENDIF
			RETURN(.f.)
	ELSE
			=NF_aviso(LNEMP,LNnfCopInicio,LNCtrlCupomIni,;
						PrmSolicitante,LStp_proces)

	ENDIF
	*---------------------------------------------------------------*
	IF !EMPTY(LSalias) AND USED(LSalias)
		SELECT &LSalias
	ENDIF
RETURN(.t.)
	






*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _2XH0IRIKI           NFGerCopia VALID                   º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         NOTA_B,     Record Number:   23    º
*       º Variable:            NFGerCopia                         º
*       º Called By:           VALID Clause                       º
*       º Object Type:         Push Button                        º
*       º Snippet Number:      22                                 º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*

FUNCTION _2xh0iriki     &&  NFGerCopia VALID
#REGION 1
return
*---------------------------------------------------------------*

FUNCTION NFGerCopia
PARAMETERS PrmEmpresa,PrmCupom,PrmTpCopia,PrmCopInicio,PrmCopFim,;
           PrmOrientacao,PrmSolicitante,Prmtp_proces
*	*------------------------------------------------------------*
	=W_DEFPROC("rotinas.spr")
	PRIVATE LSalias,LFretorno

	PRIVATE LNnotaAnterior
	*-----------------------------------------------------------*
	LSalias		= 	ALIAS()
	LFretorno	=	.t.
	*------------------------------------------------------------*
	PRIVATE LStipo,LNnf, LNcopiaNF
    PRIVATE LFGerNF,LFGerNFS  && INDICADORES QUE FOI GERADO

	**********************************************************************
	LFIMPDESCT = .F.

	******>>>> INICIO CONTROLE ARQUIVOS

	
	IF  PrmSolicitante = "IMPORTACAO"
		SELE &LSalias
	    RETURN(.T.)
	ENDIF

	SELE nota
	SET ORDER TO TAG nota
	SEEK STR(PrmEmpresa,3)+STR(PrmCupom,7)

	IF !FOUND() OR  nota.nota < 1000000 && < 1000000 nao e cupom
	   WAIT WINDOW ;
   		" Item selecionado nao e um Cumpom <ENTER>"
		SELE &LSalias
	    RETURN(.F.)
	ENDIF
	IF nota.status = 2
	   WAIT WINDOW ;
   		" Cupom selecionado esta Cancelado <ENTER>"
		SELE &LSalias
	    RETURN(.F.)
	ENDIF
	SCATTER MEMVAR
	*-------------------------------------------------------------------*
	*-------				INICIA COPIA DO CUPOM				--------*
	*-------------------------------------------------------------------*
	SELECT empresa
	SELE empresa
	SET ORDER TO TAG empresa
	SEEK m.empresa				&& EMPRESA OPERADORA DO SISTEMA

	IF !FOUND()
	   WAIT WINDOW ;
   		" Recadastrar a Empresa Gereciadora do Sistema <Suporte Sistema>"
		SELE orcament
		RETURN(.f.)
	ENDIF
	IF !REGLOCK()
	   	WAIT WINDOW "Nao foi possivel bloquear reg. Empresa p/ parametros"
	   	SELE orcament
		RETURN(.f.)
	ENDIF
	SELE empresa
	m.datanf		= wp_dtoper      && REGISTRA A DATA DA GERACAO DA NF
	m.horanf		= time()		 && REGISTRA A HORA
	*------------
	m.dtfat		   = m.datanf
	m.data		   = m.datanf
	m.hora 		   = m.horanf
	*------------


	DO CASE
		CASE PrmTpCopia = "NF SERVICO"
			IF PrmCopInicio > 0
				m.nota          = PrmCopInicio
			ELSE
				m.nota          = empresa.ult_nfsrvc + 1
			ENDIF

			IF UPPER(empresa.emite_NFSe) = "S"
				m.nota   = m.nota  + 4000000
			ENDIF

			IF m.nota < 2000000
				m.nota = m.nota + 2000000
			ENDIF
			PrmCopInicio   	= m.nota
			PrmCopFim    	= m.nota
		CASE PrmTpCopia = "NOTA"
			IF PrmCopInicio > 0
				m.nota          = PrmCopInicio
			ELSE
				m.nota     		= empresa.nota + 1

				IF UPPER(empresa.emite_NFe) = "S"
					m.nota   = m.nota  + 3000000
				ENDIF

			ENDIF


			PrmCopInicio   	= m.nota
			PrmCopFim    	= m.nota

	ENDCASE
	m.doc_cobr 		= doc_cobr
	m.referencia	= nota.nota		&& O cupom e a referencia da nota



	DO CASE
		CASE PrmTpCopia = "NF SERVICO"
			IF (m.nota > 2000001 AND m.nota <= 2999999) ;
			   OR  ;
			   (m.nota > 4000001 AND m.nota <= 5999999)
				LNnotaAnterior = VAL(SUBS(STR(m.nota - 1,7),2))
				SELE nota
				SEEK STR(m.empresa,3)+STR(m.nota - 1,7)
				IF !FOUND()
			       WAIT WINDOW ;
			        "Nro Anterior Doc Indicado"+;
			           " para Copia nao emitido. "+STR(m.nota-1,7)
				   SELE orcament
				   RETURN(.f.)
				ENDIF
		    ENDIF




		CASE PrmTpCopia = "NOTA"

			IF (m.nota > 1 AND m.nota <= 999999);
			   OR  ;
			   (m.nota > 3000001 AND m.nota <= 3999999)
				LNnotaAnterior = VAL(SUBS(STR(m.nota - 1,7),2))
				SELE nota
				SEEK STR(m.empresa,3)+STR(m.nota - 1,7)
				IF !FOUND()
			       WAIT WINDOW ;
			        "Nro Anterior Doc Indicado"+;
			           " para Copia nao emitido. "+STR(m.nota-1,7)
				   SELE orcament
			       RETURN(.f.)
			    ENDIF
		    ENDIF

	ENDCASE





	SELE nota
	SEEK STR(m.empresa,3)+STR(m.nota,7)
	IF FOUND()
       WAIT WINDOW "Nro Doc Indicado para Copia ja emitido. "+STR(m.nota,7)
	   SELE orcament
	   RETURN(.f.)
	ENDIF



	LFflgtrans = .t.


	SELE nota
	SET ORDER TO TAG nota
	SEEK STR(PrmEmpresa,3)+STR(PrmCupom,7)

	SELE itemmov
	SET ORDER TO TAG NOTA
	SEEK STR(PrmEmpresa,3)+LEFT(m.operacao,1)+STR(PrmCupom,7)	
    ******************************************************************
   	DO WHILE !eof() AND PrmEmpresa    = itemmov.empresa ;
    				AND PrmCupom      = itemmov.nota ;
    				AND nota.operacao = LEFT(itemmov.operacao,1)
		LNctritens = 0

  		STORE 0 TO	LNsoma_vlr,LNbs_iss,LNvl_iss,LNbs_icms,;
  				LNvl_icms,LNbs_sbbrt,LNbs_subs,LNvl_subs,;
  				LNbs_isent,LNbs_outr,LNbs_isipi,LNbs_ipi,;
  				LNvl_ipi

		SELECT  itemmov



		*---------------------------------------------------*
		*  A PARTIR DE 10/09/2008 SE O NUMERO DE ITENS OCUPAR
		* MAIS DE UM FORMULARIO SERAMANTIDO O MESMO NUMERO DE
		* NF E A TATALIZACAO DAIMPRESSAO OCORRERA NA ULTIMA NF
		*------> REQUISICAO ? JOAO NUNES CONTADOR
		*---------------------------------------------------*
	
    	DO WHILE !eof() AND PrmEmpresa    = itemmov.empresa ;
    				AND PrmCupom          = itemmov.nota ;
    				AND nota.operacao = LEFT(itemmov.operacao,1)



			*---------------------------------------------------*
			*  A PARTIR DE 10/09/2008 SE O NUMERO DE ITENS OCUPAR
			* MAIS DE UM FORMULARIO SERAMANTIDO O MESMO NUMERO DE
			* NF E A TATALIZACAO DAIMPRESSAO OCORRERA NA ULTIMA NF
			*------> REQUISICAO ? JOAO NUNES CONTADOR
			*---------------------------------------------------*
			IF m.dtfat < {28.09.2008}
				IF  LNctritens >= 11
					EXIT
				ENDIF
			ENDIF
			*---------------------------------------------------*

			IF !(LEFT(itemmov.situacao,1) $ "O")
				SKIP
				LOOP
			ENDIF
			DO CASE
				CASE PrmOrientacao = "PRODUTO"
					IF itemmov.tp_mercad = 7 && SERVICO
						SKIP
						LOOP
					ENDIF
				CASE PrmOrientacao = "SERVICO"
					IF itemmov.tp_mercad <> 7 && NAO SERVICO
						SKIP
						LOOP
					ENDIF
			ENDCASE
			*-----------------------------------------------------*
			=RLOCK()
			replace  itemmov.NF_COPIA with m.nota
			*-----------------------------------------------------*
			
    		
*	        LNsoma_vlr = LNsoma_vlr + (vlrvenda - vlripi)

	        LNsoma_vlr = LNsoma_vlr + vlrvenda



    		
			LNbs_iss	= 	LNbs_iss	+	itemmov.base_iss
			LNvl_iss	= 	LNvl_iss	+	itemmov.vlr_iss
			LNbs_icms	= 	LNbs_icms	+	itemmov.base_calc
			LNvl_icms	=	LNvl_icms	+	itemmov.vlr_icms
			LNbs_sbbrt	=	LNbs_sbbrt	+	itemmov.base_sbbrt					
			LNbs_subs 	=	LNbs_subs 	+	itemmov.base_subs 					
			LNvl_subs 	=	LNvl_subs 	+	itemmov.icms_subs 					
			LNbs_isent	=	LNbs_isent	+	itemmov.base_isent					
			LNbs_outr 	=	LNbs_outr 	+	itemmov.base_outr 					
			LNbs_isipi	=	LNbs_isipi	+	itemmov.base_isipi					
			LNbs_ipi  	=	LNbs_ipi  	+	itemmov.base_ipi  					
			LNvl_ipi  	=	LNvl_ipi  	+	itemmov.vlripi   					
			*--------------------------------------------------*
			SELECT  itemmov
			SKIP
			LNctritens = LNctritens + 1
		ENDDO
		******************************************************************
		
	 	m.base_iss	=	LNbs_iss
		m.aliq_iss	=	empresa.aliq_iss
		m.vlr_iss	=	ROUND(m.base_iss * ROUND(m.aliq_iss  / 100,4),2)
		m.totservico=	LNbs_iss

		m.base_icms	=	LNbs_icms
		m.aliq_icms	= 	ORCAMENT.aliq_icms
		m.vlr_icms	=	m.base_icms * m.aliq_icms / 100

		m.base_sbbrt= 	LNbs_sbbrt
		m.base_subs	=	LNbs_subs
		m.icms_subs	=	LNvl_subs

		m.base_isipi=	LNbs_isipi
		m.base_ipi	=	LNbs_ipi
		m.vlr_ipi	=	LNvl_ipi


		m.base_isent=	LNbs_isent
		m.base_outr	=	LNbs_outr

		m.totservico =	LNbs_iss
		m.totproduto =  LNsoma_vlr - m.totservico
		m.total_nota =	LNsoma_vlr + m.icms_subs + ;
						m.vlrfrete + m.vlrseguro + ;
						m.vlr_ipi

		******************************************************************





		m.tipo  		= "CPM"   		&& COPIA DE CUPOM
		m.status 		= 1
		m.operacao 		= "C"			&& COPIA
		SELE nota
		m.orcamento = NOTA.orcamento

		=edithand('SAVE')
		SELE nota
		SET ORDER TO TAG nota
		SEEK STR(PrmEmpresa,3)+STR(PrmCupom,7)

		SELECT  itemmov

		STORE 0 TO 	m.vlrfrete, m.vlrseguro
		m.nota  		= m.nota + 1

	ENDDO
	m.nota  		= m.nota - 1

	*--------------------------------------------------------*
	* AJUSTA DUPLICATAS PARA REFERNCIAREM A NF COPIA DO CUPOM
	*--------------------------------------------------------*
	IF  PrmTpCopia = "NOTA"
		=W_DEFPROC("DUPLICAT.SPR")
		=CRAlteraFatura((m.empresa),(m.referencia),(m.nota))
	ENDIF


	*----------------------------------------------------------------*
	PRIVATE LSobjetivo
	LSobjetivo = NFDefEnvDFis((m.empresa),(m.nota))

	IF LSobjetivo = "EMISSAO" OR LSobjetivo = "ESCRITURACAO"
		IF !(NF_GeraDFis((m.empresa),(m.nota),LSobjetivo,PrmOrientacao ))
		   DO OBJ_MENS.SPR WITH "    ATENCAO!!"+CHR(13)+CHR(13)+;
			"  O Emissor de Documentos Fiscais nao acatou Emissao."+;
		     " Repita o processo e se persistir a negacao entre "+;
		     " em contato com suporte"
		   SELE orcament
		   RETURN(.f.)
		ENDIF
	ENDIF			


	*--------------------------------------------------------*


	SELE empresa					&& altera parametros em empresa

	DO CASE
		CASE PrmSolicitante = "IMPORTACAO"
			m.nota          = PrmCopInicio
			PrmCopFim    	= m.nota

		CASE PrmTpCopia = "NF SERVICO"
			IF !("REC." $ Prmtp_proces)
				*---------------------------------------------------------*
				=UNFempmarca(3,"COPIA EM NF SERVICO","")
				*---------------------------------------------------------*
				DO CASE

					CASE m.nota > 2000000 and m.nota < 3000000
						REPLACE empresa.ult_nfsrvc WITH m.nota - 2000000

					CASE m.nota > 4000000 and m.nota < 5000000
						REPLACE empresa.ult_nfsrvc WITH m.nota - 4000000
				ENDCASE
			ENDIF

		CASE PrmTpCopia = "NOTA"
			IF !("REC." $ Prmtp_proces)
				*---------------------------------------------------------*
				=UNFempmarca(3,"COPIA EM NOTA","")
				*---------------------------------------------------------*
				REPLACE empresa.nota WITH empresa.nota + 1
			ENDIF

	ENDCASE





	PrmCopFim    	= m.nota
	*******************************************************
	*LNcopiaNF		= m.nota		&& INDICA NRO P/ RELNFS
	*******************************************************
	*---------------------------------------------------------------*
	* 				Fim  ---- F A T U R A M E N T O  ----
	*---------------------------------------------------------------*
	IF !EMPTY(LSalias) AND USED(LSalias)
		SELECT &LSalias
	ENDIF
RETURN(.t.)
	






*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _2XH0IRIL1           NFverClasOSI VALID                 º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         NOTA_B,     Record Number:   24    º
*       º Variable:            NFverClasOSI                       º
*       º Called By:           VALID Clause                       º
*       º Object Type:         Push Button                        º
*       º Snippet Number:      23                                 º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*

FUNCTION _2xh0iril1     &&  NFverClasOSI VALID
#REGION 1
return

*---------------------------------------------------------------*


FUNCTION NFverClasOSI
PARAMETERS PrmEmpresa,PrmOrcamento

	*---------------------------------------------------------*
	*=================>>>  VERIFICA CLASSIFICACAO
	*=================>>>  SE O CLIENTES TIVER SIDO ALTERADO
	*---------------------------------------------------------*

	PRIVATE  LFretorno
	LFretorno = .t.


	LStpantnfrot = orcament.tipo   && A Rotina de Atualizcao
								   && pode alterar o tipo
								
	=W_DEFPROC("ORCAMENT.SPR")
	=ORAtlz_Clie(PrmEmpresa,PrmOrcamento)

	*---------------------------------------------------------*
	*  EM IMPORTACAO NAO RECALCULA ITENS
	*---------------------------------------------------------*
	IF LStpantnfrot <> orcament.tipo
  			wp_msg = "Atencao!!! "+CHR(13)+;
   			"  Devido a Alteracoes do Cadasto do Cliente a Operacao "+;
  				chr(13)+;
 				"Foi Reclassificada Para "+orcament.tipo+chr(13)+chr(13)+;
  				" Podendo Afetar o Valor. Verrifique e Repita a Operacao."
		=UPbeeps(.f.,wp_msg)
		SELE ORCAMENT

		*---------------------------------------------------------*
		=W_DEFPROC("ORCAMENT.SPR")
		=ORrecalc_OSI((PrmEmpresa),(PrmOrcamento))
		*---------------------------------------------------------*
		RETURN(.F.)
	ENDIF
RETURN(.T.)


*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _2XH0IRIL6           NFchqLiberCred VALID               º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         NOTA_B,     Record Number:   25    º
*       º Variable:            NFchqLiberCred                     º
*       º Called By:           VALID Clause                       º
*       º Object Type:         Push Button                        º
*       º Snippet Number:      24                                 º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*

FUNCTION _2xh0iril6     &&  NFchqLiberCred VALID
#REGION 1
return

*---------------------------------------------------------------*


FUNCTION NFchqLiberCred
PARAMETERS PrmEmpresa,PrmOrcamento


		*---------------------------------------------------*

		LSl = LEFT(orcament.situacao,1)
		LSr = RIGHT(orcament.situacao,1)



		IF  LSr $ "Do" AND (orcament.tp_parcela > 1)
			WAIT WINDOW ;
			"O orcamento aguarda Liberacao. Execute <Lib.Credito> "
			RETURN(.F.)
		ENDIF

		IF  LSr $ "F"
			WAIT WINDOW ;
				"O orcamento Com Credito Bloqueado. Execute <Lib.Credito> "
			RETURN(.F.)
		ENDIF

		IF LSr $ "D"
			WAIT WINDOW "OSI. Aguardando Liberacao de Credito. "
			RETURN(.F.)
		ENDIF

		*---------------------------------------------------*

	    SELE liberaco
		SET ORDER TO TAG liberacao
		SEEK STR(PrmEmpresa,3)+STR(PrmOrcamento,6)
		IF !FOUND() OR liberaco.situacao <> "LIBE"
			WAIT WINDOW ;
				"NÆo Consta LiberaÆo de Credito Para OSI"
			RETURN(.F.)
		ENDIF
RETURN(.t.)


*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _2XH0IRILB           NFinfoCompl VALID                  º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         NOTA_B,     Record Number:   26    º
*       º Variable:            NFinfoCompl                        º
*       º Called By:           VALID Clause                       º
*       º Object Type:         Push Button                        º
*       º Snippet Number:      25                                 º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*

FUNCTION _2xh0irilb     &&  NFinfoCompl VALID
#REGION 1
return

*---------------------------------------------------------------*

FUNCTION NFinfoCompl
PARAMETERS PrmEmpresa,PrmOrcamento

	*****************************************************************
	* 				Inicio Informacoes Complementares
	*****************************************************************
	*------------------------------------------------------------------*
	LFretorno = .t.  		&& CASO SEJA CANCELADO VOLTA .F.
	HIDE WINDOW ALL
	*---------------------------------------------------------------*

	DO OBJFATU2.SPR WITH PrmEmpresa,PrmOrcamento,LFretorno

	*---------------------------------------------------------------*

RETURN(LFretorno)


*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _2XH0IRILH           FCHrot_fat VALID                   º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         NOTA_B,     Record Number:   27    º
*       º Variable:            FCHrot_fat                         º
*       º Called By:           VALID Clause                       º
*       º Object Type:         Push Button                        º
*       º Snippet Number:      26                                 º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*

FUNCTION _2xh0irilh     &&  FCHrot_fat VALID
#REGION 1
return

*---------------------------------------------------------------*

PROCEDURE FCHrot_fat
	=UP_fecha("orcament" ,LForcament)
	=UP_fecha("clienc" ,LFclienc)
	=UP_fecha("clientes" ,LFclientes)
	=UP_fecha("liberaco" ,LFliberacao)
	IF !EMPTY(LSalias) AND USED(LSalias)
		SELECT &LSalias
	ENDIF
	POP KEY 			&& reabilita teclas de atalho def. anteriormente
RETURN



*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _2XH0IRILM           NFEnvioParaFat VALID               º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         NOTA_B,     Record Number:   28    º
*       º Variable:            NFEnvioParaFat                     º
*       º Called By:           VALID Clause                       º
*       º Object Type:         Push Button                        º
*       º Snippet Number:      27                                 º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*

FUNCTION _2xh0irilm     &&  NFEnvioParaFat VALID
#REGION 1
return

*---------------------------------------------------------------*

FUNCTION  NFEnvioParaFat
	*------------------------------------------------------------*
	=W_DEFPROC("rotinas.spr")
	*------------------------------------------------------------*

	PUSH KEY CLEAR		&& desabilita teclas de atalho def. anteriormente
	ON KEY LABEL F1		DO HLP2000.SPR WITH  POPUP(),PROMPT(),PROGRAM(),;
							WONTOP(),VARREAD()

	PRIVATE LSsitRequerida  &&   Armazena a SITUACAO requrida para
							&& a operacao e repassa a ORloc_orc

	PRIVATE LForcament,LFclienc,LFclientes,LFliberacao
	PRIVATE LSalias

	*------------------------------------------------------------*
	LSalias  		= ALIAS()  && P/ RETORNAR A AREA ANTERIOR
	*------------------------------------------------------------*
	LForcament		= NetArq("orcament")
	LFclienc		= NetArq("clienc")
	LFclientes		= NetArq("clientes")
	LFliberacao		= NetArq("liberaco")
	*--------------------------------------------------------
    IF (LForcament+LFclienc+LFclientes) > 100000  && HOUVE FALHA ABERT
		DO FCHrot_fat
		RETURN(.f.)
	ENDIF



	*****************************************************************
	* 				Inicio Verificacao de Requisitos				*
	*****************************************************************
	IF TYPE("LNecf") = "U"
		LNecf	=	0
	ENDIF

	LSsitRequerida =  "M"

	CLEAR TYPEAHEAD

	SELE orcament
	*------------------------------------------------------------*
	=W_DEFPROC("ORCAMENT.SPR")
	DO ORloc_orc WITH LSsitRequerida
	*------------------------------------------------------------*
	IF  LASTKEY() = 27
		DO FCHrot_fat
		RETURN(.f.)
	ENDIF
	CLEAR TYPEAHEAD




	LNregvolta = RECNO()


	IF orcament.valor = 0
		IF !fox_alert("Orcamento com VALOR = 0. [ Continua ? ]")
			DO FCHrot_fat
			RETURN(.f.)
		ENDIF
	ENDIF

	*----------------------------------------------------------------*
	IF !NFverClasOSI(orcament.empresa,orcament.orcamento)
		DO FCHrot_fat
		RETURN(.F.)
	ENDIF
	*----------------------------------------------------------------*

	IF !NFchqLiberCred(orcament.empresa,orcament.orcamento)
		DO FCHrot_fat
		RETURN(.F.)
	ENDIF

	*----------------------------------------------------------------*


	IF !NFinfoCompl(orcament.empresa,orcament.orcamento)
		DO FCHrot_fat
		RETURN(.F.)
	ENDIF



	SELE orcament

	*****************************************************************
	LFretorno = .t.
	LFretorno = NFregEnvioFat(orcament.empresa, orcament.orcamento)

	DO FCHrot_fat
	UNLOCK ALL

RETURN(LFretorno)






*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _2XH0IRILN           NFRecuperaFat VALID                º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         NOTA_B,     Record Number:   30    º
*       º Variable:            NFRecuperaFat                      º
*       º Called By:           VALID Clause                       º
*       º Object Type:         Push Button                        º
*       º Snippet Number:      28                                 º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*

FUNCTION _2xh0iriln     &&  NFRecuperaFat VALID
#REGION 1
return

*---------------------------------------------------------------*

FUNCTION  NFRecuperaFat
	PARAMETERS  LSsolicitante,LSemcaminhar
	*------------------------------------------------------------*
	=W_DEFPROC("rotinas.spr")
	*------------------------------------------------------------*

	PUSH KEY CLEAR		&& desabilita teclas de atalho def. anteriormente
	ON KEY LABEL F1		DO HLP2000.SPR WITH  POPUP(),PROMPT(),PROGRAM(),;
							WONTOP(),VARREAD()

	PRIVATE LStp_proces		&& = "CUPOM", "NOTA", "NOTA/CUPOM",
							&&   "RECUP.CUPOM", "RECUP.NOTA",
							&&			 "RECUP.NOTA/CUPOM"
	PRIVATE LFservico		&&   INDICA SE EXISTE SERVICO P/ FATURAR
	PRIVATE LFflagtrans		&&   INDICA SITUACAO DE CONCLUSAO DO PROCESSO
	PRIVATE LSsitRequerida  &&   Armazena a SITUACAO requrida para
							&& a operacao e repassa a ORloc_orc

	PRIVATE LForcament,LFclienc,LFclientes,LFliberacao
	PRIVATE LSalias

	*------------------------------------------------------------*
	LSalias  		= ALIAS()  && P/ RETORNAR A AREA ANTERIOR
	*------------------------------------------------------------*
	LForcament		= NetArq("orcament")
	LFclienc		= NetArq("clienc")
	LFclientes		= NetArq("clientes")
	LFliberacao		= NetArq("liberaco")
	*--------------------------------------------------------
    IF (LForcament+LFclienc+LFclientes) > 100000  && HOUVE FALHA ABERT
		DO FCHrot_fat
		RETURN(.f.)
	ENDIF



	*****************************************************************
	* 				Inicio Verificacao de Requisitos				*
	*****************************************************************
	IF TYPE("LNecf") = "U"
		LNecf	=	0
	ENDIF
	LSsitRequerida = ""

	LSsitRequerida =  "AIMo"


	CLEAR TYPEAHEAD

	SELE orcament
	IF !EMPTY(LSsitRequerida)
		*------------------------------------------------------------*
		=W_DEFPROC("ORCAMENT.SPR")
		DO ORloc_orc WITH LSsitRequerida
		*------------------------------------------------------------*
		IF  LASTKEY() = 27
			DO FCHrot_fat
			RETURN(.f.)
		ENDIF
	ENDIF
	CLEAR TYPEAHEAD

	LNregvolta = RECNO()



	IF orcament.valor = 0
		IF !fox_alert("Orcamento com VALOR = 0. [ Continua ? ]")
			DO FCHrot_fat
			RETURN(.f.)
		ENDIF
	ENDIF




	*----------------------------------------------------------------*
	IF !NFverClasOSI(orcament.empresa,orcament.orcamento)
		DO FCHrot_fat
		RETURN(.F.)
	ENDIF

	*----------------------------------------------------------------*


	*----------------------------------------------------------------*


	SELE orcament

	*****************************************************************
	* 				Fim Informacoes Complementares
	*****************************************************************
	LFretorno = .t.




	DO SVD0205.spr with;
			 orcament.empresa,orcament.orcamento,LFretorno


	IF LFretorno
		LFretorno = NFProcessFat(orcament.empresa,;
					 orcament.orcamento,LSsolicitante)
	ENDIF


	DO FCHrot_fat
	UNLOCK ALL
RETURN(LFretorno)






*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _2XH0IRIM1           ULGerCupom VALID                   º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         NOTA_B,     Record Number:   31    º
*       º Variable:            ULGerCupom                         º
*       º Called By:           VALID Clause                       º
*       º Object Type:         Push Button                        º
*       º Snippet Number:      29                                 º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*

FUNCTION _2xh0irim1     &&  ULGerCupom VALID
#REGION 1
return
*---------------------------------------------------------------*
FUNCTION ULGerCupom
PARAMETERS LsOrientacao

	LNCtrlCpmIni = LNCtrlCpmIni

	IF !("REC." $ LStp_proces)
		LFabrecupom = .T. 					
	ELSE
		LFabrecupom = .F. 					
	ENDIF

	=W_DEFPROC("NOTA.SPR")
	IF !NFFatura(orcament.empresa,;
		orcament.orcamento,(LNCtrlCpmIni),(LNcupom),;
			(LStp_proces),(m.datanf),;
			(m.horanf),(PrmSolicitante),LNCtrlCpmFim,;
			(LsOrientacao))
		********************************************
		SELE nota
		********************************************
		IF wp_dtsys = wp_dtoper
			IF 	!UPtransacao("ABORTAR")
				WAIT WINDOW ;
					"TRANSACAO NAO PODE SER DESFEITA"+;
					". VER SUPORTE."
			ENDIF			
		ENDIF
		SELE orcament
		RETURN(.F.)
	ENDIF

	*----------------------------------------------------------------*
	PRIVATE LSobjetivo
	LSobjetivo = NFDefEnvDFis(PrmEmpresa,LNCtrlCpmIni)

	IF LSobjetivo = "EMISSAO" OR LSobjetivo = "ESCRITURACAO"
		IF !(NF_GeraDFis(PrmEmpresa,LNCtrlCpmIni,LSobjetivo,(LsOrientacao)))
		   DO OBJ_MENS.SPR WITH "    ATENCAO!!"+CHR(13)+CHR(13)+;
			"  O Emissor de Documentos Fiscais nao acatou o Emissao."+;
		     " Repita o processo e se persistir a negacao entre "+;
		     " em contato com suporte"
		   SELE orcament
		   RETURN(.f.)
		ENDIF
	ENDIF			

	*-----------------------------------------------------------*



	LNCtrlCpmFim = LNCtrlCpmIni

RETURN(.T.)


*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _2XH0IRIM7           ULGerNFSU VALID                    º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         NOTA_B,     Record Number:   32    º
*       º Variable:            ULGerNFSU                          º
*       º Called By:           VALID Clause                       º
*       º Object Type:         Push Button                        º
*       º Snippet Number:      30                                 º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*

FUNCTION _2xh0irim7     &&  ULGerNFSU VALID
#REGION 1
return
*---------------------------------------------------------------*
FUNCTION ULGerNFSU
PARAMETERS LsOrientacao

	PRIVATE LNNroDocFiscal


	LNnfinicio 	   = LNnfinicio
	LNNroDocFiscal = LNnfinicio

	LFabrecupom = .F. 					
	=W_DEFPROC("NOTA.SPR")
	IF !NFFatura(orcament.empresa,;
		orcament.orcamento,(LNnfinicio),(LNcupom),;
			(LStp_proces),(m.datanf),;
			(m.horanf),(PrmSolicitante),LNnffim,;
			(LsOrientacao))
		********************************************
		SELE nota
		********************************************
		IF wp_dtsys = wp_dtoper
			IF 	!UPtransacao("ABORTAR")
				WAIT WINDOW ;
					"TRANSACAO NAO PODE SER DESFEITA"+;
					". VER SUPORTE."
			ENDIF			
		ENDIF
		SELE orcament
		RETURN(.F.)
	ENDIF


	*----------------------------------------------------------------*
	PRIVATE LSobjetivo
	LSobjetivo = NFDefEnvDFis(PrmEmpresa,LNnffim)

	IF LSobjetivo = "EMISSAO" OR LSobjetivo = "ESCRITURACAO"
		IF !(NF_GeraDFis(PrmEmpresa,LNnffim,LSobjetivo,(LsOrientacao)))
		   DO OBJ_MENS.SPR WITH "    ATENCAO!!"+CHR(13)+CHR(13)+;
			"  O Emissor de Documentos Fiscais nao acatou Emissao."+;
		     " Repita o processo e se persistir a negacao entre "+;
		     " em contato com suporte"
		   SELE orcament
		   RETURN(.f.)
		ENDIF
	ENDIF			


	*-----------------------------------------------------------*

	*-----------------------------------------------------------*


	LNnffim       = LNnffim
	
RETURN(.T.)


*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _2XH0IRIMC           ULGerServicoNf VALID               º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         NOTA_B,     Record Number:   33    º
*       º Variable:            ULGerServicoNf                     º
*       º Called By:           VALID Clause                       º
*       º Object Type:         Push Button                        º
*       º Snippet Number:      31                                 º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*

FUNCTION _2xh0irimc     &&  ULGerServicoNf VALID
#REGION 1
return
*---------------------------------------------------------------*
FUNCTION ULGerServicoNf
PARAMETERS LsOrientacao

	LsOrientacao = "SERVICO"

	LNnfsrvIni = LNnfsrvIni
	LFabrecupom = .F. 					
	*----------------------------------------------*
	=W_DEFPROC("NOTA.SPR")
	IF !NFFatura(orcament.empresa,orcament.orcamento,;
		(LNnfsrvIni),(LNcupom),(LStp_proces),(m.datanf),;
		(m.horanf),(PrmSolicitante),LNnfsrvFim,;
		LsOrientacao)
		***************************************
		SELE nota
		****************************************
		IF wp_dtsys = wp_dtoper
			IF 	!UPtransacao("ABORTAR")
				WAIT WINDOW ;
					"TRANSACAO NAO PODE SER"+;
					" DESFEITA. VER SUPORTE."
			ENDIF			
		ENDIF
		SELE orcament
		RETURN(.F.)
	ENDIF
	*----------------------------------------------------------------*
	PRIVATE LSobjetivo
	LSobjetivo = NFDefEnvDFis(PrmEmpresa,LNnfsrvFim)

	IF LSobjetivo = "EMISSAO" OR LSobjetivo = "ESCRITURACAO"

		IF !(NF_GeraDFis(PrmEmpresa,LNnfsrvFim,LSobjetivo,LsOrientacao ))
		   DO OBJ_MENS.SPR WITH "    ATENCAO!!"+CHR(13)+CHR(13)+;
			"  O Emissor de Documentos Fiscais nao acatou Emissao."+;
		     " Repita o processo e se persistir a negacao entre "+;
		     " em contato com suporte"
		   SELE orcament
		   RETURN(.f.)
		ENDIF
	ENDIF			

	*-----------------------------------------------------------*


	LNnfsrvFim = LNnfsrvFim
RETURN(.T.)



*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _2XH0IRIMH           NFBloqEmpresa VALID                º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         NOTA_B,     Record Number:   34    º
*       º Variable:            NFBloqEmpresa                      º
*       º Called By:           VALID Clause                       º
*       º Object Type:         Push Button                        º
*       º Snippet Number:      32                                 º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*

FUNCTION _2xh0irimh     &&  NFBloqEmpresa VALID
#REGION 1
return
*---------------------------------------------------------------*
FUNCTION NFBlocEmpresa
PARAMETERS PrmEmpresa,PrmSolicitante
	SELE empresa
	SET ORDER TO TAG empresa

	*********** SINALEIRO PARA NUMERO DA NOTA FISCAL
	*===============>>>>>  funciona como um sinaleiro
	SELECT empresa
	SET ORDER TO TAG empresa
	SEEK orcament.empresa				&& EMPRESA OPERADORA DO SISTEMA
	IF !FOUND()
	   WAIT WINDOW ;
	   	" Recadastrar a Empresa Gereciadora do Sistema <Suporte Sistema>"
	    SELE orcament
		RETURN(.F.)
	ENDIF

	*---------------------------------------------------------------*
	*		Importacao nao controla numero de nota pelo registro
	*	de EMPRESA portanto nao e necessario fazer bloqueio
	*---------------------------------------------------------------*



	IF PrmSolicitante <> "IMPORTACAO"
		IF !REGLOCK()
		   WAIT WINDOW ;
		   			"Nao foi possivel bloquear reg. Empresa p/ parametros"
		    SELE orcament
			RETURN(.F.)
		ENDIF
		IF empresa.FLAGIMPNF <> 4 OR empresa.FLAGIMPCPM <> 4 ;
		   empresa.FLAGIMPSRV <> 4

			DO CASE
				CASE empresa.FLAGIMPNF <> 4
					LSnronf = STR(empresa.nota,6)
					DO OBJ_MENS.SPR WITH ;
					"   ATENCAO !!! " +CHR(13)+CHR(13)+;
					" O Faturamento Anterior Gerou a Capa da NF. "+LSnronf+;
					" mas nao Concluiu com a impressao. CANCELE A"+;
					" NF."+LSnronf+;
					" e CANCELE O FORMULARIO P/ MANTER SEQUENCIA NUMERACAO"
				CASE empresa.FLAGIMPCPM <> 4
					LSnronf    = empresa.ult_cupom 						 				
					IF LSnronf < 1000000
						LSnronf = LSnronf + 1000000
					ENDIF
					LSnronf = STR(LSnronf,6)
					DO OBJ_MENS.SPR WITH ;
						"   ATENCAO !!! " +CHR(13)+CHR(13)+;
					" O Faturamento Anterior Gerou a Capa do REGISTRO "+;
							"DE CUPOM "+;
							" [NF.] Numero "+LSnronf+;
							" mas nao Concluiu com a impressao. CANCELE "+;
							"O REGISTRO"+LSnronf+" Para Proceguir."
				CASE empresa.FLAGIMPSRV <> 4
					LSnronf    = empresa.ult_nfsrvc 						 				
					IF LSnronf < 2000000
						LSnronf = LSnronf + 2000000
					ENDIF
					LSnronf = STR(LSnronf,6)
					DO OBJ_MENS.SPR WITH ;
						"   ATENCAO !!! " +CHR(13)+CHR(13)+;
					" O Faturamento Anterior Gerou a Capa do REGISTRO "+;
							"DE NF. SERVICO "+;
							" [NF.] Numero "+LSnronf+;
							" mas nao Concluiu com a impressao. CANCELE "+;
							"O REGISTRO"+LSnronf+" Para Proceguir."
			ENDCASE
    		SELE orcament
			RETURN(.F.)
		ENDIF
	ENDIF
RETURN(.T.)


*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _2XH0IRIMO           ANTNFGeraDocFiscais VALID          º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         NOTA_B,     Record Number:   36    º
*       º Variable:            ANTNFGeraDocFiscais                º
*       º Called By:           VALID Clause                       º
*       º Object Type:         Push Button                        º
*       º Snippet Number:      33                                 º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*

FUNCTION _2xh0irimo     &&  ANTNFGeraDocFiscais VALID
#REGION 1
return
*---------------------------------------------------------------*

FUNCTION ANTNFGeraDocFiscais
PARAMETERS PrmEmpresa


	IF  "CUPOM" $ LStp_proces
		LsOrientacao = "PRODUTO/SERVICO"
		*--------------------------------------------*

		IF !ULGerCupom()
			RETURN(.F.)
		ENDIF
	ENDIF




	IF "NF SERVICO" $ LStp_proces AND !("COPIA" $ LStp_proces)
		LsOrientacao = "SERVICO"
		*--------------------------------------------*
		IF !ULGerServicoNf()
			RETURN(.F.)
		ENDIF
	ENDIF


	IF  "NOTA" $ LStp_proces AND !("COPIA" $ LStp_proces)
		LsOrientacao = "PRODUTO/SERVICO"
		IF  "NF SERVICO" $ LStp_proces
			LsOrientacao = "PRODUTO"
		ENDIF
		*--------------------------------------------*
		IF !ULGerNFSU()
			RETURN(.F.)
		ENDIF
	ENDIF

RETURN(.T.)


*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _2XH0IRIMT           NFatlzOrcament VALID               º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         NOTA_B,     Record Number:   37    º
*       º Variable:            NFatlzOrcament                     º
*       º Called By:           VALID Clause                       º
*       º Object Type:         Push Button                        º
*       º Snippet Number:      34                                 º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*

FUNCTION _2xh0irimt     &&  NFatlzOrcament VALID
#REGION 1
return
*---------------------------------------------------------------*

FUNCTION NFatlzOrcament

	SELECT orcament
	=REGLOCK(.T.)

	IF PrmSolicitante = "VENDEDOR" OR PrmSolicitante = "CAIXA"
		m.situacao 	= "O"+RIGHT(orcament.situacao,1)
	ELSE
		m.situacao 	= "OC"
	ENDIF



	DO CASE
    	CASE "CUPOM" $ LStp_process
			REPLACE nota     	WITH LNCtrlCpmIni
			IF "NF SERVICO" $ LStp_process
				REPLACE nfservico  	WITH LNnfsrvIni
			ELSE
				REPLACE nfservico  	WITH 0
			ENDIF
    	CASE "NOTA" $ LStp_process
			REPLACE nota     	WITH LNnfinicio
			IF "NF SERVICO" $ LStp_process
				REPLACE nfservico  	WITH LNnfsrvIni
			ELSE
				REPLACE nfservico  	WITH 0
			ENDIF
    	CASE "NF SERVICO" $ LStp_process
			REPLACE nota     	WITH LNnfsrvIni
			REPLACE nfservico  	WITH LNnfsrvIni
	ENDCASE
	
	REPLACE cupom 		WITH m.cupom
	REPLACE dt_fat 		WITH m.datanf
	REPLACE	hora_fat 	WITH m.horanf
	REPLACE qtdnfgerad 	WITH LNnffim - LNnfinicio + 1 && Nro. de NF GERADAS
	***************************
	SET FIELDS TO situacao,dtregis, hregis, usrregis,deletado
	=edithand('REGRAVA')
	CLEAR FIELDS
	SET FIELDS OFF

RETURN(.T.)


*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _2XH0IRIMZ           NF_02ImpCopia VALID                º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         NOTA_B,     Record Number:   41    º
*       º Variable:            NF_02ImpCopia                      º
*       º Called By:           VALID Clause                       º
*       º Object Type:         Push Button                        º
*       º Snippet Number:      35                                 º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*

FUNCTION _2xh0irimz     &&  NF_02ImpCopia VALID
#REGION 1
return
*---------------------------------------------------------------*

FUNCTION NF_02ImpCopia
PARAMETER PrmSolicitante, PrmCupomCopiar
	*------------------------------------------------------------*
	=W_DEFPROC("rotinas.spr")
	PRIVATE LSalias,LFretorno
	PRIVATE LNregMarca
	PRIVATE LFcopySrvAutoriza
	PRIVATE LFcopyN1Autoriza
	PRIVATE LNEmpSelec,LNNotaSelec

	*-----------------------------------------------------------*
	LSalias		= 	ALIAS()
	LFretorno	=	.t.
	*------------------------------------------------------------*
	PRIVATE LSdbant, LNregvolta

	*------------------------------------------------------------*
	LFIMPDESCT = .F.


	LSdbant = ALIAS()

	LNregMarca = 0
	IF TYPE("PrmCupomCopiar") <> "N"
		PrmCupomCopiar = 0
	ENDIF

	
	IF PrmCupomCopiar = 0
		LNregMarca = NFView(" and (nota > 1000000 AND nota < 2000000)")
	ENDIF


	IF LNregMarca  > 0 or PrmCupomCopiar > 0   && SELECIONOU UMA NOTA

		SELE nota
		IF PrmCupomCopiar = 0        && selecionou no browse
			LNregMarca = recno()
			LNEmpSelec = nota.empresa
			LNNotaSelec = nota.Nota

		ELSE
			LNEmpSelec  = wp_empresa
			LNNotaSelec = PrmCupomCopiar
			
		ENDIF


	
		LFcopySrvAutoriza= !NFNfSrvExstCop(LNEmpSelec,LNNotaSelec)
		LFcopyN1Autoriza = !NFNfN1ExstCop(LNEmpSelec,LNNotaSelec)

*        IF wp_empresa =  6 OR ;
*			(LFcopySrvAutoriza OR LFcopyN1Autoriza)

			


        IF (LFcopySrvAutoriza OR LFcopyN1Autoriza)
			    LFretorno = ;
		    	 NFProcessCopia(LNEmpSelec,LNNotaSelec, PrmSolicitante,;
		        	"ROTINA DE COPIA",LFcopySrvAutoriza, LFcopyN1Autoriza)
		ELSE
				WAIT WINDOW "Existem Copias Ativas. <ENTER>"
		ENDIF

	ENDIF

	IF !EMPTY(LSalias) AND USED(LSalias)
		SELECT &LSalias
	ENDIF

RETURN(LFretorno)






*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _2XH0IRIN0           NFAjustTmpItens VALID              º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         NOTA_B,     Record Number:   42    º
*       º Variable:            NFAjustTmpItens                    º
*       º Called By:           VALID Clause                       º
*       º Object Type:         Push Button                        º
*       º Snippet Number:      36                                 º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*

FUNCTION _2xh0irin0     &&  NFAjustTmpItens VALID
#REGION 1
return
*---------------------------------------------------------------*


FUNCTION NFAjustTmpItens
PARAMETERS  PrmArqTmp,PrmEmpresa,PrmNota

	=W_DEFPROC("rotinas.spr")
	PRIVATE LSalias
	PRIVATE LSretorno
	PRIVATE LNNroDup
	PRIVATE LMaxDim
	PRIVATE CtrLinhas
	PRIVATE CtrOrdem
	
	LSalias		= 	ALIAS()
	*-----------------------------------------------------------*



	SELE  &PrmArqTmp
	LMaxDim = Fcount()
    PRIVATE DIMENSION VTItem[LMaxDim]
*	INDEX ON nota,tp_mercad,ordem   TAG nota ADDITIVE
	go top

	COPY TO L:\TMP\TMITProd FOR tp_mercad <> 7

	COPY TO L:\TMP\TMITServ FOR tp_mercad = 7

	SELE 0
	USE L:\TMP\TMITProd alias TMITProd
	

	SELE 0
	USE L:\TMP\TMITServ alias TMITServ
	
	SELE  &PrmArqTmp
	zap
	pack
	
		
	*--------------------------------------------------------------*
	CtrOrdem = 1
	CtrLinhas = 0

	DO WHILE !EOF("TMITProd") OR !EOF("TMITServ")



		*-----------------------------------------
		*--> PREENCHE 21 LINHAS PARA PRODUTO
		*-----------------------------------------
		SELE TMITProd
		CtrLinhas = 0


		DO WHILE !EOF() AND CtrLinhas < 15
			CtrOrdem = CtrOrdem + 1
			CtrLinhas= CtrLinhas + 1

			SCATTER TO VTItem
			SELE  &PrmArqTmp
			APPEND BLANK

			GATHER FROM  VTItem

			REPLACE empresa      WITH PrmEmpresa
			REPLACE nota         WITH PrmNota
			REPLACE nf_copia     WITH PrmNota
			REPLACE ordem        WITH CtrOrdem
			REPLACE CENTROCUST   WITH "PRODUT"    && linha de espaco
*			REPLACE vlrvenda     WITH CtrLinhas
			SELE TMITProd
			skip
		ENDDO

		SELE TMITProd
		SCATTER TO VTItem BLANK

		DO WHILE CtrLinhas  < 15
			CtrOrdem = CtrOrdem + 1
			CtrLinhas= CtrLinhas + 1
			SELE  &PrmArqTmp
			APPEND BLANK

			GATHER FROM  VTItem

			REPLACE empresa      WITH PrmEmpresa
			REPLACE nota         WITH PrmNota
			REPLACE nf_copia     WITH PrmNota
			REPLACE ordem        WITH CtrOrdem
			REPLACE CENTROCUST   WITH "PRODUT"    && linha de espaco
*			REPLACE vlrvenda     WITH CtrLinhas

		
		ENDDO




		*-----------------------------------------
		*--> PREENCHE 3 LINHAS PARA Menssagem
		*-----------------------------------------
		
		SELE  &PrmArqTmp
		x=1

		FOR X = 1 TO 3
			APPEND BLANK
			GATHER FROM  VTItem

			REPLACE empresa      WITH PrmEmpresa
			REPLACE nota         WITH PrmNota
			REPLACE nf_copia     WITH PrmNota
			REPLACE ordem        WITH CtrOrdem

			DO CASE
				CASE X= 1
					REPLACE CENTROCUST   WITH "MSG-01"
				CASE X= 2
					REPLACE CENTROCUST   WITH "MSG-02"
				CASE X= 3
					REPLACE CENTROCUST   WITH "MSG-03"
			ENDCASE
			REPLACE Cst         WITH "*"    && linha de espaco
			CtrOrdem = CtrOrdem + 1
		NEXT
		
		
		
		*-----------------------------------------
		*--> PREENCHE 3 LINHAS PARA intervalo
		*-----------------------------------------


		SELE  &PrmArqTmp
		x=1

		FOR X = 1 TO 3
			APPEND BLANK
			GATHER FROM  VTItem

			REPLACE empresa      WITH PrmEmpresa
			REPLACE nota         WITH PrmNota
			REPLACE nf_copia     WITH PrmNota
			REPLACE ordem        WITH CtrOrdem
			REPLACE CENTROCUST   WITH "ESPACO"    && linha de espaco

			REPLACE Cst         WITH "*"    && linha de espaco

	
			CtrOrdem = CtrOrdem + 1
		NEXT

		*-----------------------------------------
		*--> PREENCHE 12 LINHAS PARA SERVICO
		*-----------------------------------------
		SELE TMITServ
		CtrLinhas = 0

		DO WHILE !EOF() AND CtrLinhas < 11
			CtrOrdem = CtrOrdem + 1
			CtrLinhas= CtrLinhas + 1

			SCATTER TO VTItem
			SELE  &PrmArqTmp
			APPEND BLANK

			GATHER FROM  VTItem


			REPLACE empresa      WITH PrmEmpresa
			REPLACE nota         WITH PrmNota
			REPLACE nf_copia     WITH PrmNota
			REPLACE ordem        WITH CtrOrdem
			REPLACE CENTROCUST   WITH "SERVIC"    && linha de espaco
*			REPLACE vlrvenda     WITH CtrLinhas

			SELE TMITServ
			skip
		ENDDO


		SELE TMITServ
		SCATTER TO VTItem BLANK

		DO WHILE CtrLinhas  < 11
			CtrOrdem = CtrOrdem + 1
			CtrLinhas= CtrLinhas + 1

			SELE  &PrmArqTmp
			APPEND BLANK

			GATHER FROM  VTItem

			REPLACE empresa  WITH PrmEmpresa
			REPLACE nota     WITH PrmNota
			REPLACE nf_copia WITH PrmNota
			REPLACE ordem    WITH CtrOrdem
			REPLACE CENTROCUST   WITH "SERVIC"    && linha de espaco
*			REPLACE vlrvenda     WITH CtrLinhas

		ENDDO
	ENDDO

	SELE TMITProd
	use
	SELE TMITServ
	use


	*--------------------------------------------------------------*
	IF !EMPTY(LSalias) AND USED(LSalias)
		SELECT &LSalias
	ENDIF
RETURN(.t.)






*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _2XH0IRINI           antNF_03ImpFatura VALID            º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         NOTA_B,     Record Number:   43    º
*       º Variable:            antNF_03ImpFatura                  º
*       º Called By:           VALID Clause                       º
*       º Object Type:         Push Button                        º
*       º Snippet Number:      37                                 º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*

FUNCTION _2xh0irini     &&  antNF_03ImpFatura VALID
#REGION 1
return
*---------------------------------------------------------------*

FUNCTION antNF_03ImpFatura
PARAMETERS ;
	LNemp,;
	LNorcament,;
	LStp_process,;
	wp_TipoEcf,;
	LNecf,;
	LNCtrlCupomIni,;
	LNCtrlCupomFim,;
	LNnfinicio,;
	LNnffim,;
	LNnfsrvIni,;
	LNnfsrvFim,;
	LNnfCopInicio,;
	LNnfCopFim,;
	LNSrvCopIni,;
	LNSrvCopFim
			
	*------------------------------------------------------------*
	* CLASSIFICACAO:  [*****]
	*------------------------------------------------------------*
	* OBJETIVO....: 	Controlar impressao NOTA/CUPOM
	*------------------------------------------------------------*
	* COMENTARIO..:
	*				
	*------------------------------------------------------------*
	* OBS........ :
	*------------------------------------------------------------*
	*  TABELAS....:
	*------------------------------------------------------------*
	*  PARAMETROS..:
	*		LNemp..........: Empresa que Esta Faturando
	*		LNorcament.....: Nro da OSI para Faturar
	*		LNNfInicio.....: Numero  Inicial de Nota para Impressao
	*		LNNfFim........: Numero  Final de Nota para Impressao
	*		LStp_process...: Processo definido em NF_02DefProcess
	*		wp_TipoEcf.....: Parametro Repassado para ECF
	*		LNecf..........: Parametro Repassado para ECF
	*------------------------------------------------------------*
	*  RETORNO.....:
	*------------------------------------------------------------*
	* EXEMPLO : CHAMADA DO PROGRAMA SCGC2.prg
	*------------------------------------------------------------*
	=W_DEFPROC("rotinas.spr")
	PRIVATE LSalias,LFretorno
	PRIVATE LNvalor
	PRIVATE LScupom	
	PRIVATE LFcpm
	PRIVATE LSstatus
	PRIVATE LRtrnFileNfe


	SET STEP ON

	*--> PARA DADOS RETORNO NFE
	PRIVATE	  RtnStatus,;
			  RtnRecibo,;
		      RtnProtocolo,;
	          RtnChvNFe,;
	          RtnJstfCanc,;
	          RtnPrtcCanc



	STORE "" TO 	  RtnStatus,;
			  RtnRecibo,;
		      RtnProtocolo,;
	          RtnChvNFe,;
	          RtnJstfCanc,;
	          RtnPrtcCanc


    *--> PARA CONTROLE QUANDO HOUVER IMPRESSAO HIBRIDA
    * NOTA CONVENCIONAL + NFe
    *
	*------------------------------------------------------------*
    PRIVATE LNBkpnfInicio,LNBkpnfCopInicio


	*-----------------------------------------------------------*
	LSalias		= 	ALIAS()
	LFretorno	=	.t.
	LSstatus    = ""
	LRtrnFileNfe = ""
	*------------------------------------------------------------*
	*------------------------------------------------------------*


	IF "REC." $ LStp_proces
		LsOrientacao = "PRODUTO/SERVICO"
		=UNFempmarca(4,LStp_proces,LSOrientacao)
		LsOrientacao = "SERVICO"
		=UNFempmarca(4,LStp_proces,LSOrientacao)
		RETURN(.T.)
	ENDIF
	*------------------------------------------------------------*
	*------------------------------------------------------------*
	*------------------------------------------------------------*
	
	
	SELE empresa
	SET ORDER TO TAG empresa
	SEEK LNemp
	IF !FOUND()
		IF !EMPTY(LSalias) AND USED(LSalias)
			SELECT &LSalias
		ENDIF
		RETURN(.F.)
	ENDIF
	*------------------------------------------------------------*
	SELE clienc
	SET ORDER TO TAG emporca
	SEEK STR(LNemp,3)+STR(LNorcament,6)
	IF !FOUND()
		IF !EMPTY(LSalias) AND USED(LSalias)
			SELECT &LSalias
		ENDIF
		RETURN(.F.)
	ENDIF

	SELE orcament
	SET ORDER TO TAG geral
	SEEK STR(LNemp,3)+STR(LNorcament,6)
	IF !FOUND()
		IF !EMPTY(LSalias) AND USED(LSalias)
			SELECT &LSalias
		ENDIF
		RETURN(.F.)
	ENDIF

	SELE orc_anex
	SET ORDER TO TAG orcamento
	SEEK STR(LNemp,3)+STR(LNorcament,6)
	IF !FOUND()
		IF !EMPTY(LSalias) AND USED(LSalias)
			SELECT &LSalias
		ENDIF
		RETURN(.F.)
	ENDIF


	*--------------------------------------------------------------*
	*****************************************************************
	* 				Inicio ---- Impressao  ----
	*****************************************************************
	IF !(EMPTY(ALLTRIM(wp_impfat)))
		LNmtmp =UPnometmp("tmp",2)
		DELETE FILE &LNmtmp
		RUN &wp_impfat > &LNmtmp
	ELSE
		SET PRINTER TO &wp_prtfat
	ENDIF
	*****************************************************************



	SELE empresa					&& altera parametros em empresa
	=REGLOCK(.T.)

	IF NOT USED("TAB002")
		=NetArq("TAB002") && REABR
	ENDIF
	SELE TAB002
	SET ORDER TO TAG codigo

	SELE usuario
	SET ORDER TO TAG usuario
	SELE transprt
	SET ORDER TO TAG CGC

	SET POINT TO ","
	SET SEPARATOR  TO "."
	m.sOldError=ON('error')
	ON ERROR *
	*--------------------------------------------------
	LNvalor = orcament.valor  && REPASSADO PARA FECHAMENTO DO CUPOM
	*--------------------------------------------------
	*   O cupom  processado em primeiro lugar por poder agregar
	* um numero idefinido de itens
	*-----------------------------------------------------
	*--------------------------------------------------
	LNvalor = orcament.valor  && REPASSADO PARA FECHAMENTO DO CUPOM
	*--------------------------------------------------

	IF  "CUPOM" $ LStp_proces
		LsOrientacao = "PRODUTO/SERVICO"
		SELE nota
		SET ORDER TO TAG NOTA
		SEEK STR(LNemp,3)+STR(LNCtrlCupomIni,7)

		SELE itemmov
		SET ORDER TO TAG itensnota
		SET NEAR ON
		SEEK STR(nota.empresa,3)+nota.OPERACAO+STR(nota.NOTA,7)
		SET NEAR OFF			
		*------------------------------------------------------------*
		*  INICIA GERACAO DE ARQUIVO TEMPORARIO
		*------------------------------------------------------------*
		LSarqtmp 	= "" 			&& EX: C:\TMP\TMP0001
		LSaliastmp 	= "TMP" 		&&     TMP001
		LSaliastmp = UPopentmp(wp_dirtmp,LSarqtmp,LSaliastmp,1)
		IF EMPTY(LSaliastmp)
			WAIT WINDOWS " Nao Foi Gerado Arq TMP. <ENTER> Continua"
			LOOP
	 	ENDIF		

	   	=up_fecha("ITNFSTMP")
		WAIT WINDOW "AGUARDE. Gerando Arq. Temporario." NOWAIT
		SELE itemmov
		COPY TO &LSarqtmp  FOR nota.tipo = itemmov.tipo ;
				WHILE nota.empresa = itemmov.empresa ;
					  AND itemmov.nota	<= LNCtrlCupomFim


		SELE 0
		USE  &LSarqtmp  ALIAS ITNFSTMP EXCL
		INDEX ON nota   TAG nota ADDITIVE
		go top
		*----------------------------------------------------------*
		SELE nota

		SET RELATION TO  operador INTO usuario
		***************************************************

		=W_DEFPROC("ECF.SPR")
		LSstatus=ECFctrlimpcupom((LNCtrlCupomIni),;
		       (LNCtrlCupomFim),(LNvalor), nota.total_nota)

		*-----------------------------------------------------------*
		*   Se nao houve erro "E" e o processo emite so "CUPOM"
		* faz a marca (4) fechando o faturamento
		*-----------------------------------------------------------*


		IF SUBS(LSstatus,7,1) = "E"
		   	=up_fecha("ITNFSTMP")
		  	SELECT &LSalias
			*--------------------------------------------------*
			DO CASE
				CASE "NCN - EXECUTADO" $ UPPER(LSstatus)
					IF !NFCancNCN(LNemp,LNCtrlCupomIni)
						wp_msg = "Cupom "+STR(LNCtrlCupomIni,7)+;
						 " nao foi cacelado. Comande Cancelamento < ENTER >"
						WAIT WINDOWS wp_msg
					   	RETURN(.f.)
					ELSE
						=UNFempmarca(4,LStp_proces,LSOrientacao)
					   	RETURN(.f.)
					ENDIF
				OTHERWISE
					IF !NFCancCupom(LNemp,LNCtrlCupomIni)
						wp_msg = "Cupom "+STR(LNCtrlCupomIni,7)+;
						 " nao foi cacelado. Comande Cancelamento < ENTER >"
						WAIT WINDOWS wp_msg
					   	RETURN(.f.)
					ELSE
						=UNFempmarca(4,LStp_proces,LSOrientacao)
					   	RETURN(.f.)
					ENDIF
					*--------------------------------------------------*
			ENDCASE
		  	SELECT &LSalias
		   	RETURN(.F.)
		ENDIF

		*----------------------------------------------------*
		=UNFempmarca(4,LStp_proces,LSOrientacao)
		*----------------------------------------------------*

	   	=up_fecha("ITNFSTMP")
	ENDIF




	*--------------------------------------------------------*
	*  IMPRESSAO DE NOTA CONVENCIONAL  (NAO NFe)
	*--------------------------------------------------------*
    *----------------------------------------------------------*
    * Se houver impressao hibrida da
    *   (NF Convencional e NFe)
    *    LNnfInicio  deve ser restaurado apos a
    *   impressao convencional
    *----------------------------------------------------------*
	LNBkpnfInicio  = LNnfInicio


	*--> N=NAO H=HOMOLOGACAO
	IF      EMPRESA.EMITE_NFE $ "NH" ;
	    AND "NOTA" $ LStp_proces ;
	    AND !("COPIA" $ LStp_proces) ;
	
	
		LsOrientacao = "PRODUTO/SERVICO"
		IF  "NF SERVICO" $ LStp_proces
			LsOrientacao = "PRODUTO"
		ENDIF

		DO WHILE LNnfinicio  <= LNnffim
			SELE nota
			SET ORDER TO TAG NOTA
			SEEK STR(LNemp,3)+STR(LNnfinicio,7)

			SELECT tipooper
			SET ORDER TO TAG tipo
			SEEK 'S'+nota.tipo
			IF !FOUND()
				SEEK 's'+orcament.tipo
			ENDIF

			SELE itemmov
			SET ORDER TO TAG itensnota
			SET NEAR ON
			SEEK STR(nota.empresa,3)+nota.OPERACAO+STR(nota.NOTA,7)
			SET NEAR OFF			
			*------------------------------------------------------------*
			*  INICIA GERACAO DE ARQUIVO TEMPORARIO
			*------------------------------------------------------------*
			LSarqtmp 	= "" 			&& EX: C:\TMP\TMP0001
			LSaliastmp 	= "TMP" 		&&     TMP001
			LSaliastmp = UPopentmp(wp_dirtmp,LSarqtmp,LSaliastmp,1)
			IF EMPTY(LSaliastmp)
				WAIT WINDOWS " Nao Foi Gerado Arq TMP. <ENTER> Continua"
				LOOP
		 	ENDIF		

		   	=up_fecha("ITNFSTMP")
			WAIT WINDOW "AGUARDE. Gerando Arq. Temporario." NOWAIT
			SELE itemmov
			COPY TO &LSarqtmp  FOR nota.tipo = itemmov.tipo ;
					WHILE nota.empresa = itemmov.empresa ;
						  AND nota.nota	= itemmov.nota
			SELE 0
			USE &LSarqtmp   ALIAS ITNFSTMP EXCL
			INDEX ON nota   TAG nota ADDITIVE


			*-------------------------------------------------*
			*>>>   NOVO LAYOUT COM GRID PARA PRODUTO E OUTRA PARA SERV
			*-------------------------------------------------*
			=NFAjustTmpItens("ITNFSTMP",nota.empresa,nota.nota)

			*-------------------------------------------------*

			LNimpressao = RECCOUNT()
			go top

			*----------------------------------------------------------*
			IF NOT USED("BANCO")
				=NetArq("BANCO") && REABR
			ENDIF

			SELE banco
			SET ORDER TO TAG banco

			SELE nota
			SET RELATION TO NOTA INTO ITNFSTMP
			SET RELATION TO  operador INTO usuario 		 ADDITIVE
			SET RELATION TO  banco INTO banco  			 ADDITIVE

			SET SKIP TO ITNFSTMP
			DO CASE
				CASE   nota.empresa = 2 ;
					OR nota.empresa = 3 ;
					OR nota.empresa = 4 ;
			        OR nota.empresa = 6

					REPORT FORM relnfs6A ;
							WHILE nota.nota = LNnfinicio AND;
	  						nota.empresa = LNemp AND UNFmarcanf(4) ;
	 						NOCONSOLE TO PRINTER

				OTHERWISE
					REPORT FORM relnfs6 ;
							WHILE nota.nota = LNnfinicio AND;
	  						nota.empresa = LNemp AND UNFmarcanf(4) ;
	 							NOCONSOLE TO PRINTER
			ENDCASE

			IF      EMPRESA.EMITE_NFE $ "N"
				*----------------------------------------------------*
				=UNFempmarca(4,LStp_proces,LSOrientacao)
				*----------------------------------------------------*

			ENDIF
		   	=up_fecha("ITNFSTMP")

			LNnfinicio	= LNnfinicio + 1

		ENDDO
	ENDIF


    *----------------------------------------------------------*
	LNnfInicio  = LNBkpnfInicio


	*--------------------------------------------------------*
	*  IMPRESSAO(XML) DE NFe
	*--------------------------------------------------------*

	*--> S=SIM H=HOMOLOGACAO
	IF      EMPRESA.EMITE_NFE $ "SH" ;
	    AND "NOTA" $ LStp_proces ;
	    AND !("COPIA" $ LStp_proces)



		SELE nota
		SET ORDER TO TAG NOTA
		SEEK STR(LNemp,3)+STR(LNnfinicio,7)
	    m.EMPRESA    =   nota.Empresa
	

		DO CASE
			CASE LNnfinicio > 3000000 AND LNnfinicio < 4000000
			    m.MOD_DOC    =   "55"  && NFe
		
			OTHERWISE			
				=W_DEFPROC("TIPOOPER.SPR")
				LFieldTmp    = ;
					TPGetFieldValue("S",  nota.tipo ,"Cod_Mod_Rf")
			    m.MOD_DOC    = LFieldTmp
		ENDCASE


	    m.COD_IDFORN  =   SPACE(14)
    	m.NRO_DOC     =   nota.nota
	    m.SERIE_DOC   =   LEFT( nota.Serie +"   ",3)

        PRIVATE LFerroNFe
		LFerroNFe = .F.

		=W_DEFPROC("DOCFISCA.SPR")
		LFerroNFe = DFConvrtNFDocFiscal(NOTA.EMPRESA,NOTA.NOTA)

		IF !LFerroNFe
			=W_DEFPROC("DOCFISCA.SPR")
			LFerroNFe =(DFGerXMLDocFiscal(LNemp,m.Mod_Doc,m.COD_IDFORN,;
			  m.NRO_DOC,m.Serie_Doc ))
		ENDIF

		=W_DEFPROC("DOCFISCA.SPR")
		IF !LFerroNFe
		   LFerroNFe = (DFEnviaNFeXML(LNemp,m.Nro_Doc))
		ENDIF

		=W_DEFPROC("DOCFISCA.SPR")
		IF !LFerroNFe
			LSstatus = (DFRespostaNFe;
			      (;
				     m.NRO_DOC,;
				     "ESPERA",;
					  RtnStatus,;
					  RtnRecibo,;
				      RtnProtocolo,;
			          RtnChvNFe,;
			          RtnJstfCanc,;
			          RtnPrtcCanc;
				  );
				)
		ENDIF


		IF !LFerroNFe
			=W_DEFPROC("ORCAMENT.SPR")
			IF ORLerRegistro(LNemp,nota.referencia)
  	    	
	  	    	=ORSetPropVT("NFE_STATUS",RtnStatus)
				=ORSetPropVT("NFE_RECIBO",RtnRecibo)
				=ORSetPropVT("NFE_PROTOC",RtnProtocolo)
				=ORSetPropVT("NFE_CHV",RtnChvNFe)
				=ORSetPropVT("NFEJSTFCAN",RtnJstfCanc)
				=ORSetPropVT("NFEPRTCCAN",RtnPrtcCanc)
				=ORSalvarRegistro()
			ENDIF
		ENDIF

		IF !LFerroNFe
			=W_DEFPROC("NOTA.SPR")
			IF NFLerRegistro(LNemp,LNnfinicio)
	  	    	=NFSetPropVT("NFE_STATUS",RtnStatus)
				=NFSetPropVT("NFE_RECIBO",RtnRecibo)
				=NFSetPropVT("NFE_PROTOC",RtnProtocolo)
				=NFSetPropVT("NFE_CHV",RtnChvNFe)
				=NFSetPropVT("NFEJSTFCAN",RtnJstfCanc)
				=NFSetPropVT("NFEPRTCCAN",RtnPrtcCanc)
				=NFSalvarRegistro()
			ENDIF
		ENDIF

		IF !LFerroNFe
			=W_DEFPROC("DOCFISCA.SPR")
			IF (DFLerRegistro(LNemp,m.Mod_Doc,m.COD_IDFORN,;
				  m.NRO_DOC,m.Serie_Doc ))
	  	    	=DFSetPropVT("NFE_STATUS",RtnStatus)
				=DFSetPropVT("NFE_RECIBO",RtnRecibo)
				=DFSetPropVT("NFE_PROTOC",RtnProtocolo)
				=DFSetPropVT("NFE_CHV",RtnChvNFe)
				=DFSetPropVT("NFEJSTFCAN",RtnJstfCanc)
				=DFSetPropVT("NFEPRTCCAN",RtnPrtcCanc)
				=DFSalvarRegistro()
			ENDIF
		ENDIF
		IF !LFerroNFe
			*----------------------------------------------------*
			=UNFempmarca(4,LStp_proces,LSOrientacao)
			*----------------------------------------------------*
		ENDIF

	ENDIF



	*--------------------------------------------------------*
	*  IMPRESSAO CONVENCIONAL DE COPIA DE CUPOM (NAO NFe)
	*--------------------------------------------------------*


    *----------------------------------------------------------*
    * Se houver impressao hibrida sda copia
    *   (NF Convencional e NFe)
    *    LNnfCopInicio  deve ser restaurado apos a
    *   impressao convencional
    *----------------------------------------------------------*
	LNBkpnfCopInicio  = LNnfCopInicio


 	*--> N=NAO H=HOMOLOGACAO
 	IF      EMPRESA.EMITE_NFE $ "NH" ;
		AND "COPIA EM NOTA" $ LStp_proces
		
		
		LsOrientacao = "PRODUTO/SERVICO"
		IF  "NF SERVICO" $ LStp_proces
			LsOrientacao = "PRODUTO"
		ENDIF

		DO WHILE LNnfCopInicio  <= LNnfCopFim
			SELE nota
			SET ORDER TO TAG NOTA
			SEEK STR(LNemp,3)+STR(LNnfCopInicio,7)

			SELECT tipooper
			SET ORDER TO TAG tipo
			SEEK 'S'+nota.tipo
			IF !FOUND()
				SEEK 's'+orcament.tipo
			ENDIF

			SELE itemmov
			SET ORDER TO TAG itenscopia
			SET NEAR ON
			SEEK STR(nota.empresa,3)+STR(nota.NOTA,7)
			SET NEAR OFF			
			*------------------------------------------------------------*
			*  INICIA GERACAO DE ARQUIVO TEMPORARIO
			*------------------------------------------------------------*
			LSarqtmp 	= "" 			&& EX: C:\TMP\TMP0001
			LSaliastmp 	= "TMP" 		&&     TMP001
			LSaliastmp = UPopentmp(wp_dirtmp,LSarqtmp,LSaliastmp,1)
			IF EMPTY(LSaliastmp)
				WAIT WINDOWS " Nao Foi Gerado Arq TMP. <ENTER> Continua"
				LOOP
		 	ENDIF		


		   	=up_fecha("ITNFSTMP")
			WAIT WINDOW "AGUARDE. Gerando Arq. Temporario." NOWAIT
			SELE itemmov
			COPY TO &LSarqtmp FOR LEFT(itemmov.operacao,1) = "S" ;
					WHILE nota.empresa = itemmov.empresa ;
						  AND nota.nota	= itemmov.nf_copia
			SELE 0
			USE &LSarqtmp   ALIAS ITNFSTMP EXCL
			INDEX ON nf_copia   TAG nota ADDITIVE

			*-------------------------------------------------*
			*>>>   NOVO LAYOUT COM GRID PARA PRODUTO E OUTRA PARA SERV
			*-------------------------------------------------*
			=NFAjustTmpItens("ITNFSTMP",nota.empresa,nota.nota)

			*-------------------------------------------------*

			LNimpressao = RECCOUNT()
			go top
			*----------------------------------------------------------*
			IF NOT USED("BANCO")
				=NetArq("BANCO") && REABR
			ENDIF

			SELE banco
			SET ORDER TO TAG banco

			SELE nota
			SET RELATION TO NOTA INTO ITNFSTMP
			SET RELATION TO  operador INTO usuario 		 ADDITIVE
			SET RELATION TO  banco INTO banco  			 ADDITIVE

			SET SKIP TO ITNFSTMP

			DO CASE
				CASE   nota.empresa = 2 ;
					OR nota.empresa = 3 ;
					OR nota.empresa = 4 ;
			        OR nota.empresa = 6

					REPORT FORM relnfs6A ;
						WHILE nota.nota = LNnfCopInicio AND;
	  					nota.empresa = LNemp AND UNFmarcanf(4) ;
	 						NOCONSOLE TO PRINTER

				OTHERWISE
					REPORT FORM relnfs6 ;
						WHILE nota.nota = LNnfCopInicio AND;
	  					nota.empresa = LNemp AND UNFmarcanf(4) ;
	 						NOCONSOLE TO PRINTER
			ENDCASE


			IF      EMPRESA.EMITE_NFE $ "N"
				*----------------------------------------------------*
				=UNFempmarca(4,LStp_proces,LSOrientacao)
				*----------------------------------------------------*

			ENDIF

		   	=up_fecha("ITNFSTMP")

			LNnfCopInicio  = LNnfCopInicio + 1

		ENDDO
	ENDIF

    *----------------------------------------------------------*
    LNnfCopInicio  = LNBkpnfCopInicio

	*--------------------------------------------------------*
	*  IMPRESSAO(XML) DE COPIA DE CUPOM EM NFe
	*--------------------------------------------------------*


 	*-->S=SIM H=HOMOLOGACAO
 	IF      EMPRESA.EMITE_NFE $ "SH" ;
		AND "COPIA EM NOTA" $ LStp_proces


		SELE nota
		SET ORDER TO TAG NOTA
		SEEK STR(LNemp,3)+STR(LNnfCopInicio,7)
	    m.EMPRESA    =   nota.Empresa
	
		DO CASE
			CASE LNnfCopInicio > 3000000 AND LNnfCopInicio < 4000000
			    m.MOD_DOC    =   "55"  && NFe
		
			OTHERWISE			
				=W_DEFPROC("TIPOOPER.SPR")
				LFieldTmp    = ;
					TPGetFieldValue("S",  nota.tipo ,"Cod_Mod_Rf")
			    m.MOD_DOC    = LFieldTmp
		ENDCASE

	    m.COD_IDFORN  =   SPACE(14)
    	m.NRO_DOC     =   nota.nota
	    m.SERIE_DOC   =   LEFT( nota.Serie +"   ",3)


        PRIVATE LFerroNFe
		LFerroNFe = .F.

		=W_DEFPROC("DOCFISCA.SPR")
		LFerroNFe = DFConvrtNFDocFiscal(NOTA.EMPRESA,NOTA.NOTA)

		IF !LFerroNFe
			=W_DEFPROC("DOCFISCA.SPR")
			LFerroNFe = (DFGerXMLDocFiscal(LNemp,m.Mod_Doc,m.COD_IDFORN,;
			  m.NRO_DOC,m.Serie_Doc ))
		ENDIF

		IF !LFerroNFe
			=W_DEFPROC("DOCFISCA.SPR")
			LFerroNFe = (DFEnviaNFeXML(LNemp,m.Nro_Doc))
		ENDIF

		IF !LFerroNFe
			=W_DEFPROC("DOCFISCA.SPR")
			LSstatus = (DFRespostaNFe;
			      (;
				     m.NRO_DOC,;
				     "ESPERA",;
					  RtnStatus,;
					  RtnRecibo,;
				      RtnProtocolo,;
			          RtnChvNFe,;
			          RtnJstfCanc,;
			          RtnPrtcCanc;
				  );
				)
		ENDIF

		IF !LFerroNFe
			IF NFLerRegistro(LNemp,LNnfinicio)
  		    	=NFSetPropVT("NFE_STATUS",RtnStatus)
				=NFSetPropVT("NFE_RECIBO",RtnRecibo)
				=NFSetPropVT("NFE_PROTOC",RtnProtocolo)
				=NFSetPropVT("NFE_CHV",RtnChvNFe)
					=NFSetPropVT("NFEJSTFCAN",RtnJstfCanc)
				=NFSetPropVT("NFEPRTCCAN",RtnPrtcCanc)
				=NFSalvarRegistro()
			ENDIF
		ENDIF

		IF !LFerroNFe
			=W_DEFPROC("DOCFISCA.SPR")
			IF (DFLerRegistro(LNemp,m.Mod_Doc,m.COD_IDFORN,;
				  m.NRO_DOC,m.Serie_Doc ))
	  	    	=DFSetPropVT("NFE_STATUS",RtnStatus)
				=DFSetPropVT("NFE_RECIBO",RtnRecibo)
				=DFSetPropVT("NFE_PROTOC",RtnProtocolo)
				=DFSetPropVT("NFE_CHV",RtnChvNFe)
				=DFSetPropVT("NFEJSTFCAN",RtnJstfCanc)
				=DFSetPropVT("NFEPRTCCAN",RtnPrtcCanc)
				=DFSalvarRegistro()
			ENDIF
		ENDIF
		IF !LFerroNFe
			*----------------------------------------------------*
			=UNFempmarca(4,LStp_proces,LSOrientacao)
			*----------------------------------------------------*
		ENDIF
	ENDIF


	*---------- IMPRESSAO DE NOTA FISCAL DE SERVICO ------------*
	*****************************************************************
	*--> Redireciona impressora de NOTA FISCAL DE SERVICO
	* APROVEITA CAMPO WP_IMPORC que nao teve  aplicacao no sistema
	*****************************************************************

	IF  "NF SERVICO" $ LStp_proces AND !("COPIA" $ LStp_proces)
		LsOrientacao = "SERVICO"
		IF !(EMPTY(ALLTRIM(wp_imporc)))
			LNmtmp =UPnometmp("tmp",2)
			DELETE FILE &LNmtmp
			RUN &wp_imporc > &LNmtmp
		ELSE
			SET PRINTER TO &wp_prtorc
		ENDIF
		*************************************************************
		*--------------------------------------------------
		DO WHILE LNnfSrvIni  <= LNnfSrvFim
			SELE nota
			SET ORDER TO TAG NOTA
			SEEK STR(LNemp,3)+STR(LNnfsrvIni,7)

			SELECT tipooper
			SET ORDER TO TAG tipo
			SEEK 'S'+nota.tipo
			IF !FOUND()
				SEEK 's'+orcament.tipo
			ENDIF

			SELE itemmov
			SET ORDER TO TAG itensnota
			SET NEAR ON
			SEEK STR(nota.empresa,3)+nota.OPERACAO+STR(nota.NOTA,7)
			SET NEAR OFF			
			*------------------------------------------------------------*
			*  INICIA GERACAO DE ARQUIVO TEMPORARIO
			*------------------------------------------------------------*
			LSarqtmp 	= "" 			&& EX: C:\TMP\TMP0001
			LSaliastmp 	= "TMP" 		&&     TMP001
			LSaliastmp = UPopentmp(wp_dirtmp,LSarqtmp,LSaliastmp,1)
			IF EMPTY(LSaliastmp)
				WAIT WINDOWS " Nao Foi Gerado Arq TMP. <ENTER> Continua"
				LOOP
		 	ENDIF		

			=up_fecha("ITNFSTMP")
			WAIT WINDOW "AGUARDE. Gerando Arq. Temporario." NOWAIT
			SELE itemmov
			COPY TO &LSarqtmp  FOR nota.tipo = itemmov.tipo ;
				WHILE nota.empresa = itemmov.empresa ;
					  AND nota.nota	= itemmov.nota





			SELE 0
			USE &LSarqtmp   ALIAS ITNFSTMP EXCL
			INDEX ON nota   TAG nota ADDITIVE

			LNimpressao = RECCOUNT()
			go top
			*----------------------------------------------------------*
			IF NOT USED("BANCO")
				=NetArq("BANCO") && REABR
			ENDIF

			SELE banco
			SET ORDER TO TAG banco

			SELE nota
			SET RELATION TO NOTA INTO ITNFSTMP
			SET RELATION TO  operador INTO usuario 		 ADDITIVE
			SET RELATION TO  banco INTO banco  			 ADDITIVE

			SET SKIP TO ITNFSTMP

	
			IF wp_dtoper < {01.05.2006}
				REPORT FORM relnfsrv ;
					WHILE nota.nota = LNnfsrvIni AND;
  					nota.empresa = LNemp AND UNFmarcanf(4) ;
						NOCONSOLE TO PRINTER
			ELSE
				REPORT FORM relsrv02 ;
					WHILE nota.nota = LNnfsrvIni AND;
  					nota.empresa = LNemp AND UNFmarcanf(4) ;
	 					NOCONSOLE TO PRINTER
			ENDIF
	
	
	
			*----------------------------------------------------*
			=UNFempmarca(4,LStp_proces,LSOrientacao)
			*----------------------------------------------------*

		   	=up_fecha("ITNFSTMP")
			LNnfsrvIni	= LNnfsrvIni + 1
			
		ENDDO
	ENDIF




	IF  "COPIA EM NF SERVICO" $ LStp_proces
		LsOrientacao = "SERVICO"
		IF !(EMPTY(ALLTRIM(wp_imporc)))
			LNmtmp =UPnometmp("tmp",2)
			DELETE FILE &LNmtmp
			RUN &wp_imporc > &LNmtmp
		ELSE
			SET PRINTER TO &wp_prtorc
		ENDIF
		*************************************************************
		*--------------------------------------------------
		DO WHILE LNSrvCopIni  <= LNSrvCopFim

			SELE nota
			SET ORDER TO TAG NOTA
			SEEK STR(LNemp,3)+STR(LNSrvCopIni,7)

			SELECT tipooper
			SET ORDER TO TAG tipo
			SEEK 'S'+nota.tipo
			IF !FOUND()
				SEEK 's'+orcament.tipo
			ENDIF

			SELE itemmov
			SET ORDER TO TAG itenscopia
			SET NEAR ON
			SEEK STR(nota.empresa,3)+STR(nota.NOTA,7)
			SET NEAR OFF			
			*------------------------------------------------------------*

			*------------------------------------------------------------*
			*  INICIA GERACAO DE ARQUIVO TEMPORARIO
			*------------------------------------------------------------*
			LSarqtmp 	= "" 			&& EX: C:\TMP\TMP0001
			LSaliastmp 	= "TMP" 		&&     TMP001
			LSaliastmp = UPopentmp(wp_dirtmp,LSarqtmp,LSaliastmp,1)
			IF EMPTY(LSaliastmp)
				WAIT WINDOWS " Nao Foi Gerado Arq TMP. <ENTER> Continua"
				LOOP
		 	ENDIF		

	   		=up_fecha("ITNFSTMP")
			WAIT WINDOW "AGUARDE. Gerando Arq. Temporario." NOWAIT
			SELE itemmov
			COPY TO &LSarqtmp FOR LEFT(itemmov.operacao,1) = "S" ;
				WHILE nota.empresa = itemmov.empresa ;
					  AND nota.nota	= itemmov.nf_copia
			SELE 0
			USE &LSarqtmp   ALIAS ITNFSTMP EXCL
			INDEX ON nf_copia   TAG nota ADDITIVE

			LNimpressao = RECCOUNT()
			go top
			*----------------------------------------------------------*
			IF NOT USED("BANCO")
				=NetArq("BANCO") && REABR
			ENDIF

			SELE banco
			SET ORDER TO TAG banco

			SELE nota
			SET RELATION TO NOTA INTO ITNFSTMP
			SET RELATION TO  operador INTO usuario 		 ADDITIVE
			SET RELATION TO  banco INTO banco  			 ADDITIVE

			SET SKIP TO ITNFSTMP

	
			IF wp_dtoper < {01.05.2006}
				REPORT FORM relnfsrv ;
					WHILE nota.nota = LNSrvCopIni AND;
  					nota.empresa = LNemp AND UNFmarcanf(4) ;
	 					NOCONSOLE TO PRINTER
			ELSE
				REPORT FORM relsrv02 ;
					WHILE nota.nota = LNSrvCopIni  AND;
  					nota.empresa = LNemp AND UNFmarcanf(4) ;
	 					NOCONSOLE TO PRINTER
			ENDIF

			*----------------------------------------------------*
			=UNFempmarca(4,LStp_proces,LSOrientacao)
			*----------------------------------------------------*
		   	=up_fecha("ITNFSTMP")

			LNSrvCopIni	= LNSrvCopIni + 1
		ENDDO
	ENDIF

	=W_DEFPROC("rotinas.spr")




	SELE NOTA
	SET RELATION TO
	ON ERROR &sOldError

	****  SO PARA FECHAR ARQUIVO P/ IMP
	IF !(EMPTY(ALLTRIM(wp_imposi)))
		LNmtmp =UPnometmp("ost",2)
		DELETE FILE &LNmtmp
		RUN &wp_imposi > &LNmtmp
	ENDIF
	SET PRINTER TO &wp_prtosi

	SET PRINTER TO SET('PRINTER',1)
	SET RELATION TO
	SET POINT TO
	SET SEPARATOR  TO
	*--------------------------------------------------------------*
	IF !EMPTY(LSalias) AND USED(LSalias)
		SELECT &LSalias
	ENDIF
RETURN(LFretorno)






*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _2XH0IRINJ           NFLinhaProd VALID                  º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         NOTA_B,     Record Number:   44    º
*       º Variable:            NFLinhaProd                        º
*       º Called By:           VALID Clause                       º
*       º Object Type:         Push Button                        º
*       º Snippet Number:      38                                 º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*

FUNCTION _2xh0irinj     &&  NFLinhaProd VALID
#REGION 1
return
*---------------------------------------------------------------*


FUNCTION NFLinhaProd
PARAMETERS PrmLinha



PRIVATE Linha,LScodigo,LsDescricao,LNQtde,LNvlrUnit,LNAlqIPI


LScodigo    = IIF(LEFT(itnfstmp.codigo,5)="99999",;
              SPACE(8), LEFT(itnfstmp.codigo,8))


IF !EMPTY(itnfstmp.descrcompl)

	LsDescricao = (UPClasNbm((wp_empresa),(itnfstmp.codigo), ;
		 	  (itnfstmp.origem) ,;
		 	  (RTRIM(itnfstmp.descrcompl));
		 	  ))
ELSE

	LsDescricao = (UPClasNbm((wp_empresa),(itnfstmp.codigo), ;
		 	  (itnfstmp.origem) ,;
		 	  (RTRIM(itnfstmp.descricao)+RTRIM(itnfstmp.descrcompl));
		 	  ))
ENDIF

LsDescricao = LEFT(LsDescricao+SPACE(31),31)

LNQtde      = IIF(tipooper.ch_opera = "1" AND ;
              tipooper.ch_motiv = "3" ,0,itnfstmp.qtde)

IF itnfstmp.qtde = 0
	LNvlrUnit   = 0
ELSE
	LNvlrUnit   = itnfstmp.vlrvenda/ itnfstmp.qtde
	LNvlrUnit   = INT(LNvlrUnit * 100)/100
ENDIF


LNAlqICMS   = IIF(itnfstmp.cst $ "012",INT(itnfstmp.aliq_icms),0)
LNAlqIPI    = IIF(itnfstmp.vlripi > 0,INT(itnfstmp.aliq_ipi),0)



LSCst = IIF(EMPTY(itnfstmp.cst),"   ","0"+CHRTRAN(itnfstmp.cst," ","0")+"0")



DO CASE

	CASE itnfstmp.CENTROCUST  = "PRODUT" && LINHA DA GRID  DE PRODUTO
		Linha = ;
			LScodigo;
		   +space(1);
		   +LsDescricao;
		   +space(1);
		   +itnfstmp.cfo;
		   +space(3);
		   +LSCst;
		   +space(2);
		   +itnfstmp.unidade;
		   +space(6);
		   +TRANSFORM(LNqtde,"@Z 99999") ;
		   +space(2);
		   +TRANSFORM(LNvlrUnit,"@Z 99,999.99") ;
		   +space(5);
		   +TRANSFORM(itnfstmp.vlrvenda,"@Z 999,999.99")
		
		Linha = Linha ;
		   +space(1);
		   +TRANSFORM(LNAlqICMS,"@Z 99") ;
		   +space(4);
		   +TRANSFORM(LNAlqIPI,"@Z 99")

	CASE itnfstmp.CENTROCUST  = "MSG-01"
		Linha = ;
			orc_anex.mens3
	CASE itnfstmp.CENTROCUST  = "MSG-02"
		Linha = ;
			orc_anex.mens1
	CASE itnfstmp.CENTROCUST  = "MSG-03"
		Linha = ;
			orc_anex.mens2
	CASE itnfstmp.CENTROCUST  = "SERVIC" && LINHA DA GRID  DESERVICO
	
		Linha = ;
			LScodigo;
		   +space(1);
		   +LsDescricao;
		   +space(15);
		   +itnfstmp.cfo;
		   +space(2);
		   +LSCst;
		   +space(3);
		   +itnfstmp.unidade;
		   +space(3);
		   +TRANSFORM(LNqtde,"@Z 99999") ;
		   +space(2);
		   +TRANSFORM(LNvlrUnit,"@Z 99,999.99")

		Linha = Linha ;
		   +space(3);
		   +TRANSFORM(itnfstmp.vlrvenda,"@Z 999,999.99")

	OTHERWISE
		LINHA = " "
ENDCASE


RETURN(Linha)






*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _2XH0IRIP6           NFGeraXML_NOTA VALID               º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         NOTA_B,     Record Number:   47    º
*       º Variable:            NFGeraXML_NOTA                     º
*       º Called By:           VALID Clause                       º
*       º Object Type:         Push Button                        º
*       º Snippet Number:      39                                 º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*

FUNCTION _2xh0irip6     &&  NFGeraXML_NOTA VALID
#REGION 1
return
*---------------------------------------------------------------*

FUNCTION NFGeraXML_NOTA
PARAMETERS PrmEmpresa, PrmNota

	PRIVATE NFAlias

	PRIVATE  ;
     PrmSerie,;
	 PrmTipo,;
     RtnNro_Doc,;
	 RtnMod_Doc,;
	 RtnCOD_IDFORN,;
	 RtnSerie_Doc



	=W_DEFPROC("NOTA.SPR")
	NFAlias = NFGetAlias()


	=W_DEFPROC("NOTA.SPR")
	IF !NFLerRegistro(PrmEmpresa,PrmNota)

		MSG = "NF nao localizada ";
		     +str(PrmNota,7);
		     +" <ENTER>"
		WAIT MSG
		RETURN(.F.)
	ENDIF


	PrmSerie   		= &NFAlias .Serie
	PrmTipo    		= &NFAlias .Tipo
	RtnNro_Doc 		= 0
 	RtnMod_Doc		= ""
	RtnCOD_IDFORN	= ""
	RtnSerie_Doc	= ""
	

	=W_DEFPROC("DOCFISCA.SPR")
	=DFDefIDNFDocFiscal(PrmEmpresa,RtnNro_Doc,PrmSerie,PrmTipo,;
					    RtnNro_Doc,RtnMod_Doc,RtnCOD_IDFORN,;
						 RtnSerie_Doc)


	=W_DEFPROC("DOCFISCA.SPR")
	IF !DFGerXMLDocFiscal(PrmEmpresa,RtnMod_Doc,RtnCOD_IDFORN,;
		  PrmNota,RtnSerie_Doc )

	  	WAIT WINDOW "Nao foi possivel gerar XML EFD. <ENTER>"
		RETURN(.f.)
	ENDIF

RETURN(.t.)


*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _2XH0IRIPC           NFEnviaNfe_NOTA VALID              º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         NOTA_B,     Record Number:   48    º
*       º Variable:            NFEnviaNfe_NOTA                    º
*       º Called By:           VALID Clause                       º
*       º Object Type:         Push Button                        º
*       º Snippet Number:      40                                 º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*

FUNCTION _2xh0iripc     &&  NFEnviaNfe_NOTA VALID
#REGION 1
return
*---------------------------------------------------------------*

FUNCTION NFEnviaNfe_NOTA
PARAMETERS PrmEmpresa, PrmNota

	PRIVATE NFAlias

	PRIVATE  ;
     PrmSerie,;
	 PrmTipo,;
     RtnNro_Doc,;
	 RtnMod_Doc,;
	 RtnCOD_IDFORN,;
	 RtnSerie_Doc



	=W_DEFPROC("NOTA.SPR")
	NFAlias = NFGetAlias()


	=W_DEFPROC("NOTA.SPR")
	IF !NFLerRegistro(PrmEmpresa,PrmNota)

		MSG = "NF nao localizada ";
		     +str(PrmNota,7);
		     +" <ENTER>"
		WAIT MSG
		RETURN(.F.)
	ENDIF


	PrmSerie   		= &NFAlias .Serie
	PrmTipo    		= &NFAlias .Tipo
	RtnNro_Doc 		= 0
 	RtnMod_Doc		= ""
	RtnCOD_IDFORN	= ""
	RtnSerie_Doc	= ""
	

	=W_DEFPROC("DOCFISCA.SPR")
	=DFDefIDNFDocFiscal(PrmEmpresa,PrmNota,PrmSerie,PrmTipo,;
					    RtnNro_Doc,RtnMod_Doc,RtnCOD_IDFORN,;
						 RtnSerie_Doc)


	=W_DEFPROC("DOCFISCA.SPR")
	IF !DFGerXMLDocFiscal(PrmEmpresa,RtnMod_Doc,RtnCOD_IDFORN,;
		  RtnNro_Doc,RtnSerie_Doc )

	  	WAIT WINDOW "Nao foi possivel gerar XML EFD. <ENTER>"
		RETURN(.f.)
	ENDIF




	=W_DEFPROC("DOCFISCA.SPR")
	IF !(DFEnviaNFeXML(PrmEmpresa,RtnMod_Doc,RtnNro_Doc))
	  	WAIT WINDOW "Nao foi possivel copiar XML para NFe. <ENTER>"
		RETURN(.f.)
	ENDIF


RETURN(.t.)



*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _2XH0IRIPI           NFRtrnoNfe_NOTA VALID              º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         NOTA_B,     Record Number:   49    º
*       º Variable:            NFRtrnoNfe_NOTA                    º
*       º Called By:           VALID Clause                       º
*       º Object Type:         Push Button                        º
*       º Snippet Number:      41                                 º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*

FUNCTION _2xh0iripi     &&  NFRtrnoNfe_NOTA VALID
#REGION 1
return
*---------------------------------------------------------------*

FUNCTION NFRtrnoNfe_NOTA
PARAMETERS PrmEmpresa, PrmNota, PrmEspera

	PRIVATE NFAlias

	PRIVATE  ;
     PrmSerie,;
	 PrmTipo,;
     RtnNro_Doc,;
	 RtnMod_Doc,;
	 RtnCOD_IDFORN,;
	 RtnSerie_Doc


	PRIVATE  ;
     PrmOrcamento

	IF TYPE("PrmEspera") <> "C" OR EMPTY(PrmEspera)
		PrmEspera = "ESPERA"
	ENDIF


	=W_DEFPROC("NOTA.SPR")
	NFAlias = NFGetAlias()


	=W_DEFPROC("NOTA.SPR")
	IF !NFLerRegistro(PrmEmpresa,PrmNota)

		MSG = "NF nao localizada ";
		     +str(PrmNota,7);
		     +" <ENTER>"
		WAIT MSG
		RETURN(.F.)
	ENDIF


	PrmSerie   		= &NFAlias .Serie
	PrmTipo    		= &NFAlias .Tipo
	RtnNro_Doc 		= 0
 	RtnMod_Doc		= ""
	RtnCOD_IDFORN	= ""
	RtnSerie_Doc	= ""

    PrmOrcamento	= &NFAlias .referencia
	

	=W_DEFPROC("DOCFISCA.SPR")
	=DFDefIDNFDocFiscal(PrmEmpresa,PrmNota,PrmSerie,PrmTipo,;
					    RtnNro_Doc,RtnMod_Doc,RtnCOD_IDFORN,;
						 RtnSerie_Doc)


	*-------------------------------------------------------------*

	*--> PARA DADOS RETORNO NFE
	PRIVATE	  RtnStatus,;
			  RtnRecibo,;
		      RtnProtocolo,;
	          RtnChvNFe,;
	          RtnJstfCanc,;
	          RtnPrtcCanc



	STORE "" TO 	  RtnStatus,;
			  RtnRecibo,;
		      RtnProtocolo,;
	          RtnChvNFe,;
	          RtnJstfCanc,;
	          RtnPrtcCanc




	=W_DEFPROC("DOCFISCA.SPR")

		LSstatus = (DFRespostaNFe;
		      (;
				PrmEmpresa,;
	   			RtnMod_Doc,;
	   			RtnNro_Doc,;
			     PrmEspera,;
				  RtnStatus,;
				  RtnRecibo,;
			      RtnProtocolo,;
		          RtnChvNFe,;
		          RtnJstfCanc,;
		          RtnPrtcCanc;
			  );
			)




	IF  "ERRO" $ LSstatus
		WAIT WINDOW LSstatus  NOWAIT
	ENDIF

	IF PrmTipo <> "CPM"

		=W_DEFPROC("ORCAMENT.SPR")
		IF ORLerRegistro(PrmEmpresa, PrmOrcamento)
	  	    	
    		=ORSetPropVT("NFE_STATUS",RtnStatus)
			=ORSetPropVT("NFE_RECIBO",RtnRecibo)
			=ORSetPropVT("NFE_PROTOC",RtnProtocolo)
			=ORSetPropVT("NFE_CHV",RtnChvNFe)
			=ORSetPropVT("NFEJSTFCAN",RtnJstfCanc)
			=ORSetPropVT("NFEPRTCCAN",RtnPrtcCanc)
			=ORSalvarRegistro()
		ENDIF

	ENDIF


	IF NFLerRegistro(PrmEmpresa,PrmNota)
  	    	
	    	=NFSetPropVT("NFE_STATUS",RtnStatus)
			=NFSetPropVT("NFE_RECIBO",RtnRecibo)
			=NFSetPropVT("NFE_PROTOC",RtnProtocolo)
			=NFSetPropVT("NFE_CHV",RtnChvNFe)
			=NFSetPropVT("NFEJSTFCAN",RtnJstfCanc)
			=NFSetPropVT("NFEPRTCCAN",RtnPrtcCanc)

			=NFSalvarRegistro()
	ENDIF



	=W_DEFPROC("DOCFISCA.SPR")
	IF (DFLerRegistro(PrmEmpresa,RtnMod_Doc,RtnCOD_IDFORN,;
			  RtnNRO_DOC,RtnSerie_Doc ))

 	    	=DFSetPropVT("DFISSTATUS",RtnStatus)
 	    	=DFSetPropVT("NFE_STATUS",RtnStatus)
			=DFSetPropVT("NFE_RECIBO",RtnRecibo)
			=DFSetPropVT("NFE_PROTOC",RtnProtocolo)
			=DFSetPropVT("NFE_CHV",RtnChvNFe)
			=DFSetPropVT("NFEJSTFCAN",RtnJstfCanc)
			=DFSetPropVT("NFEPRTCCAN",RtnPrtcCanc)

			=DFSalvarRegistro()
	ENDIF

RETURN






*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _2XH0IRIPR           antNF_03ImpDocFiscal VALID         º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         NOTA_B,     Record Number:   50    º
*       º Variable:            antNF_03ImpDocFiscal               º
*       º Called By:           VALID Clause                       º
*       º Object Type:         Push Button                        º
*       º Snippet Number:      42                                 º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*

FUNCTION _2xh0iripr     &&  antNF_03ImpDocFiscal VALID
#REGION 1
return
*---------------------------------------------------------------*

FUNCTION antNF_03ImpDocFiscal
PARAMETERS ;
	LNemp,;
	LNorcament,;
	LStp_process,;
	wp_TipoEcf,;
	LNecf,;
	LNCtrlCupomIni,;
	LNCtrlCupomFim,;
	LNnfinicio,;
	LNnffim,;
	LNnfsrvIni,;
	LNnfsrvFim,;
	LNnfCopInicio,;
	LNnfCopFim,;
	LNSrvCopIni,;
	LNSrvCopFim
			
	*------------------------------------------------------------*
	* CLASSIFICACAO:  [*****]
	*------------------------------------------------------------*
	* OBJETIVO....: 	Controlar impressao NOTA/CUPOM
	*------------------------------------------------------------*
	* COMENTARIO..:
	*				
	*------------------------------------------------------------*
	* OBS........ :
	*------------------------------------------------------------*
	*  TABELAS....:
	*------------------------------------------------------------*
	*  PARAMETROS..:
	*		LNemp..........: Empresa que Esta Faturando
	*		LNorcament.....: Nro da OSI para Faturar
	*		LNNfInicio.....: Numero  Inicial de Nota para Impressao
	*		LNNfFim........: Numero  Final de Nota para Impressao
	*		LStp_process...: Processo definido em NF_02DefProcess
	*		wp_TipoEcf.....: Parametro Repassado para ECF
	*		LNecf..........: Parametro Repassado para ECF
	*------------------------------------------------------------*
	*  RETORNO.....:
	*------------------------------------------------------------*
	* EXEMPLO : CHAMADA DO PROGRAMA SCGC2.prg
	*------------------------------------------------------------*
	=W_DEFPROC("rotinas.spr")
	PRIVATE LSalias,LFretorno
	PRIVATE LNvalor
	PRIVATE LScupom	
	PRIVATE LFcpm
	PRIVATE LSstatus
	PRIVATE LRtrnFileNfe


	SET STEP ON

	*--> PARA DADOS RETORNO NFE
	PRIVATE	  RtnStatus,;
			  RtnRecibo,;
		      RtnProtocolo,;
	          RtnChvNFe,;
	          RtnJstfCanc,;
	          RtnPrtcCanc



	STORE "" TO 	  RtnStatus,;
			  RtnRecibo,;
		      RtnProtocolo,;
	          RtnChvNFe,;
	          RtnJstfCanc,;
	          RtnPrtcCanc


    *--> PARA CONTROLE QUANDO HOUVER IMPRESSAO HIBRIDA
    * NOTA CONVENCIONAL + NFe
    *
	*------------------------------------------------------------*
    PRIVATE LNBkpnfInicio,LNBkpnfCopInicio


	*-----------------------------------------------------------*
	LSalias		= 	ALIAS()
	LFretorno	=	.t.
	LSstatus    = ""
	LRtrnFileNfe = ""
	*------------------------------------------------------------*
	*------------------------------------------------------------*


	IF "REC." $ LStp_proces
		LsOrientacao = "PRODUTO/SERVICO"
		=UNFempmarca(4,LStp_proces,LSOrientacao)
		LsOrientacao = "SERVICO"
		=UNFempmarca(4,LStp_proces,LSOrientacao)
		RETURN(.T.)
	ENDIF
	*------------------------------------------------------------*
	*------------------------------------------------------------*
	*------------------------------------------------------------*
	
	
	SELE empresa
	SET ORDER TO TAG empresa
	SEEK LNemp
	IF !FOUND()
		IF !EMPTY(LSalias) AND USED(LSalias)
			SELECT &LSalias
		ENDIF
		RETURN(.F.)
	ENDIF
	*------------------------------------------------------------*
	SELE clienc
	SET ORDER TO TAG emporca
	SEEK STR(LNemp,3)+STR(LNorcament,6)
	IF !FOUND()
		IF !EMPTY(LSalias) AND USED(LSalias)
			SELECT &LSalias
		ENDIF
		RETURN(.F.)
	ENDIF

	SELE orcament
	SET ORDER TO TAG geral
	SEEK STR(LNemp,3)+STR(LNorcament,6)
	IF !FOUND()
		IF !EMPTY(LSalias) AND USED(LSalias)
			SELECT &LSalias
		ENDIF
		RETURN(.F.)
	ENDIF

	SELE orc_anex
	SET ORDER TO TAG orcamento
	SEEK STR(LNemp,3)+STR(LNorcament,6)
	IF !FOUND()
		IF !EMPTY(LSalias) AND USED(LSalias)
			SELECT &LSalias
		ENDIF
		RETURN(.F.)
	ENDIF


	*--------------------------------------------------------------*
	*****************************************************************
	* 				Inicio ---- Impressao  ----
	*****************************************************************
	IF !(EMPTY(ALLTRIM(wp_impfat)))
		LNmtmp =UPnometmp("tmp",2)
		DELETE FILE &LNmtmp
		RUN &wp_impfat > &LNmtmp
	ELSE
		SET PRINTER TO &wp_prtfat
	ENDIF
	*****************************************************************



	SELE empresa					&& altera parametros em empresa
	=REGLOCK(.T.)

	IF NOT USED("TAB002")
		=NetArq("TAB002") && REABR
	ENDIF
	SELE TAB002
	SET ORDER TO TAG codigo

	SELE usuario
	SET ORDER TO TAG usuario
	SELE transprt
	SET ORDER TO TAG CGC

	SET POINT TO ","
	SET SEPARATOR  TO "."
	m.sOldError=ON('error')
	ON ERROR *
	*--------------------------------------------------
	LNvalor = orcament.valor  && REPASSADO PARA FECHAMENTO DO CUPOM
	*--------------------------------------------------
	*   O cupom  processado em primeiro lugar por poder agregar
	* um numero idefinido de itens
	*-----------------------------------------------------
	*--------------------------------------------------
	LNvalor = orcament.valor  && REPASSADO PARA FECHAMENTO DO CUPOM
	*--------------------------------------------------

	IF  "CUPOM" $ LStp_proces
		LsOrientacao = "PRODUTO/SERVICO"
		SELE nota
		SET ORDER TO TAG NOTA
		SEEK STR(LNemp,3)+STR(LNCtrlCupomIni,7)

		SELE itemmov
		SET ORDER TO TAG itensnota
		SET NEAR ON
		SEEK STR(nota.empresa,3)+nota.OPERACAO+STR(nota.NOTA,7)
		SET NEAR OFF			
		*------------------------------------------------------------*
		*  INICIA GERACAO DE ARQUIVO TEMPORARIO
		*------------------------------------------------------------*
		LSarqtmp 	= "" 			&& EX: C:\TMP\TMP0001
		LSaliastmp 	= "TMP" 		&&     TMP001
		LSaliastmp = UPopentmp(wp_dirtmp,LSarqtmp,LSaliastmp,1)
		IF EMPTY(LSaliastmp)
			WAIT WINDOWS " Nao Foi Gerado Arq TMP. <ENTER> Continua"
			LOOP
	 	ENDIF		

	   	=up_fecha("ITNFSTMP")
		WAIT WINDOW "AGUARDE. Gerando Arq. Temporario." NOWAIT
		SELE itemmov
		COPY TO &LSarqtmp  FOR nota.tipo = itemmov.tipo ;
				WHILE nota.empresa = itemmov.empresa ;
					  AND itemmov.nota	<= LNCtrlCupomFim


		SELE 0
		USE  &LSarqtmp  ALIAS ITNFSTMP EXCL
		INDEX ON nota   TAG nota ADDITIVE
		go top
		*----------------------------------------------------------*
		SELE nota

		SET RELATION TO  operador INTO usuario
		***************************************************

		=W_DEFPROC("ECF.SPR")
		LSstatus=ECFctrlimpcupom((LNCtrlCupomIni),;
		       (LNCtrlCupomFim),(LNvalor), nota.total_nota)

		*-----------------------------------------------------------*
		*   Se nao houve erro "E" e o processo emite so "CUPOM"
		* faz a marca (4) fechando o faturamento
		*-----------------------------------------------------------*


		IF SUBS(LSstatus,7,1) = "E"
		   	=up_fecha("ITNFSTMP")
		  	SELECT &LSalias
			*--------------------------------------------------*
			DO CASE
				CASE "NCN - EXECUTADO" $ UPPER(LSstatus)
					IF !NFCancNCN(LNemp,LNCtrlCupomIni)
						wp_msg = "Cupom "+STR(LNCtrlCupomIni,7)+;
						 " nao foi cacelado. Comande Cancelamento < ENTER >"
						WAIT WINDOWS wp_msg
					   	RETURN(.f.)
					ELSE
						=UNFempmarca(4,LStp_proces,LSOrientacao)
					   	RETURN(.f.)
					ENDIF
				OTHERWISE
					IF !NFCancCupom(LNemp,LNCtrlCupomIni)
						wp_msg = "Cupom "+STR(LNCtrlCupomIni,7)+;
						 " nao foi cacelado. Comande Cancelamento < ENTER >"
						WAIT WINDOWS wp_msg
					   	RETURN(.f.)
					ELSE
						=UNFempmarca(4,LStp_proces,LSOrientacao)
					   	RETURN(.f.)
					ENDIF
					*--------------------------------------------------*
			ENDCASE
		  	SELECT &LSalias
		   	RETURN(.F.)
		ENDIF

		*----------------------------------------------------*
		=UNFempmarca(4,LStp_proces,LSOrientacao)
		*----------------------------------------------------*

	   	=up_fecha("ITNFSTMP")
	ENDIF




	*--------------------------------------------------------*
	*  IMPRESSAO DE NOTA CONVENCIONAL  (NAO NFe)
	*--------------------------------------------------------*
    *----------------------------------------------------------*
    * Se houver impressao hibrida da
    *   (NF Convencional e NFe)
    *    LNnfInicio  deve ser restaurado apos a
    *   impressao convencional
    *----------------------------------------------------------*
	LNBkpnfInicio  = LNnfInicio


	*--> N=NAO H=HOMOLOGACAO
	IF      EMPRESA.EMITE_NFE $ "NH" ;
	    AND "NOTA" $ LStp_proces ;
	    AND !("COPIA" $ LStp_proces) ;
	
	
		LsOrientacao = "PRODUTO/SERVICO"
		IF  "NF SERVICO" $ LStp_proces
			LsOrientacao = "PRODUTO"
		ENDIF

		DO WHILE LNnfinicio  <= LNnffim
			SELE nota
			SET ORDER TO TAG NOTA
			SEEK STR(LNemp,3)+STR(LNnfinicio,7)

			SELECT tipooper
			SET ORDER TO TAG tipo
			SEEK 'S'+nota.tipo
			IF !FOUND()
				SEEK 's'+orcament.tipo
			ENDIF

			SELE itemmov
			SET ORDER TO TAG itensnota
			SET NEAR ON
			SEEK STR(nota.empresa,3)+nota.OPERACAO+STR(nota.NOTA,7)
			SET NEAR OFF			
			*------------------------------------------------------------*
			*  INICIA GERACAO DE ARQUIVO TEMPORARIO
			*------------------------------------------------------------*
			LSarqtmp 	= "" 			&& EX: C:\TMP\TMP0001
			LSaliastmp 	= "TMP" 		&&     TMP001
			LSaliastmp = UPopentmp(wp_dirtmp,LSarqtmp,LSaliastmp,1)
			IF EMPTY(LSaliastmp)
				WAIT WINDOWS " Nao Foi Gerado Arq TMP. <ENTER> Continua"
				LOOP
		 	ENDIF		

		   	=up_fecha("ITNFSTMP")
			WAIT WINDOW "AGUARDE. Gerando Arq. Temporario." NOWAIT
			SELE itemmov
			COPY TO &LSarqtmp  FOR nota.tipo = itemmov.tipo ;
					WHILE nota.empresa = itemmov.empresa ;
						  AND nota.nota	= itemmov.nota
			SELE 0
			USE &LSarqtmp   ALIAS ITNFSTMP EXCL
			INDEX ON nota   TAG nota ADDITIVE


			*-------------------------------------------------*
			*>>>   NOVO LAYOUT COM GRID PARA PRODUTO E OUTRA PARA SERV
			*-------------------------------------------------*
			=NFAjustTmpItens("ITNFSTMP",nota.empresa,nota.nota)

			*-------------------------------------------------*

			LNimpressao = RECCOUNT()
			go top

			*----------------------------------------------------------*
			IF NOT USED("BANCO")
				=NetArq("BANCO") && REABR
			ENDIF

			SELE banco
			SET ORDER TO TAG banco

			SELE nota
			SET RELATION TO NOTA INTO ITNFSTMP
			SET RELATION TO  operador INTO usuario 		 ADDITIVE
			SET RELATION TO  banco INTO banco  			 ADDITIVE

			SET SKIP TO ITNFSTMP
			DO CASE
				CASE   nota.empresa = 2 ;
					OR nota.empresa = 3 ;
					OR nota.empresa = 4 ;
			        OR nota.empresa = 6

					REPORT FORM relnfs6A ;
							WHILE nota.nota = LNnfinicio AND;
	  						nota.empresa = LNemp AND UNFmarcanf(4) ;
	 						NOCONSOLE TO PRINTER

				OTHERWISE
					REPORT FORM relnfs6 ;
							WHILE nota.nota = LNnfinicio AND;
	  						nota.empresa = LNemp AND UNFmarcanf(4) ;
	 							NOCONSOLE TO PRINTER
			ENDCASE

			IF      EMPRESA.EMITE_NFE $ "N"
				*----------------------------------------------------*
				=UNFempmarca(4,LStp_proces,LSOrientacao)
				*----------------------------------------------------*

			ENDIF
		   	=up_fecha("ITNFSTMP")

			LNnfinicio	= LNnfinicio + 1

		ENDDO
	ENDIF


    *----------------------------------------------------------*
	LNnfInicio  = LNBkpnfInicio


	*--------------------------------------------------------*
	*  IMPRESSAO(XML) DE NFe
	*--------------------------------------------------------*

	*--> S=SIM H=HOMOLOGACAO
	IF      EMPRESA.EMITE_NFE $ "SH" ;
	    AND "NOTA" $ LStp_proces ;
	    AND !("COPIA" $ LStp_proces)



		SELE nota
		SET ORDER TO TAG NOTA
		SEEK STR(LNemp,3)+STR(LNnfinicio,7)
	    m.EMPRESA    =   nota.Empresa
	

		DO CASE
			CASE LNnfinicio > 3000000 AND LNnfinicio < 4000000
			    m.MOD_DOC    =   "55"  && NFe
		
			OTHERWISE			
				=W_DEFPROC("TIPOOPER.SPR")
				LFieldTmp    = ;
					TPGetFieldValue("S",  nota.tipo ,"Cod_Mod_Rf")
			    m.MOD_DOC    = LFieldTmp
		ENDCASE


	    m.COD_IDFORN  =   SPACE(14)
    	m.NRO_DOC     =   nota.nota
	    m.SERIE_DOC   =   LEFT( nota.Serie +"   ",3)

        PRIVATE LFerroNFe
		LFerroNFe = .F.

		=W_DEFPROC("DOCFISCA.SPR")
		LFerroNFe = DFConvrtNFDocFiscal(NOTA.EMPRESA,NOTA.NOTA)

		IF !LFerroNFe
			=W_DEFPROC("DOCFISCA.SPR")
			LFerroNFe =(DFGerXMLDocFiscal(LNemp,m.Mod_Doc,m.COD_IDFORN,;
			  m.NRO_DOC,m.Serie_Doc ))
		ENDIF

		=W_DEFPROC("DOCFISCA.SPR")
		IF !LFerroNFe
		   LFerroNFe = (DFEnviaNFeXML(LNemp,m.Nro_Doc))
		ENDIF

		=W_DEFPROC("DOCFISCA.SPR")
		IF !LFerroNFe
			LSstatus = (DFRespostaNFe;
			      (;
				     m.NRO_DOC,;
				     "ESPERA",;
					  RtnStatus,;
					  RtnRecibo,;
				      RtnProtocolo,;
			          RtnChvNFe,;
			          RtnJstfCanc,;
			          RtnPrtcCanc;
				  );
				)
		ENDIF


		IF !LFerroNFe
			=W_DEFPROC("ORCAMENT.SPR")
			IF ORLerRegistro(LNemp,nota.referencia)
  	    	
	  	    	=ORSetPropVT("NFE_STATUS",RtnStatus)
				=ORSetPropVT("NFE_RECIBO",RtnRecibo)
				=ORSetPropVT("NFE_PROTOC",RtnProtocolo)
				=ORSetPropVT("NFE_CHV",RtnChvNFe)
				=ORSetPropVT("NFEJSTFCAN",RtnJstfCanc)
				=ORSetPropVT("NFEPRTCCAN",RtnPrtcCanc)
				=ORSalvarRegistro()
			ENDIF
		ENDIF

		IF !LFerroNFe
			=W_DEFPROC("NOTA.SPR")
			IF NFLerRegistro(LNemp,LNnfinicio)
	  	    	=NFSetPropVT("NFE_STATUS",RtnStatus)
				=NFSetPropVT("NFE_RECIBO",RtnRecibo)
				=NFSetPropVT("NFE_PROTOC",RtnProtocolo)
				=NFSetPropVT("NFE_CHV",RtnChvNFe)
				=NFSetPropVT("NFEJSTFCAN",RtnJstfCanc)
				=NFSetPropVT("NFEPRTCCAN",RtnPrtcCanc)
				=NFSalvarRegistro()
			ENDIF
		ENDIF

		IF !LFerroNFe
			=W_DEFPROC("DOCFISCA.SPR")
			IF (DFLerRegistro(LNemp,m.Mod_Doc,m.COD_IDFORN,;
				  m.NRO_DOC,m.Serie_Doc ))
	  	    	=DFSetPropVT("NFE_STATUS",RtnStatus)
				=DFSetPropVT("NFE_RECIBO",RtnRecibo)
				=DFSetPropVT("NFE_PROTOC",RtnProtocolo)
				=DFSetPropVT("NFE_CHV",RtnChvNFe)
				=DFSetPropVT("NFEJSTFCAN",RtnJstfCanc)
				=DFSetPropVT("NFEPRTCCAN",RtnPrtcCanc)
				=DFSalvarRegistro()
			ENDIF
		ENDIF
		IF !LFerroNFe
			*----------------------------------------------------*
			=UNFempmarca(4,LStp_proces,LSOrientacao)
			*----------------------------------------------------*
		ENDIF

	ENDIF


	*---------- IMPRESSAO DE NOTA FISCAL DE SERVICO ------------*
	*****************************************************************
	*--> Redireciona impressora de NOTA FISCAL DE SERVICO
	* APROVEITA CAMPO WP_IMPORC que nao teve  aplicacao no sistema
	*****************************************************************

	IF  "NF SERVICO" $ LStp_proces AND !("COPIA" $ LStp_proces)
		LsOrientacao = "SERVICO"
		IF !(EMPTY(ALLTRIM(wp_imporc)))
			LNmtmp =UPnometmp("tmp",2)
			DELETE FILE &LNmtmp
			RUN &wp_imporc > &LNmtmp
		ELSE
			SET PRINTER TO &wp_prtorc
		ENDIF
		*************************************************************
		*--------------------------------------------------
		DO WHILE LNnfSrvIni  <= LNnfSrvFim
			SELE nota
			SET ORDER TO TAG NOTA
			SEEK STR(LNemp,3)+STR(LNnfsrvIni,7)

			SELECT tipooper
			SET ORDER TO TAG tipo
			SEEK 'S'+nota.tipo
			IF !FOUND()
				SEEK 's'+orcament.tipo
			ENDIF

			SELE itemmov
			SET ORDER TO TAG itensnota
			SET NEAR ON
			SEEK STR(nota.empresa,3)+nota.OPERACAO+STR(nota.NOTA,7)
			SET NEAR OFF			
			*------------------------------------------------------------*
			*  INICIA GERACAO DE ARQUIVO TEMPORARIO
			*------------------------------------------------------------*
			LSarqtmp 	= "" 			&& EX: C:\TMP\TMP0001
			LSaliastmp 	= "TMP" 		&&     TMP001
			LSaliastmp = UPopentmp(wp_dirtmp,LSarqtmp,LSaliastmp,1)
			IF EMPTY(LSaliastmp)
				WAIT WINDOWS " Nao Foi Gerado Arq TMP. <ENTER> Continua"
				LOOP
		 	ENDIF		

			=up_fecha("ITNFSTMP")
			WAIT WINDOW "AGUARDE. Gerando Arq. Temporario." NOWAIT
			SELE itemmov
			COPY TO &LSarqtmp  FOR nota.tipo = itemmov.tipo ;
				WHILE nota.empresa = itemmov.empresa ;
					  AND nota.nota	= itemmov.nota


			SELE 0
			USE &LSarqtmp   ALIAS ITNFSTMP EXCL
			INDEX ON nota   TAG nota ADDITIVE

			LNimpressao = RECCOUNT()
			go top
			*----------------------------------------------------------*
			IF NOT USED("BANCO")
				=NetArq("BANCO") && REABR
			ENDIF

			SELE banco
			SET ORDER TO TAG banco

			SELE nota
			SET RELATION TO NOTA INTO ITNFSTMP
			SET RELATION TO  operador INTO usuario 		 ADDITIVE
			SET RELATION TO  banco INTO banco  			 ADDITIVE

			SET SKIP TO ITNFSTMP

	
			IF wp_dtoper < {01.05.2006}
				REPORT FORM relnfsrv ;
					WHILE nota.nota = LNnfsrvIni AND;
  					nota.empresa = LNemp AND UNFmarcanf(4) ;
						NOCONSOLE TO PRINTER
			ELSE
				REPORT FORM relsrv02 ;
					WHILE nota.nota = LNnfsrvIni AND;
  					nota.empresa = LNemp AND UNFmarcanf(4) ;
	 					NOCONSOLE TO PRINTER
			ENDIF
	
	
	
			*----------------------------------------------------*
			=UNFempmarca(4,LStp_proces,LSOrientacao)
			*----------------------------------------------------*

		   	=up_fecha("ITNFSTMP")
			LNnfsrvIni	= LNnfsrvIni + 1
			
		ENDDO
	ENDIF



	=W_DEFPROC("rotinas.spr")



	SELE NOTA
	SET RELATION TO
	ON ERROR &sOldError

	****  SO PARA FECHAR ARQUIVO P/ IMP
	IF !(EMPTY(ALLTRIM(wp_imposi)))
		LNmtmp =UPnometmp("ost",2)
		DELETE FILE &LNmtmp
		RUN &wp_imposi > &LNmtmp
	ENDIF
	SET PRINTER TO &wp_prtosi

	SET PRINTER TO SET('PRINTER',1)
	SET RELATION TO
	SET POINT TO
	SET SEPARATOR  TO
	*--------------------------------------------------------------*
	IF !EMPTY(LSalias) AND USED(LSalias)
		SELECT &LSalias
	ENDIF
RETURN(LFretorno)






*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _2XH0IRIQL           antNF_ImpCopDocFiscal VALID        º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         NOTA_B,     Record Number:   51    º
*       º Variable:            antNF_ImpCopDocFiscal              º
*       º Called By:           VALID Clause                       º
*       º Object Type:         Push Button                        º
*       º Snippet Number:      43                                 º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*

FUNCTION _2xh0iriql     &&  antNF_ImpCopDocFiscal VALID
#REGION 1
return
*---------------------------------------------------------------*

FUNCTION antNF_ImpCopDocFiscal
PARAMETERS ;
	LNemp,;
	LNorcament,;
	LStp_process,;
	wp_TipoEcf,;
	LNecf,;
	LNCtrlCupomIni,;
	LNCtrlCupomFim,;
	LNnfinicio,;
	LNnffim,;
	LNnfsrvIni,;
	LNnfsrvFim,;
	LNnfCopInicio,;
	LNnfCopFim,;
	LNSrvCopIni,;
	LNSrvCopFim
			
	*------------------------------------------------------------*
	* CLASSIFICACAO:  [*****]
	*------------------------------------------------------------*
	* OBJETIVO....: 	Controlar impressao NOTA/CUPOM
	*------------------------------------------------------------*
	* COMENTARIO..:
	*				
	*------------------------------------------------------------*
	* OBS........ :
	*------------------------------------------------------------*
	*  TABELAS....:
	*------------------------------------------------------------*
	*  PARAMETROS..:
	*		LNemp..........: Empresa que Esta Faturando
	*		LNorcament.....: Nro da OSI para Faturar
	*		LNNfInicio.....: Numero  Inicial de Nota para Impressao
	*		LNNfFim........: Numero  Final de Nota para Impressao
	*		LStp_process...: Processo definido em NF_02DefProcess
	*		wp_TipoEcf.....: Parametro Repassado para ECF
	*		LNecf..........: Parametro Repassado para ECF
	*------------------------------------------------------------*
	*  RETORNO.....:
	*------------------------------------------------------------*
	* EXEMPLO : CHAMADA DO PROGRAMA SCGC2.prg
	*------------------------------------------------------------*
	=W_DEFPROC("rotinas.spr")
	PRIVATE LSalias,LFretorno
	PRIVATE LNvalor
	PRIVATE LScupom	
	PRIVATE LFcpm
	PRIVATE LSstatus
	PRIVATE LRtrnFileNfe



	*--> PARA DADOS RETORNO NFE
	PRIVATE	  RtnStatus,;
			  RtnRecibo,;
		      RtnProtocolo,;
	          RtnChvNFe,;
	          RtnJstfCanc,;
	          RtnPrtcCanc



	STORE "" TO 	  RtnStatus,;
			  RtnRecibo,;
		      RtnProtocolo,;
	          RtnChvNFe,;
	          RtnJstfCanc,;
	          RtnPrtcCanc


    *--> PARA CONTROLE QUANDO HOUVER IMPRESSAO HIBRIDA
    * NOTA CONVENCIONAL + NFe
    *
	*------------------------------------------------------------*
    PRIVATE LNBkpnfInicio,LNBkpnfCopInicio


	*-----------------------------------------------------------*
	LSalias		= 	ALIAS()
	LFretorno	=	.t.
	LSstatus    = ""
	LRtrnFileNfe = ""
	*------------------------------------------------------------*
	*------------------------------------------------------------*


	IF "REC." $ LStp_proces
		LsOrientacao = "PRODUTO/SERVICO"
		=UNFempmarca(4,LStp_proces,LSOrientacao)
		LsOrientacao = "SERVICO"
		=UNFempmarca(4,LStp_proces,LSOrientacao)
		RETURN(.T.)
	ENDIF
	*------------------------------------------------------------*
	*------------------------------------------------------------*
	*------------------------------------------------------------*
	
	
	SELE empresa
	SET ORDER TO TAG empresa
	SEEK LNemp
	IF !FOUND()
		IF !EMPTY(LSalias) AND USED(LSalias)
			SELECT &LSalias
		ENDIF
		RETURN(.F.)
	ENDIF
	*------------------------------------------------------------*
	SELE clienc
	SET ORDER TO TAG emporca
	SEEK STR(LNemp,3)+STR(LNorcament,6)
	IF !FOUND()
		IF !EMPTY(LSalias) AND USED(LSalias)
			SELECT &LSalias
		ENDIF
		RETURN(.F.)
	ENDIF

	SELE orcament
	SET ORDER TO TAG geral
	SEEK STR(LNemp,3)+STR(LNorcament,6)
	IF !FOUND()
		IF !EMPTY(LSalias) AND USED(LSalias)
			SELECT &LSalias
		ENDIF
		RETURN(.F.)
	ENDIF

	SELE orc_anex
	SET ORDER TO TAG orcamento
	SEEK STR(LNemp,3)+STR(LNorcament,6)
	IF !FOUND()
		IF !EMPTY(LSalias) AND USED(LSalias)
			SELECT &LSalias
		ENDIF
		RETURN(.F.)
	ENDIF


	*--------------------------------------------------------------*
	*****************************************************************
	* 				Inicio ---- Impressao  ----
	*****************************************************************
	IF !(EMPTY(ALLTRIM(wp_impfat)))
		LNmtmp =UPnometmp("tmp",2)
		DELETE FILE &LNmtmp
		RUN &wp_impfat > &LNmtmp
	ELSE
		SET PRINTER TO &wp_prtfat
	ENDIF
	*****************************************************************



	SELE empresa					&& altera parametros em empresa
	=REGLOCK(.T.)

	IF NOT USED("TAB002")
		=NetArq("TAB002") && REABR
	ENDIF
	SELE TAB002
	SET ORDER TO TAG codigo

	SELE usuario
	SET ORDER TO TAG usuario
	SELE transprt
	SET ORDER TO TAG CGC

	SET POINT TO ","
	SET SEPARATOR  TO "."
	m.sOldError=ON('error')
	ON ERROR *
	*--------------------------------------------------
	LNvalor = orcament.valor  && REPASSADO PARA FECHAMENTO DO CUPOM
	*--------------------------------------------------
	*   O cupom  processado em primeiro lugar por poder agregar
	* um numero idefinido de itens
	*-----------------------------------------------------
	*--------------------------------------------------
	LNvalor = orcament.valor  && REPASSADO PARA FECHAMENTO DO CUPOM
	*--------------------------------------------------


	*--------------------------------------------------------*
	*  IMPRESSAO CONVENCIONAL DE COPIA DE CUPOM (NAO NFe)
	*--------------------------------------------------------*


    *----------------------------------------------------------*
    * Se houver impressao hibrida sda copia
    *   (NF Convencional e NFe)
    *    LNnfCopInicio  deve ser restaurado apos a
    *   impressao convencional
    *----------------------------------------------------------*
	LNBkpnfCopInicio  = LNnfCopInicio


 	*--> N=NAO H=HOMOLOGACAO
 	IF      EMPRESA.EMITE_NFE $ "NH" ;
		AND "COPIA EM NOTA" $ LStp_proces
		
		
		LsOrientacao = "PRODUTO/SERVICO"
		IF  "NF SERVICO" $ LStp_proces
			LsOrientacao = "PRODUTO"
		ENDIF

		DO WHILE LNnfCopInicio  <= LNnfCopFim
			SELE nota
			SET ORDER TO TAG NOTA
			SEEK STR(LNemp,3)+STR(LNnfCopInicio,7)

			SELECT tipooper
			SET ORDER TO TAG tipo
			SEEK 'S'+nota.tipo
			IF !FOUND()
				SEEK 's'+orcament.tipo
			ENDIF

			SELE itemmov
			SET ORDER TO TAG itenscopia
			SET NEAR ON
			SEEK STR(nota.empresa,3)+STR(nota.NOTA,7)
			SET NEAR OFF			
			*------------------------------------------------------------*
			*  INICIA GERACAO DE ARQUIVO TEMPORARIO
			*------------------------------------------------------------*
			LSarqtmp 	= "" 			&& EX: C:\TMP\TMP0001
			LSaliastmp 	= "TMP" 		&&     TMP001
			LSaliastmp = UPopentmp(wp_dirtmp,LSarqtmp,LSaliastmp,1)
			IF EMPTY(LSaliastmp)
				WAIT WINDOWS " Nao Foi Gerado Arq TMP. <ENTER> Continua"
				LOOP
		 	ENDIF		


		   	=up_fecha("ITNFSTMP")
			WAIT WINDOW "AGUARDE. Gerando Arq. Temporario." NOWAIT
			SELE itemmov
			COPY TO &LSarqtmp FOR LEFT(itemmov.operacao,1) = "S" ;
					WHILE nota.empresa = itemmov.empresa ;
						  AND nota.nota	= itemmov.nf_copia
			SELE 0
			USE &LSarqtmp   ALIAS ITNFSTMP EXCL
			INDEX ON nf_copia   TAG nota ADDITIVE

			*-------------------------------------------------*
			*>>>   NOVO LAYOUT COM GRID PARA PRODUTO E OUTRA PARA SERV
			*-------------------------------------------------*
			=NFAjustTmpItens("ITNFSTMP",nota.empresa,nota.nota)

			*-------------------------------------------------*

			LNimpressao = RECCOUNT()
			go top
			*----------------------------------------------------------*
			IF NOT USED("BANCO")
				=NetArq("BANCO") && REABR
			ENDIF

			SELE banco
			SET ORDER TO TAG banco

			SELE nota
			SET RELATION TO NOTA INTO ITNFSTMP
			SET RELATION TO  operador INTO usuario 		 ADDITIVE
			SET RELATION TO  banco INTO banco  			 ADDITIVE

			SET SKIP TO ITNFSTMP

			DO CASE
				CASE   nota.empresa = 2 ;
					OR nota.empresa = 3 ;
					OR nota.empresa = 4 ;
			        OR nota.empresa = 6

					REPORT FORM relnfs6A ;
						WHILE nota.nota = LNnfCopInicio AND;
	  					nota.empresa = LNemp AND UNFmarcanf(4) ;
	 						NOCONSOLE TO PRINTER

				OTHERWISE
					REPORT FORM relnfs6 ;
						WHILE nota.nota = LNnfCopInicio AND;
	  					nota.empresa = LNemp AND UNFmarcanf(4) ;
	 						NOCONSOLE TO PRINTER
			ENDCASE


			IF      EMPRESA.EMITE_NFE $ "N"
				*----------------------------------------------------*
				=UNFempmarca(4,LStp_proces,LSOrientacao)
				*----------------------------------------------------*

			ENDIF

		   	=up_fecha("ITNFSTMP")

			LNnfCopInicio  = LNnfCopInicio + 1

		ENDDO
	ENDIF

    *----------------------------------------------------------*
    LNnfCopInicio  = LNBkpnfCopInicio

	*--------------------------------------------------------*
	*  IMPRESSAO(XML) DE COPIA DE CUPOM EM NFe
	*--------------------------------------------------------*


 	*-->S=SIM H=HOMOLOGACAO
 	IF      EMPRESA.EMITE_NFE $ "SH" ;
		AND "COPIA EM NOTA" $ LStp_proces


		SELE nota
		SET ORDER TO TAG NOTA
		SEEK STR(LNemp,3)+STR(LNnfCopInicio,7)
	    m.EMPRESA    =   nota.Empresa
	
		DO CASE
			CASE LNnfCopInicio > 3000000 AND LNnfCopInicio < 4000000
			    m.MOD_DOC    =   "55"  && NFe
		
			OTHERWISE			
				=W_DEFPROC("TIPOOPER.SPR")
				LFieldTmp    = ;
					TPGetFieldValue("S",  nota.tipo ,"Cod_Mod_Rf")
			    m.MOD_DOC    = LFieldTmp
		ENDCASE

	    m.COD_IDFORN  =   SPACE(14)
    	m.NRO_DOC     =   nota.nota
	    m.SERIE_DOC   =   LEFT( nota.Serie +"   ",3)


        PRIVATE LFerroNFe
		LFerroNFe = .F.

		=W_DEFPROC("DOCFISCA.SPR")
		LFerroNFe = DFConvrtNFDocFiscal(NOTA.EMPRESA,NOTA.NOTA)

		IF !LFerroNFe
			=W_DEFPROC("DOCFISCA.SPR")
			LFerroNFe = (DFGerXMLDocFiscal(LNemp,m.Mod_Doc,m.COD_IDFORN,;
			  m.NRO_DOC,m.Serie_Doc ))
		ENDIF

		IF !LFerroNFe
			=W_DEFPROC("DOCFISCA.SPR")
			LFerroNFe = (DFEnviaNFeXML(LNemp,m.Nro_Doc))
		ENDIF

		IF !LFerroNFe
			=W_DEFPROC("DOCFISCA.SPR")
			LSstatus = (DFRespostaNFe;
			      (;
				     m.NRO_DOC,;
				     "ESPERA",;
					  RtnStatus,;
					  RtnRecibo,;
				      RtnProtocolo,;
			          RtnChvNFe,;
			          RtnJstfCanc,;
			          RtnPrtcCanc;
				  );
				)
		ENDIF

		IF !LFerroNFe
			IF NFLerRegistro(LNemp,LNnfinicio)
  		    	=NFSetPropVT("NFE_STATUS",RtnStatus)
				=NFSetPropVT("NFE_RECIBO",RtnRecibo)
				=NFSetPropVT("NFE_PROTOC",RtnProtocolo)
				=NFSetPropVT("NFE_CHV",RtnChvNFe)
					=NFSetPropVT("NFEJSTFCAN",RtnJstfCanc)
				=NFSetPropVT("NFEPRTCCAN",RtnPrtcCanc)
				=NFSalvarRegistro()
			ENDIF
		ENDIF

		IF !LFerroNFe
			=W_DEFPROC("DOCFISCA.SPR")
			IF (DFLerRegistro(LNemp,m.Mod_Doc,m.COD_IDFORN,;
				  m.NRO_DOC,m.Serie_Doc ))
	  	    	=DFSetPropVT("NFE_STATUS",RtnStatus)
				=DFSetPropVT("NFE_RECIBO",RtnRecibo)
				=DFSetPropVT("NFE_PROTOC",RtnProtocolo)
				=DFSetPropVT("NFE_CHV",RtnChvNFe)
				=DFSetPropVT("NFEJSTFCAN",RtnJstfCanc)
				=DFSetPropVT("NFEPRTCCAN",RtnPrtcCanc)
				=DFSalvarRegistro()
			ENDIF
		ENDIF
		IF !LFerroNFe
			*----------------------------------------------------*
			=UNFempmarca(4,LStp_proces,LSOrientacao)
			*----------------------------------------------------*
		ENDIF
	ENDIF


	IF  "COPIA EM NF SERVICO" $ LStp_proces
		LsOrientacao = "SERVICO"
		IF !(EMPTY(ALLTRIM(wp_imporc)))
			LNmtmp =UPnometmp("tmp",2)
			DELETE FILE &LNmtmp
			RUN &wp_imporc > &LNmtmp
		ELSE
			SET PRINTER TO &wp_prtorc
		ENDIF
		*************************************************************
		*--------------------------------------------------
		DO WHILE LNSrvCopIni  <= LNSrvCopFim

			SELE nota
			SET ORDER TO TAG NOTA
			SEEK STR(LNemp,3)+STR(LNSrvCopIni,7)

			SELECT tipooper
			SET ORDER TO TAG tipo
			SEEK 'S'+nota.tipo
			IF !FOUND()
				SEEK 's'+orcament.tipo
			ENDIF

			SELE itemmov
			SET ORDER TO TAG itenscopia
			SET NEAR ON
			SEEK STR(nota.empresa,3)+STR(nota.NOTA,7)
			SET NEAR OFF			
			*------------------------------------------------------------*

			*------------------------------------------------------------*
			*  INICIA GERACAO DE ARQUIVO TEMPORARIO
			*------------------------------------------------------------*
			LSarqtmp 	= "" 			&& EX: C:\TMP\TMP0001
			LSaliastmp 	= "TMP" 		&&     TMP001
			LSaliastmp = UPopentmp(wp_dirtmp,LSarqtmp,LSaliastmp,1)
			IF EMPTY(LSaliastmp)
				WAIT WINDOWS " Nao Foi Gerado Arq TMP. <ENTER> Continua"
				LOOP
		 	ENDIF		

	   		=up_fecha("ITNFSTMP")
			WAIT WINDOW "AGUARDE. Gerando Arq. Temporario." NOWAIT
			SELE itemmov
			COPY TO &LSarqtmp FOR LEFT(itemmov.operacao,1) = "S" ;
				WHILE nota.empresa = itemmov.empresa ;
					  AND nota.nota	= itemmov.nf_copia
			SELE 0
			USE &LSarqtmp   ALIAS ITNFSTMP EXCL
			INDEX ON nf_copia   TAG nota ADDITIVE

			LNimpressao = RECCOUNT()
			go top
			*----------------------------------------------------------*
			IF NOT USED("BANCO")
				=NetArq("BANCO") && REABR
			ENDIF

			SELE banco
			SET ORDER TO TAG banco

			SELE nota
			SET RELATION TO NOTA INTO ITNFSTMP
			SET RELATION TO  operador INTO usuario 		 ADDITIVE
			SET RELATION TO  banco INTO banco  			 ADDITIVE

			SET SKIP TO ITNFSTMP

	
			IF wp_dtoper < {01.05.2006}
				REPORT FORM relnfsrv ;
					WHILE nota.nota = LNSrvCopIni AND;
  					nota.empresa = LNemp AND UNFmarcanf(4) ;
	 					NOCONSOLE TO PRINTER
			ELSE
				REPORT FORM relsrv02 ;
					WHILE nota.nota = LNSrvCopIni  AND;
  					nota.empresa = LNemp AND UNFmarcanf(4) ;
	 					NOCONSOLE TO PRINTER
			ENDIF

			*----------------------------------------------------*
			=UNFempmarca(4,LStp_proces,LSOrientacao)
			*----------------------------------------------------*
		   	=up_fecha("ITNFSTMP")

			LNSrvCopIni	= LNSrvCopIni + 1
		ENDDO
	ENDIF

	=W_DEFPROC("rotinas.spr")




	SELE NOTA
	SET RELATION TO
	ON ERROR &sOldError

	****  SO PARA FECHAR ARQUIVO P/ IMP
	IF !(EMPTY(ALLTRIM(wp_imposi)))
		LNmtmp =UPnometmp("ost",2)
		DELETE FILE &LNmtmp
		RUN &wp_imposi > &LNmtmp
	ENDIF
	SET PRINTER TO &wp_prtosi

	SET PRINTER TO SET('PRINTER',1)
	SET RELATION TO
	SET POINT TO
	SET SEPARATOR  TO
	*--------------------------------------------------------------*
	IF !EMPTY(LSalias) AND USED(LSalias)
		SELECT &LSalias
	ENDIF
RETURN(LFretorno)






*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _2XH0IRIRA           antNFProcessFat VALID              º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         NOTA_B,     Record Number:   52    º
*       º Variable:            antNFProcessFat                    º
*       º Called By:           VALID Clause                       º
*       º Object Type:         Push Button                        º
*       º Snippet Number:      44                                 º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*

FUNCTION _2xh0irira     &&  antNFProcessFat VALID
#REGION 1
return
*---------------------------------------------------------------*
FUNCTION antNFProcessFat
PARAMETERS LNemp,LNorcamento,PrmSolicitante
	*------------------------------------------------------------*
	* CLASSIFICACAO:  [*****]
	*------------------------------------------------------------*
	* OBJETIVO....: Controle o Processo de Faturamento
	*
	*------------------------------------------------------------*
	* COMENTARIO..:
	*------------------------------------------------------------*
	* OBS........ :
	*------------------------------------------------------------*
	*  TABELAS....:
	*------------------------------------------------------------*
	*  PARAMETROS..:
	*		LNemp......:
	*		LNorcamento:
	*		PrmSolicitante..: Identifica os Pontos em que esta
	*				 rotina pode ser chamada
	*			   		PrmSolicitante = "VENDEDOR"
	*					PrmSolicitante = "CAIXA"
	*					PrmSolicitante = "FATURISTA SIMPLES"	&& SCGC201A
	*					PrmSolicitante = "FATURISTA RESERVA"	&& SCGC201A
	*					PrmSolicitante = "IMPORTACAO"		&& SCGC008
	* 					PrmSolicitante = "RECUPERACAO"
	*
	*------------------------------------------------------------*
	*  RETORNO.....: .f. ou .t.
	*------------------------------------------------------------*
	* EXEMPLO :
	*------------------------------------------------------------*
	=W_DEFPROC("rotinas.spr")
	*------------------------------------------------------------*

	*********************************************************
	*---->   (Preparacao para controle de SATUS DO PROCESSO
	*********************************************************	

	PRIVATE FlgImpFatura

	PRIVATE LNnfinicio    , LNnffim
	PRIVATE LNnfsrvIni    , LNnfsrvFim
	PRIVATE LNCtrlCpmIni, LNCtrlCpmFim
	PRIVATE LNnfCopInicio , LNnfCopFim
	PRIVATE LNSrvCopIni , LNSrvCopFim


	PRIVATE LNnroNF, LNNfServico, LNCtrlCpm
	PRIVATE LNNFCop, LNnfSrvCop

    PRIVATE LFGerNF,LFGerNFS  && INDICADORES QUE FOI GERADO
	PRIVATE LNcupom
	PRIVATE LStp_process
	PRIVATE datanf,horanf,LsOrientacao
	PRIVATE LFabrecupom				&& FLAG PARA MANDAR ABIR CUPOM
	PRIVATE LFservico				&& CASO EXISTA SERVICO (TP_MERCAD = 7)
	PRIVATE LFproduto 				&& CASO EXISTA PRODUTO (TP_MERCAD <> 7)
	PRIVATE LFipi    				&& CASO EXISTA IPI > 0

	*********************************************************	
	PRIVATE LFretorno
	LFretorno = .T.

	STORE 0  TO LNnfinicio ,LNnffim
	STORE 0  TO LNnfsrvIni ,LNnfsrvFim
	STORE 0  TO LNCtrlCpmIni, LNCtrlCpmFim
	STORE 0  TO LNnfCopInicio , LNnfCopFim
	STORE 0  TO LNSrvCopIni , LNSrvCopFim
	STORE 0  TO LNnroNF, LNNfServico, LNCtrlCpm
	STORE 0  TO LNNFCop, LNnfSrvCop
	

	STORE 0  TO LNcupom
	STORE "" TO LStp_process
	STORE {} TO datanf
	STORE "" TO horanf,LsOrientacao
    STORE .F. TO LFGerNF,LFGerNFS


	SELE orcament
	SET ORDER TO TAG orcamento
	SEEK STR(LNemp,3)+STR(LNorcamento,6)

	IF orcament.flgtransac = .f.
		DO OBJ_MENS.SPR WITH " O orcamento Selecionado Sofreu" +;
		" Alteracoes que Afetam Valores e Nao Foi Recalculado." +;
		CHR(13)+;
		" Reedite os Itens e Grave para Forcar o Calculo."
		RETURN(.f.)
	ENDIF
	*----------------------------------------------------------------*
	SELECT tipooper
	SET ORDER TO TAG tipo
	SEEK 'S'+orcament.tipo
	IF !FOUND()
		SEEK 's'+orcament.tipo
	ENDIF
	IF !found()
		SELECT orcament
		RETURN(.f.)
	ENDIF
	*---------------------------------------------------------*
	*   (Fim Preparacao para controle de SATUS DO PROCESSO
	*---------------------------------------------------------*



	LFservico	= .F.		&& CASO EXISTA SERVICO (TP_MERCAD = 7)
	LFproduto 	= .F.		&& CASO EXISTA PRODUTO (TP_MERCAD <> 7)
	LFIPI    	= .F.		&& CASO EXISTA IPI > 0
	*---------------------------------------------------------*

	=W_DEFPROC("NOTA.SPR")
	IF !NFchq_Final((orcament.empresa),(orcament.orcamento),;
				(PrmSolicitante),LFservico,LFproduto)
	    SELE orcament
		RETURN(.F.)
	ENDIF

	*---------------------------------------------------------------*
	* 				Inicio  ---- F A T U R A M E N T O  ----
	*---------------------------------------------------------------*

	
	IF !NFBlocEmpresa(orcament.empresa,PrmSolicitante)
	    SELE orcament
		RETURN(.F.)
	ENDIF


	*---------------------------------------------------------------*

	LFflgtrans 		= .t.
	m.LNalqicms 	= 0		&& aliquota de icms
	m.tot_fatura 	= 0		&& acumula valore de varias notas pra duplicatas


	m.nota   = 0   && utilizados para atualizar Orcamento
	m.cupom  = 0   && utilizados para atualizar Orcamento

	*---------------------------------------------------------------*
	* 		No trecho seguinte sao definidor DATA,HORA,NUMERO DE NOTA
	*	E NUMERO DE CUPOM sendo que estes dados ja vem definido no
	*	registro do orcamento quando esta IMPORTANDO ja no processo
	*	operacional normal rotinas sao ativadas para atribuir valores
	*	a estes dados
	*---------------------------------------------------------------*
	

		
	IF !NF_DefFat(PrmSolicitante)
   		SELE orcament
		RETURN(.F.)
	ENDIF

	*---------------------------------------------------------------*
	*  ESTA CHAMADA ESTA PROVOCANDO ESTOURO DE PILHA DE PROCESSOS
	* ATE SEGUNDA ORDEM EVITA-SE O ANIHAMENTO EXESSIVO TROCANDO A
	* CHAMADA PELO CODIGO DIRETO
	*--------------------------------------------------------------*

*	IF !NFGeraDocFiscais(orcament.empresa)
*   		SELE orcament
*		RETURN(.F.)
*	ENDIF

*FUNCTION NFGeraDocFiscais
*PARAMETERS PrmEmpresa



	DO CASE
		CASE orcament.empresa = 6

			IF  "CUPOM" $ LStp_proces
				LsOrientacao = "PRODUTO/SERVICO"
				*--------------------------------------------*

				IF !ULGerCupom()
					RETURN(.F.)
				ENDIF
			ENDIF


			IF "NF SERVICO" $ LStp_proces AND !("COPIA" $ LStp_proces)
				LsOrientacao = "SERVICO"
				*--------------------------------------------*
				IF !ULGerServicoNf()
					RETURN(.F.)
				ENDIF
			ENDIF


			IF  "NOTA" $ LStp_proces AND !("COPIA" $ LStp_proces)
				LsOrientacao = "PRODUTO/SERVICO"
				IF  "NF SERVICO" $ LStp_proces
					LsOrientacao = "PRODUTO"
				ENDIF
				*--------------------------------------------*
				IF !ULGerNFSU()
					RETURN(.F.)
				ENDIF
			ENDIF





		CASE orcament.empresa <> 6
			IF  "CUPOM" $ LStp_proces
				LsOrientacao = "PRODUTO/SERVICO"
				*--------------------------------------------*
				IF !ULGerCupom()
					RETURN(.F.)
				ENDIF
			ENDIF

			IF  "NOTA" $ LStp_proces AND !("COPIA" $ LStp_proces)
				LsOrientacao = "PRODUTO/SERVICO"
				*--------------------------------------------*
				IF !ULGerNFSU()
					RETURN(.F.)
				ENDIF
			ENDIF
	ENDCASE


*RETURN(.T.)







	*---------------------------------------------------------------*
	* 				Fim  ---- F A T U R A M E N T O  ----
	*---------------------------------------------------------------*


	=NFatlzOrcament()


	*----------------------------------------------------------------*
	*     O ajuste no sistema para registrar duplicatas para operaäes
	*  A VISTA e Para CARTåES.
	*    Como a ImplantaÆo da VersÆo nas Filiais ocorre de maneira
	*  gradativa  necess rio direcionar para rotina adequada a situaÆo
	*  da filial sendo:
	*    FILIAL ATUALIZADA   => CRgeradupl
	*    FILIAL N.ATUALIZADA => CRnrmgeradupl
	*----------------------------------------------------------------*


 	=W_DEFPROC("DUPLICAT.spr")

	DO CASE

		CASE  orcament.empresa = 10
			IF  dt_fat < {26.03.2008}
				DO  CRidlate26geradupl WITH;
					 (orcament.empresa),(orcament.orcamento)
			ELSE
			
				DO  CRIDLApos26geradupl WITH ;
				    (orcament.empresa),(orcament.orcamento)
			ENDIF

		CASE dt_fat >= {12.03.2008}
				DO  CRgeraDE12MAR08 WITH ;
				    (orcament.empresa),(orcament.orcamento)

		CASE dt_fat >= {10.03.2008} AND ;
			(orcament.empresa = 01 or orcament.empresa = 02)		
				DO  CRgeraDE12MAR08 WITH ;
				    (orcament.empresa),(orcament.orcamento)
		otherwise
			DO  CRgeraATE10MAR08 WITH ;
			     (orcament.empresa),(orcament.orcamento)
	ENDCASE



	*----------------------------------------------------------------*
    *     Registrar Comando para sistema de Caixa
	*----------------------------------------------------------------*

	IF !(PrmSolicitante $ "IMPORTACAO/RECUPERACAO")
		DO CASE
    		CASE "CUPOM" $ LStp_process
				=NFRgAvisoCaixa((LNemp), (LNCtrlCpmIni))
	    	CASE "NOTA" $ LStp_process
				=NFRgAvisoCaixa((LNemp), (LNnfinicio))
	    	CASE "NF SERVICO" $ LStp_process
				=NFRgAvisoCaixa((LNemp), (LNnfsrvIni))
		ENDCASE
	ENDIF


	*----------------------------------------------------------------*

	SELECT orcament
	IF wp_dtsys = wp_dtoper
		IF 	!UPtransacao("TERMINAR")
			WAIT WINDOW "TRANSACAO PERMANECEU ABERTA. VER SUPORTE."
		ENDIF			
	ENDIF
	*---------------------------------------------------------------*
	* 				Fim  ---- F A T U R A M E N T O  ----
	*---------------------------------------------------------------*

	*---------------------------------------------------------------*
	* 				Inicio ---- Impressao  ----
	*---------------------------------------------------------------*



	LFretorno = .T.






	IF  PrmSolicitante = "IMPORTACAO"

		=UNFempmarca(4,LStp_proces,LSOrientacao)

		wp_msg = "Faturamento Concluido "
		WAIT WINDOW wp_msg NOWAIT
	    RETURN(.T.)
	ENDIF



	IF  PrmSolicitante = "RECUPERACAO"
		=UNFempmarca(4,LStp_proces,LSOrientacao)
		IF  "COPIA" $ LStp_proces
	       LFretorno = ;
		    	NFProcessCopia(orcament.empresa,LNCtrlCpmIni,;
		    	    PrmSolicitante,"ROTINA FATURAMENTO",.T.,.T.)
		ENDIF

	    RETURN(LFretorno)

	ENDIF


	*IF LStp_proces $ "NOTA-CUPOM-NF SERVICO-NOTA/NF SERVICO";
	*    OR "COPIA" $ LStp_proces


	IF LStp_proces $ "NOTA-CUPOM-NF SERVICO-NOTA/NF SERVICO"


		*----------------------------------------------------------------*
		wp_msg = "Imprimindo NOTA/CUPOM Refrente OSI: "+;
							 STR(orcament.orcamento,6)
		WAIT WINDOW wp_msg NOWAIT
		*----------------------------------------------------------------*

		=W_DEFPROC("NOTA.SPR")

		*---------------------------------------------------------*
		*  DESVIO PARA NOVO LAYOUT DE NOTA DE 2009
		*---------------------------------------------------------*



    *
	*	FlgImpFatura =  NF_03ImpFatura(;
	*			(orcament.empresa),(orcament.orcamento),(LStp_process),;
	*			(wp_TipoEcf),(LNecf),(LNCtrlCpmIni), (LNCtrlCpmFim),;
	*			(LNnfinicio),(LNnffim),(LNnfsrvIni),(LNnfsrvFim),;
	*			(LNnfCopInicio),(LNnfCopFim),(LNSrvCopIni),(LNSrvCopFim))			
    *
		FlgImpFatura =  NF_03ImpCopDocFiscal(;
				(orcament.empresa),(orcament.orcamento),(LStp_process),;
				(wp_TipoEcf),(LNecf),(LNCtrlCpmIni), (LNCtrlCpmFim),;
				(LNnfinicio),(LNnffim),(LNnfsrvIni),(LNnfsrvFim),;
				(LNnfCopInicio),(LNnfCopFim),(LNSrvCopIni),(LNSrvCopFim))			


		=W_DEFPROC("rotinas.spr")

		IF FlgImpFatura



			*-------------------------------------------------*
			*  DEFINIR SOLICITACAO DE COPIA
			*-------------------------------------------------*

			IF  "COPIA" $ LStp_proces

 		      LFretorno = ;
		    	NF_02ImpCopia(PrmSolicitante,LNCtrlCpmIni)

			ELSE
				=NF_aviso(orcament.Empresa,LNNfinicio,LNCtrlCpmIni,;
						PrmSolicitante,LStp_proces)
		
			ENDIF

		ELSE

	    	WAIT WINDOW "Houve Falha no Impressao do Doc.Fiscal!!!!"
			LFretorno = .F.

		ENDIF
	ENDIF


	*----------------------------------------------------------------*
	wp_msg = "Faturamento Concluido "
	WAIT WINDOW wp_msg NOWAIT
	*----------------------------------------------------------------*

RETURN(LFretorno)







*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _2XH0IRIRB           antNFProcessCopia VALID            º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         NOTA_B,     Record Number:   53    º
*       º Variable:            antNFProcessCopia                  º
*       º Called By:           VALID Clause                       º
*       º Object Type:         Push Button                        º
*       º Snippet Number:      45                                 º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*

FUNCTION _2xh0irirb     &&  antNFProcessCopia VALID
#REGION 1
return
*---------------------------------------------------------------*


FUNCTION antNFProcessCopia
PARAMETER ;
	PrmEmpresa,;
	PrmNota,;
	PrmSolicitante,;
	PrmChamadoPor,;
	PrmCopySrvAutoriza,;
	PrmCopyN1Autoriza



	=W_DEFPROC("rotinas.spr")
	PRIVATE LSalias,LFretorno
	*-----------------------------------------------------------*
	LSalias		= 	ALIAS()
	LFretorno	=	.t.
	*-----------------------------------------------------------*

	PRIVATE FlgImpFatura


	PRIVATE LStipo,LNnf, LNcopiaNF
    PRIVATE LFGerNF,LFGerNFS  && INDICADORES QUE FOI GERADO
	PRIVATE LNemp,LNosi

	SELE nota
	SET ORDER TO TAG nota
	SEEK STR(PrmEmpresa,3)+STR(PrmNota,7)

	IF !FOUND() OR nota.nota < 1000000 && < 1000000 nao e cupom
	   WAIT WINDOW ;
   		" Item selecionado nao e um Cumpom <ENTER>"
		IF !EMPTY(LSalias) AND USED(LSalias)
			SELECT &LSalias
		ENDIF
		RETURN(.F.)
	ENDIF

	SCATTER MEMVAR
	*-------------------------------------------------------------------*
	LNCtrlCupomIni = m.nota
	LNCtrlCupomFim = m.nota


	IF TYPE("LStp_proces") = "U" OR !("REC." $ LStp_proces)
	    LNnfInicio     = 0
	    LNnfFim        = 0
	    LNnfsrvIni     = 0
	    LNnfsrvFim     = 0
		LNnfCopInicio  = 0
		LNnfCopFim	   = 0
		LNSrvCopIni  = 0
		LNSrvCopFim  = 0
	ENDIF

	LNemp        = m.empresa
	LNosi        = m.referencia
	*-------------------------------------------------------------------*
	*----------  				INICIA COPIA DO CUPOM			--------*
	*-------------------------------------------------------------------*



	LFipi = .f.
	LFproduto = .f.
	LFservico = .f.
	IF nota.totproduto > 0
		LFproduto = .T.
	ENDIF
	IF nota.totservico >0
		LFservico = .T.
	ENDIF
	IF nota.vlr_ipi > 0
		LFipi = .T.
	ENDIF


	*-----------------------------------------------------------------*
	*  DefProcessCopia - Define Processao para  emissao da copia
	*-----------------------------------------------------------------*
	

	LStp_process = ""

	IF nota.empresa = 6

	 	*----------------------------------------*
	 	**  SE HOUVER COPIA EM NOTA N1
	 	*----------------------------------------*
		IF PrmCopyN1Autoriza
			DO CASE		&& DEFINE SE HAVERA COPIA EM NOTA
				CASE LFipi= .T.
					LStp_proces	= LStp_proces+"/COPIA EM NOTA"

				CASE LFproduto = .T. AND PrmChamadoPor = "ROTINA DE COPIA"
					LStp_proces	= LStp_proces+"/COPIA EM NOTA"

				CASE LFservico = .T. AND LFproduto = .T.
					IF NOTA.DATA < {15.11.2006}
						LStp_proces	= LStp_proces+"/COPIA EM NOTA"
					ENDIF
			ENDCASE
		ENDIF

	 	*----------------------------------------*
	 	**  SE HOUVER COPIA EM NOTA SERVICO NAO AUTORIZAR
	 	*----------------------------------------*

		IF	PrmCopySrvAutoriza
			IF LFservico = .T.
					LStp_proces	= LStp_proces+"/COPIA EM NF SERVICO"
			ENDIF
		ENDIF
		*-----------------------------------------
	ELSE
		LStp_proces	= "COPIA EM NOTA"
	ENDIF


	*-----------------------------------------------------------------*
	*  GeraDocCopia - Gera Documento Fiscal de Copia
	*-----------------------------------------------------------------*


	IF  "COPIA EM NOTA" $ LStp_proces
		LsOrientacao = "PRODUTO/SERVICO"

		IF  "NF SERVICO" $ LStp_proces OR nota.empresa = 6
			LsOrientacao = "PRODUTO"
		ENDIF
		*--------------------------------------------*
		IF !NFGerCopia(nota.empresa,LNCtrlCupomIni,;
  	     "NOTA",LNnfCopInicio,LNnfCopFim,LSOrientacao,;
  	     (PrmSolicitante),LStp_proces)
			SELE orcament
			RETURN(.F.)
		ENDIF	
	ENDIF


	IF "COPIA EM NF SERVICO" $ LStp_proces
		LsOrientacao = "SERVICO"
		*--------------------------------------------*
		IF !NFGerCopia(nota.empresa,LNCtrlCupomIni,;
		 "NF SERVICO",LNSrvCopIni,LNSrvCopFim,LSOrientacao,;
			(PrmSolicitante),LStp_proces)
			SELE orcament
			RETURN(.F.)
		ENDIF	
	ENDIF

	*---------------------------------------------------------------*
	* PARA NFe GERAR DOCFISCA E DOCFISIT
	*---------------------------------------------------------------*



	*---------------------------------------------------------------*
	* PARA IMPORTACAO E RECUPERACAO NAO FAZER IMPRESSAO NEM XML NFe
	*---------------------------------------------------------------*
	=W_DEFPROC("NOTA.SPR")
	IF  PrmSolicitante $ "IMPORTACAO - RECUPERACAO"
		IF !EMPTY(LSalias) AND USED(LSalias)
			SELECT &LSalias
		ENDIF
		=UNFempmarca(4,"COPIA EM NOTA","")
		=UNFempmarca(4,"COPIA EM NF SERVICO","")
		wp_msg = "Faturamento Concluido "
		WAIT WINDOW wp_msg NOWAIT
	    RETURN(.T.)
	ENDIF


    WAIT WINDOW "Aguarde a Impressao." NOWAIT

	*---------------------------------------------------------------*
	* PARA NFe GERAR XML OU IMPRIMIR QUANDO FOR NOTA NORMAL
	*---------------------------------------------------------------*


	FlgImpFatura =  NF_03ImpFatura(;
			(LNemp),(LNosi),(LStp_process),;
			(wp_TipoEcf),(LNecf),(LNCtrlCupomIni), (LNCtrlCupomFim),;
			(LNnfinicio),(LNnffim),(LNnfsrvIni),(LNnfsrvFim),;
			(LNnfCopInicio),(LNnfCopFim),(LNSrvCopIni),(LNSrvCopFim))






	=W_DEFPROC("rotinas.spr")

	*---------------------------------------------------------------*
	IF !FlgImpFatura
			
	    	WAIT WINDOW "Houve Falha no Impressao do Doc.Fiscal!!!!"
			IF !EMPTY(LSalias) AND USED(LSalias)
				SELECT &LSalias
			ENDIF
			RETURN(.f.)
	ELSE
			=NF_aviso(LNEMP,LNnfCopInicio,LNCtrlCupomIni,;
						PrmSolicitante,LStp_proces)

	ENDIF
	*---------------------------------------------------------------*
	IF !EMPTY(LSalias) AND USED(LSalias)
		SELECT &LSalias
	ENDIF
RETURN(.t.)
	






*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _2XH0IRIS8           NFProcessFat VALID                 º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         NOTA_B,     Record Number:   54    º
*       º Variable:            NFProcessFat                       º
*       º Called By:           VALID Clause                       º
*       º Object Type:         Push Button                        º
*       º Snippet Number:      46                                 º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*

FUNCTION _2xh0iris8     &&  NFProcessFat VALID
#REGION 1
return
*---------------------------------------------------------------*
FUNCTION NFProcessFat
PARAMETERS PrmEmpresa,LNorcamento,PrmSolicitante
	*------------------------------------------------------------*
	* CLASSIFICACAO:  [*****]
	*------------------------------------------------------------*
	* OBJETIVO....: Controle o Processo de Faturamento
	*
	*------------------------------------------------------------*
	* COMENTARIO..:
	*------------------------------------------------------------*
	* OBS........ :
	*------------------------------------------------------------*
	*  TABELAS....:
	*------------------------------------------------------------*
	*  PARAMETROS..:
	*		PrmEmpresa......:
	*		LNorcamento:
	*		PrmSolicitante..: Identifica os Pontos em que esta
	*				 rotina pode ser chamada
	*			   		PrmSolicitante = "VENDEDOR"
	*					PrmSolicitante = "CAIXA"
	*					PrmSolicitante = "FATURISTA SIMPLES"	&& SCGC201A
	*					PrmSolicitante = "FATURISTA RESERVA"	&& SCGC201A
	*					PrmSolicitante = "IMPORTACAO"		&& SCGC008
	* 					PrmSolicitante = "RECUPERACAO"
	*
	*------------------------------------------------------------*
	*  RETORNO.....: .f. ou .t.
	*------------------------------------------------------------*
	* EXEMPLO :
	*------------------------------------------------------------*
	=W_DEFPROC("rotinas.spr")
	*------------------------------------------------------------*

	*********************************************************
	*---->   (Preparacao para controle de SATUS DO PROCESSO
	*********************************************************	

	PRIVATE FlgImpFatura

	PRIVATE LNnfinicio    , LNnffim
	PRIVATE LNnfsrvIni    , LNnfsrvFim
	PRIVATE LNCtrlCpmIni, LNCtrlCpmFim
	PRIVATE LNnfCopInicio , LNnfCopFim
	PRIVATE LNSrvCopIni , LNSrvCopFim


	PRIVATE LNnroNF, LNNfServico, LNCtrlCpm
	PRIVATE LNNFCop, LNnfSrvCop

    PRIVATE LFGerNF,LFGerNFS  && INDICADORES QUE FOI GERADO
	PRIVATE LNcupom
	PRIVATE LStp_process
	PRIVATE datanf,horanf,LsOrientacao
	PRIVATE LFabrecupom				&& FLAG PARA MANDAR ABIR CUPOM
	PRIVATE LFservico				&& CASO EXISTA SERVICO (TP_MERCAD = 7)
	PRIVATE LFproduto 				&& CASO EXISTA PRODUTO (TP_MERCAD <> 7)
	PRIVATE LFipi    				&& CASO EXISTA IPI > 0

	*********************************************************	
	PRIVATE LFretorno
	LFretorno = .T.

	STORE 0  TO LNnfinicio ,LNnffim
	STORE 0  TO LNnfsrvIni ,LNnfsrvFim
	STORE 0  TO LNCtrlCpmIni, LNCtrlCpmFim
	STORE 0  TO LNnfCopInicio , LNnfCopFim
	STORE 0  TO LNSrvCopIni , LNSrvCopFim
	STORE 0  TO LNnroNF, LNNfServico, LNCtrlCpm
	STORE 0  TO LNNFCop, LNnfSrvCop
	

	STORE 0  TO LNcupom
	STORE "" TO LStp_process
	STORE {} TO datanf
	STORE "" TO horanf,LsOrientacao
    STORE .F. TO LFGerNF,LFGerNFS


	SELE orcament
	SET ORDER TO TAG orcamento
	SEEK STR(PrmEmpresa,3)+STR(LNorcamento,6)

	IF orcament.flgtransac = .f.
		DO OBJ_MENS.SPR WITH " O orcamento Selecionado Sofreu" +;
		" Alteracoes que Afetam Valores e Nao Foi Recalculado." +;
		CHR(13)+;
		" Reedite os Itens e Grave para Forcar o Calculo."
		RETURN(.f.)
	ENDIF
	*----------------------------------------------------------------*
	SELECT tipooper
	SET ORDER TO TAG tipo
	SEEK 'S'+orcament.tipo
	IF !FOUND()
		SEEK 's'+orcament.tipo
	ENDIF
	IF !found()
		SELECT orcament
		RETURN(.f.)
	ENDIF
	*---------------------------------------------------------*
	*   (Fim Preparacao para controle de SATUS DO PROCESSO
	*---------------------------------------------------------*



	LFservico	= .F.		&& CASO EXISTA SERVICO (TP_MERCAD = 7)
	LFproduto 	= .F.		&& CASO EXISTA PRODUTO (TP_MERCAD <> 7)
	LFIPI    	= .F.		&& CASO EXISTA IPI > 0
	*---------------------------------------------------------*

	=W_DEFPROC("NOTA.SPR")
	IF !NFchq_Final((orcament.empresa),(orcament.orcamento),;
				(PrmSolicitante),LFservico,LFproduto)
	    SELE orcament
		RETURN(.F.)
	ENDIF

	*---------------------------------------------------------------*
	* 				Inicio  ---- F A T U R A M E N T O  ----
	*---------------------------------------------------------------*

	
	IF !NFBlocEmpresa(orcament.empresa,PrmSolicitante)
	    SELE orcament
		RETURN(.F.)
	ENDIF


	*---------------------------------------------------------------*

	LFflgtrans 		= .t.
	m.LNalqicms 	= 0		&& aliquota de icms
	m.tot_fatura 	= 0		&& acumula valore de varias notas pra duplicatas


	m.nota   = 0   && utilizados para atualizar Orcamento
	m.cupom  = 0   && utilizados para atualizar Orcamento

	*---------------------------------------------------------------*
	* 		No trecho seguinte sao definidor DATA,HORA,NUMERO DE NOTA
	*	E NUMERO DE CUPOM sendo que estes dados ja vem definido no
	*	registro do orcamento quando esta IMPORTANDO ja no processo
	*	operacional normal rotinas sao ativadas para atribuir valores
	*	a estes dados
	*---------------------------------------------------------------*
	

		
	IF !NF_DefFat(PrmSolicitante)
   		SELE orcament
		RETURN(.F.)
	ENDIF

	*---------------------------------------------------------------*
	*  ESTA CHAMADA ESTA PROVOCANDO ESTOURO DE PILHA DE PROCESSOS
	* ATE SEGUNDA ORDEM EVITA-SE O ANIHAMENTO EXESSIVO TROCANDO A
	* CHAMADA PELO CODIGO DIRETO
	*--------------------------------------------------------------*

*	IF !NFGeraDocFiscais(orcament.empresa)
*   		SELE orcament
*		RETURN(.F.)
*	ENDIF

*FUNCTION NFGeraDocFiscais
*PARAMETERS PrmEmpresa


	*-----------------------------------------------------------*

	*-----------------------------------------------------------------*



	*--------------------------------------------------------------*

	IF  "CUPOM" $ LStp_proces
		LsOrientacao = "PRODUTO/SERVICO"
		*--------------------------------------------*
		IF !ULGerCupom(LsOrientacao)
			RETURN(.F.)
		ENDIF

	ENDIF



	IF "NF SERVICO" $ LStp_proces AND !("COPIA" $ LStp_proces)
		LsOrientacao = "SERVICO"
		*--------------------------------------------*
		IF !ULGerServicoNf(LsOrientacao)
			RETURN(.F.)
		ENDIF


	ENDIF


	IF  "NOTA" $ LStp_proces AND !("COPIA" $ LStp_proces)
		LsOrientacao = "PRODUTO/SERVICO"
		IF  "NF SERVICO" $ LStp_proces
			LsOrientacao = "PRODUTO"
		ENDIF
		*--------------------------------------------*
		IF !ULGerNFSU(LsOrientacao)
			RETURN(.F.)
		ENDIF

	ENDIF

*RETURN(.T.)






	*---------------------------------------------------------------*
	* 				Fim  ---- F A T U R A M E N T O  ----
	*---------------------------------------------------------------*


	=NFatlzOrcament()


	*----------------------------------------------------------------*
	*     O ajuste no sistema para registrar duplicatas para operaäes
	*  A VISTA e Para CARTåES.
	*    Como a ImplantaÆo da VersÆo nas Filiais ocorre de maneira
	*  gradativa  necess rio direcionar para rotina adequada a situaÆo
	*  da filial sendo:
	*    FILIAL ATUALIZADA   => CRgeradupl
	*    FILIAL N.ATUALIZADA => CRnrmgeradupl
	*----------------------------------------------------------------*


 	=W_DEFPROC("DUPLICAT.spr")

	DO CASE

		CASE  orcament.empresa = 10
			IF  dt_fat < {26.03.2008}
				DO  CRidlate26geradupl WITH;
					 (orcament.empresa),(orcament.orcamento)
			ELSE
			
				DO  CRIDLApos26geradupl WITH ;
				    (orcament.empresa),(orcament.orcamento)
			ENDIF

		CASE dt_fat >= {12.03.2008}
				DO  CRgeraDE12MAR08 WITH ;
				    (orcament.empresa),(orcament.orcamento)

		CASE dt_fat >= {10.03.2008} AND ;
			(orcament.empresa = 01 or orcament.empresa = 02)		
				DO  CRgeraDE12MAR08 WITH ;
				    (orcament.empresa),(orcament.orcamento)
		otherwise
			DO  CRgeraATE10MAR08 WITH ;
			     (orcament.empresa),(orcament.orcamento)
	ENDCASE



	*----------------------------------------------------------------*
    *     Registrar Comando para sistema de Caixa
	*----------------------------------------------------------------*

	IF !(PrmSolicitante $ "IMPORTACAO/RECUPERACAO")
		DO CASE
    		CASE "CUPOM" $ LStp_process
				=NFRgAvisoCaixa((PrmEmpresa), (LNCtrlCpmIni))
	    	CASE "NOTA" $ LStp_process
				=NFRgAvisoCaixa((PrmEmpresa), (LNnfinicio))
	    	CASE "NF SERVICO" $ LStp_process
				=NFRgAvisoCaixa((PrmEmpresa), (LNnfsrvIni))
		ENDCASE
	ENDIF


	*----------------------------------------------------------------*

	SELECT orcament
	IF wp_dtsys = wp_dtoper
		IF 	!UPtransacao("TERMINAR")
			WAIT WINDOW "TRANSACAO PERMANECEU ABERTA. VER SUPORTE."
		ENDIF			
	ENDIF
	*---------------------------------------------------------------*
	* 				Fim  ---- F A T U R A M E N T O  ----
	*---------------------------------------------------------------*

	*---------------------------------------------------------------*
	* 				Inicio ---- Impressao  ----
	*---------------------------------------------------------------*



	LFretorno = .T.






	IF  PrmSolicitante = "IMPORTACAO"

		=UNFempmarca(4,LStp_proces,LSOrientacao)

		wp_msg = "Faturamento Concluido "
		WAIT WINDOW wp_msg NOWAIT
	    RETURN(.T.)
	ENDIF



	IF  PrmSolicitante = "RECUPERACAO"
		=UNFempmarca(4,LStp_proces,LSOrientacao)
		IF  "COPIA" $ LStp_proces
	       LFretorno = ;
		    	NFProcessCopia(orcament.empresa,LNCtrlCpmIni,;
		    	    PrmSolicitante,"ROTINA FATURAMENTO",.T.,.T.)
		ENDIF

	    RETURN(LFretorno)

	ENDIF



	*----------------------------------------------------------------*
	wp_msg = "Imprimindo Doc Fiscal Refrente OSI: "+;
							 STR(orcament.orcamento,6)
	WAIT WINDOW wp_msg NOWAIT
	*----------------------------------------------------------------*


	FlgImpFatura = .t.   &&


	*-------------------------------------------------------------*

	IF "CUPOM" $ LStp_proces

		FlgImpFatura =  NF_ImpCupomFiscal(;
				(orcament.empresa),(orcament.orcamento),(LStp_process),;
				(wp_TipoEcf),(LNecf),(LNCtrlCpmIni), (LNCtrlCpmFim),;
				(LNnfinicio),(LNnffim),(LNnfsrvIni),(LNnfsrvFim),;
				(LNnfCopInicio),(LNnfCopFim),(LNSrvCopIni),(LNSrvCopFim))			

	ENDIF

	*-------------------------------------------------------------*


	IF FlgImpFatura
		IF "NF SERVICO" $ LStp_proces AND !("COPIA" $ LStp_proces)

			FlgImpFatura =  NF_ImpNFSrvico(;
				(orcament.empresa),(orcament.orcamento),(LStp_process),;
				(wp_TipoEcf),(LNecf),(LNCtrlCpmIni), (LNCtrlCpmFim),;
				(LNnfinicio),(LNnffim),(LNnfsrvIni),(LNnfsrvFim),;
				(LNnfCopInicio),(LNnfCopFim),(LNSrvCopIni),(LNSrvCopFim))			

		ENDIF
	ENDIF

	*-------------------------------------------------------------*

	IF FlgImpFatura
		IF "NOTA" $ LStp_proces AND !("COPIA" $ LStp_proces)

			FlgImpFatura =  NF_ImpNFFiscal(;
				(orcament.empresa),(orcament.orcamento),(LStp_process),;
				(wp_TipoEcf),(LNecf),(LNCtrlCpmIni), (LNCtrlCpmFim),;
				(LNnfinicio),(LNnffim),(LNnfsrvIni),(LNnfsrvFim),;
				(LNnfCopInicio),(LNnfCopFim),(LNSrvCopIni),(LNSrvCopFim))			
		ENDIF
	ENDIF


	*-------------------------------------------------------------*

*
*	IF FlgImpFatura
*		IF "NF SERVICO" $ LStp_proces AND !("COPIA" $ LStp_proces)
*
*			FlgImpFatura =  NF_ImpNFSe(;
*				(orcament.empresa),(orcament.orcamento),(LStp_process),;
*				(wp_TipoEcf),(LNecf),(LNCtrlCpmIni), (LNCtrlCpmFim),;
*				(LNnfinicio),(LNnffim),(LNnfsrvIni),(LNnfsrvFim),;
*				(LNnfCopInicio),(LNnfCopFim),(LNSrvCopIni),(LNSrvCopFim))			
*
*		ENDIF
*	ENDIF
*
	*-------------------------------------------------------------*
*	IF FlgImpFatura
*		IF "NOTA" $ LStp_proces AND !("COPIA" $ LStp_proces)
*
*			FlgImpFatura =  NF_ImpNFe(;
*				(orcament.empresa),(orcament.orcamento),(LStp_process),;
*				(wp_TipoEcf),(LNecf),(LNCtrlCpmIni), (LNCtrlCpmFim),;
*				(LNnfinicio),(LNnffim),(LNnfsrvIni),(LNnfsrvFim),;
*				(LNnfCopInicio),(LNnfCopFim),(LNSrvCopIni),(LNSrvCopFim))			
*		ENDIF
*
*	ENDIF
*

	*-------------------------------------------------------------*




	=W_DEFPROC("rotinas.spr")

	IF FlgImpFatura

		*-------------------------------------------------*
		*  DEFINIR SOLICITACAO DE COPIA
		*-------------------------------------------------*

		IF  "COPIA" $ LStp_proces

	      LFretorno = ;
	    	NF_02ImpCopia(PrmSolicitante,LNCtrlCpmIni)

		ELSE
			=NF_aviso(orcament.Empresa,LNNfinicio,LNCtrlCpmIni,;
						PrmSolicitante,LStp_proces)
		
		ENDIF

	ELSE

    	WAIT WINDOW "Houve Falha no Impressao do Doc.Fiscal!!!!"
		LFretorno = .F.

	ENDIF


	*----------------------------------------------------------------*
	wp_msg = "Faturamento Concluido "
	WAIT WINDOW wp_msg NOWAIT
	*----------------------------------------------------------------*

RETURN(LFretorno)







*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _2XH0IRISV           NF_ImpCupomFiscal VALID            º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         NOTA_B,     Record Number:   55    º
*       º Variable:            NF_ImpCupomFiscal                  º
*       º Called By:           VALID Clause                       º
*       º Object Type:         Push Button                        º
*       º Snippet Number:      47                                 º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*

FUNCTION _2xh0irisv     &&  NF_ImpCupomFiscal VALID
#REGION 1
return
*---------------------------------------------------------------*

FUNCTION NF_ImpCupomFiscal
PARAMETERS ;
	LNemp,;
	LNorcament,;
	LStp_process,;
	wp_TipoEcf,;
	LNecf,;
	LNCtrlCupomIni,;
	LNCtrlCupomFim,;
	LNnfinicio,;
	LNnffim,;
	LNnfsrvIni,;
	LNnfsrvFim,;
	LNnfCopInicio,;
	LNnfCopFim,;
	LNSrvCopIni,;
	LNSrvCopFim
			
	*------------------------------------------------------------*
	* CLASSIFICACAO:  [*****]
	*------------------------------------------------------------*
	* OBJETIVO....: 	Controlar impressao NOTA/CUPOM
	*------------------------------------------------------------*
	* COMENTARIO..:
	*				
	*------------------------------------------------------------*
	* OBS........ :
	*------------------------------------------------------------*
	*  TABELAS....:
	*------------------------------------------------------------*
	*  PARAMETROS..:
	*		LNemp..........: Empresa que Esta Faturando
	*		LNorcament.....: Nro da OSI para Faturar
	*		LNNfInicio.....: Numero  Inicial de Nota para Impressao
	*		LNNfFim........: Numero  Final de Nota para Impressao
	*		LStp_process...: Processo definido em NF_02DefProcess
	*		wp_TipoEcf.....: Parametro Repassado para ECF
	*		LNecf..........: Parametro Repassado para ECF
	*------------------------------------------------------------*
	*  RETORNO.....:
	*------------------------------------------------------------*
	* EXEMPLO : CHAMADA DO PROGRAMA SCGC2.prg
	*------------------------------------------------------------*
	=W_DEFPROC("rotinas.spr")
	PRIVATE LSalias,LFretorno
	PRIVATE LNvalor
	PRIVATE LScupom	
	PRIVATE LFcpm
	PRIVATE LSstatus
	PRIVATE LRtrnFileNfe



	*--> PARA DADOS RETORNO NFE
	PRIVATE	  RtnStatus,;
			  RtnRecibo,;
		      RtnProtocolo,;
	          RtnChvNFe,;
	          RtnJstfCanc,;
	          RtnPrtcCanc



	STORE "" TO 	  RtnStatus,;
			  RtnRecibo,;
		      RtnProtocolo,;
	          RtnChvNFe,;
	          RtnJstfCanc,;
	          RtnPrtcCanc


    *--> PARA CONTROLE QUANDO HOUVER IMPRESSAO HIBRIDA
    * NOTA CONVENCIONAL + NFe
    *
	*------------------------------------------------------------*
    PRIVATE LNBkpnfInicio,LNBkpnfCopInicio


	*-----------------------------------------------------------*
	LSalias		= 	ALIAS()
	LFretorno	=	.t.
	LSstatus    = ""
	LRtrnFileNfe = ""
	*------------------------------------------------------------*
	*------------------------------------------------------------*


	IF "REC." $ LStp_proces
		LsOrientacao = "PRODUTO/SERVICO"
		=UNFempmarca(4,LStp_proces,LSOrientacao)
		LsOrientacao = "SERVICO"
		=UNFempmarca(4,LStp_proces,LSOrientacao)
		RETURN(.T.)
	ENDIF
	*------------------------------------------------------------*
	*------------------------------------------------------------*
	*------------------------------------------------------------*
	
	
	SELE empresa
	SET ORDER TO TAG empresa
	SEEK LNemp
	IF !FOUND()
		IF !EMPTY(LSalias) AND USED(LSalias)
			SELECT &LSalias
		ENDIF
		RETURN(.F.)
	ENDIF
	*------------------------------------------------------------*
	SELE clienc
	SET ORDER TO TAG emporca
	SEEK STR(LNemp,3)+STR(LNorcament,6)
	IF !FOUND()
		IF !EMPTY(LSalias) AND USED(LSalias)
			SELECT &LSalias
		ENDIF
		RETURN(.F.)
	ENDIF

	SELE orcament
	SET ORDER TO TAG geral
	SEEK STR(LNemp,3)+STR(LNorcament,6)
	IF !FOUND()
		IF !EMPTY(LSalias) AND USED(LSalias)
			SELECT &LSalias
		ENDIF
		RETURN(.F.)
	ENDIF

	SELE orc_anex
	SET ORDER TO TAG orcamento
	SEEK STR(LNemp,3)+STR(LNorcament,6)
	IF !FOUND()
		IF !EMPTY(LSalias) AND USED(LSalias)
			SELECT &LSalias
		ENDIF
		RETURN(.F.)
	ENDIF


	*--------------------------------------------------------------*
	*****************************************************************
	* 				Inicio ---- Impressao  ----
	*****************************************************************
	IF !(EMPTY(ALLTRIM(wp_impfat)))
		LNmtmp =UPnometmp("tmp",2)
		DELETE FILE &LNmtmp
		RUN &wp_impfat > &LNmtmp
	ELSE
		SET PRINTER TO &wp_prtfat
	ENDIF
	*****************************************************************



	SELE empresa					&& altera parametros em empresa
	=REGLOCK(.T.)

	IF NOT USED("TAB002")
		=NetArq("TAB002") && REABR
	ENDIF
	SELE TAB002
	SET ORDER TO TAG codigo

	SELE usuario
	SET ORDER TO TAG usuario
	SELE transprt
	SET ORDER TO TAG CGC

	SET POINT TO ","
	SET SEPARATOR  TO "."
	m.sOldError=ON('error')
	ON ERROR *
	*--------------------------------------------------
	LNvalor = orcament.valor  && REPASSADO PARA FECHAMENTO DO CUPOM
	*--------------------------------------------------
	*   O cupom  processado em primeiro lugar por poder agregar
	* um numero idefinido de itens
	*-----------------------------------------------------
	*--------------------------------------------------
	LNvalor = orcament.valor  && REPASSADO PARA FECHAMENTO DO CUPOM
	*--------------------------------------------------

	IF  "CUPOM" $ LStp_proces
		LsOrientacao = "PRODUTO/SERVICO"
		SELE nota
		SET ORDER TO TAG NOTA
		SEEK STR(LNemp,3)+STR(LNCtrlCupomIni,7)

		SELE itemmov
		SET ORDER TO TAG itensnota
		SET NEAR ON
		SEEK STR(nota.empresa,3)+nota.OPERACAO+STR(nota.NOTA,7)
		SET NEAR OFF			
		*------------------------------------------------------------*
		*  INICIA GERACAO DE ARQUIVO TEMPORARIO
		*------------------------------------------------------------*
		LSarqtmp 	= "" 			&& EX: C:\TMP\TMP0001
		LSaliastmp 	= "TMP" 		&&     TMP001
		LSaliastmp = UPopentmp(wp_dirtmp,LSarqtmp,LSaliastmp,1)
		IF EMPTY(LSaliastmp)
			WAIT WINDOWS " Nao Foi Gerado Arq TMP. <ENTER> Continua"
			LOOP
	 	ENDIF		

	   	=up_fecha("ITNFSTMP")
		WAIT WINDOW "AGUARDE. Gerando Arq. Temporario." NOWAIT
		SELE itemmov
		COPY TO &LSarqtmp  FOR nota.tipo = itemmov.tipo ;
				WHILE nota.empresa = itemmov.empresa ;
					  AND itemmov.nota	<= LNCtrlCupomFim


		SELE 0
		USE  &LSarqtmp  ALIAS ITNFSTMP EXCL
		INDEX ON nota   TAG nota ADDITIVE
		go top
		*----------------------------------------------------------*
		SELE nota

		SET RELATION TO  operador INTO usuario
		***************************************************

		=W_DEFPROC("ECF.SPR")
		LSstatus =ECFctrlimpcupom((LNCtrlCupomIni),;
		       (LNCtrlCupomFim),(LNvalor), nota.total_nota)


		*-----------------------------------------------------------*
		*   Se nao houve erro "E" e o processo emite so "CUPOM"
		* faz a marca (4) fechando o faturamento
		*-----------------------------------------------------------*

		IF SUBS(LSstatus,7,1) = "E"

		   	=up_fecha("ITNFSTMP")
		  	SELECT &LSalias
			*--------------------------------------------------*
			DO CASE
				CASE "NCN - EXECUTADO" $ UPPER(LSstatus)
					IF !NFCancNCN(LNemp,LNCtrlCupomIni)
						wp_msg = "Cupom "+STR(LNCtrlCupomIni,7)+;
						 " nao foi cacelado. Comande Cancelamento < ENTER >"
						WAIT WINDOWS wp_msg
					   	RETURN(.f.)
					ELSE
						=UNFempmarca(4,LStp_proces,LSOrientacao)
					   	RETURN(.f.)
					ENDIF
				OTHERWISE
					IF !NFCancCupom(LNemp,LNCtrlCupomIni)
						wp_msg = "Cupom "+STR(LNCtrlCupomIni,7)+;
						 " nao foi cacelado. Comande Cancelamento < ENTER >"
						WAIT WINDOWS wp_msg
					   	RETURN(.f.)
					ELSE
						=UNFempmarca(4,LStp_proces,LSOrientacao)
					   	RETURN(.f.)
					ENDIF
					*--------------------------------------------------*
			ENDCASE
		  	SELECT &LSalias
		   	RETURN(.F.)
		ENDIF



		*----------------------------------------------------*
		=UNFempmarca(4,LStp_proces,LSOrientacao)
		*----------------------------------------------------*

	   	=up_fecha("ITNFSTMP")
	ENDIF




	=W_DEFPROC("rotinas.spr")



	SELE NOTA
	SET RELATION TO
	ON ERROR &sOldError

	****  SO PARA FECHAR ARQUIVO P/ IMP
	IF !(EMPTY(ALLTRIM(wp_imposi)))
		LNmtmp =UPnometmp("ost",2)
		DELETE FILE &LNmtmp
		RUN &wp_imposi > &LNmtmp
	ENDIF
	SET PRINTER TO &wp_prtosi

	SET PRINTER TO SET('PRINTER',1)
	SET RELATION TO
	SET POINT TO
	SET SEPARATOR  TO
	*--------------------------------------------------------------*
	IF !EMPTY(LSalias) AND USED(LSalias)
		SELECT &LSalias
	ENDIF
RETURN(LFretorno)






*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _2XH0IRISW           NF_ImpNFFiscal VALID               º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         NOTA_B,     Record Number:   56    º
*       º Variable:            NF_ImpNFFiscal                     º
*       º Called By:           VALID Clause                       º
*       º Object Type:         Push Button                        º
*       º Snippet Number:      48                                 º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*

FUNCTION _2xh0irisw     &&  NF_ImpNFFiscal VALID
#REGION 1
return
*---------------------------------------------------------------*

FUNCTION NF_ImpNFFiscal
PARAMETERS ;
	LNemp,;
	LNorcament,;
	LStp_process,;
	wp_TipoEcf,;
	LNecf,;
	LNCtrlCupomIni,;
	LNCtrlCupomFim,;
	LNnfinicio,;
	LNnffim,;
	LNnfsrvIni,;
	LNnfsrvFim,;
	LNnfCopInicio,;
	LNnfCopFim,;
	LNSrvCopIni,;
	LNSrvCopFim
			
	*------------------------------------------------------------*
	* CLASSIFICACAO:  [*****]
	*------------------------------------------------------------*
	* OBJETIVO....: 	Controlar impressao NOTA/CUPOM
	*------------------------------------------------------------*
	* COMENTARIO..:
	*				
	*------------------------------------------------------------*
	* OBS........ :
	*------------------------------------------------------------*
	*  TABELAS....:
	*------------------------------------------------------------*
	*  PARAMETROS..:
	*		LNemp..........: Empresa que Esta Faturando
	*		LNorcament.....: Nro da OSI para Faturar
	*		LNNfInicio.....: Numero  Inicial de Nota para Impressao
	*		LNNfFim........: Numero  Final de Nota para Impressao
	*		LStp_process...: Processo definido em NF_02DefProcess
	*		wp_TipoEcf.....: Parametro Repassado para ECF
	*		LNecf..........: Parametro Repassado para ECF
	*------------------------------------------------------------*
	*  RETORNO.....:
	*------------------------------------------------------------*
	* EXEMPLO : CHAMADA DO PROGRAMA SCGC2.prg
	*------------------------------------------------------------*
	=W_DEFPROC("rotinas.spr")
	PRIVATE LSalias,LFretorno
	PRIVATE LNvalor
	PRIVATE LScupom	
	PRIVATE LFcpm
	PRIVATE LSstatus
	PRIVATE LRtrnFileNfe



	*--> PARA DADOS RETORNO NFE
	PRIVATE	  RtnStatus,;
			  RtnRecibo,;
		      RtnProtocolo,;
	          RtnChvNFe,;
	          RtnJstfCanc,;
	          RtnPrtcCanc



	STORE "" TO 	  RtnStatus,;
			  RtnRecibo,;
		      RtnProtocolo,;
	          RtnChvNFe,;
	          RtnJstfCanc,;
	          RtnPrtcCanc


    *--> PARA CONTROLE QUANDO HOUVER IMPRESSAO HIBRIDA
    * NOTA CONVENCIONAL + NFe
    *
	*------------------------------------------------------------*
    PRIVATE LNBkpnfInicio,LNBkpnfCopInicio


	*-----------------------------------------------------------*
	LSalias		= 	ALIAS()
	LFretorno	=	.t.
	LSstatus    = ""
	LRtrnFileNfe = ""
	*------------------------------------------------------------*
	*------------------------------------------------------------*


	IF "REC." $ LStp_proces
		LsOrientacao = "PRODUTO/SERVICO"
		=UNFempmarca(4,LStp_proces,LSOrientacao)
		LsOrientacao = "SERVICO"
		=UNFempmarca(4,LStp_proces,LSOrientacao)
		RETURN(.T.)
	ENDIF
	*------------------------------------------------------------*
	*------------------------------------------------------------*
	*------------------------------------------------------------*
	
	
	SELE empresa
	SET ORDER TO TAG empresa
	SEEK LNemp
	IF !FOUND()
		IF !EMPTY(LSalias) AND USED(LSalias)
			SELECT &LSalias
		ENDIF
		RETURN(.F.)
	ENDIF
	*------------------------------------------------------------*
	SELE clienc
	SET ORDER TO TAG emporca
	SEEK STR(LNemp,3)+STR(LNorcament,6)
	IF !FOUND()
		IF !EMPTY(LSalias) AND USED(LSalias)
			SELECT &LSalias
		ENDIF
		RETURN(.F.)
	ENDIF

	SELE orcament
	SET ORDER TO TAG geral
	SEEK STR(LNemp,3)+STR(LNorcament,6)
	IF !FOUND()
		IF !EMPTY(LSalias) AND USED(LSalias)
			SELECT &LSalias
		ENDIF
		RETURN(.F.)
	ENDIF

	SELE orc_anex
	SET ORDER TO TAG orcamento
	SEEK STR(LNemp,3)+STR(LNorcament,6)
	IF !FOUND()
		IF !EMPTY(LSalias) AND USED(LSalias)
			SELECT &LSalias
		ENDIF
		RETURN(.F.)
	ENDIF


	*--------------------------------------------------------------*
	*****************************************************************
	* 				Inicio ---- Impressao  ----
	*****************************************************************
	IF !(EMPTY(ALLTRIM(wp_impfat)))
		LNmtmp =UPnometmp("tmp",2)
		DELETE FILE &LNmtmp
		RUN &wp_impfat > &LNmtmp
	ELSE
		SET PRINTER TO &wp_prtfat
	ENDIF
	*****************************************************************



	SELE empresa					&& altera parametros em empresa
	=REGLOCK(.T.)

	IF NOT USED("TAB002")
		=NetArq("TAB002") && REABR
	ENDIF
	SELE TAB002
	SET ORDER TO TAG codigo

	SELE usuario
	SET ORDER TO TAG usuario
	SELE transprt
	SET ORDER TO TAG CGC

	SET POINT TO ","
	SET SEPARATOR  TO "."
	m.sOldError=ON('error')
	ON ERROR *
	*--------------------------------------------------
	LNvalor = orcament.valor  && REPASSADO PARA FECHAMENTO DO CUPOM
	*--------------------------------------------------
	*   O cupom  processado em primeiro lugar por poder agregar
	* um numero idefinido de itens
	*-----------------------------------------------------
	*--------------------------------------------------
	LNvalor = orcament.valor  && REPASSADO PARA FECHAMENTO DO CUPOM
	*--------------------------------------------------

	*--------------------------------------------------------*
	*  IMPRESSAO DE NOTA CONVENCIONAL  (NAO NFe)
	*--------------------------------------------------------*
    *----------------------------------------------------------*
    * Se houver impressao hibrida da
    *   (NF Convencional e NFe)
    *    LNnfInicio  deve ser restaurado apos a
    *   impressao convencional
    *----------------------------------------------------------*
	LNBkpnfInicio  = LNnfInicio


	*--> N=NAO H=HOMOLOGACAO
	IF      EMPRESA.EMITE_NFE $ "NH" ;
	    AND "NOTA" $ LStp_proces ;
	    AND !("COPIA" $ LStp_proces) ;
	
	
		LsOrientacao = "PRODUTO/SERVICO"
		IF  "NF SERVICO" $ LStp_proces
			LsOrientacao = "PRODUTO"
		ENDIF

		DO WHILE LNnfinicio  <= LNnffim
			SELE nota
			SET ORDER TO TAG NOTA
			SEEK STR(LNemp,3)+STR(LNnfinicio,7)

			SELECT tipooper
			SET ORDER TO TAG tipo
			SEEK 'S'+nota.tipo
			IF !FOUND()
				SEEK 's'+orcament.tipo
			ENDIF

			SELE itemmov
			SET ORDER TO TAG itensnota
			SET NEAR ON
			SEEK STR(nota.empresa,3)+nota.OPERACAO+STR(nota.NOTA,7)
			SET NEAR OFF			
			*------------------------------------------------------------*
			*  INICIA GERACAO DE ARQUIVO TEMPORARIO
			*------------------------------------------------------------*
			LSarqtmp 	= "" 			&& EX: C:\TMP\TMP0001
			LSaliastmp 	= "TMP" 		&&     TMP001
			LSaliastmp = UPopentmp(wp_dirtmp,LSarqtmp,LSaliastmp,1)
			IF EMPTY(LSaliastmp)
				WAIT WINDOWS " Nao Foi Gerado Arq TMP. <ENTER> Continua"
				LOOP
		 	ENDIF		

		   	=up_fecha("ITNFSTMP")
			WAIT WINDOW "AGUARDE. Gerando Arq. Temporario." NOWAIT
			SELE itemmov
			COPY TO &LSarqtmp  FOR nota.tipo = itemmov.tipo ;
					WHILE nota.empresa = itemmov.empresa ;
						  AND nota.nota	= itemmov.nota
			SELE 0
			USE &LSarqtmp   ALIAS ITNFSTMP EXCL
			INDEX ON nota   TAG nota ADDITIVE


			*-------------------------------------------------*
			*>>>   NOVO LAYOUT COM GRID PARA PRODUTO E OUTRA PARA SERV
			*-------------------------------------------------*
			=NFAjustTmpItens("ITNFSTMP",nota.empresa,nota.nota)

			*-------------------------------------------------*

			LNimpressao = RECCOUNT()
			go top

			*----------------------------------------------------------*
			IF NOT USED("BANCO")
				=NetArq("BANCO") && REABR
			ENDIF

			SELE banco
			SET ORDER TO TAG banco

			SELE nota
			SET RELATION TO NOTA INTO ITNFSTMP
			SET RELATION TO  operador INTO usuario 		 ADDITIVE
			SET RELATION TO  banco INTO banco  			 ADDITIVE

			SET SKIP TO ITNFSTMP

			DO CASE
				CASE   nota.empresa = 2 ;
					OR nota.empresa = 3 ;
					OR nota.empresa = 4 ;
			        OR nota.empresa = 6

					REPORT FORM relnfs6A ;
							WHILE nota.nota = LNnfinicio AND;
	  						nota.empresa = LNemp AND UNFmarcanf(4) ;
	 						NOCONSOLE TO PRINTER

				OTHERWISE
					REPORT FORM relnfs6 ;
							WHILE nota.nota = LNnfinicio AND;
	  						nota.empresa = LNemp AND UNFmarcanf(4) ;
	 							NOCONSOLE TO PRINTER
			ENDCASE

			IF      EMPRESA.EMITE_NFE $ "N"
				*----------------------------------------------------*
				=UNFempmarca(4,LStp_proces,LSOrientacao)
				*----------------------------------------------------*

			ENDIF
		   	=up_fecha("ITNFSTMP")

			LNnfinicio	= LNnfinicio + 1

		ENDDO
	ENDIF

 	*--> N=NAO H=HOMOLOGACAO
 	IF      EMPRESA.EMITE_NFE $ "S"
		*----------------------------------------------------*
		=UNFempmarca(4,LStp_proces,LSOrientacao)
		*----------------------------------------------------*
	ENDIF
    *----------------------------------------------------------*

    *----------------------------------------------------------*
	LNnfInicio  = LNBkpnfInicio



	=W_DEFPROC("rotinas.spr")



	SELE NOTA
	SET RELATION TO
	ON ERROR &sOldError

	****  SO PARA FECHAR ARQUIVO P/ IMP
	IF !(EMPTY(ALLTRIM(wp_imposi)))
		LNmtmp =UPnometmp("ost",2)
		DELETE FILE &LNmtmp
		RUN &wp_imposi > &LNmtmp
	ENDIF
	SET PRINTER TO &wp_prtosi

	SET PRINTER TO SET('PRINTER',1)
	SET RELATION TO
	SET POINT TO
	SET SEPARATOR  TO
	*--------------------------------------------------------------*
	IF !EMPTY(LSalias) AND USED(LSalias)
		SELECT &LSalias
	ENDIF
RETURN(LFretorno)






*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _2XH0IRITR           NF_ImpNFSrvico VALID               º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         NOTA_B,     Record Number:   57    º
*       º Variable:            NF_ImpNFSrvico                     º
*       º Called By:           VALID Clause                       º
*       º Object Type:         Push Button                        º
*       º Snippet Number:      49                                 º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*

FUNCTION _2xh0iritr     &&  NF_ImpNFSrvico VALID
#REGION 1
return
*---------------------------------------------------------------*

FUNCTION NF_ImpNFSrvico
PARAMETERS ;
	LNemp,;
	LNorcament,;
	LStp_process,;
	wp_TipoEcf,;
	LNecf,;
	LNCtrlCupomIni,;
	LNCtrlCupomFim,;
	LNnfinicio,;
	LNnffim,;
	LNnfsrvIni,;
	LNnfsrvFim,;
	LNnfCopInicio,;
	LNnfCopFim,;
	LNSrvCopIni,;
	LNSrvCopFim
			
	*------------------------------------------------------------*
	* CLASSIFICACAO:  [*****]
	*------------------------------------------------------------*
	* OBJETIVO....: 	Controlar impressao NOTA/CUPOM
	*------------------------------------------------------------*
	* COMENTARIO..:
	*				
	*------------------------------------------------------------*
	* OBS........ :
	*------------------------------------------------------------*
	*  TABELAS....:
	*------------------------------------------------------------*
	*  PARAMETROS..:
	*		LNemp..........: Empresa que Esta Faturando
	*		LNorcament.....: Nro da OSI para Faturar
	*		LNNfInicio.....: Numero  Inicial de Nota para Impressao
	*		LNNfFim........: Numero  Final de Nota para Impressao
	*		LStp_process...: Processo definido em NF_02DefProcess
	*		wp_TipoEcf.....: Parametro Repassado para ECF
	*		LNecf..........: Parametro Repassado para ECF
	*------------------------------------------------------------*
	*  RETORNO.....:
	*------------------------------------------------------------*
	* EXEMPLO : CHAMADA DO PROGRAMA SCGC2.prg
	*------------------------------------------------------------*
	=W_DEFPROC("rotinas.spr")
	PRIVATE LSalias,LFretorno
	PRIVATE LNvalor
	PRIVATE LScupom	
	PRIVATE LFcpm
	PRIVATE LSstatus
	PRIVATE LRtrnFileNfe



	*--> PARA DADOS RETORNO NFE
	PRIVATE	  RtnStatus,;
			  RtnRecibo,;
		      RtnProtocolo,;
	          RtnChvNFe,;
	          RtnJstfCanc,;
	          RtnPrtcCanc



	STORE "" TO 	  RtnStatus,;
			  RtnRecibo,;
		      RtnProtocolo,;
	          RtnChvNFe,;
	          RtnJstfCanc,;
	          RtnPrtcCanc


    *--> PARA CONTROLE QUANDO HOUVER IMPRESSAO HIBRIDA
    * NOTA CONVENCIONAL + NFe
    *
	*------------------------------------------------------------*
    PRIVATE LNBkpnfInicio,LNBkpnfCopInicio


	*-----------------------------------------------------------*
	LSalias		= 	ALIAS()
	LFretorno	=	.t.
	LSstatus    = ""
	LRtrnFileNfe = ""
	*------------------------------------------------------------*
	*------------------------------------------------------------*


	IF "REC." $ LStp_proces
		LsOrientacao = "PRODUTO/SERVICO"
		=UNFempmarca(4,LStp_proces,LSOrientacao)
		LsOrientacao = "SERVICO"
		=UNFempmarca(4,LStp_proces,LSOrientacao)
		RETURN(.T.)
	ENDIF
	*------------------------------------------------------------*
	*------------------------------------------------------------*
	*------------------------------------------------------------*
	
	
	SELE empresa
	SET ORDER TO TAG empresa
	SEEK LNemp
	IF !FOUND()
		IF !EMPTY(LSalias) AND USED(LSalias)
			SELECT &LSalias
		ENDIF
		RETURN(.F.)
	ENDIF
	*------------------------------------------------------------*
	SELE clienc
	SET ORDER TO TAG emporca
	SEEK STR(LNemp,3)+STR(LNorcament,6)
	IF !FOUND()
		IF !EMPTY(LSalias) AND USED(LSalias)
			SELECT &LSalias
		ENDIF
		RETURN(.F.)
	ENDIF

	SELE orcament
	SET ORDER TO TAG geral
	SEEK STR(LNemp,3)+STR(LNorcament,6)
	IF !FOUND()
		IF !EMPTY(LSalias) AND USED(LSalias)
			SELECT &LSalias
		ENDIF
		RETURN(.F.)
	ENDIF

	SELE orc_anex
	SET ORDER TO TAG orcamento
	SEEK STR(LNemp,3)+STR(LNorcament,6)
	IF !FOUND()
		IF !EMPTY(LSalias) AND USED(LSalias)
			SELECT &LSalias
		ENDIF
		RETURN(.F.)
	ENDIF


	*--------------------------------------------------------------*
	*****************************************************************
	* 				Inicio ---- Impressao  ----
	*****************************************************************
	IF !(EMPTY(ALLTRIM(wp_impfat)))
		LNmtmp =UPnometmp("tmp",2)
		DELETE FILE &LNmtmp
		RUN &wp_impfat > &LNmtmp
	ELSE
		SET PRINTER TO &wp_prtfat
	ENDIF
	*****************************************************************



	SELE empresa					&& altera parametros em empresa
	=REGLOCK(.T.)

	IF NOT USED("TAB002")
		=NetArq("TAB002") && REABR
	ENDIF
	SELE TAB002
	SET ORDER TO TAG codigo

	SELE usuario
	SET ORDER TO TAG usuario
	SELE transprt
	SET ORDER TO TAG CGC

	SET POINT TO ","
	SET SEPARATOR  TO "."
	m.sOldError=ON('error')
	ON ERROR *
	*--------------------------------------------------
	LNvalor = orcament.valor  && REPASSADO PARA FECHAMENTO DO CUPOM
	*--------------------------------------------------
	*   O cupom  processado em primeiro lugar por poder agregar
	* um numero idefinido de itens
	*-----------------------------------------------------
	*--------------------------------------------------
	LNvalor = orcament.valor  && REPASSADO PARA FECHAMENTO DO CUPOM
	*--------------------------------------------------


	*---------- IMPRESSAO DE NOTA FISCAL DE SERVICO ------------*
	*****************************************************************
	*--> Redireciona impressora de NOTA FISCAL DE SERVICO
	* APROVEITA CAMPO WP_IMPORC que nao teve  aplicacao no sistema
	*****************************************************************


	LNBkpnfInicio  = LNnfSrvIni

	*--> N=NAO H=HOMOLOGACAO
	IF      (EMPRESA.EMITE_NFS = "S" or EMPRESA.PRINT_NFS = "S");
	    AND "NF SERVICO" $ LStp_proces ;
	    AND !("COPIA" $ LStp_proces)
		LsOrientacao = "SERVICO"
		IF !(EMPTY(ALLTRIM(wp_imporc)))
			LNmtmp =UPnometmp("tmp",2)
			DELETE FILE &LNmtmp
			RUN &wp_imporc > &LNmtmp
		ELSE
			SET PRINTER TO &wp_prtorc
		ENDIF
		*************************************************************
		*--------------------------------------------------
		DO WHILE LNnfSrvIni  <= LNnfSrvFim
			SELE nota
			SET ORDER TO TAG NOTA
			SEEK STR(LNemp,3)+STR(LNnfsrvIni,7)

			SELECT tipooper
			SET ORDER TO TAG tipo
			SEEK 'S'+nota.tipo
			IF !FOUND()
				SEEK 's'+orcament.tipo
			ENDIF

			SELE itemmov
			SET ORDER TO TAG itensnota
			SET NEAR ON
			SEEK STR(nota.empresa,3)+nota.OPERACAO+STR(nota.NOTA,7)
			SET NEAR OFF			
			*------------------------------------------------------------*
			*  INICIA GERACAO DE ARQUIVO TEMPORARIO
			*------------------------------------------------------------*
			LSarqtmp 	= "" 			&& EX: C:\TMP\TMP0001
			LSaliastmp 	= "TMP" 		&&     TMP001
			LSaliastmp = UPopentmp(wp_dirtmp,LSarqtmp,LSaliastmp,1)
			IF EMPTY(LSaliastmp)
				WAIT WINDOWS " Nao Foi Gerado Arq TMP. <ENTER> Continua"
				LOOP
		 	ENDIF		

			=up_fecha("ITNFSTMP")
			WAIT WINDOW "AGUARDE. Gerando Arq. Temporario." NOWAIT
			SELE itemmov
			COPY TO &LSarqtmp  FOR nota.tipo = itemmov.tipo ;
				WHILE nota.empresa = itemmov.empresa ;
					  AND nota.nota	= itemmov.nota


			SELE 0
			USE &LSarqtmp   ALIAS ITNFSTMP EXCL
			INDEX ON nota   TAG nota ADDITIVE



			*-------------------------------------------------*
			*>>>   NOVO LAYOUT COM GRID PARA PRODUTO E OUTRA PARA SERV
			*-------------------------------------------------*
			=NFAjustTmpItens("ITNFSTMP",nota.empresa,nota.nota)



			LNimpressao = RECCOUNT()
			go top
			*----------------------------------------------------------*
			IF NOT USED("BANCO")
				=NetArq("BANCO") && REABR
			ENDIF

			SELE banco
			SET ORDER TO TAG banco

			SELE nota
			SET RELATION TO NOTA INTO ITNFSTMP
			SET RELATION TO  operador INTO usuario 		 ADDITIVE
			SET RELATION TO  banco INTO banco  			 ADDITIVE

			SET SKIP TO ITNFSTMP



			DO CASE
			
				CASE wp_dtoper < {01.05.2006}

					REPORT FORM relnfsrv ;
						WHILE nota.nota = LNnfsrvIni AND;
  						nota.empresa = LNemp AND UNFmarcanf(4) ;
							NOCONSOLE TO PRINTER
				

				CASE nota.empresa <> 6
				
					REPORT FORM relnfs6 ;
						WHILE nota.nota = LNnfsrvIni AND;
  						nota.empresa = LNemp AND UNFmarcanf(4) ;
	 						NOCONSOLE TO PRINTER

			

				OTHERWISE

					REPORT FORM relsrv02 ;
						WHILE nota.nota = LNnfsrvIni AND;
  						nota.empresa = LNemp AND UNFmarcanf(4) ;
	 						NOCONSOLE TO PRINTER

			ENDCASE
	
	
	
			*----------------------------------------------------*
			=UNFempmarca(4,LStp_proces,LSOrientacao)
			*----------------------------------------------------*

		   	=up_fecha("ITNFSTMP")
			LNnfsrvIni	= LNnfsrvIni + 1
			
		ENDDO
	ENDIF


	 LNnfSrvIni = LNBkpnfInicio

 	IF      EMPRESA.EMITE_NFSE $ "S"
		*----------------------------------------------------*
			=UNFempmarca(4,LStp_proces,LSOrientacao)
		*----------------------------------------------------*
	ENDIF



	=W_DEFPROC("rotinas.spr")



	SELE NOTA
	SET RELATION TO
	ON ERROR &sOldError

	****  SO PARA FECHAR ARQUIVO P/ IMP
	IF !(EMPTY(ALLTRIM(wp_imposi)))
		LNmtmp =UPnometmp("ost",2)
		DELETE FILE &LNmtmp
		RUN &wp_imposi > &LNmtmp
	ENDIF
	SET PRINTER TO &wp_prtosi

	SET PRINTER TO SET('PRINTER',1)
	SET RELATION TO
	SET POINT TO
	SET SEPARATOR  TO
	*--------------------------------------------------------------*
	IF !EMPTY(LSalias) AND USED(LSalias)
		SELECT &LSalias
	ENDIF
RETURN(LFretorno)






*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _2XH0IRIU8           ANTNF_ImpNFe VALID                 º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         NOTA_B,     Record Number:   58    º
*       º Variable:            ANTNF_ImpNFe                       º
*       º Called By:           VALID Clause                       º
*       º Object Type:         Push Button                        º
*       º Snippet Number:      50                                 º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*

FUNCTION _2xh0iriu8     &&  ANTNF_ImpNFe VALID
#REGION 1
return
*---------------------------------------------------------------*

FUNCTION ANTNF_ImpNFe
PARAMETERS ;
	LNemp,;
	LNorcament,;
	LStp_process,;
	wp_TipoEcf,;
	LNecf,;
	LNCtrlCupomIni,;
	LNCtrlCupomFim,;
	LNnfinicio,;
	LNnffim,;
	LNnfsrvIni,;
	LNnfsrvFim,;
	LNnfCopInicio,;
	LNnfCopFim,;
	LNSrvCopIni,;
	LNSrvCopFim
			
	*------------------------------------------------------------*
	* CLASSIFICACAO:  [*****]
	*------------------------------------------------------------*
	* OBJETIVO....: 	Controlar impressao NOTA/CUPOM
	*------------------------------------------------------------*
	* COMENTARIO..:
	*				
	*------------------------------------------------------------*
	* OBS........ :
	*------------------------------------------------------------*
	*  TABELAS....:
	*------------------------------------------------------------*
	*  PARAMETROS..:
	*		LNemp..........: Empresa que Esta Faturando
	*		LNorcament.....: Nro da OSI para Faturar
	*		LNNfInicio.....: Numero  Inicial de Nota para Impressao
	*		LNNfFim........: Numero  Final de Nota para Impressao
	*		LStp_process...: Processo definido em NF_02DefProcess
	*		wp_TipoEcf.....: Parametro Repassado para ECF
	*		LNecf..........: Parametro Repassado para ECF
	*------------------------------------------------------------*
	*  RETORNO.....:
	*------------------------------------------------------------*
	* EXEMPLO : CHAMADA DO PROGRAMA SCGC2.prg
	*------------------------------------------------------------*
	=W_DEFPROC("rotinas.spr")
	PRIVATE LSalias,LFretorno
	PRIVATE LNvalor
	PRIVATE LScupom	
	PRIVATE LFcpm
	PRIVATE LSstatus
	PRIVATE LRtrnFileNfe



	*--> PARA DADOS RETORNO NFE
	PRIVATE	  RtnStatus,;
			  RtnRecibo,;
		      RtnProtocolo,;
	          RtnChvNFe,;
	          RtnJstfCanc,;
	          RtnPrtcCanc



	STORE "" TO 	  RtnStatus,;
			  RtnRecibo,;
		      RtnProtocolo,;
	          RtnChvNFe,;
	          RtnJstfCanc,;
	          RtnPrtcCanc


    *--> PARA CONTROLE QUANDO HOUVER IMPRESSAO HIBRIDA
    * NOTA CONVENCIONAL + NFe
    *
	*------------------------------------------------------------*
    PRIVATE LNBkpnfInicio,LNBkpnfCopInicio


	*-----------------------------------------------------------*
	LSalias		= 	ALIAS()
	LFretorno	=	.t.
	LSstatus    = ""
	LRtrnFileNfe = ""
	*------------------------------------------------------------*
	*------------------------------------------------------------*


	IF "REC." $ LStp_proces
		LsOrientacao = "PRODUTO/SERVICO"
		=UNFempmarca(4,LStp_proces,LSOrientacao)
		LsOrientacao = "SERVICO"
		=UNFempmarca(4,LStp_proces,LSOrientacao)
		RETURN(.T.)
	ENDIF
	*------------------------------------------------------------*
	*------------------------------------------------------------*
	*------------------------------------------------------------*
	
	
	SELE empresa
	SET ORDER TO TAG empresa
	SEEK LNemp
	IF !FOUND()
		IF !EMPTY(LSalias) AND USED(LSalias)
			SELECT &LSalias
		ENDIF
		RETURN(.F.)
	ENDIF
	*------------------------------------------------------------*
	SELE clienc
	SET ORDER TO TAG emporca
	SEEK STR(LNemp,3)+STR(LNorcament,6)
	IF !FOUND()
		IF !EMPTY(LSalias) AND USED(LSalias)
			SELECT &LSalias
		ENDIF
		RETURN(.F.)
	ENDIF

	SELE orcament
	SET ORDER TO TAG geral
	SEEK STR(LNemp,3)+STR(LNorcament,6)
	IF !FOUND()
		IF !EMPTY(LSalias) AND USED(LSalias)
			SELECT &LSalias
		ENDIF
		RETURN(.F.)
	ENDIF

	SELE orc_anex
	SET ORDER TO TAG orcamento
	SEEK STR(LNemp,3)+STR(LNorcament,6)
	IF !FOUND()
		IF !EMPTY(LSalias) AND USED(LSalias)
			SELECT &LSalias
		ENDIF
		RETURN(.F.)
	ENDIF


	*--------------------------------------------------------------*
	*****************************************************************
	* 				Inicio ---- Impressao  ----
	*****************************************************************
	IF !(EMPTY(ALLTRIM(wp_impfat)))
		LNmtmp =UPnometmp("tmp",2)
		DELETE FILE &LNmtmp
		RUN &wp_impfat > &LNmtmp
	ELSE
		SET PRINTER TO &wp_prtfat
	ENDIF
	*****************************************************************



	SELE empresa					&& altera parametros em empresa
	=REGLOCK(.T.)

	IF NOT USED("TAB002")
		=NetArq("TAB002") && REABR
	ENDIF
	SELE TAB002
	SET ORDER TO TAG codigo

	SELE usuario
	SET ORDER TO TAG usuario
	SELE transprt
	SET ORDER TO TAG CGC

	SET POINT TO ","
	SET SEPARATOR  TO "."
	m.sOldError=ON('error')
	ON ERROR *
	*--------------------------------------------------
	LNvalor = orcament.valor  && REPASSADO PARA FECHAMENTO DO CUPOM
	*--------------------------------------------------
	*   O cupom  processado em primeiro lugar por poder agregar
	* um numero idefinido de itens
	*-----------------------------------------------------
	*--------------------------------------------------
	LNvalor = orcament.valor  && REPASSADO PARA FECHAMENTO DO CUPOM
	*--------------------------------------------------


	*--------------------------------------------------------*
	*  IMPRESSAO(XML) DE NFe
	*--------------------------------------------------------*

	*--> S=SIM H=HOMOLOGACAO
	IF      EMPRESA.EMITE_NFE $ "SH" ;
	    AND "NOTA" $ LStp_proces ;
	    AND !("COPIA" $ LStp_proces)



		SELE nota
		SET ORDER TO TAG NOTA
		SEEK STR(LNemp,3)+STR(LNnfinicio,7)
	    m.EMPRESA    =   nota.Empresa
	

		DO CASE
			CASE LNnfinicio > 3000000 AND LNnfinicio < 4000000
			    m.MOD_DOC    =   "55"  && NFe
		
			OTHERWISE			
				=W_DEFPROC("TIPOOPER.SPR")
				LFieldTmp    = ;
					TPGetFieldValue("S",  nota.tipo ,"Cod_Mod_Rf")
			    m.MOD_DOC    = LFieldTmp
		ENDCASE


	    m.COD_IDFORN  =   SPACE(14)
    	m.NRO_DOC     =   nota.nota
	    m.SERIE_DOC   =   LEFT( nota.Serie +"   ",3)

        PRIVATE LFOk_NFe

		LFOk_NFe = .T.

		=W_DEFPROC("DOCFISCA.SPR")
		LFOk_NFe = DFConvrtNFDocFiscal(NOTA.EMPRESA,NOTA.NOTA)



		PRIVATE LSXMLObjetivo

		LSXMLObjetivo = "EMISSAO"

		IF LFOk_NFe
			=W_DEFPROC("DOCFISCA.SPR")
			LFOk_NFe =(DFGerXMLDocFiscal(LNemp,m.Mod_Doc,m.COD_IDFORN,;
			  m.NRO_DOC,m.Serie_Doc,LSXMLObjetivo ))
		ENDIF


		=W_DEFPROC("DOCFISCA.SPR")
		IF LFOk_NFe
		   LFOk_NFe = (DFEnviaNFeXML(LNemp,m.Nro_Doc))
		ENDIF

		=W_DEFPROC("DOCFISCA.SPR")
		IF LFOk_NFe
			LSstatus = (DFRespostaNFe;
			      (;
				     LNemp,;
				     m.NRO_DOC,;
				     "ESPERA",;
					  RtnStatus,;
					  RtnRecibo,;
				      RtnProtocolo,;
			          RtnChvNFe,;
			          RtnJstfCanc,;
			          RtnPrtcCanc;
				  );
				)
		ENDIF


		IF LFOk_NFe
			=W_DEFPROC("ORCAMENT.SPR")
			IF ORLerRegistro(LNemp,nota.referencia)
  	    	
	  	    	=ORSetPropVT("NFE_STATUS",RtnStatus)
				=ORSetPropVT("NFE_RECIBO",RtnRecibo)
				=ORSetPropVT("NFE_PROTOC",RtnProtocolo)
				=ORSetPropVT("NFE_CHV",RtnChvNFe)
				=ORSetPropVT("NFEJSTFCAN",RtnJstfCanc)
				=ORSetPropVT("NFEPRTCCAN",RtnPrtcCanc)
				=ORSalvarRegistro()
			ENDIF
		ENDIF

		IF LFOk_NFe
			=W_DEFPROC("NOTA.SPR")
			IF NFLerRegistro(LNemp,LNnfinicio)
	  	    	=NFSetPropVT("NFE_STATUS",RtnStatus)
				=NFSetPropVT("NFE_RECIBO",RtnRecibo)
				=NFSetPropVT("NFE_PROTOC",RtnProtocolo)
				=NFSetPropVT("NFE_CHV",RtnChvNFe)
				=NFSetPropVT("NFEJSTFCAN",RtnJstfCanc)
				=NFSetPropVT("NFEPRTCCAN",RtnPrtcCanc)
				=NFSalvarRegistro()
			ENDIF
		ENDIF

		IF LFOk_NFe
			=W_DEFPROC("DOCFISCA.SPR")
			IF (DFLerRegistro(LNemp,m.Mod_Doc,m.COD_IDFORN,;
				  m.NRO_DOC,m.Serie_Doc ))
	  	    	=DFSetPropVT("NFE_STATUS",RtnStatus)
				=DFSetPropVT("NFE_RECIBO",RtnRecibo)
				=DFSetPropVT("NFE_PROTOC",RtnProtocolo)
				=DFSetPropVT("NFE_CHV",RtnChvNFe)
				=DFSetPropVT("NFEJSTFCAN",RtnJstfCanc)
				=DFSetPropVT("NFEPRTCCAN",RtnPrtcCanc)
				=DFSalvarRegistro()
			ENDIF
		ENDIF
		IF LFOk_NFe
			*----------------------------------------------------*
			=UNFempmarca(4,LStp_proces,LSOrientacao)
			*----------------------------------------------------*
		ENDIF

	ENDIF



	=W_DEFPROC("rotinas.spr")



	SELE NOTA
	SET RELATION TO
	ON ERROR &sOldError

	****  SO PARA FECHAR ARQUIVO P/ IMP
	IF !(EMPTY(ALLTRIM(wp_imposi)))
		LNmtmp =UPnometmp("ost",2)
		DELETE FILE &LNmtmp
		RUN &wp_imposi > &LNmtmp
	ENDIF
	SET PRINTER TO &wp_prtosi

	SET PRINTER TO SET('PRINTER',1)
	SET RELATION TO
	SET POINT TO
	SET SEPARATOR  TO
	*--------------------------------------------------------------*
	IF !EMPTY(LSalias) AND USED(LSalias)
		SELECT &LSalias
	ENDIF
RETURN(LFretorno)






*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _2XH0IRIUP           NF_CopNF_Imprime VALID             º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         NOTA_B,     Record Number:   59    º
*       º Variable:            NF_CopNF_Imprime                   º
*       º Called By:           VALID Clause                       º
*       º Object Type:         Push Button                        º
*       º Snippet Number:      51                                 º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*

FUNCTION _2xh0iriup     &&  NF_CopNF_Imprime VALID
#REGION 1
return
*---------------------------------------------------------------*

FUNCTION NF_CopNF_Imprime
PARAMETERS ;
	LNemp,;
	LNorcament,;
	LStp_process,;
	wp_TipoEcf,;
	LNecf,;
	LNCtrlCupomIni,;
	LNCtrlCupomFim,;
	LNnfinicio,;
	LNnffim,;
	LNnfsrvIni,;
	LNnfsrvFim,;
	LNnfCopInicio,;
	LNnfCopFim,;
	LNSrvCopIni,;
	LNSrvCopFim
			
	*------------------------------------------------------------*
	* CLASSIFICACAO:  [*****]
	*------------------------------------------------------------*
	* OBJETIVO....: 	Controlar impressao NOTA/CUPOM
	*------------------------------------------------------------*
	* COMENTARIO..:
	*				
	*------------------------------------------------------------*
	* OBS........ :
	*------------------------------------------------------------*
	*  TABELAS....:
	*------------------------------------------------------------*
	*  PARAMETROS..:
	*		LNemp..........: Empresa que Esta Faturando
	*		LNorcament.....: Nro da OSI para Faturar
	*		LNNfInicio.....: Numero  Inicial de Nota para Impressao
	*		LNNfFim........: Numero  Final de Nota para Impressao
	*		LStp_process...: Processo definido em NF_02DefProcess
	*		wp_TipoEcf.....: Parametro Repassado para ECF
	*		LNecf..........: Parametro Repassado para ECF
	*------------------------------------------------------------*
	*  RETORNO.....:
	*------------------------------------------------------------*
	* EXEMPLO : CHAMADA DO PROGRAMA SCGC2.prg
	*------------------------------------------------------------*
	=W_DEFPROC("rotinas.spr")
	PRIVATE LSalias,LFretorno
	PRIVATE LNvalor
	PRIVATE LScupom	
	PRIVATE LFcpm
	PRIVATE LSstatus
	PRIVATE LRtrnFileNfe



	*--> PARA DADOS RETORNO NFE
	PRIVATE	  RtnStatus,;
			  RtnRecibo,;
		      RtnProtocolo,;
	          RtnChvNFe,;
	          RtnJstfCanc,;
	          RtnPrtcCanc



	STORE "" TO 	  RtnStatus,;
			  RtnRecibo,;
		      RtnProtocolo,;
	          RtnChvNFe,;
	          RtnJstfCanc,;
	          RtnPrtcCanc


    *--> PARA CONTROLE QUANDO HOUVER IMPRESSAO HIBRIDA
    * NOTA CONVENCIONAL + NFe
    *
	*------------------------------------------------------------*
    PRIVATE LNBkpnfInicio,LNBkpnfCopInicio


	*-----------------------------------------------------------*
	LSalias		= 	ALIAS()
	LFretorno	=	.t.
	LSstatus    = ""
	LRtrnFileNfe = ""
	*------------------------------------------------------------*
	*------------------------------------------------------------*


	IF "REC." $ LStp_proces
		LsOrientacao = "PRODUTO/SERVICO"
		=UNFempmarca(4,LStp_proces,LSOrientacao)
		LsOrientacao = "SERVICO"
		=UNFempmarca(4,LStp_proces,LSOrientacao)
		RETURN(.T.)
	ENDIF
	*------------------------------------------------------------*



	*------------------------------------------------------------*
	*------------------------------------------------------------*
	
	
	SELE empresa
	SET ORDER TO TAG empresa
	SEEK LNemp
	IF !FOUND()
		IF !EMPTY(LSalias) AND USED(LSalias)
			SELECT &LSalias
		ENDIF
		RETURN(.F.)
	ENDIF






	*------------------------------------------------------------*
	SELE clienc
	SET ORDER TO TAG emporca
	SEEK STR(LNemp,3)+STR(LNorcament,6)
	IF !FOUND()
		IF !EMPTY(LSalias) AND USED(LSalias)
			SELECT &LSalias
		ENDIF
		RETURN(.F.)
	ENDIF

	SELE orcament
	SET ORDER TO TAG geral
	SEEK STR(LNemp,3)+STR(LNorcament,6)
	IF !FOUND()
		IF !EMPTY(LSalias) AND USED(LSalias)
			SELECT &LSalias
		ENDIF
		RETURN(.F.)
	ENDIF

	SELE orc_anex
	SET ORDER TO TAG orcamento
	SEEK STR(LNemp,3)+STR(LNorcament,6)
	IF !FOUND()
		IF !EMPTY(LSalias) AND USED(LSalias)
			SELECT &LSalias
		ENDIF
		RETURN(.F.)
	ENDIF


	*--------------------------------------------------------------*
	*****************************************************************
	* 				Inicio ---- Impressao  ----
	*****************************************************************
	IF !(EMPTY(ALLTRIM(wp_impfat)))
		LNmtmp =UPnometmp("tmp",2)
		DELETE FILE &LNmtmp
		RUN &wp_impfat > &LNmtmp
	ELSE
		SET PRINTER TO &wp_prtfat
	ENDIF
	*****************************************************************



	SELE empresa					&& altera parametros em empresa
	=REGLOCK(.T.)

	IF NOT USED("TAB002")
		=NetArq("TAB002") && REABR
	ENDIF
	SELE TAB002
	SET ORDER TO TAG codigo

	SELE usuario
	SET ORDER TO TAG usuario
	SELE transprt
	SET ORDER TO TAG CGC

	SET POINT TO ","
	SET SEPARATOR  TO "."
	m.sOldError=ON('error')
	ON ERROR *
	*--------------------------------------------------
	LNvalor = orcament.valor  && REPASSADO PARA FECHAMENTO DO CUPOM
	*--------------------------------------------------
	*   O cupom  processado em primeiro lugar por poder agregar
	* um numero idefinido de itens
	*-----------------------------------------------------
	*--------------------------------------------------
	LNvalor = orcament.valor  && REPASSADO PARA FECHAMENTO DO CUPOM
	*--------------------------------------------------


	*--------------------------------------------------------*
	*  IMPRESSAO CONVENCIONAL DE COPIA DE CUPOM (NAO NFe)
	*--------------------------------------------------------*


    *----------------------------------------------------------*
    * Se houver impressao hibrida sda copia
    *   (NF Convencional e NFe)
    *    LNnfCopInicio  deve ser restaurado apos a
    *   impressao convencional
    *----------------------------------------------------------*
	LNBkpnfCopInicio  = LNnfCopInicio



 	*--> N=NAO H=HOMOLOGACAO
 	IF      EMPRESA.EMITE_NFE $ "NH" ;
		AND "COPIA EM NOTA" $ LStp_proces
		
		
		LsOrientacao = "PRODUTO/SERVICO"
		IF  "NF SERVICO" $ LStp_proces
			LsOrientacao = "PRODUTO"
		ENDIF

		DO WHILE LNnfCopInicio  <= LNnfCopFim
			SELE nota
			SET ORDER TO TAG NOTA
			SEEK STR(LNemp,3)+STR(LNnfCopInicio,7)

			SELECT tipooper
			SET ORDER TO TAG tipo
			SEEK 'S'+nota.tipo
			IF !FOUND()
				SEEK 's'+orcament.tipo
			ENDIF

			SELE itemmov
			SET ORDER TO TAG itenscopia
			SET NEAR ON
			SEEK STR(nota.empresa,3)+STR(nota.NOTA,7)
			SET NEAR OFF			
			*------------------------------------------------------------*
			*  INICIA GERACAO DE ARQUIVO TEMPORARIO
			*------------------------------------------------------------*
			LSarqtmp 	= "" 			&& EX: C:\TMP\TMP0001
			LSaliastmp 	= "TMP" 		&&     TMP001
			LSaliastmp = UPopentmp(wp_dirtmp,LSarqtmp,LSaliastmp,1)
			IF EMPTY(LSaliastmp)
				WAIT WINDOWS " Nao Foi Gerado Arq TMP. <ENTER> Continua"
				LOOP
		 	ENDIF		


		   	=up_fecha("ITNFSTMP")
			WAIT WINDOW "AGUARDE. Gerando Arq. Temporario." NOWAIT
			SELE itemmov
			COPY TO &LSarqtmp FOR LEFT(itemmov.operacao,1) = "S" ;
					WHILE nota.empresa = itemmov.empresa ;
						  AND nota.nota	= itemmov.nf_copia
			SELE 0
			USE &LSarqtmp   ALIAS ITNFSTMP EXCL
			INDEX ON nf_copia   TAG nota ADDITIVE

			*-------------------------------------------------*
			*>>>   NOVO LAYOUT COM GRID PARA PRODUTO E OUTRA PARA SERV
			*-------------------------------------------------*
			=NFAjustTmpItens("ITNFSTMP",nota.empresa,nota.nota)

			*-------------------------------------------------*

			LNimpressao = RECCOUNT()
			go top
			*----------------------------------------------------------*
			IF NOT USED("BANCO")
				=NetArq("BANCO") && REABR
			ENDIF

			SELE banco
			SET ORDER TO TAG banco

			SELE nota
			SET RELATION TO NOTA INTO ITNFSTMP
			SET RELATION TO  operador INTO usuario 		 ADDITIVE
			SET RELATION TO  banco INTO banco  			 ADDITIVE

			SET SKIP TO ITNFSTMP

			DO CASE
				CASE   nota.empresa = 2 ;
					OR nota.empresa = 3 ;
					OR nota.empresa = 4 ;
			        OR nota.empresa = 6

					REPORT FORM relnfs6A ;
						WHILE nota.nota = LNnfCopInicio AND;
	  					nota.empresa = LNemp AND UNFmarcanf(4) ;
	 						NOCONSOLE TO PRINTER

				OTHERWISE
					REPORT FORM relnfs6 ;
						WHILE nota.nota = LNnfCopInicio AND;
	  					nota.empresa = LNemp AND UNFmarcanf(4) ;
	 						NOCONSOLE TO PRINTER
			ENDCASE


			IF      EMPRESA.EMITE_NFE $ "N"
				*----------------------------------------------------*
				=UNFempmarca(4,LStp_proces,LSOrientacao)
				*----------------------------------------------------*

			ENDIF

		   	=up_fecha("ITNFSTMP")

			LNnfCopInicio  = LNnfCopInicio + 1

		ENDDO
	ENDIF


 	*--> N=NAO H=HOMOLOGACAO
 	IF      EMPRESA.EMITE_NFE $ "S" ;
		=UNFempmarca(4,"COPIA EM NOTA","")
	ENDIF
    *----------------------------------------------------------*

	=W_DEFPROC("rotinas.spr")


	SELE NOTA
	SET RELATION TO
	ON ERROR &sOldError

	****  SO PARA FECHAR ARQUIVO P/ IMP
	IF !(EMPTY(ALLTRIM(wp_imposi)))
		LNmtmp =UPnometmp("ost",2)
		DELETE FILE &LNmtmp
		RUN &wp_imposi > &LNmtmp
	ENDIF
	SET PRINTER TO &wp_prtosi

	SET PRINTER TO SET('PRINTER',1)
	SET RELATION TO
	SET POINT TO
	SET SEPARATOR  TO
	*--------------------------------------------------------------*
	IF !EMPTY(LSalias) AND USED(LSalias)
		SELECT &LSalias
	ENDIF
RETURN(LFretorno)






*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _2XH0IRIV5           ANTNF_CopNFe_Imprime VALID         º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         NOTA_B,     Record Number:   60    º
*       º Variable:            ANTNF_CopNFe_Imprime               º
*       º Called By:           VALID Clause                       º
*       º Object Type:         Push Button                        º
*       º Snippet Number:      52                                 º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*

FUNCTION _2xh0iriv5     &&  ANTNF_CopNFe_Imprime VALID
#REGION 1
return
*---------------------------------------------------------------*

FUNCTION ANTNF_CopNFe_Imprime
PARAMETERS ;
	LNemp,;
	LNorcament,;
	LStp_process,;
	wp_TipoEcf,;
	LNecf,;
	LNCtrlCupomIni,;
	LNCtrlCupomFim,;
	LNnfinicio,;
	LNnffim,;
	LNnfsrvIni,;
	LNnfsrvFim,;
	LNnfCopInicio,;
	LNnfCopFim,;
	LNSrvCopIni,;
	LNSrvCopFim
			
	*------------------------------------------------------------*
	* CLASSIFICACAO:  [*****]
	*------------------------------------------------------------*
	* OBJETIVO....: 	Controlar impressao NOTA/CUPOM
	*------------------------------------------------------------*
	* COMENTARIO..:
	*				
	*------------------------------------------------------------*
	* OBS........ :
	*------------------------------------------------------------*
	*  TABELAS....:
	*------------------------------------------------------------*
	*  PARAMETROS..:
	*		LNemp..........: Empresa que Esta Faturando
	*		LNorcament.....: Nro da OSI para Faturar
	*		LNNfInicio.....: Numero  Inicial de Nota para Impressao
	*		LNNfFim........: Numero  Final de Nota para Impressao
	*		LStp_process...: Processo definido em NF_02DefProcess
	*		wp_TipoEcf.....: Parametro Repassado para ECF
	*		LNecf..........: Parametro Repassado para ECF
	*------------------------------------------------------------*
	*  RETORNO.....:
	*------------------------------------------------------------*
	* EXEMPLO : CHAMADA DO PROGRAMA SCGC2.prg
	*------------------------------------------------------------*
	=W_DEFPROC("rotinas.spr")
	PRIVATE LSalias,LFretorno
	PRIVATE LNvalor
	PRIVATE LScupom	
	PRIVATE LFcpm
	PRIVATE LSstatus
	PRIVATE LRtrnFileNfe



	*--> PARA DADOS RETORNO NFE
	PRIVATE	  RtnStatus,;
			  RtnRecibo,;
		      RtnProtocolo,;
	          RtnChvNFe,;
	          RtnJstfCanc,;
	          RtnPrtcCanc



	STORE "" TO 	  RtnStatus,;
			  RtnRecibo,;
		      RtnProtocolo,;
	          RtnChvNFe,;
	          RtnJstfCanc,;
	          RtnPrtcCanc


    *--> PARA CONTROLE QUANDO HOUVER IMPRESSAO HIBRIDA
    * NOTA CONVENCIONAL + NFe
    *
	*------------------------------------------------------------*
    PRIVATE LNBkpnfInicio,LNBkpnfCopInicio


	*-----------------------------------------------------------*
	LSalias		= 	ALIAS()
	LFretorno	=	.t.
	LSstatus    = ""
	LRtrnFileNfe = ""
	*------------------------------------------------------------*
	*------------------------------------------------------------*


	IF "REC." $ LStp_proces
		LsOrientacao = "PRODUTO/SERVICO"
		=UNFempmarca(4,LStp_proces,LSOrientacao)
		LsOrientacao = "SERVICO"
		=UNFempmarca(4,LStp_proces,LSOrientacao)
		RETURN(.T.)
	ENDIF
	*------------------------------------------------------------*
	*------------------------------------------------------------*
	*------------------------------------------------------------*
	
	
	SELE empresa
	SET ORDER TO TAG empresa
	SEEK LNemp
	IF !FOUND()
		IF !EMPTY(LSalias) AND USED(LSalias)
			SELECT &LSalias
		ENDIF
		RETURN(.F.)
	ENDIF
	*------------------------------------------------------------*
	SELE clienc
	SET ORDER TO TAG emporca
	SEEK STR(LNemp,3)+STR(LNorcament,6)
	IF !FOUND()
		IF !EMPTY(LSalias) AND USED(LSalias)
			SELECT &LSalias
		ENDIF
		RETURN(.F.)
	ENDIF

	SELE orcament
	SET ORDER TO TAG geral
	SEEK STR(LNemp,3)+STR(LNorcament,6)
	IF !FOUND()
		IF !EMPTY(LSalias) AND USED(LSalias)
			SELECT &LSalias
		ENDIF
		RETURN(.F.)
	ENDIF

	SELE orc_anex
	SET ORDER TO TAG orcamento
	SEEK STR(LNemp,3)+STR(LNorcament,6)
	IF !FOUND()
		IF !EMPTY(LSalias) AND USED(LSalias)
			SELECT &LSalias
		ENDIF
		RETURN(.F.)
	ENDIF


	*--------------------------------------------------------------*
	*****************************************************************
	* 				Inicio ---- Impressao  ----
	*****************************************************************
	IF !(EMPTY(ALLTRIM(wp_impfat)))
		LNmtmp =UPnometmp("tmp",2)
		DELETE FILE &LNmtmp
		RUN &wp_impfat > &LNmtmp
	ELSE
		SET PRINTER TO &wp_prtfat
	ENDIF
	*****************************************************************



	SELE empresa					&& altera parametros em empresa
	=REGLOCK(.T.)

	IF NOT USED("TAB002")
		=NetArq("TAB002") && REABR
	ENDIF
	SELE TAB002
	SET ORDER TO TAG codigo

	SELE usuario
	SET ORDER TO TAG usuario
	SELE transprt
	SET ORDER TO TAG CGC

	SET POINT TO ","
	SET SEPARATOR  TO "."
	m.sOldError=ON('error')
	ON ERROR *
	*--------------------------------------------------
	LNvalor = orcament.valor  && REPASSADO PARA FECHAMENTO DO CUPOM
	*--------------------------------------------------
	*   O cupom  processado em primeiro lugar por poder agregar
	* um numero idefinido de itens
	*-----------------------------------------------------
	*--------------------------------------------------
	LNvalor = orcament.valor  && REPASSADO PARA FECHAMENTO DO CUPOM
	*--------------------------------------------------

	*--------------------------------------------------------*
	*  IMPRESSAO(XML) DE COPIA DE CUPOM EM NFe
	*--------------------------------------------------------*

 	*-->S=SIM H=HOMOLOGACAO
 	IF      EMPRESA.EMITE_NFE $ "SH" ;
		AND "COPIA EM NOTA" $ LStp_proces


		SELE nota
		SET ORDER TO TAG NOTA
		SEEK STR(LNemp,3)+STR(LNnfCopInicio,7)
	    m.EMPRESA    =   nota.Empresa
	
		DO CASE
			CASE LNnfCopInicio > 3000000 AND LNnfCopInicio < 4000000
			    m.MOD_DOC    =   "55"  && NFe
		
			OTHERWISE			
				=W_DEFPROC("TIPOOPER.SPR")
				LFieldTmp    = ;
					TPGetFieldValue("S",  nota.tipo ,"Cod_Mod_Rf")
			    m.MOD_DOC    = LFieldTmp
		ENDCASE

	    m.COD_IDFORN  =   SPACE(14)
    	m.NRO_DOC     =   nota.nota
	    m.SERIE_DOC   =   LEFT( nota.Serie +"   ",3)


        PRIVATE LFOk_NFe

		LFOk_NFe = .T.

		=W_DEFPROC("DOCFISCA.SPR")
		LFOk_NFe = DFConvrtNFDocFiscal(NOTA.EMPRESA,NOTA.NOTA)



		PRIVATE LSXMLObjetivo

		LSXMLObjetivo = "EMISSAO"

		IF LFOk_NFe
			=W_DEFPROC("DOCFISCA.SPR")
			LFOk_NFe =(DFGerXMLDocFiscal(LNemp,m.Mod_Doc,m.COD_IDFORN,;
			  m.NRO_DOC,m.Serie_Doc,LSXMLObjetivo ))
		ENDIF




		IF LFOk_NFe
			=W_DEFPROC("DOCFISCA.SPR")
			LFOk_NFe = (DFEnviaNFeXML(LNemp,m.Nro_Doc))
		ENDIF

		IF LFOk_NFe

			=W_DEFPROC("DOCFISCA.SPR")
			LSstatus = (DFRespostaNFe;
			      (;
				     LNemp,;
				     m.NRO_DOC,;
				     "ESPERA",;
					  RtnStatus,;
					  RtnRecibo,;
				      RtnProtocolo,;
			          RtnChvNFe,;
			          RtnJstfCanc,;
			          RtnPrtcCanc;
				  );
				)
		ENDIF

		IF LFOk_NFe
			IF NFLerRegistro(LNemp,LNnfCopInicio)
  		    	=NFSetPropVT("NFE_STATUS",RtnStatus)
				=NFSetPropVT("NFE_RECIBO",RtnRecibo)
				=NFSetPropVT("NFE_PROTOC",RtnProtocolo)
				=NFSetPropVT("NFE_CHV",RtnChvNFe)
				=NFSetPropVT("NFEJSTFCAN",RtnJstfCanc)
				=NFSetPropVT("NFEPRTCCAN",RtnPrtcCanc)
				=NFSalvarRegistro()
			ENDIF
		ENDIF

		IF LFOk_NFe
			=W_DEFPROC("DOCFISCA.SPR")
			IF (DFLerRegistro(LNemp,m.Mod_Doc,m.COD_IDFORN,;
				  m.NRO_DOC,m.Serie_Doc ))
	  	    	=DFSetPropVT("NFE_STATUS",RtnStatus)
				=DFSetPropVT("NFE_RECIBO",RtnRecibo)
				=DFSetPropVT("NFE_PROTOC",RtnProtocolo)
				=DFSetPropVT("NFE_CHV",RtnChvNFe)
				=DFSetPropVT("NFEJSTFCAN",RtnJstfCanc)
				=DFSetPropVT("NFEPRTCCAN",RtnPrtcCanc)
				=DFSalvarRegistro()
			ENDIF
		ENDIF
		IF LFOk_NFe
			*----------------------------------------------------*
			=UNFempmarca(4,LStp_proces,LSOrientacao)
			*----------------------------------------------------*
		ENDIF
	ENDIF



	=W_DEFPROC("rotinas.spr")




	SELE NOTA
	SET RELATION TO
	ON ERROR &sOldError

	****  SO PARA FECHAR ARQUIVO P/ IMP
	IF !(EMPTY(ALLTRIM(wp_imposi)))
		LNmtmp =UPnometmp("ost",2)
		DELETE FILE &LNmtmp
		RUN &wp_imposi > &LNmtmp
	ENDIF
	SET PRINTER TO &wp_prtosi

	SET PRINTER TO SET('PRINTER',1)
	SET RELATION TO
	SET POINT TO
	SET SEPARATOR  TO
	*--------------------------------------------------------------*
	IF !EMPTY(LSalias) AND USED(LSalias)
		SELECT &LSalias
	ENDIF
RETURN(LFretorno)






*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _2XH0IRIVK           NF_CopNFSrvImprime VALID           º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         NOTA_B,     Record Number:   61    º
*       º Variable:            NF_CopNFSrvImprime                 º
*       º Called By:           VALID Clause                       º
*       º Object Type:         Push Button                        º
*       º Snippet Number:      53                                 º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*

FUNCTION _2xh0irivk     &&  NF_CopNFSrvImprime VALID
#REGION 1
return
*---------------------------------------------------------------*

FUNCTION NF_CopNFSrvImprime
PARAMETERS ;
	LNemp,;
	LNorcament,;
	LStp_process,;
	wp_TipoEcf,;
	LNecf,;
	LNCtrlCupomIni,;
	LNCtrlCupomFim,;
	LNnfinicio,;
	LNnffim,;
	LNnfsrvIni,;
	LNnfsrvFim,;
	LNnfCopInicio,;
	LNnfCopFim,;
	LNSrvCopIni,;
	LNSrvCopFim
			
	*------------------------------------------------------------*
	* CLASSIFICACAO:  [*****]
	*------------------------------------------------------------*
	* OBJETIVO....: 	Controlar impressao NOTA/CUPOM
	*------------------------------------------------------------*
	* COMENTARIO..:
	*				
	*------------------------------------------------------------*
	* OBS........ :
	*------------------------------------------------------------*
	*  TABELAS....:
	*------------------------------------------------------------*
	*  PARAMETROS..:
	*		LNemp..........: Empresa que Esta Faturando
	*		LNorcament.....: Nro da OSI para Faturar
	*		LNNfInicio.....: Numero  Inicial de Nota para Impressao
	*		LNNfFim........: Numero  Final de Nota para Impressao
	*		LStp_process...: Processo definido em NF_02DefProcess
	*		wp_TipoEcf.....: Parametro Repassado para ECF
	*		LNecf..........: Parametro Repassado para ECF
	*------------------------------------------------------------*
	*  RETORNO.....:
	*------------------------------------------------------------*
	* EXEMPLO : CHAMADA DO PROGRAMA SCGC2.prg
	*------------------------------------------------------------*
	=W_DEFPROC("rotinas.spr")
	PRIVATE LSalias,LFretorno
	PRIVATE LNvalor
	PRIVATE LScupom	
	PRIVATE LFcpm
	PRIVATE LSstatus
	PRIVATE LRtrnFileNfe



	*--> PARA DADOS RETORNO NFE
	PRIVATE	  RtnStatus,;
			  RtnRecibo,;
		      RtnProtocolo,;
	          RtnChvNFe,;
	          RtnJstfCanc,;
	          RtnPrtcCanc



	STORE "" TO 	  RtnStatus,;
			  RtnRecibo,;
		      RtnProtocolo,;
	          RtnChvNFe,;
	          RtnJstfCanc,;
	          RtnPrtcCanc


    *--> PARA CONTROLE QUANDO HOUVER IMPRESSAO HIBRIDA
    * NOTA CONVENCIONAL + NFe
    *
	*------------------------------------------------------------*
    PRIVATE LNBkpnfInicio,LNBkpnfCopInicio


	*-----------------------------------------------------------*
	LSalias		= 	ALIAS()
	LFretorno	=	.t.
	LSstatus    = ""
	LRtrnFileNfe = ""
	*------------------------------------------------------------*
	*------------------------------------------------------------*


	IF "REC." $ LStp_proces
		LsOrientacao = "PRODUTO/SERVICO"
		=UNFempmarca(4,LStp_proces,LSOrientacao)
		LsOrientacao = "SERVICO"
		=UNFempmarca(4,LStp_proces,LSOrientacao)
		RETURN(.T.)
	ENDIF
	*------------------------------------------------------------*
	*------------------------------------------------------------*
	*------------------------------------------------------------*
	
	
	SELE empresa
	SET ORDER TO TAG empresa
	SEEK LNemp
	IF !FOUND()
		IF !EMPTY(LSalias) AND USED(LSalias)
			SELECT &LSalias
		ENDIF
		RETURN(.F.)
	ENDIF


	*------------------------------------------------------------*
	SELE clienc
	SET ORDER TO TAG emporca
	SEEK STR(LNemp,3)+STR(LNorcament,6)
	IF !FOUND()
		IF !EMPTY(LSalias) AND USED(LSalias)
			SELECT &LSalias
		ENDIF
		RETURN(.F.)
	ENDIF

	SELE orcament
	SET ORDER TO TAG geral
	SEEK STR(LNemp,3)+STR(LNorcament,6)
	IF !FOUND()
		IF !EMPTY(LSalias) AND USED(LSalias)
			SELECT &LSalias
		ENDIF
		RETURN(.F.)
	ENDIF

	SELE orc_anex
	SET ORDER TO TAG orcamento
	SEEK STR(LNemp,3)+STR(LNorcament,6)
	IF !FOUND()
		IF !EMPTY(LSalias) AND USED(LSalias)
			SELECT &LSalias
		ENDIF
		RETURN(.F.)
	ENDIF


	*--------------------------------------------------------------*
	*****************************************************************
	* 				Inicio ---- Impressao  ----
	*****************************************************************
	IF !(EMPTY(ALLTRIM(wp_impfat)))
		LNmtmp =UPnometmp("tmp",2)
		DELETE FILE &LNmtmp
		RUN &wp_impfat > &LNmtmp
	ELSE
		SET PRINTER TO &wp_prtfat
	ENDIF
	*****************************************************************



	SELE empresa					&& altera parametros em empresa
	=REGLOCK(.T.)

	IF NOT USED("TAB002")
		=NetArq("TAB002") && REABR
	ENDIF
	SELE TAB002
	SET ORDER TO TAG codigo

	SELE usuario
	SET ORDER TO TAG usuario
	SELE transprt
	SET ORDER TO TAG CGC

	SET POINT TO ","
	SET SEPARATOR  TO "."
	m.sOldError=ON('error')
	ON ERROR *
	*--------------------------------------------------
	LNvalor = orcament.valor  && REPASSADO PARA FECHAMENTO DO CUPOM
	*--------------------------------------------------
	*   O cupom  processado em primeiro lugar por poder agregar
	* um numero idefinido de itens
	*-----------------------------------------------------
	*--------------------------------------------------
	LNvalor = orcament.valor  && REPASSADO PARA FECHAMENTO DO CUPOM
	*--------------------------------------------------

	LNBkpnfCopInicio  = LNSrvCopIni



 	*--> N=NAO H=HOMOLOGACAO
	IF      (EMPRESA.EMITE_NFS = "S" or EMPRESA.PRINT_NFS = "S");
		AND "COPIA EM NF SERVICO" $ LStp_proces

		LsOrientacao = "SERVICO"
		IF !(EMPTY(ALLTRIM(wp_imporc)))
			LNmtmp =UPnometmp("tmp",2)
			DELETE FILE &LNmtmp
			RUN &wp_imporc > &LNmtmp
		ELSE
			SET PRINTER TO &wp_prtorc
		ENDIF
		*************************************************************
		*--------------------------------------------------
		DO WHILE LNSrvCopIni  <= LNSrvCopFim

			SELE nota
			SET ORDER TO TAG NOTA
			SEEK STR(LNemp,3)+STR(LNSrvCopIni,7)

			SELECT tipooper
			SET ORDER TO TAG tipo
			SEEK 'S'+nota.tipo
			IF !FOUND()
				SEEK 's'+orcament.tipo
			ENDIF

			SELE itemmov
			SET ORDER TO TAG itenscopia
			SET NEAR ON
			SEEK STR(nota.empresa,3)+STR(nota.NOTA,7)
			SET NEAR OFF			
			*------------------------------------------------------------*

			*------------------------------------------------------------*
			*  INICIA GERACAO DE ARQUIVO TEMPORARIO
			*------------------------------------------------------------*
			LSarqtmp 	= "" 			&& EX: C:\TMP\TMP0001
			LSaliastmp 	= "TMP" 		&&     TMP001
			LSaliastmp = UPopentmp(wp_dirtmp,LSarqtmp,LSaliastmp,1)
			IF EMPTY(LSaliastmp)
				WAIT WINDOWS " Nao Foi Gerado Arq TMP. <ENTER> Continua"
				LOOP
		 	ENDIF		

	   		=up_fecha("ITNFSTMP")
			WAIT WINDOW "AGUARDE. Gerando Arq. Temporario." NOWAIT
			SELE itemmov
			COPY TO &LSarqtmp FOR LEFT(itemmov.operacao,1) = "S" ;
				WHILE nota.empresa = itemmov.empresa ;
					  AND nota.nota	= itemmov.nf_copia
			SELE 0
			USE &LSarqtmp   ALIAS ITNFSTMP EXCL
			INDEX ON nf_copia   TAG nota ADDITIVE

			*-------------------------------------------------*
			*>>>   NOVO LAYOUT COM GRID PARA PRODUTO E OUTRA PARA SERV
			*-------------------------------------------------*
			=NFAjustTmpItens("ITNFSTMP",nota.empresa,nota.nota)

			*-------------------------------------------------*

			LNimpressao = RECCOUNT()
			go top
			*----------------------------------------------------------*
			IF NOT USED("BANCO")
				=NetArq("BANCO") && REABR
			ENDIF

			SELE banco
			SET ORDER TO TAG banco

			SELE nota
			SET RELATION TO NOTA INTO ITNFSTMP
			SET RELATION TO  operador INTO usuario 		 ADDITIVE
			SET RELATION TO  banco INTO banco  			 ADDITIVE

			SET SKIP TO ITNFSTMP

	
*			IF wp_dtoper < {01.05.2006}
*				REPORT FORM relnfsrv ;
*					WHILE nota.nota = LNSrvCopIni AND;
* 					nota.empresa = LNemp AND UNFmarcanf(4) ;
* 					NOCONSOLE TO PRINTER
*		ELSE
*			REPORT FORM relsrv02 ;
*				WHILE nota.nota = LNSrvCopIni  AND;
* 					nota.empresa = LNemp AND UNFmarcanf(4) ;
*	 					NOCONSOLE TO PRINTER
*			ENDIF
*





			DO CASE
			
				CASE wp_dtoper < {01.05.2006}

					REPORT FORM relnfsrv ;
						WHILE nota.nota = LNSrvCopIni AND;
  						nota.empresa = LNemp AND UNFmarcanf(4) ;
	 						NOCONSOLE TO PRINTER
				

				CASE nota.empresa <> 6
				
					REPORT FORM relnfs6 ;
						WHILE nota.nota = LNSrvCopIni  AND;
  						nota.empresa = LNemp AND UNFmarcanf(4) ;
	 						NOCONSOLE TO PRINTER
			

				OTHERWISE

					REPORT FORM relsrv02 ;
						WHILE nota.nota = LNSrvCopIni  AND;
  						nota.empresa = LNemp AND UNFmarcanf(4) ;
	 						NOCONSOLE TO PRINTER

			ENDCASE
	







			*----------------------------------------------------*
			=UNFempmarca(4,LStp_proces,LSOrientacao)
			*----------------------------------------------------*
		   	=up_fecha("ITNFSTMP")

			LNSrvCopIni	= LNSrvCopIni + 1
		ENDDO
	ENDIF



 	*--> N=NAO H=HOMOLOGACAO
 	IF      EMPRESA.EMITE_NFSE $ "S" ;
		=UNFempmarca(4,"COPIA EM NF SERVICO","")
	ENDIF


	LNSrvCopIni = LNBkpnfCopInicio
	
	=W_DEFPROC("rotinas.spr")




	SELE NOTA
	SET RELATION TO
	ON ERROR &sOldError

	****  SO PARA FECHAR ARQUIVO P/ IMP
	IF !(EMPTY(ALLTRIM(wp_imposi)))
		LNmtmp =UPnometmp("ost",2)
		DELETE FILE &LNmtmp
		RUN &wp_imposi > &LNmtmp
	ENDIF
	SET PRINTER TO &wp_prtosi

	SET PRINTER TO SET('PRINTER',1)
	SET RELATION TO
	SET POINT TO
	SET SEPARATOR  TO
	*--------------------------------------------------------------*
	IF !EMPTY(LSalias) AND USED(LSalias)
		SELECT &LSalias
	ENDIF
RETURN(LFretorno)






*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _2XH0IRIVL           NFAtlzDadosNFe VALID               º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         NOTA_B,     Record Number:   63    º
*       º Variable:            NFAtlzDadosNFe                     º
*       º Called By:           VALID Clause                       º
*       º Object Type:         Push Button                        º
*       º Snippet Number:      54                                 º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*

FUNCTION _2xh0irivl     &&  NFAtlzDadosNFe VALID
#REGION 1
return
*---------------------------------------------------------------*
*------------------------ < ROT. APOIO >------------------------*
*---------------------------------------------------------------*

FUNCTION NFAtlzDadosNFe
PARAMETER PrmEmp,PrmDtIni,PrmDtFim




    PRIVATE ARQNota,ALSNota
	LSalias = ALIAS()

    ARQNota     = NetArqAgain("NOTA")
    ALSNota     = Alias()

	IF ( ARQNota) > 100000 && HOUVE FALHA DE ABERTURA
        =up_fecha("&ALSNota")
		IF !EMPTY(LSalias) AND USED(LSalias)
			SELECT &LSalias
		ENDIF
		RETURN(.F.)
	ENDIF


	=W_DEFPROC("DOCFISCA.SPR")
	=DFVerifyInst()



	SELE &ALSNota
	SET ORDER TO TAG DATA
	SET NEAR ON
	SEEK STR(PrmEmp,3)+DTOS(PrmDtIni)
	SET NEAR OFF


	HINI =TIME()
	CTR = 1
	MSG  = HINI



	*----------------------------------------------------*
	DO RELINIC.PRG          && INICIA VAR P/ TERMOMETRO

	LFsegue = .t.

	LNregistro = RECNO()
	*LNimpressao = RECCOUNT()

	COUNT  WHILE !EOF() AND &ALSNota .empresa = PrmEmp ;
				AND &ALSNota .data >= PrmDtIni ;
    	        AND &ALSNota .data <= PrmDtFim ;
             TO LNimpressao
	GO LNregistro
	LNimpressos = 0
	*----------------------------------------------------*

	DO WHILE !EOF() ;
					AND	LFsegue = .t. ;
					AND &ALSNota .empresa = PrmEmp ;
					AND &ALSNota .data >= PrmDtIni ;
	                AND &ALSNota .data <= PrmDtFim
		
		=UPtermo()

		LPrmNota = &ALSNota .Nota


		if LPrmNota >= 3000000 and LPrmNota <= 3000000
			=W_DEFPROC("DOCFISCA.SPR")
			=DFConvrtNFDocFiscal(PrmEmp, LPrmNota)
			
			=NFRtrnoNfe_NOTA(PrmEmp,  LPrmNota, "NAO ESPERA")

		ENDIF


		SELE  &ALSNota
		SKIP
		CTR = 	CTR + 1
	ENDDO

	DO RELFIM.PRG          && FIM VAR P/ TERMOMETRO
	*-----------------------------------------------*
    =up_fecha("&ALSNota")
	IF !EMPTY(LSalias) AND USED(LSalias)
		SELECT &LSalias
	ENDIF
RETURN(.t.)



*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _2XH0IRIVM           NFVrfSeqNroNotas VALID             º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         NOTA_B,     Record Number:   64    º
*       º Variable:            NFVrfSeqNroNotas                   º
*       º Called By:           VALID Clause                       º
*       º Object Type:         Push Button                        º
*       º Snippet Number:      55                                 º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*

FUNCTION _2xh0irivm     &&  NFVrfSeqNroNotas VALID
#REGION 1
return
*---------------------------------------------------------------*
*------------------------ < ROT. APOIO >------------------------*
*---------------------------------------------------------------*

FUNCTION NFVrfSeqNroNotas
PARAMETER PrmEmp,PrmDtIni,PrmDtFim, PrmArquivoLog




    PRIVATE ARQNota,ALSNota
	LSalias = ALIAS()

    ARQNota     = NetArqAgain("NOTA")
    ALSNota     = Alias()

	IF ( ARQNota) > 100000 && HOUVE FALHA DE ABERTURA
        =up_fecha("&ALSNota")
		IF !EMPTY(LSalias) AND USED(LSalias)
			SELECT &LSalias
		ENDIF
		RETURN(.F.)
	ENDIF


	=W_DEFPROC("DOCFISCA.SPR")
	=DFVerifyInst()



	SELE &ALSNota
	SET ORDER TO TAG DATA
	SET NEAR ON
	SEEK STR(PrmEmp,3)+DTOS(PrmDtIni)
	SET NEAR OFF


	HINI =TIME()
	CTR = 1
	MSG  = HINI



	SET TALK ON
	SELECT NF.NOTA,NF.DATA ;
	FROM &ALSNota NF;
	WHERE   NF.empresa = PrmEmp ;
		AND NF.data >= PrmDtIni ;
    	AND NF.data <= PrmDtFim ;
    INTO CURSOR NFselec;
    ORDER BY NF.NOTA
	SET TALK OFF




	*----------------------------------------------------*
	DO RELINIC.PRG          && INICIA VAR P/ TERMOMETRO

	LFsegue = .t.

	GO TOP
	LNregistro = RECNO()

	SELE NFselec

	COUNT  TO LNimpressao
	GO LNregistro
	LNimpressos = 0
	*----------------------------------------------------*


   	PRIVATE LSfileXML,LNroIDfileXML, LSnomeArqXml

	IF TYPE("PrmArquivoLog") = "U" OR EMPTY(PrmArquivoLog)
		LSnomeArqXml = "\TMP\SEQ_NOTA.TXT"
	ELSE
		LSnomeArqXml = PrmArquivoLog
	ENDIF
   	LSfileXML	= LSnomeArqXml



  	LNroIDfileXML 		=fcreate(LSfileXML)
   	if LNroIDfileXML<0
      =fclose(LNroIDfileXML)
      wait 'ERRO criaÆo arquivo tempor rio '+LSfileXML+'- <ENTER> ' window
      return
   	endif


	*---------------------------------------------------*
	PRIVATE LctrSeq, LString
	LctrSeq = NFselec.nota

	LString = "Inicio Verificacao"

	=fPuts(LNroIDfileXML,LString,LEN(LString))


	SELE NFselec
	DO WHILE !EOF() AND	LFsegue = .t.
		
		=UPtermo()

		IF 	LctrSeq <> NFselec.nota

			LString = "      "
			=fPuts(LNroIDfileXML,LString,LEN(LString))

			LString = "       -Faltam nro entre: "+;
			          STR(LctrSeq,7) +;
					  " e "+;	
			          STR( NFselec.nota ,7) +;
					  " de "+;	
			          DTOC( NFselec.data )
			
			
			=fPuts(LNroIDfileXML,LString,LEN(LString))

			LString = "      "
			=fPuts(LNroIDfileXML,LString,LEN(LString))

			LctrSeq = NFselec.nota

		ELSE

			LString = STR(LctrSeq,7) +;
					  " OK "+;
					  " de "+;	
			          DTOC( NFselec.data )

			=fPuts(LNroIDfileXML,LString,LEN(LString))
		ENDIF


		SELE  NFselec
		SKIP

		LctrSeq  = LctrSeq + 1

	ENDDO

	SELE NFselec
	USE

	LString = "Final Verificacao"

	=fPuts(LNroIDfileXML,LString,LEN(LString))

    =fclose(LNroIDfileXML)

	DO RELFIM.PRG          && FIM VAR P/ TERMOMETRO
	*-----------------------------------------------*
    =up_fecha("&ALSNota")
	IF !EMPTY(LSalias) AND USED(LSalias)
		SELECT &LSalias
	ENDIF






	*****************************************
	SET SYSMENU ON
	PUSH MENU _MSYSMENU
	SET SYSMENU TO _MWINDOW, _MWI_ZOOM,_MWI_MOVE, _MEDIT, _MED_FIND, ;
						_MED_FINDA
	HIDE MENU _MSYSMENU
	ON KEY LABEL F10    KEYBOARD "{CTRL-F10}"

	******************************************

	KEYBOARD "{CTRL-F10}"
	MODIF COMM &LSnomeArqXml   NOEDIT

	*****************************************
	POP MENU _MSYSMENU
	SET SYSMENU OFF
	HIDE MENU _MSYSMENU
	*****************************************


RETURN(.t.)



*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _2XH0IRIVQ           NF_02DefProcess VALID              º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         NOTA_B,     Record Number:   65    º
*       º Variable:            NF_02DefProcess                    º
*       º Called By:           VALID Clause                       º
*       º Object Type:         Push Button                        º
*       º Snippet Number:      56                                 º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*

FUNCTION _2xh0irivq     &&  NF_02DefProcess VALID
#REGION 1
return
*---------------------------------------------------------------*

FUNCTION NF_02DefProcess
PARAMETERS PrmEmpresa,LStipo,LFproduto,LFservico,LFipi,;
		LDdatanf,LStp_process,PrmTpPessoa,PrmTpInscr,PrmInscricao,;
	     PrmSolicitante


	*------------------------------------------------------------*
	* CLASSIFICACAO:  [*****]
	*------------------------------------------------------------*
	* OBJETIVO....: Definir o processo que orienta o faturamento
	*		em relacao a NOTA e ou ECF
	*------------------------------------------------------------*
	* COMENTARIO..: Exitem diferencas de tratamento do ECF/NOTA
	*			entre as filiais que implicam na emissao ou nao
	*			de CUPOM ou NOTA
	*		LStp_process...: Processo definido em NF_02DefProcess
	*				LStp_proces	= "CUPOM"
	*				LStp_proces	= "CUPOM/COPIA EM NOTA"
	*				LStp_proces	= "CUPOM/COPIA EM NF SERVICO"
	*				LStp_proces	= "CUPOM/COPIA EM NOTA/COPIA EM NF SERVICO"
    *
	*				LStp_proces	= "NOTA"
	*
	*				LStp_proces	= "NF SERVICO"
	*
	*				LStp_proces	= "NOTA/NF SERVICO"
    *
	*				LStp_proces	= "REC.CUPOM"
	*				LStp_proces	= "REC.NOTA"
	*				LStp_proces	= "REC.NF SERVICO"
	*				LStp_proces	= "REC.NOTA/REC.NF SERVICO"
	*   Existem dois pocessos extras definidos na rotina que solicita
	*  copia de cupom.
	*					LStp_proces	= "COPIA CUPOM EM NOTA"
	*					LStp_proces	= "COPIA CUPOM EM NF SERVICO"
	**********************************************************************
	*  INICIO DESCRICAO DE PASSOS
	*	WP_ECF = [S]	= ECF CONECTADO EM PROCESSO NORMAL
	*			 [R]	= ECF CONECTADO EM PROCESSO DE RECUPERACAO DE DADOS	
	*
	*			 [I]	= ECF CONECTADO SEM AUTORIZACAO P/ SERVICO
	*			 [Q]	= ECF CONECTADO SEM AUTORIZACAO P/ SERVICO EM
	*						 RECUPERACAO DADOS
	*
	*			 [N]	= ECF NAO CONECTADO
	*			 [E]	= ECF NAO CONECTADO EM PROCESSO DE RECUPERACAO DADOS
	*	
	* 		Se for imprimir CUPOM (FOR (VENDA INTERNA A CONTRIBUITE
	*				ESTADUAL(1) OU INSCRITO(2) OU NAO INSCRITO(3))  OU VENDA
	*				EXTERNA PARA CONTRIBUINTE NAO INSCRITO(3))
	*	=> LER NUMERO DO CUPOM ; LER ULTIMO REGISTRO DE CUPOM (EMPRESA) ;
	*	   	DIFERENCIAR NRO. REGISTRO DO CUPOM DO NRO DE NF . COM + 100000
	**********************************************************************
	*------------------------------------------------------------*
	* OBS........ :
	*------------------------------------------------------------*
	*  TABELAS....:
	*------------------------------------------------------------*
	*  PARAMETROS..:
	*		LNtipo.........: Tipo da Operacao
	*		LFproduto......: Flag indicando existencia de produto
	*		LFservico......: Flag indicando existencia de servico
	*						para faturar
	*						.T. => Sera faturado servico
	*						.F. => Nao Sera faturado servico
	*------------------------------------------------------------*
	*  RETORNO.....:
	*			LStp_process : Identificacao do processo
	*
	*					FUNCAO RETORNA .T. ou .F.
	*------------------------------------------------------------*
	* EXEMPLO : CHAMADA DO PROGRAMA SCGC2.prg
	*------------------------------------------------------------*
	=W_DEFPROC("rotinas.spr")
	PRIVATE LSalias
	PRIVATE LSecf
	PRIVATE LSmarca

	*-----------------------------------------------------------*
	PRIVATE  LNCheque1Vlr,LNCheque2Vlr,LNCheque3Vlr,;
				 LNDinheiroVlr, LNCartaoVlr,LNTicketVlr,LNDuplicatVlr
	STORE 0 TO   LNCheque1Vlr,LNCheque2Vlr,LNCheque3Vlr,;
				 LNDinheiroVlr, LNCartaoVlr,LNTicketVlr,LNDuplicatVlr

	*-----------------------------------------------------------*
	LSalias	= ALIAS()
	SELE parametr
	SET ORDER TO TAG EMPRESA
	SEEK PrmEmpresa
	IF !FOUND()
		GO TOP
	ENDIF
	LSecf		= parametr.usa_ecf
	LSmarca		= parametr.tipo_ecf

	SELECT tipooper
	SET ORDER TO TAG tipo
	SEEK 's'+LStipo
	IF !FOUND()
		SEEK 'S'+LStipo  	
	ENDIF
	IF !FOUND()
		DO OBJ_MENS.SPR WITH ;
	   		"Nao foi possivel Localizar Tipo de Operacao (TIPOOPER)."
		IF !EMPTY(LSalias) AND USED(LSalias)
			SELECT &LSalias
		ENDIF
		RETURN(.f.)
	ENDIF
	*-----------------------------------------------------------*
	*<<<<<<<<<<<<<<< DEFININDO MODELO DO PROCESSO FATURAMENTO >>>>>>>>>>>>>
	*-----------------------------------------------------------*
	=W_DEFPROC("ORCAMENT.SPR")
	=ORVlr_e_FormPgto(PrmEmpresa,;
		  orcament.orcamento,;
		  LNCheque1Vlr,;
		  LNDinheiroVlr,;
		  LNCartaoVlr,;
		  LNDuplicatVlr)
	*-----------------------------------------------------------*
    * 1-DEFININE DOCUMENTO FISCAL PRINCIPAL
	*-----------------------------------------------------------*
	DO CASE
		CASE LSecf $ "I/Q/S/R"	
			DO CASE
				CASE LNCartaoVlr > 0
					LStp_proces	= "CUPOM"
				CASE tipooper.ch_opera <> "1"
					LStp_proces	= "NOTA"
				CASE PrmTpPessoa = 2	&& JURIDICA
					LStp_proces	= "NOTA"
				CASE PrmTpInscr  = 1   && ESTADUAL
					LStp_proces	= "NOTA"
				CASE tipooper.ch_contr $ "13"
					LStp_proces	= "CUPOM"
				CASE tipooper.ch_contr $ "4"    && REVENDEDOR
					LStp_proces	= "NOTA"
				CASE tipooper.ch_desti = "2" AND tipooper.ch_contr $ "2"
					LStp_proces	= "NOTA"
				OTHERWISE
					LStp_proces	= "NOTA"
			ENDCASE			
		CASE LSecf $ "N"	
			LStp_proces	= "NOTA"
		OTHERWISE
			DO OBJ_MENS.SPR WITH " Nao esta definido Parametro para " +;
				"Forma de tratamento do ECF/FATURAMENTO"
			IF !EMPTY(LSalias) AND USED(LSalias)
				SELECT &LSalias
			ENDIF
			RETURN(.f.)
			
	ENDCASE

	*-----------------------------------------------------------*
    * 2-DEFININE DOCUMENTOS AUXILIARES (COPIA) / NF.SERVICO
	*-----------------------------------------------------------*
	*---------------------------------------------------------*
	* AS CAPAS DAS COPIAS SAO IMPORTADAS JUNTO COM AS CAPAS
	* DAS NOTAS CANCELADAS. SENDO ASSIM NA IMPORTACAO NAO SERA
	* FEITA GERACAO DE COPIAS PELA RORINA FATURAMENTO
	*---------------------------------------------------------*
	*-----------------------------------------------------------*
	PRIVATE LSemi_NFe,LSemi_NFS,LSemi_NFSe
	
	=W_DEFPROC("EMPRESA.SPR")
	LSemi_NFe = EMGetFieldValue(PrmEmpresa,"EMITE_NFE")

	=W_DEFPROC("EMPRESA.SPR")
	LSemi_NFS = EMGetFieldValue(PrmEmpresa,"EMITE_NFS")

	=W_DEFPROC("EMPRESA.SPR")
	LSemi_NFSe = EMGetFieldValue(PrmEmpresa,"EMITE_NFSE")

	*------------------------------------------------------------*


	DO CASE
			CASE LStp_proces	= "CUPOM"


				IF PrmSolicitante <> "IMPORTACAO"

					IF  LFipi= .T. OR LFproduto = .T.
						LStp_proces	= LStp_proces+"/COPIA EM NOTA"
					ENDIF


					IF  LFservico .T. ;
					  AND (LSemi_NFS = "S" OR  LSemi_NFSe = "S")
					      LStp_proces = LStp_proces+"/COPIA EM NF SERVICO"
					ENDIF


				ENDIF

			CASE LStp_proces	= "NOTA"

				IF LSemi_NFS = "S" OR LSemi_NFSe = "S"
					DO CASE

						CASE LFservico = .T. AND LFproduto = .T.
							LStp_proces	= LStp_proces+"/NF SERVICO"

						CASE LFservico = .T. AND LFproduto = .F.
							LStp_proces	= "NF SERVICO"

					ENDCASE
				ENDIF
	ENDCASE
	*--------------------------------------------------------------*
	IF LSecf $ "Q/R/E"	OR 	PrmSolicitante $ "RECUPERACAO"
		LStp_proces	= "REC."+LStp_proces
	ENDIF



	*---------------------------------------------------------------*
	*  NA IMPORTACAO NAO HA COMO SABER A SITUACAO DOS PARAMETROS
	* NO MOMENTO DO FATURAMENTO,SENDO ASSIM A DEFINICAO DO PROCESSO
	* E FEITA CONFORME O TIPO DE DOCUMENTO GERADO NO FATURAMENTO
	*---------------------------------------------------------------*
	* NO CASO DE COPIA ELAS SAO IMPORTAS JUNTO COM AS NOTAS CANCELADAS
	* E SOMENTE AS CAPAS
	*---------------------------------------------------------------*
	

	IF PrmSolicitante $ "IMPORTACAO"

		DO CASE
			CASE  orcament.nota >= 3000000 ;
			  AND orcament.nota <= 3999999
					LStp_proces	= "NOTA"

					IF   orcament.NFSERVICO >= 2000000 ;
					 AND orcament.NFSERVICO <  3000000
					   LStp_proces	= LStp_proces+"/NF SERVICO"
					ENDIF

					IF   orcament.NFSERVICO >= 4000000 ;
					 AND orcament.NFSERVICO <  5000000
					   LStp_proces	= LStp_proces+"/NF SERVICO"
					ENDIF




			CASE  orcament.nota < 1000000  && 0 ---> 999999
					LStp_proces	= "NOTA"

					IF   orcament.NFSERVICO >= 2000000 ;
					 AND orcament.NFSERVICO <  3000000
					   LStp_proces	= LStp_proces+"/NF SERVICO"
					ENDIF

					IF   orcament.NFSERVICO >= 4000000 ;
					 AND orcament.NFSERVICO <  5000000
					   LStp_proces	= LStp_proces+"/NF SERVICO"
					ENDIF


			CASE  orcament.nota < 2000000  && 1000000 ---> 2000000
					LStp_proces	= "CUPOM"

			OTHERWISE
					LStp_proces	= "NF SERVICO"
		ENDCASE
		LStp_proces	= "REC."+LStp_proces
	ENDIF
	*--------------------------------------------------------------*
	IF !EMPTY(LSalias) AND USED(LSalias)
		SELECT &LSalias
	ENDIF
RETURN(.t.)



*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _2XH0IRIXO           ANTNF_ImpNFSe VALID                º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         NOTA_B,     Record Number:   66    º
*       º Variable:            ANTNF_ImpNFSe                      º
*       º Called By:           VALID Clause                       º
*       º Object Type:         Push Button                        º
*       º Snippet Number:      57                                 º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*

FUNCTION _2xh0irixo     &&  ANTNF_ImpNFSe VALID
#REGION 1
return
*---------------------------------------------------------------*

FUNCTION ANTNF_ImpNFSe
PARAMETERS ;
	LNemp,;
	LNorcament,;
	LStp_process,;
	wp_TipoEcf,;
	LNecf,;
	LNCtrlCupomIni,;
	LNCtrlCupomFim,;
	LNnfinicio,;
	LNnffim,;
	LNnfsrvIni,;
	LNnfsrvFim,;
	LNnfCopInicio,;
	LNnfCopFim,;
	LNSrvCopIni,;
	LNSrvCopFim
			
	*------------------------------------------------------------*
	* CLASSIFICACAO:  [*****]
	*------------------------------------------------------------*
	* OBJETIVO....: 	Controlar impressao NOTA/CUPOM
	*------------------------------------------------------------*
	* COMENTARIO..:
	*				
	*------------------------------------------------------------*
	* OBS........ :
	*------------------------------------------------------------*
	*  TABELAS....:
	*------------------------------------------------------------*
	*  PARAMETROS..:
	*		LNemp..........: Empresa que Esta Faturando
	*		LNorcament.....: Nro da OSI para Faturar
	*		LNNfInicio.....: Numero  Inicial de Nota para Impressao
	*		LNNfFim........: Numero  Final de Nota para Impressao
	*		LStp_process...: Processo definido em NF_02DefProcess
	*		wp_TipoEcf.....: Parametro Repassado para ECF
	*		LNecf..........: Parametro Repassado para ECF
	*------------------------------------------------------------*
	*  RETORNO.....:
	*------------------------------------------------------------*
	* EXEMPLO : CHAMADA DO PROGRAMA SCGC2.prg
	*------------------------------------------------------------*
	=W_DEFPROC("rotinas.spr")
	PRIVATE LSalias,LFretorno
	PRIVATE LNvalor
	PRIVATE LScupom	
	PRIVATE LFcpm
	PRIVATE LSstatus
	PRIVATE LRtrnFileNfe



	*--> PARA DADOS RETORNO NFE
	PRIVATE	  RtnStatus,;
			  RtnRecibo,;
		      RtnProtocolo,;
	          RtnChvNFe,;
	          RtnJstfCanc,;
	          RtnPrtcCanc



	STORE "" TO 	  RtnStatus,;
			  RtnRecibo,;
		      RtnProtocolo,;
	          RtnChvNFe,;
	          RtnJstfCanc,;
	          RtnPrtcCanc


    *--> PARA CONTROLE QUANDO HOUVER IMPRESSAO HIBRIDA
    * NOTA CONVENCIONAL + NFe
    *
	*------------------------------------------------------------*
    PRIVATE LNBkpnfInicio,LNBkpnfCopInicio


	*-----------------------------------------------------------*
	LSalias		= 	ALIAS()
	LFretorno	=	.t.
	LSstatus    = ""
	LRtrnFileNfe = ""
	*------------------------------------------------------------*
	*------------------------------------------------------------*


	IF "REC." $ LStp_proces
		LsOrientacao = "PRODUTO/SERVICO"
		=UNFempmarca(4,LStp_proces,LSOrientacao)
		LsOrientacao = "SERVICO"
		=UNFempmarca(4,LStp_proces,LSOrientacao)
		RETURN(.T.)
	ENDIF
	*------------------------------------------------------------*
	*------------------------------------------------------------*
	*------------------------------------------------------------*
	
	
	SELE empresa
	SET ORDER TO TAG empresa
	SEEK LNemp
	IF !FOUND()
		IF !EMPTY(LSalias) AND USED(LSalias)
			SELECT &LSalias
		ENDIF
		RETURN(.F.)
	ENDIF
	*------------------------------------------------------------*
	SELE clienc
	SET ORDER TO TAG emporca
	SEEK STR(LNemp,3)+STR(LNorcament,6)
	IF !FOUND()
		IF !EMPTY(LSalias) AND USED(LSalias)
			SELECT &LSalias
		ENDIF
		RETURN(.F.)
	ENDIF

	SELE orcament
	SET ORDER TO TAG geral
	SEEK STR(LNemp,3)+STR(LNorcament,6)
	IF !FOUND()
		IF !EMPTY(LSalias) AND USED(LSalias)
			SELECT &LSalias
		ENDIF
		RETURN(.F.)
	ENDIF

	SELE orc_anex
	SET ORDER TO TAG orcamento
	SEEK STR(LNemp,3)+STR(LNorcament,6)
	IF !FOUND()
		IF !EMPTY(LSalias) AND USED(LSalias)
			SELECT &LSalias
		ENDIF
		RETURN(.F.)
	ENDIF


	*--------------------------------------------------------------*
	*****************************************************************
	* 				Inicio ---- Impressao  ----
	*****************************************************************
	IF !(EMPTY(ALLTRIM(wp_impfat)))
		LNmtmp =UPnometmp("tmp",2)
		DELETE FILE &LNmtmp
		RUN &wp_impfat > &LNmtmp
	ELSE
		SET PRINTER TO &wp_prtfat
	ENDIF
	*****************************************************************



	SELE empresa					&& altera parametros em empresa
	=REGLOCK(.T.)

	IF NOT USED("TAB002")
		=NetArq("TAB002") && REABR
	ENDIF
	SELE TAB002
	SET ORDER TO TAG codigo

	SELE usuario
	SET ORDER TO TAG usuario
	SELE transprt
	SET ORDER TO TAG CGC

	SET POINT TO ","
	SET SEPARATOR  TO "."
	m.sOldError=ON('error')
	ON ERROR *
	*--------------------------------------------------
	LNvalor = orcament.valor  && REPASSADO PARA FECHAMENTO DO CUPOM
	*--------------------------------------------------
	*   O cupom  processado em primeiro lugar por poder agregar
	* um numero idefinido de itens
	*-----------------------------------------------------
	*--------------------------------------------------
	LNvalor = orcament.valor  && REPASSADO PARA FECHAMENTO DO CUPOM
	*--------------------------------------------------


	*--------------------------------------------------------*
	*  IMPRESSAO(XML) DE NFe
	*--------------------------------------------------------*


	*--> S=SIM H=HOMOLOGACAO
	IF      EMPRESA.EMITE_NFSE $ "SH" ;
	    AND "NF SERVICO" $ LStp_proces ;
	    AND !("COPIA" $ LStp_proces)



		SELE nota
		SET ORDER TO TAG NOTA
		SEEK STR(LNemp,3)+STR(LNnfSrvIni,7)
	    m.EMPRESA    =   nota.Empresa
	

		DO CASE
			CASE LNnfSrvIni > 4000000 AND LNnfSrvIni < 5000000
			    m.MOD_DOC    =   "77"  && NFe
		
			OTHERWISE			
				=W_DEFPROC("TIPOOPER.SPR")
				LFieldTmp    = ;
					TPGetFieldValue("S",  nota.tipo ,"Cod_Mod_Rf")
			    m.MOD_DOC    = LFieldTmp
		ENDCASE


	    m.COD_IDFORN  =   SPACE(14)
    	m.NRO_DOC     =   nota.nota
	    m.SERIE_DOC   =   LEFT( nota.Serie +"   ",3)

        PRIVATE LFOk_NFe

		LFOk_NFe = .T.

		=W_DEFPROC("DOCFISCA.SPR")
		LFOk_NFe = DFConvrtNFDocFiscal(NOTA.EMPRESA,NOTA.NOTA)



		PRIVATE LSXMLObjetivo

		LSXMLObjetivo = "ESCRITURACAO"

		IF LFOk_NFe
			=W_DEFPROC("DOCFISCA.SPR")
			LFOk_NFe =(DFGerXMLDocFiscal(LNemp,m.Mod_Doc,m.COD_IDFORN,;
			  m.NRO_DOC,m.Serie_Doc,LSXMLObjetivo ))
		ENDIF




		=W_DEFPROC("DOCFISCA.SPR")
		IF LFOk_NFe
		   LFOk_NFe = (DFEnviaNFeXML(LNemp,m.Nro_Doc))
		ENDIF

		=W_DEFPROC("DOCFISCA.SPR")
		IF LFOk_NFe
			LSstatus = (DFRespostaNFe;
			      (;
				     LNemp,;
				     m.NRO_DOC,;
				     "ESPERA",;
					  RtnStatus,;
					  RtnRecibo,;
				      RtnProtocolo,;
			          RtnChvNFe,;
			          RtnJstfCanc,;
			          RtnPrtcCanc;
				  );
				)
		ENDIF


		IF LFOk_NFe
			=W_DEFPROC("ORCAMENT.SPR")
			IF ORLerRegistro(LNemp,nota.referencia)
  	    	
	  	    	=ORSetPropVT("NFE_STATUS",RtnStatus)
				=ORSetPropVT("NFE_RECIBO",RtnRecibo)
				=ORSetPropVT("NFE_PROTOC",RtnProtocolo)
				=ORSetPropVT("NFE_CHV",RtnChvNFe)
				=ORSetPropVT("NFEJSTFCAN",RtnJstfCanc)
				=ORSetPropVT("NFEPRTCCAN",RtnPrtcCanc)
				=ORSalvarRegistro()
			ENDIF
		ENDIF

		IF LFOk_NFe
			=W_DEFPROC("NOTA.SPR")
			IF NFLerRegistro(LNemp,LNnfinicio)
	  	    	=NFSetPropVT("NFE_STATUS",RtnStatus)
				=NFSetPropVT("NFE_RECIBO",RtnRecibo)
				=NFSetPropVT("NFE_PROTOC",RtnProtocolo)
				=NFSetPropVT("NFE_CHV",RtnChvNFe)
				=NFSetPropVT("NFEJSTFCAN",RtnJstfCanc)
				=NFSetPropVT("NFEPRTCCAN",RtnPrtcCanc)
				=NFSalvarRegistro()
			ENDIF
		ENDIF

		IF LFOk_NFe
			=W_DEFPROC("DOCFISCA.SPR")
			IF (DFLerRegistro(LNemp,m.Mod_Doc,m.COD_IDFORN,;
				  m.NRO_DOC,m.Serie_Doc ))
	  	    	=DFSetPropVT("NFE_STATUS",RtnStatus)
				=DFSetPropVT("NFE_RECIBO",RtnRecibo)
				=DFSetPropVT("NFE_PROTOC",RtnProtocolo)
				=DFSetPropVT("NFE_CHV",RtnChvNFe)
				=DFSetPropVT("NFEJSTFCAN",RtnJstfCanc)
				=DFSetPropVT("NFEPRTCCAN",RtnPrtcCanc)
				=DFSalvarRegistro()
			ENDIF
		ENDIF
		IF LFOk_NFe
			*----------------------------------------------------*
			=UNFempmarca(4,LStp_proces,LSOrientacao)
			*----------------------------------------------------*
		ENDIF

	ENDIF



	=W_DEFPROC("rotinas.spr")



	SELE NOTA
	SET RELATION TO
	ON ERROR &sOldError

	****  SO PARA FECHAR ARQUIVO P/ IMP
	IF !(EMPTY(ALLTRIM(wp_imposi)))
		LNmtmp =UPnometmp("ost",2)
		DELETE FILE &LNmtmp
		RUN &wp_imposi > &LNmtmp
	ENDIF
	SET PRINTER TO &wp_prtosi

	SET PRINTER TO SET('PRINTER',1)
	SET RELATION TO
	SET POINT TO
	SET SEPARATOR  TO
	*--------------------------------------------------------------*
	IF !EMPTY(LSalias) AND USED(LSalias)
		SELECT &LSalias
	ENDIF
RETURN(LFretorno)






*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _2XH0IRIXP           ANTNF_CopNFSe_Imprime VALID        º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         NOTA_B,     Record Number:   67    º
*       º Variable:            ANTNF_CopNFSe_Imprime              º
*       º Called By:           VALID Clause                       º
*       º Object Type:         Push Button                        º
*       º Snippet Number:      58                                 º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*

FUNCTION _2xh0irixp     &&  ANTNF_CopNFSe_Imprime VALID
#REGION 1
return
*---------------------------------------------------------------*

FUNCTION ANTNF_CopNFSe_Imprime
PARAMETERS ;
	LNemp,;
	LNorcament,;
	LStp_process,;
	wp_TipoEcf,;
	LNecf,;
	LNCtrlCupomIni,;
	LNCtrlCupomFim,;
	LNnfinicio,;
	LNnffim,;
	LNnfsrvIni,;
	LNnfsrvFim,;
	LNnfCopInicio,;
	LNnfCopFim,;
	LNSrvCopIni,;
	LNSrvCopFim
			
	*------------------------------------------------------------*
	* CLASSIFICACAO:  [*****]
	*------------------------------------------------------------*
	* OBJETIVO....: 	Controlar impressao NOTA/CUPOM
	*------------------------------------------------------------*
	* COMENTARIO..:
	*				
	*------------------------------------------------------------*
	* OBS........ :
	*------------------------------------------------------------*
	*  TABELAS....:
	*------------------------------------------------------------*
	*  PARAMETROS..:
	*		LNemp..........: Empresa que Esta Faturando
	*		LNorcament.....: Nro da OSI para Faturar
	*		LNNfInicio.....: Numero  Inicial de Nota para Impressao
	*		LNNfFim........: Numero  Final de Nota para Impressao
	*		LStp_process...: Processo definido em NF_02DefProcess
	*		wp_TipoEcf.....: Parametro Repassado para ECF
	*		LNecf..........: Parametro Repassado para ECF
	*------------------------------------------------------------*
	*  RETORNO.....:
	*------------------------------------------------------------*
	* EXEMPLO : CHAMADA DO PROGRAMA SCGC2.prg
	*------------------------------------------------------------*
	=W_DEFPROC("rotinas.spr")
	PRIVATE LSalias,LFretorno
	PRIVATE LNvalor
	PRIVATE LScupom	
	PRIVATE LFcpm
	PRIVATE LSstatus
	PRIVATE LRtrnFileNfe



	*--> PARA DADOS RETORNO NFE
	PRIVATE	  RtnStatus,;
			  RtnRecibo,;
		      RtnProtocolo,;
	          RtnChvNFe,;
	          RtnJstfCanc,;
	          RtnPrtcCanc



	STORE "" TO 	  RtnStatus,;
			  RtnRecibo,;
		      RtnProtocolo,;
	          RtnChvNFe,;
	          RtnJstfCanc,;
	          RtnPrtcCanc


    *--> PARA CONTROLE QUANDO HOUVER IMPRESSAO HIBRIDA
    * NOTA CONVENCIONAL + NFe
    *
	*------------------------------------------------------------*
    PRIVATE LNBkpnfInicio,LNBkpnfCopInicio


	*-----------------------------------------------------------*
	LSalias		= 	ALIAS()
	LFretorno	=	.t.
	LSstatus    = ""
	LRtrnFileNfe = ""
	*------------------------------------------------------------*
	*------------------------------------------------------------*


	IF "REC." $ LStp_proces
		LsOrientacao = "PRODUTO/SERVICO"
		=UNFempmarca(4,LStp_proces,LSOrientacao)
		LsOrientacao = "SERVICO"
		=UNFempmarca(4,LStp_proces,LSOrientacao)
		RETURN(.T.)
	ENDIF
	*------------------------------------------------------------*
	*------------------------------------------------------------*
	*------------------------------------------------------------*
	
	
	SELE empresa
	SET ORDER TO TAG empresa
	SEEK LNemp
	IF !FOUND()
		IF !EMPTY(LSalias) AND USED(LSalias)
			SELECT &LSalias
		ENDIF
		RETURN(.F.)
	ENDIF
	*------------------------------------------------------------*
	SELE clienc
	SET ORDER TO TAG emporca
	SEEK STR(LNemp,3)+STR(LNorcament,6)
	IF !FOUND()
		IF !EMPTY(LSalias) AND USED(LSalias)
			SELECT &LSalias
		ENDIF
		RETURN(.F.)
	ENDIF

	SELE orcament
	SET ORDER TO TAG geral
	SEEK STR(LNemp,3)+STR(LNorcament,6)
	IF !FOUND()
		IF !EMPTY(LSalias) AND USED(LSalias)
			SELECT &LSalias
		ENDIF
		RETURN(.F.)
	ENDIF

	SELE orc_anex
	SET ORDER TO TAG orcamento
	SEEK STR(LNemp,3)+STR(LNorcament,6)
	IF !FOUND()
		IF !EMPTY(LSalias) AND USED(LSalias)
			SELECT &LSalias
		ENDIF
		RETURN(.F.)
	ENDIF


	*--------------------------------------------------------------*
	*****************************************************************
	* 				Inicio ---- Impressao  ----
	*****************************************************************
	IF !(EMPTY(ALLTRIM(wp_impfat)))
		LNmtmp =UPnometmp("tmp",2)
		DELETE FILE &LNmtmp
		RUN &wp_impfat > &LNmtmp
	ELSE
		SET PRINTER TO &wp_prtfat
	ENDIF
	*****************************************************************



	SELE empresa					&& altera parametros em empresa
	=REGLOCK(.T.)

	IF NOT USED("TAB002")
		=NetArq("TAB002") && REABR
	ENDIF
	SELE TAB002
	SET ORDER TO TAG codigo

	SELE usuario
	SET ORDER TO TAG usuario
	SELE transprt
	SET ORDER TO TAG CGC

	SET POINT TO ","
	SET SEPARATOR  TO "."
	m.sOldError=ON('error')
	ON ERROR *
	*--------------------------------------------------
	LNvalor = orcament.valor  && REPASSADO PARA FECHAMENTO DO CUPOM
	*--------------------------------------------------
	*   O cupom  processado em primeiro lugar por poder agregar
	* um numero idefinido de itens
	*-----------------------------------------------------
	*--------------------------------------------------
	LNvalor = orcament.valor  && REPASSADO PARA FECHAMENTO DO CUPOM
	*--------------------------------------------------

	*--------------------------------------------------------*
	*  IMPRESSAO(XML) DE COPIA DE CUPOM EM NFe
	*--------------------------------------------------------*


 	*-->S=SIM H=HOMOLOGACAO
 	IF      EMPRESA.EMITE_NFSE $ "SH" ;
		AND "COPIA EM NF SERVICO" $ LStp_proces


		SELE nota
		SET ORDER TO TAG NOTA
		SEEK STR(LNemp,3)+STR(LNSrvCopIni,7)
	    m.EMPRESA    =   nota.Empresa
	
		DO CASE
			CASE LNSrvCopIni > 4000000 AND LNSrvCopIni < 5000000
			    m.MOD_DOC    =   "77"  && NFSe
		
			OTHERWISE			
				=W_DEFPROC("TIPOOPER.SPR")
				LFieldTmp    = ;
					TPGetFieldValue("S",  nota.tipo ,"Cod_Mod_Rf")
			    m.MOD_DOC    = LFieldTmp
		ENDCASE

	    m.COD_IDFORN  =   SPACE(14)
    	m.NRO_DOC     =   nota.nota
	    m.SERIE_DOC   =   LEFT( nota.Serie +"   ",3)


        PRIVATE LFOk_NFe

		LFOk_NFe = .T.

		=W_DEFPROC("DOCFISCA.SPR")
		LFOk_NFe = DFConvrtNFDocFiscal(NOTA.EMPRESA,NOTA.NOTA)



		PRIVATE LSXMLObjetivo

		LSXMLObjetivo = "ESCRITURACAO"

		IF LFOk_NFe
			=W_DEFPROC("DOCFISCA.SPR")
			LFOk_NFe =(DFGerXMLDocFiscal(LNemp,m.Mod_Doc,m.COD_IDFORN,;
			  m.NRO_DOC,m.Serie_Doc,LSXMLObjetivo ))
		ENDIF


		IF LFOk_NFe
			=W_DEFPROC("DOCFISCA.SPR")
			LFOk_NFe = (DFEnviaNFeXML(LNemp,m.Nro_Doc))
		ENDIF

		IF LFOk_NFe

			=W_DEFPROC("DOCFISCA.SPR")
			LSstatus = (DFRespostaNFe;
			      (;
				     LNemp,;
				     m.NRO_DOC,;
				     "ESPERA",;
					  RtnStatus,;
					  RtnRecibo,;
				      RtnProtocolo,;
			          RtnChvNFe,;
			          RtnJstfCanc,;
			          RtnPrtcCanc;
				  );
				)
		ENDIF

		IF LFOk_NFe
			IF NFLerRegistro(LNemp,LNnfCopInicio)
  		    	=NFSetPropVT("NFE_STATUS",RtnStatus)
				=NFSetPropVT("NFE_RECIBO",RtnRecibo)
				=NFSetPropVT("NFE_PROTOC",RtnProtocolo)
				=NFSetPropVT("NFE_CHV",RtnChvNFe)
				=NFSetPropVT("NFEJSTFCAN",RtnJstfCanc)
				=NFSetPropVT("NFEPRTCCAN",RtnPrtcCanc)
				=NFSalvarRegistro()
			ENDIF
		ENDIF

		IF LFOk_NFe
			=W_DEFPROC("DOCFISCA.SPR")
			IF (DFLerRegistro(LNemp,m.Mod_Doc,m.COD_IDFORN,;
				  m.NRO_DOC,m.Serie_Doc ))
	  	    	=DFSetPropVT("NFE_STATUS",RtnStatus)
				=DFSetPropVT("NFE_RECIBO",RtnRecibo)
				=DFSetPropVT("NFE_PROTOC",RtnProtocolo)
				=DFSetPropVT("NFE_CHV",RtnChvNFe)
				=DFSetPropVT("NFEJSTFCAN",RtnJstfCanc)
				=DFSetPropVT("NFEPRTCCAN",RtnPrtcCanc)
				=DFSalvarRegistro()
			ENDIF
		ENDIF
		IF LFOk_NFe
			*----------------------------------------------------*
			=UNFempmarca(4,LStp_proces,LSOrientacao)
			*----------------------------------------------------*
		ENDIF
	ENDIF



	=W_DEFPROC("rotinas.spr")




	SELE NOTA
	SET RELATION TO
	ON ERROR &sOldError

	****  SO PARA FECHAR ARQUIVO P/ IMP
	IF !(EMPTY(ALLTRIM(wp_imposi)))
		LNmtmp =UPnometmp("ost",2)
		DELETE FILE &LNmtmp
		RUN &wp_imposi > &LNmtmp
	ENDIF
	SET PRINTER TO &wp_prtosi

	SET PRINTER TO SET('PRINTER',1)
	SET RELATION TO
	SET POINT TO
	SET SEPARATOR  TO
	*--------------------------------------------------------------*
	IF !EMPTY(LSalias) AND USED(LSalias)
		SELECT &LSalias
	ENDIF
RETURN(LFretorno)






*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _2XH0IRIXQ           NFSerie VALID                      º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         NOTA_B,     Record Number:   68    º
*       º Variable:            NFSerie                            º
*       º Called By:           VALID Clause                       º
*       º Object Type:         Push Button                        º
*       º Snippet Number:      59                                 º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*

FUNCTION _2xh0irixq     &&  NFSerie VALID
#REGION 1
return

*---------------------------------------------------------------*
FUNCTION NFSerie
PARAMETER PrmEmpresa,PrmMuni_ibge,PrmNroNF

PRIVATE LSSerie





	DO CASE

		CASE PrmNroNF <=  999999   && NOTAS
		   LSserie = "U"
		
		   =W_DEFPROC("EMPRESA.SPR")
		   LSserie = EMGetFieldValue(PrmEmpresa,"SERIE_NF")

		CASE PrmNroNF <= 1999999   && CUPONS
		   LSserie = "U"

		CASE PrmNroNF <= 2999999   && NF SERVICO
		   LSserie = "U"

		
		   =W_DEFPROC("EMPRESA.SPR")
		   LSserie = EMGetFieldValue(PrmEmpresa,"SERIE_NFS")


		CASE PrmNroNF <= 3999999   && NFe
		   LSserie = "1"

		
		   =W_DEFPROC("EMPRESA.SPR")
		   LSserie = EMGetFieldValue(PrmEmpresa,"SERIE_NFE")


		CASE PrmNroNF <= 4999999 && and PrmEmpresa = 6  && NFSe CGB VARZEA
		
		   LSserie = "8"

		   =W_DEFPROC("EMPRESA.SPR")
		   LSserie = EMGetFieldValue(PrmEmpresa,"SERIE_NFSE")


		OTHERWISE

		   LSserie = "1"
	ENDCASE

RETURN(LSserie)



*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _2XH0IRIXR           NF_CancDFis VALID                  º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         NOTA_B,     Record Number:   71    º
*       º Variable:            NF_CancDFis                        º
*       º Called By:           VALID Clause                       º
*       º Object Type:         Push Button                        º
*       º Snippet Number:      60                                 º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*

FUNCTION _2xh0irixr     &&  NF_CancDFis VALID
#REGION 1
return
*---------------------------------------------------------------*

FUNCTION NF_CancDFis
PARAMETERS PrmEmpresa, PrmNota, PrmObjetivo




	PRIVATE NFAlias


	PRIVATE LSAlias
	LSalias		= 	ALIAS()


	=W_DEFPROC("NOTA.SPR")
	NFAlias = NFGetAlias()



	=W_DEFPROC("NOTA.SPR")
	IF !NFLerRegistro(PrmEmpresa,PrmNota)

		MSG = "NF nao localizada ";
		     +str(PrmNota,7);
		     +" <ENTER>"
		WAIT MSG
		RETURN(.F.)
	ENDIF


	*-->>>>>>>>>>>>>     PARA ENVIO NFE
	PRIVATE  ;
		     PrmSerie,;
			 PrmTipo,;
		     RtnNro_Doc,;
			 RtnMod_Doc,;
			 RtnCOD_IDFORN,;
			 RtnSerie_Doc

	PrmSerie   		= &NFAlias .Serie
	PrmTipo    		= &NFAlias .Tipo
	RtnNro_Doc 		= 0
 	RtnMod_Doc		= ""
	RtnCOD_IDFORN	= ""
	RtnSerie_Doc	= ""

	*----------------------------------------------------*

	*-->>>>>>>>>>>       PARA DADOS RETORNO NFE
	PRIVATE	  RtnStatus,;
			  RtnRecibo,;
		      RtnProtocolo,;
	          RtnChvNFe,;
	          RtnJstfCanc,;
	          RtnPrtcCanc



	STORE "" TO 	  RtnStatus,;
			  RtnRecibo,;
		      RtnProtocolo,;
	          RtnChvNFe,;
	          RtnJstfCanc,;
	          RtnPrtcCanc
	*----------------------------------------------------*

	=W_DEFPROC("DOCFISCA.SPR")
	=DFDefIDNFDocFiscal(PrmEmpresa,PrmNota,PrmSerie,PrmTipo,;
					    RtnNro_Doc,RtnMod_Doc,RtnCOD_IDFORN,;
						 RtnSerie_Doc)





	IF  RtnMOD_DOC    <>   "55"
		RETURN(.T.)
	ENDIF

	RETURN(.T.)


    PRIVATE LFOk_NFe

	LFOk_NFe = .T.
*
*	=W_DEFPROC("DOCFISCA.SPR")
*	LFOk_NFe = DFConvrtNFDocFiscal(PrmEmpresa,PrmNota)
*


	PRIVATE LSXMLObjetivo

	LSXMLObjetivo = "CANCELAMENTO"

	IF LFOk_NFe
		=W_DEFPROC("DOCFISCA.SPR")
		LFOk_NFe =(DFGerXMLDocFiscal(PrmEmpresa,;
									RtnMod_Doc,;
 						            RtnCOD_IDFORN,;
		 							RtnNro_Doc,;
		 							RtnSerie_Doc,;
		 							LSXMLObjetivo ))
	ENDIF


	=W_DEFPROC("DOCFISCA.SPR")
	IF LFOk_NFe
	   LFOk_NFe = (DFEnviaNFeXML(;
	   					PrmEmpresa,;
	   					RtnMod_Doc,;
	   					RtnNro_Doc))
	ENDIF

	=W_DEFPROC("DOCFISCA.SPR")
	IF LFOk_NFe
		LSstatus = (DFRespostaNFe;
		      (;
				PrmEmpresa,;
				RtnMod_Doc,;
	   			RtnNro_Doc,;
			     "ESPERA",;
				  RtnStatus,;
				  RtnRecibo,;
			      RtnProtocolo,;
		          RtnChvNFe,;
		          RtnJstfCanc,;
		          RtnPrtcCanc;
			  );
			)
		IF "ERRO" $ LSstatus
			 LFOk_NFe = .F.
		ENDIF
		IF !("CANCELADA" $ LSstatus)
			 LFOk_NFe = .F.
		ENDIF

	ENDIF


	IF LFOk_NFe
		=W_DEFPROC("NOTA.SPR")
		IF NFLerRegistro(PrmEmpresa, PrmNota)
  	    	=NFSetPropVT("NFE_STATUS",RtnStatus)
			=NFSetPropVT("NFE_RECIBO",RtnRecibo)
			=NFSetPropVT("NFE_PROTOC",RtnProtocolo)
			=NFSetPropVT("NFE_CHV",RtnChvNFe)
			=NFSetPropVT("NFEJSTFCAN",RtnJstfCanc)
			=NFSetPropVT("NFEPRTCCAN",RtnPrtcCanc)
			=NFSalvarRegistro()
		ENDIF
	ENDIF

	IF LFOk_NFe
		=W_DEFPROC("DOCFISCA.SPR")
		IF (DFLerRegistro(PrmEmpresa,RtnMod_Doc,;
		      RtnCOD_IDFORN,;
			  RtnNro_Doc,RtnSerie_Doc ))
	  	    	=DFSetPropVT("NFE_STATUS",RtnStatus)
				=DFSetPropVT("NFE_RECIBO",RtnRecibo)
				=DFSetPropVT("NFE_PROTOC",RtnProtocolo)
				=DFSetPropVT("NFE_CHV",RtnChvNFe)
				=DFSetPropVT("NFEJSTFCAN",RtnJstfCanc)
				=DFSetPropVT("NFEPRTCCAN",RtnPrtcCanc)
				=DFSalvarRegistro()
		ENDIF
	ENDIF


	=W_DEFPROC("rotinas.spr")


	IF !EMPTY(LSalias) AND USED(LSalias)
		SELECT &LSalias
	ENDIF

	*--------------------------------------------------------------*
RETURN(LFOk_NFe)






*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _2XH0IRIZ2           NF_GeraDFis VALID                  º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         NOTA_B,     Record Number:   72    º
*       º Variable:            NF_GeraDFis                        º
*       º Called By:           VALID Clause                       º
*       º Object Type:         Push Button                        º
*       º Snippet Number:      61                                 º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*

FUNCTION _2xh0iriz2     &&  NF_GeraDFis VALID
#REGION 1
return
*---------------------------------------------------------------*

FUNCTION NF_GeraDFis
PARAMETERS PrmEmpresa, PrmNota,PrmObjetivo,PrmOrientacao



	IF !(PrmObjetivo $ "ESCRITURACAO/EMISSAO/CANCELAMENTO")
	    RETURN(.T.)
	ENDIF


	PRIVATE NFAlias

	PRIVATE LSAlias
	LSalias		= 	ALIAS()




	=W_DEFPROC("NOTA.SPR")
	NFAlias = NFGetAlias()


	=W_DEFPROC("NOTA.SPR")
	IF !NFLerRegistro(PrmEmpresa,PrmNota)

		MSG = "NF nao localizada ";
		     +str(PrmNota,7);
		     +" <ENTER>"
		WAIT MSG


	   *-----<<<< CONSIDERA A NFe MESMO COM ERRO >>>>*------						
	   RETURN(.T.)
	   *----------------------------------------------------

		RETURN(.F.)
	ENDIF


	*-->>>>>>>>>>>>>     PARA ENVIO NFE
	PRIVATE  ;
		     PrmSerie,;
			 PrmTipo,;
		     RtnNro_Doc,;
			 RtnMod_Doc,;
			 RtnCOD_IDFORN,;
			 RtnSerie_Doc

	PrmSerie   		= &NFAlias .Serie
	PrmTipo    		= &NFAlias .Tipo
	RtnNro_Doc 		= 0
 	RtnMod_Doc		= ""
	RtnCOD_IDFORN	= ""
	RtnSerie_Doc	= ""

	*----------------------------------------------------*

	*-->>>>>>>>>>>       PARA DADOS RETORNO NFE
	PRIVATE	  RtnStatus,;
			  RtnRecibo,;
		      RtnProtocolo,;
	          RtnChvNFe,;
	          RtnJstfCanc,;
	          RtnPrtcCanc



	STORE "" TO 	  RtnStatus,;
			  RtnRecibo,;
		      RtnProtocolo,;
	          RtnChvNFe,;
	          RtnJstfCanc,;
	          RtnPrtcCanc
	*----------------------------------------------------*

	

	=W_DEFPROC("DOCFISCA.SPR")
	=DFDefIDNFDocFiscal(PrmEmpresa,PrmNota,PrmSerie,PrmTipo,;
					    RtnNro_Doc,RtnMod_Doc,RtnCOD_IDFORN,;
						 RtnSerie_Doc)







    PRIVATE LFOk_NFe

	LFOk_NFe = .T.

	=W_DEFPROC("DOCFISCA.SPR")
	LFOk_NFe = DFConvrtNFDocFiscal(PrmEmpresa,PrmNota,PrmOrientacao)



	PRIVATE LSXMLObjetivo

	LSXMLObjetivo = PrmObjetivo

	IF LFOk_NFe
		=W_DEFPROC("DOCFISCA.SPR")
		LFOk_NFe =(DFGerXMLDocFiscal(PrmEmpresa,;
									RtnMod_Doc,;
 						            RtnCOD_IDFORN,;
		 							RtnNro_Doc,;
		 							RtnSerie_Doc,;
		 							LSXMLObjetivo ))
	ENDIF


	=W_DEFPROC("DOCFISCA.SPR")
	IF LFOk_NFe
	   LFOk_NFe = (DFEnviaNFeXML(;
	   					PrmEmpresa,;
	   					RtnMod_Doc,;
	   					RtnNro_Doc))
	ENDIF

	=W_DEFPROC("DOCFISCA.SPR")
	IF LFOk_NFe
		LSstatus = (DFRespostaNFe;
		      (;
				PrmEmpresa,;
				RtnMod_Doc,;
	   			RtnNro_Doc,;
			     "ESPERA",;
				  RtnStatus,;
				  RtnRecibo,;
			      RtnProtocolo,;
		          RtnChvNFe,;
		          RtnJstfCanc,;
		          RtnPrtcCanc;
			  );
			)
		IF "ERRO" $ LSstatus
			 LFOk_NFe = .F.
		ENDIF

	ENDIF


	IF LFOk_NFe
		=W_DEFPROC("NOTA.SPR")
		IF NFLerRegistro(PrmEmpresa, PrmNota)
  	    	=NFSetPropVT("NFE_STATUS",RtnStatus)
			=NFSetPropVT("NFE_RECIBO",RtnRecibo)
			=NFSetPropVT("NFE_PROTOC",RtnProtocolo)
			=NFSetPropVT("NFE_CHV",RtnChvNFe)
			=NFSetPropVT("NFEJSTFCAN",RtnJstfCanc)
			=NFSetPropVT("NFEPRTCCAN",RtnPrtcCanc)
			=NFSalvarRegistro()
		ENDIF
	ENDIF


	IF LFOk_NFe
		=W_DEFPROC("DOCFISCA.SPR")
		IF (DFLerRegistro(PrmEmpresa,RtnMod_Doc,;
		      RtnCOD_IDFORN,;
			  RtnNro_Doc,RtnSerie_Doc ))
	  	
	  	    	=DFSetPropVT("NFE_STATUS",RtnStatus)
				=DFSetPropVT("NFE_RECIBO",RtnRecibo)
				=DFSetPropVT("NFE_PROTOC",RtnProtocolo)
				=DFSetPropVT("NFE_CHV",RtnChvNFe)
				=DFSetPropVT("NFEJSTFCAN",RtnJstfCanc)
				=DFSetPropVT("NFEPRTCCAN",RtnPrtcCanc)
				=DFSalvarRegistro()
		ENDIF
	ENDIF


	=W_DEFPROC("rotinas.spr")


	IF !EMPTY(LSalias) AND USED(LSalias)
		SELECT &LSalias
	ENDIF


   *-----<<<< CONSIDERA A NFe MESMO COM ERRO >>>>*------						
   RETURN(.T.)
   *----------------------------------------------------


	*--------------------------------------------------------------*
RETURN(LFOk_NFe)






*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _2XH0IRIZ3           NFDefCancDFis VALID                º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         NOTA_B,     Record Number:   74    º
*       º Variable:            NFDefCancDFis                      º
*       º Called By:           VALID Clause                       º
*       º Object Type:         Push Button                        º
*       º Snippet Number:      62                                 º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*

FUNCTION _2xh0iriz3     &&  NFDefCancDFis VALID
#REGION 1
return
*---------------------------------------------------------------*

********************
FUNCTION NFDefCancDFis
PARAMETERS PrmEmpresa,PrmNota


	*-->>>>>>>>>>>>>     PARA ENVIO NFE
	PRIVATE  ;
		     PrmSerie,;
			 PrmTipo,;
		     RtnNro_Doc,;
			 RtnMod_Doc,;
			 RtnCOD_IDFORN,;
			 RtnSerie_Doc

	PrmSerie   		= ""
	PrmTipo    		= ""
	RtnNro_Doc 		= 0
 	RtnMod_Doc		= ""
	RtnCOD_IDFORN	= ""
	RtnSerie_Doc	= ""

	*----------------------------------------------------*



	=W_DEFPROC("DOCFISCA.SPR")
	=DFDefIDNFDocFiscal(PrmEmpresa,PrmNota,PrmSerie,PrmTipo,;
					    RtnNro_Doc,RtnMod_Doc,RtnCOD_IDFORN,;
						 RtnSerie_Doc)


	*----------------------------------------------------*


	RETURN("NAO INTEGRAR")
	




	*-----------------------------------------------------------*
	PRIVATE LSemi_NF,LSemi_NFe,LSemi_NFS,LSemi_NFSe,LSemi_ECF
	PRIVATE LSscr_NF,LSscr_NFe,LSscr_NFS,LSscr_NFSe,LSscr_ECF

	*------------------------------------------------------------*

	=W_DEFPROC("EMPRESA.SPR")
	LSemi_NF = EMGetFieldValue(PrmEmpresa,"EMITE_NF")
	
	=W_DEFPROC("EMPRESA.SPR")
	LSemi_NFe = EMGetFieldValue(PrmEmpresa,"EMITE_NFE")

	=W_DEFPROC("EMPRESA.SPR")
	LSemi_NFS = EMGetFieldValue(PrmEmpresa,"EMITE_NFS")

	=W_DEFPROC("EMPRESA.SPR")
	LSemi_NFSe = EMGetFieldValue(PrmEmpresa,"EMITE_NFSE")

	=W_DEFPROC("EMPRESA.SPR")
	LSemi_ecf = EMGetFieldValue(PrmEmpresa,"EMITE_ECF")

	*------------------------------------------------------------*

	
	=W_DEFPROC("EMPRESA.SPR")
	LSscr_NF = EMGetFieldValue(PrmEmpresa,"ESCRT_NF")
	
	=W_DEFPROC("EMPRESA.SPR")
	LSscr_NFe = EMGetFieldValue(PrmEmpresa,"ESCRT_NFE")

	=W_DEFPROC("EMPRESA.SPR")
	LSscr_NFS = EMGetFieldValue(PrmEmpresa,"ESCRT_NFS")

	=W_DEFPROC("EMPRESA.SPR")
	LSscr_NFSe = EMGetFieldValue(PrmEmpresa,"ESCRT_NFSE")

	=W_DEFPROC("EMPRESA.SPR")
	LSscr_ecf = EMGetFieldValue(PrmEmpresa,"ESCRT_ECF")


	*------------------------------------------------------------*
	PRIVATE PrmObjetivo

	PrmObjetivo = "NAO INTEGRAR"



	DO CASE
	
		CASE  RtnMOD_DOC    =   "2D"  && CUPOM

			DO CASE
				CASE LSemi_ECF = "S"
	 				PrmObjetivo = "CANCELAMENTO"

				CASE LSscr_ECF = "S"
	 				PrmObjetivo = "ESCRITURACAO"

				OTHERWISE
					PrmObjetivo = "NAO INTEGRAR"
			ENDCASE

		CASE  RtnMOD_DOC    $   "03/77"  && NF SERVICO
				DO CASE
					CASE LSemi_NFS = "S" OR LSemi_NFSe = "S" 				
		 				PrmObjetivo = "CANCELAMENTO"

					CASE LSscr_NFS = "S" OR LSscr_NFSe = "S" 				
		 				PrmObjetivo = "ESCRITURACAO"

					OTHERWISE
						PrmObjetivo = "NAO INTEGRAR"
				ENDCASE

		CASE  RtnMOD_DOC    $   "01/55"  && NF/NFe
				DO CASE
					CASE LSemi_NF = "S" OR LSemi_NFe = "S" 				
		 				PrmObjetivo = "CANCELAMENTO"

					CASE LSscr_NF = "S" OR LSscr_NFe = "S" 				
		 				PrmObjetivo = "ESCRITURACAO"

					OTHERWISE
						PrmObjetivo = "NAO INTEGRAR"
				ENDCASE

		OTHERWISE			
				PrmObjetivo = "NAO INTEGRAR"

		ENDCASE
RETURN(PrmObjetivo)


*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _2XH0IRIZ4           NFDefEnvDFis VALID                 º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         NOTA_B,     Record Number:   75    º
*       º Variable:            NFDefEnvDFis                       º
*       º Called By:           VALID Clause                       º
*       º Object Type:         Push Button                        º
*       º Snippet Number:      63                                 º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*

FUNCTION _2xh0iriz4     &&  NFDefEnvDFis VALID
#REGION 1
return
*---------------------------------------------------------------*

********************
FUNCTION NFDefEnvDFis
PARAMETERS PrmEmpresa,PrmNota


	*-->>>>>>>>>>>>>     PARA ENVIO NFE
	PRIVATE  ;
		     PrmSerie,;
			 PrmTipo,;
		     RtnNro_Doc,;
			 RtnMod_Doc,;
			 RtnCOD_IDFORN,;
			 RtnSerie_Doc

	PrmSerie   		= ""
	PrmTipo    		= ""
	RtnNro_Doc 		= 0
 	RtnMod_Doc		= ""
	RtnCOD_IDFORN	= ""
	RtnSerie_Doc	= ""

	*----------------------------------------------------*



	=W_DEFPROC("DOCFISCA.SPR")
	=DFDefIDNFDocFiscal(PrmEmpresa,PrmNota,PrmSerie,PrmTipo,;
					    RtnNro_Doc,RtnMod_Doc,RtnCOD_IDFORN,;
						 RtnSerie_Doc)


	*----------------------------------------------------*

	*-----------------------------------------------------------*
	PRIVATE LSemi_NF,LSemi_NFe,LSemi_NFS,LSemi_NFSe,LSemi_ECF
	PRIVATE LSscr_NF,LSscr_NFe,LSscr_NFS,LSscr_NFSe,LSscr_ECF

	*------------------------------------------------------------*

	=W_DEFPROC("EMPRESA.SPR")
	LSemi_NF = EMGetFieldValue(PrmEmpresa,"EMITE_NF")
	
	=W_DEFPROC("EMPRESA.SPR")
	LSemi_NFe = EMGetFieldValue(PrmEmpresa,"EMITE_NFE")

	=W_DEFPROC("EMPRESA.SPR")
	LSemi_NFS = EMGetFieldValue(PrmEmpresa,"EMITE_NFS")

	=W_DEFPROC("EMPRESA.SPR")
	LSemi_NFSe = EMGetFieldValue(PrmEmpresa,"EMITE_NFSE")

	=W_DEFPROC("EMPRESA.SPR")
	LSemi_ecf = EMGetFieldValue(PrmEmpresa,"EMITE_ECF")

	*------------------------------------------------------------*

	
	=W_DEFPROC("EMPRESA.SPR")
	LSscr_NF = EMGetFieldValue(PrmEmpresa,"ESCRT_NF")
	
	=W_DEFPROC("EMPRESA.SPR")
	LSscr_NFe = EMGetFieldValue(PrmEmpresa,"ESCRT_NFE")

	=W_DEFPROC("EMPRESA.SPR")
	LSscr_NFS = EMGetFieldValue(PrmEmpresa,"ESCRT_NFS")

	=W_DEFPROC("EMPRESA.SPR")
	LSscr_NFSe = EMGetFieldValue(PrmEmpresa,"ESCRT_NFSE")

	=W_DEFPROC("EMPRESA.SPR")
	LSscr_ecf = EMGetFieldValue(PrmEmpresa,"ESCRT_ECF")


	*------------------------------------------------------------*
	PRIVATE PrmObjetivo

	PrmObjetivo = "NAO INTEGRAR"



	DO CASE
	
		CASE  RtnMOD_DOC    =   "2D"  && CUPOM

			DO CASE
				CASE LSscr_ECF = "S"
	 				PrmObjetivo = "EMISSAO"

				OTHERWISE
					PrmObjetivo = "NAO INTEGRAR"
			ENDCASE

		CASE  RtnMOD_DOC    $   "03/77"  && NF SERVICO
			DO CASE
				CASE LSscr_NFS = "S" OR LSscr_NFSe = "S" 				
	 				PrmObjetivo = "EMISSAO"

				OTHERWISE
						PrmObjetivo = "NAO INTEGRAR"
			ENDCASE

		CASE  RtnMOD_DOC    $   "01/55"  && NF/NFe
			DO CASE
				CASE LSscr_NF = "S" OR LSscr_NFe = "S" 				
	 				PrmObjetivo = "EMISSAO"

				OTHERWISE
					PrmObjetivo = "NAO INTEGRAR"
			ENDCASE

		OTHERWISE			
				PrmObjetivo = "NAO INTEGRAR"

		ENDCASE





RETURN(PrmObjetivo)


*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _2XH0IRIZ5           NFReenvNFe VALID                   º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         NOTA_B,     Record Number:   76    º
*       º Variable:            NFReenvNFe                         º
*       º Called By:           VALID Clause                       º
*       º Object Type:         Push Button                        º
*       º Snippet Number:      64                                 º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*
FUNCTION _2xh0iriz5     &&  NFReenvNFe VALID
#REGION 1
RETURN

FUNCTION NFReenvNFe
PARAMETERS PrmNFFiltro

* PrmNFFiltro => EX:" and (nota < 1000000 or nota > 3000000)"

	=W_DEFPROC("NOTA.SPR")
	LNregistro = NFView(PrmNFFiltro)

	IF LNregistro > 0
	   sele nota
	   go lnregistro


		*----------------------------------------------------------------*
		DO CASE
			CASE Nota.Nota > 2000000 AND  Nota.Nota < 3000000
				LsOrientacao = "SERVICO"

			CASE Nota.Nota > 4000000 AND  Nota.Nota < 5000000
				LsOrientacao = "SERVICO"

			CASE  Nota.totservico > 0 AND Nota.totproduto > 0
				LsOrientacao = "PRODUTO/SERVICO"

			CASE  Nota.totservico > 0
				LsOrientacao = "SERVICO"

			CASE   Nota.totproduto > 0
				LsOrientacao = "PRODUTO"
			OTHERWISE
				LsOrientacao = "PRODUTO/SERVICO"

			
		ENDCASE



		*----------------------------------------------------------------*
		PRIVATE LSobjetivo
		LSobjetivo = NFDefEnvDFis(nota.empresa,nota.nota)

		IF LSobjetivo = "EMISSAO" OR LSobjetivo = "ESCRITURACAO"
			IF !(NF_GeraDFis(nota.empresa,nota.nota,LSobjetivo,;
			      LsOrientacao ))
			   DO OBJ_MENS.SPR WITH "    ATENCAO!!"+CHR(13)+CHR(13)+;
				"  O Emissor de Documentos Fiscais nao acatou o Emissao."+;
			     " Repita o processo e se persistir a negacao entre "+;
			     " em contato com suporte"
			ENDIF
		ENDIF			


	ENDIF
	=W_DEFPROC("rotinas.SPR")
RETURN
