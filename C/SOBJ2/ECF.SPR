*       ÷ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ∑
*       ∫                                                         ∫
*       ∫ 05/29/12               ECF.SPR                 10:01:06 ∫
*       ∫                                                         ∫
*       «ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ∂
*       ∫                                                         ∫
*       ∫ Author's Name                                           ∫
*       ∫                                                         ∫
*       ∫ Copyright (c) 2012 Company Name                         ∫
*       ∫ Address                                                 ∫
*       ∫ City,     Zip                                           ∫
*       ∫                                                         ∫
*       ∫ Description:                                            ∫
*       ∫ This program was automatically generated by GENSCRN.    ∫
*       ∫                                                         ∫
*       ”ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒΩ


#REGION 0
REGIONAL m.currarea, m.talkstat, m.compstat

IF SET("TALK") = "ON"
	SET TALK OFF
	m.talkstat = "ON"
ELSE
	m.talkstat = "OFF"
ENDIF
m.compstat = SET("COMPATIBLE")
SET COMPATIBLE FOXPLUS

*       ÷ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ∑
*       ∫                                                         ∫
*       ∫                MS-DOS Window definitions                ∫
*       ∫                                                         ∫
*       ”ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒΩ
*


*       ÷ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ∑
*       ∫                                                         ∫
*       ∫                ECF/MS-DOS Screen Layout                 ∫
*       ∫                                                         ∫
*       ”ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒΩ
*

#REGION 1
@ 0,0 SAY "====> Com Uso de pseudo OO ==> ESTE N«O POSSUI REFERENTA A TABELA" ;
	SIZE 1,65, 0
@ 18,1 SAY "*--------------------------------------------------------------------------*" ;
	SIZE 1,76, 0
@ 48,2 SAY "*----------------------------------------------------------------------*" ;
	SIZE 1,72, 0
@ 14,2 SAY "*--------------------------------------------------------------------------*" ;
	SIZE 1,76, 0
@ 1,2 GET ECFVerifyInst ;
	PICTURE "@*HN ECFVerifyInst - Verifica Instancia" ;
	SIZE 1,36,1 ;
	DEFAULT 1 ;
	VALID _3ii0lh1gz()
@ 2,2 GET ECFCreate ;
	PICTURE "@*HN ECFCreate - Instancia" ;
	SIZE 1,23,1 ;
	DEFAULT 1 ;
	VALID _3ii0lh1h3()
@ 3,2 GET ECFDestroi ;
	PICTURE "@*HN ECFDestroi - Desinstancia" ;
	SIZE 1,27,1 ;
	DEFAULT 1 ;
	VALID _3ii0lh1ip()
@ 5,2 GET ECFSetDerivadas ;
	PICTURE "@*HN ECFSetDerivadas - Carga de Propriedades Derivadas" ;
	SIZE 1,51,1 ;
	DEFAULT 1 ;
	VALID _3ii0lh1it()
@ 6,6 GET ECFSetPropVT ;
	PICTURE "@*HN ECFSetPropVT - Set o Valor de uma Propriedade do Vetor" ;
	SIZE 1,56,1 ;
	DEFAULT 1 ;
	VALID _3ii0lh1iy()
@ 7,6 GET ECFGetPropVT ;
	PICTURE "@*HN ECFGetPropVT - Get o Valor de uma Propriedade do Vetor" ;
	SIZE 1,56,1 ;
	DEFAULT 1 ;
	VALID _3ii0lh1j0()
@ 8,2 GET ECFChk_Identidade ;
	PICTURE "@*HN ECFChk_Identidade - Checagem de Identidade do Objeto" ;
	SIZE 1,54,1 ;
	DEFAULT 1 ;
	VALID _3ii0lh1j4()
@ 10,2 GET ECFSetEcfAtivo ;
	PICTURE "@*HN ECFSetEcfAtivo - Set de Identificacao ECF Ativo" ;
	SIZE 1,49,1 ;
	DEFAULT 1 ;
	VALID _3ii0lh1j7()
@ 11,2 GET ECFGetEcfAtivo ;
	PICTURE "@*HN ECFGetEcfAtivo - Get de Identificacao ECF Ativo" ;
	SIZE 1,49,1 ;
	DEFAULT 1 ;
	VALID _3ii0lh1jb()
@ 12,2 GET ECFSetPorta ;
	PICTURE "@*HN ECFSetPorta - Set de Identificacao Porta ECF Ativo" ;
	SIZE 1,52,1 ;
	DEFAULT 1 ;
	VALID _3ii0lh1je()
@ 13,2 GET ECFGetPorta ;
	PICTURE "@*HN ECFGetPorta - Get de Identificacao Porta ECF Ativo" ;
	SIZE 1,52,1 ;
	DEFAULT 1 ;
	VALID _3ii0lh1ji()
@ 15,2 GET ECFEnviaCommandFile ;
	PICTURE "@*HN ECFEnviaCommandFile - Envia  COMMAND FILE ao Integrador TEF-ECF" ;
	SIZE 1,65,1 ;
	DEFAULT 1 ;
	VALID _3ii0lh1jl()
@ 16,2 GET ECFBuscaCommandFile ;
	PICTURE "@*HN ECFBuscaCommandFile - Verifica Retorno COMMAND FILE do Integrador TEF-ECF" ;
	SIZE 1,75,1 ;
	DEFAULT 1 ;
	VALID _3ii0lh1jo()
@ 20,2 GET ECFconecta ;
	PICTURE "@*HN ECFconecta - Conecx∆o ECF" ;
	SIZE 1,27,1 ;
	DEFAULT 1 ;
	VALID _3ii0lh1js()
@ 23,5 GET ECFOpen ;
	PICTURE "@*HN ECFOpen - Abre porta de comunicacao ECF" ;
	SIZE 1,41,1 ;
	DEFAULT 1 ;
	VALID _3ii0lh1jv()
@ 24,5 GET ECFClose ;
	PICTURE "@*HN ECFClose - Fecha porta de comunicacao ECF" ;
	SIZE 1,43,1 ;
	DEFAULT 1 ;
	VALID _3ii0lh1jw()
@ 25,5 GET ECFabrecupom ;
	PICTURE "@*HN ECFabrecupom - Abre cupom fiscal" ;
	SIZE 1,34,1 ;
	DEFAULT 1 ;
	VALID _3ii0lh1ku()
@ 26,11 GET ECFabrenaof ;
	PICTURE "@*HN ECFabrenaof - Abre cupom n∆o fiscal" ;
	SIZE 1,37,1 ;
	DEFAULT 1 ;
	VALID _3ii0lh1l0() ;
	DISABLE
@ 27,11 GET ECFfechacupom ;
	PICTURE "@*HN ECFfechacupom - Fecha cupom" ;
	SIZE 1,29,1 ;
	DEFAULT 1 ;
	VALID _3ii0lh1l4() ;
	DISABLE
@ 28,11 GET ECFprgpgt ;
	PICTURE "@*HN ECFprgpgt - Progama Formas de Pgto" ;
	SIZE 1,36,1 ;
	DEFAULT 1 ;
	VALID _3ii0lh1l7()
@ 29,2 GET ECFsituacao ;
	PICTURE "@*HN ECFsituacao - Provoca Leitura do Status Independente de Comando" ;
	SIZE 1,65,1 ;
	DEFAULT 1 ;
	VALID _3ii0lh1lc()
@ 30,10 GET ECFstatus ;
	PICTURE "@*HN ECFstatus - Verifica status ECF ** (Nao Abre nem Fecha Porta **)" ;
	SIZE 1,66,1 ;
	DEFAULT 1 ;
	VALID _3ii0lh1li()
@ 31,2 GET ECFx_letura ;
	PICTURE "@*HN ECFx_letura - Emissao Leitura X" ;
	SIZE 1,33,1 ;
	DEFAULT 1 ;
	VALID _3ii0lh1lp()
@ 32,2 GET ECFcanccpm ;
	PICTURE "@*HN ECFcanccpm - Cancela Cupom em Anterior" ;
	SIZE 1,40,1 ;
	DEFAULT 1 ;
	VALID _3ii0lh1lt()
@ 33,2 GET ECF_CNC ;
	PICTURE "@*HN ECF_CNC - Executa operacao CNC pra cartoes" ;
	SIZE 1,44,1 ;
	DEFAULT 1 ;
	VALID _3ii0lh1lx()
@ 34,2 GET ECFnrocupom ;
	PICTURE "@*HN ECFnrocupom - Nrumero do Cupom" ;
	SIZE 1,32,1 ;
	DEFAULT 1 ;
	VALID _3ii0lh1m1()
@ 35,2 GET ECFreset ;
	PICTURE "@*HN ECFreset - Reinicializa ECF" ;
	SIZE 1,29,1 ;
	DEFAULT 1 ;
	VALID _3ii0lh1m6()
@ 36,2 GET ECFlermemo ;
	PICTURE "@*HN ECFlermemo - Leitura memoria fiscal" ;
	SIZE 1,37,1 ;
	DEFAULT 1 ;
	VALID _3ii0lh1m9()
@ 37,2 GET ECFleDadSintegra ;
	PICTURE "@*HN ECFleDadSintegra - Le Dados do Sintegra" ;
	SIZE 1,41,1 ;
	DEFAULT 1 ;
	VALID _3ii0lh1me()
@ 38,5 GET ECFBuscaDadosSintegra ;
	PICTURE "@*HN ECFBuscaDadosSintegra - Verifica Retorno DADOS SINTEGRA do Integrador TEF-ECF" ;
	SIZE 1,79,1 ;
	DEFAULT 1 ;
	VALID _3ii0lh1mi()
@ 39,2 GET ECFz_letura ;
	PICTURE "@*HN ECFz_letura - Emissao Leitura Z (OBS: VER MUDANCA PARAMETROS)" ;
	SIZE 1,63,1 ;
	DEFAULT 1 ;
	VALID _3ii0lh1mm()
@ 40,2 GET ECFimpcupom ;
	PICTURE "@*HN ECFimpcupom - Imprime Cupom Fiscal ** alteraca nos para" ;
	SIZE 1,57,1 ;
	DEFAULT 1 ;
	VALID _3ii0lh1mp()
@ 41,6 GET ECFctrlimpcupom ;
	PICTURE "@*HN ECFctrlimpcupom - Controla Impress∆o Cupom Fiscal" ;
	SIZE 1,51,1 ;
	DEFAULT 1 ;
	VALID _3ii0lh1mq()
@ 42,9 GET ECFimpCabec ;
	PICTURE "@*HN ECFimpCabec - Imprime Cabecalho do Cupom Fiscal" ;
	SIZE 1,49,1 ;
	DEFAULT 1 ;
	VALID _3ii0lh1n6()
@ 43,9 GET ECFimpItens ;
	PICTURE "@*HN ECFimpItens - Imprime Itens do Cupom Fiscal" ;
	SIZE 1,45,1 ;
	DEFAULT 1 ;
	VALID _3ii0lh1na()
@ 44,9 GET ECFimpTotal ;
	PICTURE "@*HN ECFimpTotal - Imprime Totalizacao do Cupom Fiscal" ;
	SIZE 1,51,1 ;
	DEFAULT 1 ;
	VALID _3ii0lh1ni()
@ 45,9 GET ECFimpCnpj_Cpf ;
	PICTURE "@*HN ECFimpCnpj_Cpf - Imprime Cnpj ou Cpf  Cupom Fiscal" ;
	SIZE 1,52,1 ;
	DEFAULT 1 ;
	VALID _3ii0lh1np()
@ 46,10 GET ECFimpFecha ;
	PICTURE "@*HN ECFimpFecha - Imprime Fechamento do Cupom Fiscal" ;
	SIZE 1,50,1 ;
	DEFAULT 1 ;
	VALID _3ii0lh1nt()
@ 47,9 GET ECFinfdpl ;
	PICTURE "@*HN ECFinfdpl - Informacoes de duplicatas" ;
	SIZE 1,39,1 ;
	DEFAULT 1 ;
	VALID _3ii0lh1o3()
@ 49,2 GET ECFmapa ;
	PICTURE "@*HN ECFmapa - ADAPTAR PARA USO DO RETORNO.TXT" ;
	SIZE 1,66,1 ;
	DEFAULT 1 ;
	VALID _3ii0lh1o7()
@ 50,2 GET ECFRelMapa ;
	PICTURE "@*HN ECFRelMapa  - Imprime Relatorio Mapa ECF" ;
	SIZE 1,42,1 ;
	DEFAULT 1 ;
	VALID _3ii0lh1o8()
@ 51,2 GET ECFpede_Xleitura ;
	PICTURE "@*HN ECFpede_Xleitura - Controla Solicitacao de Leitura X" ;
	SIZE 1,54,1 ;
	DEFAULT 1 ;
	VALID _3ii0lh1om()
@ 52,2 GET ECFpede_zleitura ;
	PICTURE "@*HN ECFpede_zleitura - Controla Solicitacao de Leitura Z" ;
	SIZE 1,54,1 ;
	DEFAULT 1 ;
	VALID _3ii0lh1oq()
@ 53,2 GET ECFpede_cancpmant ;
	PICTURE "@*HN ECFpede_cancpmant-Cancela Ultimo Cupom Viculado ou Nao a Cartao" ;
	SIZE 1,65,1 ;
	DEFAULT 1 ;
	VALID _3ii0lh1ov()
@ 55,2 GET ECFpede_fchcpm ;
	PICTURE "@*HN ECFpede_fchcpm-Cancela Cupom Aberto sem Vinculo no Sistema de Notas/Cupos" ;
	SIZE 1,75,1 ;
	DEFAULT 1 ;
	VALID _3ii0lh1p1()
@ 56,2 GET ECFAdm ;
	PICTURE "@*HN ECFAdm - Funcoes Administrativas para TEF" ;
	SIZE 1,43,1 ;
	DEFAULT 1 ;
	VALID _3ii0lh1p6()
@ 57,2 GET ECF_CNC ;
	PICTURE "@*HN ECFPedeCNC-Cancela Operacao com cartao que n∆o seja o ultimo faturamento" ;
	SIZE 1,74,1 ;
	DEFAULT 1 ;
	VALID _3ii0lh1pa()



READ


#REGION 0
IF m.talkstat = "ON"
	SET TALK ON
ENDIF
IF m.compstat = "ON"
	SET COMPATIBLE ON
ENDIF


*       ÷ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ∑
*       ∫                                                         ∫
*       ∫                 ECF/MS-DOS Cleanup Code                 ∫
*       ∫                                                         ∫
*       ”ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒΩ
*

#REGION 1
return


*       ÷ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ∑
*       ∫                                                         ∫
*       ∫ _3II0LH1GZ           ECFVerifyInst VALID                ∫
*       ∫                                                         ∫
*       ∫ Function Origin:                                        ∫
*       ∫                                                         ∫
*       ∫ From Platform:       MS-DOS                             ∫
*       ∫ From Screen:         ECF,     Record Number:    6       ∫
*       ∫ Variable:            ECFVerifyInst                      ∫
*       ∫ Called By:           VALID Clause                       ∫
*       ∫ Object Type:         Push Button                        ∫
*       ∫ Snippet Number:      1                                  ∫
*       ∫                                                         ∫
*       ”ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒΩ
*

FUNCTION _3ii0lh1gz     &&  ECFVerifyInst VALID
#REGION 1
return
*---------------------------------------------------------------*

FUNCTION ECFVerifyInst

	=W_DEFPROC("rotinas.spr")
	IF TYPE("PBEcfAlias") = "U" ;
	   		OR EMPTY(PBEcfAlias)
		=ECFCreate()
	ENDIF

RETURN(.t.)



*       ÷ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ∑
*       ∫                                                         ∫
*       ∫ _3II0LH1H3           ECFCreate VALID                    ∫
*       ∫                                                         ∫
*       ∫ Function Origin:                                        ∫
*       ∫                                                         ∫
*       ∫ From Platform:       MS-DOS                             ∫
*       ∫ From Screen:         ECF,     Record Number:    7       ∫
*       ∫ Variable:            ECFCreate                          ∫
*       ∫ Called By:           VALID Clause                       ∫
*       ∫ Object Type:         Push Button                        ∫
*       ∫ Snippet Number:      2                                  ∫
*       ∫                                                         ∫
*       ”ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒΩ
*

FUNCTION _3ii0lh1h3     &&  ECFCreate VALID
#REGION 1
return
*---------------------------------------------------------------*

FUNCTION ECFCreate
	=W_DEFPROC("rotinas.spr")
	PRIVATE LSalias
	PRIVATE LSAlsTmp
    PRIVATE LMaxDim
	LSalias		= 	ALIAS()

	IF TYPE("PBEcfAlias") <> "U" ;
	   		AND !EMPTY(PBEcfAlias)
			RETURN(.T.)
	ENDIF

	PUBLIC PBEcfAlias

    PBEcfAlias     = "XXXXXXXXXX"		&& CONTEUDO DE PREENCHIMENTO

	LMaxDim = 1

    PUBLIC DIMENSION VTEcf[LMaxDim]
    PUBLIC DIMENSION VDEcf[17,3]			&& VETOR PARA PROPRIEDADES
	*-----------------------------------------------------------*
	=ECFSetDerivadas()   && carga dos calculos derivados
	*--------------------------------------------------------------*
	IF !EMPTY(LSalias) AND USED(LSalias)
		SELECT &LSalias
	ENDIF
RETURN



*       ÷ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ∑
*       ∫                                                         ∫
*       ∫ _3II0LH1IP           ECFDestroi VALID                   ∫
*       ∫                                                         ∫
*       ∫ Function Origin:                                        ∫
*       ∫                                                         ∫
*       ∫ From Platform:       MS-DOS                             ∫
*       ∫ From Screen:         ECF,     Record Number:    8       ∫
*       ∫ Variable:            ECFDestroi                         ∫
*       ∫ Called By:           VALID Clause                       ∫
*       ∫ Object Type:         Push Button                        ∫
*       ∫ Snippet Number:      3                                  ∫
*       ∫                                                         ∫
*       ”ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒΩ
*

FUNCTION _3ii0lh1ip     &&  ECFDestroi VALID
#REGION 1
return
*---------------------------------------------------------------*

FUNCTION ECFDestroi
	=W_DEFPROC("rotinas.spr")

	PRIVATE LSalias
	LSalias  = Alias()

	RELEASE PBEcfAlias
    RELEASE VTEcf
    RELEASE VDEcf

	*--------------------------------------------------------------*
	*--------------------------------------------------------------*
	IF !EMPTY(LSalias) AND USED(LSalias)
		SELECT &LSalias
	ENDIF
RETURN



*       ÷ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ∑
*       ∫                                                         ∫
*       ∫ _3II0LH1IT           ECFSetDerivadas VALID              ∫
*       ∫                                                         ∫
*       ∫ Function Origin:                                        ∫
*       ∫                                                         ∫
*       ∫ From Platform:       MS-DOS                             ∫
*       ∫ From Screen:         ECF,     Record Number:    9       ∫
*       ∫ Variable:            ECFSetDerivadas                    ∫
*       ∫ Called By:           VALID Clause                       ∫
*       ∫ Object Type:         Push Button                        ∫
*       ∫ Snippet Number:      4                                  ∫
*       ∫                                                         ∫
*       ”ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒΩ
*

FUNCTION _3ii0lh1it     &&  ECFSetDerivadas VALID
#REGION 1
return
*---------------------------------------------------------------*

FUNCTION ECFSetDerivadas
	PRIVATE LSalias
	PRIVATE LEmpresa
	LSalias		= 	ALIAS()

	=ECFVerifyInst()
	*--------------------------------------------------------------*
    VDEcf(1,1) = "TIPOECF"
   	VDEcf(1,2) = ""
   	VDEcf(1,3) = .F.
	*--------------------------------------------------------------*
    VDEcf(2,1) = "CONEXAO"			&& Equivale ao LNecf (nro file)
   	VDEcf(2,2) = ""
   	VDEcf(2,3) = .F.
	*--------------------------------------------------------------*
    VDEcf(3,1) = "LSSTATUS"			
   	VDEcf(3,2) = ""
   	VDEcf(3,3) = .F.
	*--------------------------------------------------------------*
    VDEcf(4,1) = "LSSTAT"			
   	VDEcf(4,2) = ""
   	VDEcf(4,3) = .F.
	*--------------------------------------------------------------*
    VDEcf(5,1) = "LNNRO"			
   	VDEcf(5,2) = ""
   	VDEcf(5,3) = .F.
	*--------------------------------------------------------------*
    VDEcf(6,1) = "LSESCAPE"			
   	VDEcf(6,2) = ""
   	VDEcf(6,3) = .F.
	*--------------------------------------------------------------*
    VDEcf(7,1) = "LSREDUCAO"			
   	VDEcf(7,2) = ""
   	VDEcf(7,3) = .F.
	*--------------------------------------------------------------*
    VDEcf(8,1) = "LSLIQ"			
   	VDEcf(8,2) = ""
   	VDEcf(8,3) = .F.
	*--------------------------------------------------------------*
    VDEcf(9,1) = "LSBRUTO"			
   	VDEcf(9,2) = ""
   	VDEcf(9,3) = .F.
	*--------------------------------------------------------------*
    VDEcf(10,1) = "LSERRO"			
   	VDEcf(10,2) = ""
   	VDEcf(10,3) = .F.
	*--------------------------------------------------------------*
    VDEcf(11,1) = "LSMENSERRO"			
   	VDEcf(11,2) = ""
   	VDEcf(11,3) = .F.
	*--------------------------------------------------------------*
    VDEcf(12,1) = "LSFAZX"			
   	VDEcf(12,2) = ""
   	VDEcf(12,3) = .F.
	*--------------------------------------------------------------*
    VDEcf(13,1) = "LSPAPEL"			
   	VDEcf(13,2) = ""
   	VDEcf(13,3) = .F.
	*--------------------------------------------------------------*
    VDEcf(14,1) = "LSSEQ"			
   	VDEcf(14,2) = ""
   	VDEcf(14,3) = .F.
	*--------------------------------------------------------------*
    VDEcf(15,1) = "LSTRANSACAO"			
   	VDEcf(15,2) = ""
   	VDEcf(15,3) = .F.
	*--------------------------------------------------------------*
    VDEcf(16,1) = "ECFATIVO"			
   	VDEcf(16,2) = ""
   	VDEcf(16,3) = .F.
	*--------------------------------------------------------------*
    VDEcf(17,1) = "ECFPORTA"			
   	VDEcf(17,2) = ""
   	VDEcf(17,3) = .F.

	*--------------------------------------------------------------*
	IF !EMPTY(LSalias) AND USED(LSalias)
		SELECT &LSalias
	ENDIF
RETURN(.T.)



*       ÷ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ∑
*       ∫                                                         ∫
*       ∫ _3II0LH1IY           ECFSetPropVT VALID                 ∫
*       ∫                                                         ∫
*       ∫ Function Origin:                                        ∫
*       ∫                                                         ∫
*       ∫ From Platform:       MS-DOS                             ∫
*       ∫ From Screen:         ECF,     Record Number:   10       ∫
*       ∫ Variable:            ECFSetPropVT                       ∫
*       ∫ Called By:           VALID Clause                       ∫
*       ∫ Object Type:         Push Button                        ∫
*       ∫ Snippet Number:      5                                  ∫
*       ∫                                                         ∫
*       ”ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒΩ
*

FUNCTION _3ii0lh1iy     &&  ECFSetPropVT VALID
#REGION 1
return
*---------------------------------------------------------------*

FUNCTION ECFSetPropVT
PARAMETER  PrmField, PrmValue

	PRIVATE Lvalue
	=ECFVerifyInst()
	=W_DEFPROC("ROTINAS.SPR")
	Lvalue = RTsetValueObj(PrmField,PrmValue,;
						    PBEcfAlias,VTEcf,VDEcf)

RETURN(Lvalue)


*       ÷ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ∑
*       ∫                                                         ∫
*       ∫ _3II0LH1J0           ECFGetPropVT VALID                 ∫
*       ∫                                                         ∫
*       ∫ Function Origin:                                        ∫
*       ∫                                                         ∫
*       ∫ From Platform:       MS-DOS                             ∫
*       ∫ From Screen:         ECF,     Record Number:   11       ∫
*       ∫ Variable:            ECFGetPropVT                       ∫
*       ∫ Called By:           VALID Clause                       ∫
*       ∫ Object Type:         Push Button                        ∫
*       ∫ Snippet Number:      6                                  ∫
*       ∫                                                         ∫
*       ”ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒΩ
*

FUNCTION _3ii0lh1j0     &&  ECFGetPropVT VALID
#REGION 1
return
*---------------------------------------------------------------*

FUNCTION ECFGetPropVT
PARAMETER  PrmField
	PRIVATE Lvalue

	=ECFVerifyInst()
	=W_DEFPROC("ROTINAS.SPR")
	Lvalue = RTgetValueObj(PrmField,PBEcfAlias,VTEcf,VDEcf)

RETURN(Lvalue)




*       ÷ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ∑
*       ∫                                                         ∫
*       ∫ _3II0LH1J4           ECFChk_Identidade VALID            ∫
*       ∫                                                         ∫
*       ∫ Function Origin:                                        ∫
*       ∫                                                         ∫
*       ∫ From Platform:       MS-DOS                             ∫
*       ∫ From Screen:         ECF,     Record Number:   12       ∫
*       ∫ Variable:            ECFChk_Identidade                  ∫
*       ∫ Called By:           VALID Clause                       ∫
*       ∫ Object Type:         Push Button                        ∫
*       ∫ Snippet Number:      7                                  ∫
*       ∫                                                         ∫
*       ”ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒΩ
*

FUNCTION _3ii0lh1j4     &&  ECFChk_Identidade VALID
#REGION 1
return
*---------------------------------------------------------------*
*------------------------ < ROT. APOIO >------------------------*
*---------------------------------------------------------------*

FUNCTION ECFChk_Identidade
	PRIVATE LFreturn
	=ECFVerifyInst()
	*----------------------------------------------------------------*
	LFreturn = .T.
RETURN(LFreturn)




*       ÷ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ∑
*       ∫                                                         ∫
*       ∫ _3II0LH1J7           ECFSetEcfAtivo VALID               ∫
*       ∫                                                         ∫
*       ∫ Function Origin:                                        ∫
*       ∫                                                         ∫
*       ∫ From Platform:       MS-DOS                             ∫
*       ∫ From Screen:         ECF,     Record Number:   13       ∫
*       ∫ Variable:            ECFSetEcfAtivo                     ∫
*       ∫ Called By:           VALID Clause                       ∫
*       ∫ Object Type:         Push Button                        ∫
*       ∫ Snippet Number:      8                                  ∫
*       ∫                                                         ∫
*       ”ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒΩ
*

FUNCTION _3ii0lh1j7     &&  ECFSetEcfAtivo VALID
#REGION 1
return
*---------------------------------------------------------------*

FUNCTION ECFSetEcfAtivo
PARAMETERS PrmEcfAtivo

	PRIVATE LNecf
	PRIVATE LSporta
	IF wp_ecf $ "RQE"	&& MODOS DE RECUPERACAO DE DADOS
		RETURN(99)	
	ENDIF
	PRIVATE LSalias, LFparametr
	*-------------------------------------------------------------*
	LFreturn = ECFChk_Identidade()
	*------------------------------------------------------------*
	*   1 = Schalter
	*	2 = Bematech MP20-Fi II
	*   3 = Zanthus QZ-1000
	*   4 = Yanco
	*   5 = Bematech restaurante
	*------------------------------------------------------------*
    =ECFSetPropVT("ECFATIVO",PrmEcfAtivo)
	*-------------------------------------------------------------*
RETURN(.T.)



*       ÷ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ∑
*       ∫                                                         ∫
*       ∫ _3II0LH1JB           ECFGetEcfAtivo VALID               ∫
*       ∫                                                         ∫
*       ∫ Function Origin:                                        ∫
*       ∫                                                         ∫
*       ∫ From Platform:       MS-DOS                             ∫
*       ∫ From Screen:         ECF,     Record Number:   14       ∫
*       ∫ Variable:            ECFGetEcfAtivo                     ∫
*       ∫ Called By:           VALID Clause                       ∫
*       ∫ Object Type:         Push Button                        ∫
*       ∫ Snippet Number:      9                                  ∫
*       ∫                                                         ∫
*       ”ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒΩ
*

FUNCTION _3ii0lh1jb     &&  ECFGetEcfAtivo VALID
#REGION 1
return
*---------------------------------------------------------------*

FUNCTION ECFGetEcfAtivo

	*-------------------------------------------------------------*
	LFreturn = ECFChk_Identidade()
	*------------------------------------------------------------*
	*   1 = Schalter
	*	2 = Bematech MP20-Fi II
	*   3 = Zanthus QZ-1000
	*   4 = Yanco
	*   5 = Bematech restaurante
	*------------------------------------------------------------*
    LFreturn=ECFGetPropVT("ECFATIVO")
	*-------------------------------------------------------------*
RETURN(LFreturn)



*       ÷ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ∑
*       ∫                                                         ∫
*       ∫ _3II0LH1JE           ECFSetPorta VALID                  ∫
*       ∫                                                         ∫
*       ∫ Function Origin:                                        ∫
*       ∫                                                         ∫
*       ∫ From Platform:       MS-DOS                             ∫
*       ∫ From Screen:         ECF,     Record Number:   15       ∫
*       ∫ Variable:            ECFSetPorta                        ∫
*       ∫ Called By:           VALID Clause                       ∫
*       ∫ Object Type:         Push Button                        ∫
*       ∫ Snippet Number:      10                                 ∫
*       ∫                                                         ∫
*       ”ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒΩ
*

FUNCTION _3ii0lh1je     &&  ECFSetPorta VALID
#REGION 1
return
*---------------------------------------------------------------*

FUNCTION ECFSetPorta
PARAMETERS PrmPorta
	PRIVATE LNecf
	PRIVATE LSporta
	IF wp_ecf $ "RQE"	&& MODOS DE RECUPERACAO DE DADOS
		RETURN(99)	
	ENDIF
	PRIVATE LSalias, LFparametr
	*-------------------------------------------------------------*
	LFreturn = ECFChk_Identidade()
	*------------------------------------------------------------*
	*   1 = COM1
	*	2 = COM2
	*   3 = COM3
	*------------------------------------------------------------*
    =ECFSetPropVT("ECFPORTA",PrmPorta)
	*-------------------------------------------------------------*
RETURN(.T.)



*       ÷ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ∑
*       ∫                                                         ∫
*       ∫ _3II0LH1JI           ECFGetPorta VALID                  ∫
*       ∫                                                         ∫
*       ∫ Function Origin:                                        ∫
*       ∫                                                         ∫
*       ∫ From Platform:       MS-DOS                             ∫
*       ∫ From Screen:         ECF,     Record Number:   16       ∫
*       ∫ Variable:            ECFGetPorta                        ∫
*       ∫ Called By:           VALID Clause                       ∫
*       ∫ Object Type:         Push Button                        ∫
*       ∫ Snippet Number:      11                                 ∫
*       ∫                                                         ∫
*       ”ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒΩ
*

FUNCTION _3ii0lh1ji     &&  ECFGetPorta VALID
#REGION 1
return
*---------------------------------------------------------------*

FUNCTION ECFGetPorta

	*-------------------------------------------------------------*
	LFreturn = ECFChk_Identidade()
	*------------------------------------------------------------*
	*   1 = Schalter
	*	2 = Bematech MP20-Fi II
	*   3 = Zanthus QZ-1000
	*   4 = Yanco
	*   5 = Bematech restaurante
	*------------------------------------------------------------*
    LFreturn=ECFGetPropVT("ECFPORTA")
	*-------------------------------------------------------------*
RETURN(LFreturn)



*       ÷ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ∑
*       ∫                                                         ∫
*       ∫ _3II0LH1JL           ECFEnviaCommandFile VALID          ∫
*       ∫                                                         ∫
*       ∫ Function Origin:                                        ∫
*       ∫                                                         ∫
*       ∫ From Platform:       MS-DOS                             ∫
*       ∫ From Screen:         ECF,     Record Number:   17       ∫
*       ∫ Variable:            ECFEnviaCommandFile                ∫
*       ∫ Called By:           VALID Clause                       ∫
*       ∫ Object Type:         Push Button                        ∫
*       ∫ Snippet Number:      12                                 ∫
*       ∫                                                         ∫
*       ”ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒΩ
*

FUNCTION _3ii0lh1jl     &&  ECFEnviaCommandFile VALID
#REGION 1
return
*---------------------------------------------------------------*

FUNCTION ECFEnviaCommandFile
PARAMETERS LScomando
	PRIVATE LNfile

	PRIVATE LSstatus,LFreturn,LSFile,LSFileTmp
	LSstatus = ""
	LNfile = 0
	
*	LSFileTmp = "D:\PROJETOS\PROJTE~1\TEF\APPTEF\AppTef.tmp"
*	LSFile    = "D:\PROJETOS\PROJTE~1\TEF\APPTEF\AppTef.req"

*	LSFileTmp = "C:\AppTef\AppTef.tmp"
*	LSFile    = "C:\AppTef\AppTef.req"

	LSFileTmp = wp_dirapptef+"AppTef.tmp"
	LSFile    = wp_dirapptef+"AppTef.req"

	LSFileBk  =	"C:\COMANDO\CP"+chrtran(time(),":","")+".TXT"

	LNfile = FCREATE(LSFileTmp,0)
	IF LNfile < 0
		=FCLOSE(LNfile)
		LSstatus = "ERRO ! Comunicacao com ECF "
		*------------------------------------------------*
		* No padrao ECF a posicao 7 o (E) indica erro
		*------------------------------------------------*
		LSstatus = "123456ERRO!"+"ERRO ! Comando nao enviadoao INTEGRADOR"

	ELSE
		=FPUT(LNfile,LScomando,LEN(LScomando))
		=FCLOSE(LNfile)
		IF FILE(LSFile)
			DELETE FILE &LSFile
		ENDIF


		IF FILE("C:\COMANDO\LOGCPM.TXT")
			COPY FILE &LSFileTmp TO &LSFileBk
		ENDIF
		
		RENAME &LSFileTmp TO &LSFile
	ENDIF

RETURN(LSstatus)


*       ÷ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ∑
*       ∫                                                         ∫
*       ∫ _3II0LH1JO           ECFBuscaCommandFile VALID          ∫
*       ∫                                                         ∫
*       ∫ Function Origin:                                        ∫
*       ∫                                                         ∫
*       ∫ From Platform:       MS-DOS                             ∫
*       ∫ From Screen:         ECF,     Record Number:   18       ∫
*       ∫ Variable:            ECFBuscaCommandFile                ∫
*       ∫ Called By:           VALID Clause                       ∫
*       ∫ Object Type:         Push Button                        ∫
*       ∫ Snippet Number:      13                                 ∫
*       ∫                                                         ∫
*       ”ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒΩ
*

FUNCTION _3ii0lh1jo     &&  ECFBuscaCommandFile VALID
#REGION 1
return
*---------------------------------------------------------------*

FUNCTION ECFBuscaCommandFile
PARAMETERS LScomando,pFlgAborta
	*-------------------------------------------------------*
	* pFlgAborta = .t. permite abortar espera apos 1 minuto
	* pFlgAborta = .f. espera nao pode ser abortada
	*-------------------------------------------------------*
	PRIVATE LNfile
	PRIVATE LSstatus,LSFile,LNctr,TECLA
	LSstatus = ""
	LNfile = 0

*	LSFile    = "D:\PROJETOS\PROJTE~1\TEF\APPTEF\AppTef.ret"

*	LSFile    = "C:\AppTef\AppTef.ret"

	LSFile    = wp_dirapptef+"AppTef.ret"


	LNctr = 0

	LFlgEspera = .t.
	DO WHILE LFlgEspera
		DO WHILE !(FILE(LSFile))
			WAIT WINDOW "Aguardando retorno do Integrador TEF" NOWAIT
			TECLA=INKEY(1)
			LNctr = LNctr + 1
			IF pFlgAborta AND LNctr > 60
				IF TECLA = 27
					EXIT
				ENDIF
			ENDIF
		ENDDO

		IF  !FILE(LSFile)
			LSstatus = "ERRO ! Nao houve retorno do comando"
			LFlgEspera = .F.
		ELSE
			LNfile=FOPEN(LSFile)	
			LSstatus=""
			DO WHILE !FEOF(LNfile)
				LSstatus = LSstatus + fgets(LNfile,255) + "#"
			ENDDO
			DO CASE
				CASE "AGUARDANDO" $ UPPER(LSstatus)
					LFlgEspera = .T.
				CASE "ERRO" $ LSstatus
					*------------------------------------------------*
					* No padrao ECF a posicao 7 o (E) indica erro
					*------------------------------------------------*
					LSstatus = "123456ERRO!"+LSstatus
					LFlgEspera = .F.
				OTHERWISE
					LFlgEspera = .F.
			ENDCASE
			=FCLOSE(LNfile)
			DELETE FILE &LSFile
		ENDIF
	ENDDO

RETURN(LSstatus)


*       ÷ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ∑
*       ∫                                                         ∫
*       ∫ _3II0LH1JS           ECFconecta VALID                   ∫
*       ∫                                                         ∫
*       ∫ Function Origin:                                        ∫
*       ∫                                                         ∫
*       ∫ From Platform:       MS-DOS                             ∫
*       ∫ From Screen:         ECF,     Record Number:   19       ∫
*       ∫ Variable:            ECFconecta                         ∫
*       ∫ Called By:           VALID Clause                       ∫
*       ∫ Object Type:         Push Button                        ∫
*       ∫ Snippet Number:      14                                 ∫
*       ∫                                                         ∫
*       ”ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒΩ
*

FUNCTION _3ii0lh1js     &&  ECFconecta VALID
#REGION 1
return
*---------------------------------------------------------------*
*     Define propriedades necessaria para conexao
*---------------------------------------------------------------*


FUNCTION ECFconecta
PARAMETER LSmarca

	PRIVATE LNecf
	PRIVATE LSporta
	PRIVATE LSstatus
	LSstatus = ""

	PRIVATE LSalias, LFparametr
	PRIVATE TmpEcfAtivo, TmpPorta
	*-------------------------------------------------------------*
	LFreturn = ECFChk_Identidade()
	*------------------------------------------------------------*
    =ECFSetPropVT("TIPOECF",LSmarca)
	*-------------------------------------------------------------*
	*IF wp_ecf $ "RQE"	&& MODOS DE RECUPERACAO DE DADOS
	*	RETURN("99")	
	*ENDIF

	LSalias 	= ALIAS()
	LFparametr	= NetArq("parametr")

	IF (LFparametr) > 100000 && HOUVE FALHA DE ABERTURA
		LSporta = "COM1"
	ELSE
		GO TOP
		LSporta = parametr.porta_ecf
	ENDIF
	IF !EMPTY(LSalias) AND USED(LSalias)
		SELECT &LSalias
	ENDIF
	=UP_fecha("parametr",LFparametr)
	*-------------------------------------------------------------*
	=ECFSetPorta(LSporta)
	*----------------------------------------------------*
	*   0 = Definido no integrador
	*   1 = Schalter
	*	2 = Bematech MP20-Fi II
	*   3 = Zanthus QZ-1000
	*   4 = Yanco
	*   5 = Bematech restaurante
	*   6 = TESTE
	*----------------------------------------------------*
	TmpEcfAtivo = "0"
	DO CASE
		CASE UPPER(LSMARCA) $ UPPER("Schalter")
			TmpEcfAtivo = "1"
		CASE UPPER(LSMARCA) $ UPPER("Bematech")
			TmpEcfAtivo = "2"
		CASE UPPER(LSMARCA) $ UPPER("Zanthus")
			TmpEcfAtivo = "3"
		CASE UPPER(LSMARCA) $ UPPER("Yanco")
			TmpEcfAtivo = "4"
		CASE UPPER(LSMARCA) $ UPPER("Bematech restaurante")
			TmpEcfAtivo = "5"
		CASE UPPER(LSMARCA) $ UPPER("INTEGRADOR")
			TmpEcfAtivo = "0"
		CASE UPPER(LSMARCA) $ UPPER("TESTE")
			TmpEcfAtivo = "6"
		CASE UPPER(LSMARCA) $ UPPER("ORION")
			TmpEcfAtivo = "6"
	ENDCASE
	=ECFSetEcfAtivo(TmpEcfAtivo)

RETURN("")



*       ÷ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ∑
*       ∫                                                         ∫
*       ∫ _3II0LH1JV           ECFOpen VALID                      ∫
*       ∫                                                         ∫
*       ∫ Function Origin:                                        ∫
*       ∫                                                         ∫
*       ∫ From Platform:       MS-DOS                             ∫
*       ∫ From Screen:         ECF,     Record Number:   20       ∫
*       ∫ Variable:            ECFOpen                            ∫
*       ∫ Called By:           VALID Clause                       ∫
*       ∫ Object Type:         Push Button                        ∫
*       ∫ Snippet Number:      15                                 ∫
*       ∫                                                         ∫
*       ”ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒΩ
*

FUNCTION _3ii0lh1jv     &&  ECFOpen VALID
#REGION 1
return
*---------------------------------------------------------------*

FUNCTION ECFOpen

	PRIVATE LSmarca, LNecf, LSporta
	PRIVATE LFreturn
	PRIVATE LScomando
	
	LSmarca = ECFGetPropVT("TIPOECF")
	LNecf   = ECFGetPropVT("CONEXAO")
	LSporta = ECFGetPorta()

	*---------------------------------------------------------*
	IF TYPE("LNECF") = "N" AND LNecf > 0      && Jµ ESTµ CONECTADA
		RETURN("")
	ENDIF
	*---------------------------------------------------------*

	PRIVATE LSstatus
	LSstatus = "------ERRO"

	DO CASE
		CASE LSmarca = "TESTE"
			LNecf = 999
		CASE LSmarca = "SWEDA"
			LNecf = FOPEN("C:\sweda\ifsweda.prn",12)
			IF LNecf < 0
				=FCLOSE(LNecf)
				WAIT WINDOW "ERRO ! Comunicacao com ECF "+LSmarca+" <ENTER>"
			ENDIF
  		CASE LSmarca = "BEMATEC"
			LSdirtmp = SYS(5)+CURDIR()
			SET DEFA TO C:\BEMATEC
			LNecf = FOPEN(LSporta,12)
			SET DEFA TO &LSdirtmp
  		CASE LSmarca = "INTEGRADOR"
			LNecf = 9999
			LScomando = "INICIALIZAR_ECF=***"
			LSstatus =  ECFEnviaCommandFile(LScomando)
			IF "ERRO" $ LSstatus
				LNecf = -1
			ELSE
				LSstatus =  ECFBuscaCommandFile(LScomando,.t.)
				IF "ERRO" $ LSstatus
					LNecf = -1
			    ENDIF
			ENDIF
			
		OTHERWISE
			LNecf = -1
	ENDCASE
	IF LNecf < 1
		LSstatus = "------ERRO"
    	=ECFSetPropVT("CONEXAO",0)
	    =ECFSetPropVT("TIPOECF","")
	ELSE
		LSstatus = ""
	   	=ECFSetPropVT("CONEXAO",LNecf)
	    =ECFSetPropVT("TIPOECF",LSmarca)
		=ECFprgpgt()			&& PROGRAMA FORMA DE PGTO
	ENDIF

RETURN(LSstatus)


*       ÷ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ∑
*       ∫                                                         ∫
*       ∫ _3II0LH1JW           ECFClose VALID                     ∫
*       ∫                                                         ∫
*       ∫ Function Origin:                                        ∫
*       ∫                                                         ∫
*       ∫ From Platform:       MS-DOS                             ∫
*       ∫ From Screen:         ECF,     Record Number:   21       ∫
*       ∫ Variable:            ECFClose                           ∫
*       ∫ Called By:           VALID Clause                       ∫
*       ∫ Object Type:         Push Button                        ∫
*       ∫ Snippet Number:      16                                 ∫
*       ∫                                                         ∫
*       ”ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒΩ
*

FUNCTION _3ii0lh1jw     &&  ECFClose VALID
#REGION 1
return
*---------------------------------------------------------------*

FUNCTION ECFClose

	PRIVATE LSmarca, LNecf
	
	LSmarca = ECFGetPropVT("TIPOECF")
	LNecf   = ECFGetPropVT("CONEXAO")

	PRIVATE LSstatus
	PRIVATE LSComando

	LSstatus = .T.
	DO CASE
		CASE LSmarca $ "TESTE"
				LSstatus = .T.
		CASE LSmarca $ "SWEDA/BEMATEC"
			if !FCLOSE(LNecf)
				WAIT WINDOW "Arquivo ECF nao foi FECHADO  <ENTER> "
				LSstatus = .F.
			endif
  		CASE LSmarca = "INTEGRADOR"
			LSstatus = .T.
		OTHERWISE
			LSstatus = .F.
	ENDCASE

   	=ECFSetPropVT("CONEXAO",0)
    =ECFSetPropVT("TIPOECF","")
	*---------------------------------------------------------*
	
RETURN(LSstatus)


*       ÷ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ∑
*       ∫                                                         ∫
*       ∫ _3II0LH1KU           ECFabrecupom VALID                 ∫
*       ∫                                                         ∫
*       ∫ Function Origin:                                        ∫
*       ∫                                                         ∫
*       ∫ From Platform:       MS-DOS                             ∫
*       ∫ From Screen:         ECF,     Record Number:   22       ∫
*       ∫ Variable:            ECFabrecupom                       ∫
*       ∫ Called By:           VALID Clause                       ∫
*       ∫ Object Type:         Push Button                        ∫
*       ∫ Snippet Number:      17                                 ∫
*       ∫                                                         ∫
*       ”ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒΩ
*

FUNCTION _3ii0lh1ku     &&  ECFabrecupom VALID
#REGION 1
return
*---------------------------------------------------------------*

FUNCTION ECFabrecupom

	PRIVATE LSmarca, LNecf
	PRIVATE LSComando
	PRIVATE LSstatus
	LSstatus = "------ERRO"

	IF !("ERRO" $ ECFOpen())
		LSmarca = ECFGetPropVT("TIPOECF")
		LNecf   = ECFGetPropVT("CONEXAO")
		DO CASE
			CASE LSmarca = "TESTE"
				LSstatus = ""
			CASE LSmarca = "SWEDA"
				=FWRITE(LNecf,chr(27)+".17}")
				LSstatus = ECFstatus()

			CASE LSmarca = "BEMATEC"
				LScgccpf = ""
				*-----------------------------------------------------*
				* a pedido do Dr. Vanildo nao imp CGC
				* LScgccpf = CHRTRAN(STR(CLIENC.cliente,14)," ","0")
				* LScgccpf = LScgccpf+"000000000000000|"
				* Linha1 = Chr(27) + Chr(251) + "00|"+LScgccpf+ Chr(27)
				*-----------------------------------------------------*
				Linha1 = Chr(27) + Chr(251) + "00|"+ Chr(27)
				=FWrite(LNecf, Linha1, Len(Linha1))
				LSstatus = ECFstatus()
	  		CASE LSmarca = "INTEGRADOR"
				LScomando = "ABRIR_CUPOM=***"
				LSstatus =  ECFEnviaCommandFile(LScomando)
				IF !("ERRO" $ LSstatus)
					LSstatus =  ECFBuscaCommandFile(LScomando,.t.)
				ENDIF
		ENDCASE
	ENDIF

RETURN(LSstatus)


*       ÷ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ∑
*       ∫                                                         ∫
*       ∫ _3II0LH1L0           ECFabrenaof VALID                  ∫
*       ∫                                                         ∫
*       ∫ Function Origin:                                        ∫
*       ∫                                                         ∫
*       ∫ From Platform:       MS-DOS                             ∫
*       ∫ From Screen:         ECF,     Record Number:   23       ∫
*       ∫ Variable:            ECFabrenaof                        ∫
*       ∫ Called By:           VALID Clause                       ∫
*       ∫ Object Type:         Push Button                        ∫
*       ∫ Snippet Number:      18                                 ∫
*       ∫                                                         ∫
*       ”ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒΩ
*

FUNCTION _3ii0lh1l0     &&  ECFabrenaof VALID
#REGION 1
return
*---------------------------------------------------------------*

FUNCTION ECFabrenaof

	PRIVATE LSmarca, LNecf
	
	LSmarca = ECFGetPropVT("TIPOECF")
	LNecf   = ECFGetPropVT("CONEXAO")


	PRIVATE LSstatus
	LSstatus = "------ERRO"

	IF !("ERRO" $ ECFOpen())
		DO CASE
			CASE LSmarca = "SWEDA"
				=FWRITE(LNecf,chr(27)+".19}")
				LSstatus=ECFstatus()
			CASE LSmarca = "BEMATEC"
			     Linha1 = Chr(27) + Chr(251) + "66|" + Chr(27)
				=FWrite(LNecf, Linha1, Len(Linha1))
				LSstatus=ECFstatus()
			OTHERWISE
				LSstatus=""
		ENDCASE
	ENDIF
RETURN(LSstatus)


*       ÷ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ∑
*       ∫                                                         ∫
*       ∫ _3II0LH1L4           ECFfechacupom VALID                ∫
*       ∫                                                         ∫
*       ∫ Function Origin:                                        ∫
*       ∫                                                         ∫
*       ∫ From Platform:       MS-DOS                             ∫
*       ∫ From Screen:         ECF,     Record Number:   24       ∫
*       ∫ Variable:            ECFfechacupom                      ∫
*       ∫ Called By:           VALID Clause                       ∫
*       ∫ Object Type:         Push Button                        ∫
*       ∫ Snippet Number:      19                                 ∫
*       ∫                                                         ∫
*       ”ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒΩ
*

FUNCTION _3ii0lh1l4     &&  ECFfechacupom VALID
#REGION 1
return
*---------------------------------------------------------------*

FUNCTION ECFfechacupom

	PRIVATE LSmarca, LNecf
	
	LSmarca = ECFGetPropVT("TIPOECF")
	LNecf   = ECFGetPropVT("CONEXAO")

	PRIVATE LSstatus
	LSstatus = "------ERRO"

	IF !("ERRO" $ ECFOpen())
		DO CASE
			CASE LSmarca = "SWEDA"
				=FWRITE(LNecf,chr(27)+".12}")
			CASE LSmarca = "BEMATEC"
			     Linha1 = Chr(27) + Chr(251) + "66|" + Chr(27)
				=FWrite(LNecf, Linha1, Len(Linha1))
				LSstatus=ECFstatus()
			CASE LSmarca = "INTEGRADOR"
				LSstatus=""
		ENDCASE
	ENDIF
RETURN(LSstatus)


*       ÷ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ∑
*       ∫                                                         ∫
*       ∫ _3II0LH1L7           ECFprgpgt VALID                    ∫
*       ∫                                                         ∫
*       ∫ Function Origin:                                        ∫
*       ∫                                                         ∫
*       ∫ From Platform:       MS-DOS                             ∫
*       ∫ From Screen:         ECF,     Record Number:   25       ∫
*       ∫ Variable:            ECFprgpgt                          ∫
*       ∫ Called By:           VALID Clause                       ∫
*       ∫ Object Type:         Push Button                        ∫
*       ∫ Snippet Number:      20                                 ∫
*       ∫                                                         ∫
*       ”ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒΩ
*

FUNCTION _3ii0lh1l7     &&  ECFprgpgt VALID
#REGION 1
return
*---------------------------------------------------------------*

FUNCTION ECFprgpgt			&& PROGRAMA FORMA DE PGTO

	PRIVATE LSmarca, LNecf

		
	LSmarca = ECFGetPropVT("TIPOECF")
	LNecf   = ECFGetPropVT("CONEXAO")

	PRIVATE LSstatus
	LSstatus = "------ERRO"

	IF !("ERRO" $ ECFOpen())
		DO CASE
			CASE LSmarca  = "BEMATEC"
				* LNforma_pg = 1  => Dinheiro
				* LNforma_pg = 2  => Cheque
				* LNforma_pg = 3  => Duplicata
				* LNforma_pg = 4  => Parc.Cartao pela Empresa
				* LNforma_pg = 5  => Cartao de credito


*			    Linha1 = Chr(27) + Chr(251) + ;
*			    		"71|Dinheiro........|" + Chr(27)
*				=FWrite(LNecf, Linha1, Len(Linha1))
*				LSstatus=ECFstatus()
*

			    Linha1 = Chr(27) + Chr(251) + ;
			    		"71|Cheque..........|" + Chr(27)
				=FWrite(LNecf, Linha1, Len(Linha1))
				LSstatus=ECFstatus()
			

			    Linha1 = Chr(27) + Chr(251) + ;
			    		"71|Duplicata.......|" + Chr(27)
				=FWrite(LNecf, Linha1, Len(Linha1))
				LSstatus=ECFstatus()

			    Linha1 = Chr(27) + Chr(251) + ;
			    		"71|Cartao..........|" + Chr(27)
				=FWrite(LNecf, Linha1, Len(Linha1))
				LSstatus=ECFstatus()

  		CASE LSmarca = "INTEGRADOR"
				LSstatus=""
  		CASE LSmarca = "TESTE"
				LSstatus=""
  		CASE LSmarca = "ORION"
				LSstatus=""
		ENDCASE
	ENDIF
	
	
RETURN(LSstatus)




*       ÷ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ∑
*       ∫                                                         ∫
*       ∫ _3II0LH1LC           ECFsituacao VALID                  ∫
*       ∫                                                         ∫
*       ∫ Function Origin:                                        ∫
*       ∫                                                         ∫
*       ∫ From Platform:       MS-DOS                             ∫
*       ∫ From Screen:         ECF,     Record Number:   26       ∫
*       ∫ Variable:            ECFsituacao                        ∫
*       ∫ Called By:           VALID Clause                       ∫
*       ∫ Object Type:         Push Button                        ∫
*       ∫ Snippet Number:      21                                 ∫
*       ∫                                                         ∫
*       ”ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒΩ
*

FUNCTION _3ii0lh1lc     &&  ECFsituacao VALID
#REGION 1
return
*---------------------------------------------------------------*
* ECFsituacao - Provoca Leitura do Status Independente de Comando

*---------------------------------------------------------------*

FUNCTION ECFsituacao		

	*--------------------------------------------------------------*
	PRIVATE LSmarca, LNecf
	PRIVATE LSstatus
	PRIVATE LSComando
	PRIVATE LSstatus
	LSstatus = "------ERRO"
	*--------------------------------------------------------------*
	LSmarca = ECFGetPropVT("TIPOECF")
	LNecf   = ECFGetPropVT("CONEXAO")


	IF !("ERRO" $ ECFOpen())
		DO CASE
			CASE LSmarca = "TESTE"
				LSstatus=ECFstatus()
			CASE LSmarca = "SWEDA"
				LSstatus=ECFstatus()
			CASE LSmarca = "BEMATEC"
			     Linha1 = Chr(27) + Chr(251) + "19|" + Chr(27)
				=FWrite(LNecf, Linha1, Len(Linha1))
				LSstatus = ECFstatus()
	  		CASE LSmarca = "INTEGRADOR"
				LScomando = "STATUS_ECF=***"
				LSstatus =  ECFEnviaCommandFile(LScomando)
				IF !("ERRO" $ LSstatus)
					LSstatus =  ECFBuscaCommandFile(LScomando,.t.)
				ENDIF
		ENDCASE
	ENDIF
	
RETURN(LSstatus)



*       ÷ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ∑
*       ∫                                                         ∫
*       ∫ _3II0LH1LI           ECFstatus VALID                    ∫
*       ∫                                                         ∫
*       ∫ Function Origin:                                        ∫
*       ∫                                                         ∫
*       ∫ From Platform:       MS-DOS                             ∫
*       ∫ From Screen:         ECF,     Record Number:   27       ∫
*       ∫ Variable:            ECFstatus                          ∫
*       ∫ Called By:           VALID Clause                       ∫
*       ∫ Object Type:         Push Button                        ∫
*       ∫ Snippet Number:      22                                 ∫
*       ∫                                                         ∫
*       ”ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒΩ
*

FUNCTION _3ii0lh1li     &&  ECFstatus VALID
#REGION 1
return
*---------------------------------------------------------------*

FUNCTION ECFstatus				&& VERIFICA STA

	*--------------------------------------------------------------*
	PRIVATE LSmarca, LNecf
	PRIVATE LSstatus
	PRIVATE LSComando

	PRIVATE LSseq	
	PRIVATE LSstat
	PRIVATE LStransacao
	PRIVATE LSescape
	PRIVATE LSreducao
	PRIVATE LSliq
	PRIVATE LSbruto
	PRIVATE LSerro
	PRIVATE LSmenserro
	PRIVATE LSfazx
	PRIVATE LSpapel


	store "" to LSseq, LSstat,LStransacao,LSescape,LSreducao,LSliq,;
	       LSbruto,LSerro,LSmenserro,LSfazx,LSpapel

	*--------------------------------------------------------------*
	LSmarca = ECFGetPropVT("TIPOECF")
	LNecf   = ECFGetPropVT("CONEXAO")

	LSstatus = ""	&& STATUS DA TRANSACAO
	LSsttimp = ""	&& STATUS DA IMPRESSORA
	DO CASE
		CASE LSmarca = "TESTE"
				LSstatus = "      P.ROCESSADO-"
				LSstat	 = "Concluido"
				LSerro	 = "N"

		CASE LSmarca = "SWEDA"
			=FWRITE(LNecf,chr(27)+".28}")
			LSstatus = FREAD(LNecf,128)
			=FWRITE(LNecf,chr(27)+".23}")
			LSsttimp = FREAD(LNecf,128)
			****************  INTERPRETACAO DO STATUS ***************
			LSseq 		=	SUBS(LSstatus,3,4)
			*
			*	1.	VERIFICANDO A EXECUCAO DO COMANDO
			*
			LSstat		=	""
			DO CASE
				CASE SUBS(LSstatus,7,1) = "C"
					LSstat = "Concluida"
				CASE SUBS(LSstatus,7,1) = "P"
					LSstat = "Pendente"
				CASE SUBS(LSstatus,7,1) = "E"
					LSstat = "Erro Comando"
			ENDCASE

			LStransacao =	SUBS(LSstatus,8,8)
			LSescape	=	SUBS(LSstatus,16,2)
			LSreducao	=	""
			DO CASE
				CASE SUBS(LSstatus,18,1) = "N"
					LSreducao = "Aceita"
				CASE SUBS(LSstatus,18,1) = "S"
					LSreducao = "Realizada"
				CASE SUBS(LSstatus,18,1) = "F"
					LSreducao = "Fazer"
			ENDCASE

			LSliq		=	SUBS(LSstatus,19,12)
			LSbruto		=	SUBS(LSstatus,31,12)
			LSerro		=	SUBS(LSstatus,43,1)
			LSmenserro	=	SUBS(LSstatus,55,40)
			LSLSfazx	=	""
			DO CASE
				CASE SUBS(LSstatus,124,1) = "S"
					LSfazx = "Efetuada"
				CASE SUBS(LSstatus,124,1) = "N"
					LSfazx = "Nao Fez"
				CASE SUBS(LSstatus,124,1) = "F"
					LSfazx = "Fazer"
			ENDCASE

			LSpapel = ""
			DO CASE
				CASE SUBS(LSsttimp,6,1) = "5"
					LSpapel = "TROCAR PAPEL...."
			ENDCASE
			*********************************************************
		CASE LSmarca = "BEMATEC"
			FOR LNleitura = 1 to 3
				DO CASE
					CASE	LNleitura = 1
						RTACK = fread(LNecf,1)
						ACK = ASC(RTACK)
					CASE	LNleitura = 2
						RTST1 = fread(LNecf,1)
						ST1 = ASC(RTST1)
					CASE	LNleitura = 3
						RTST2 = fread(LNecf,1)
						ST2 = ASC(RTST2)
				ENDCASE
			NEXT
			*
			*	1.	VERIFICANDO A EXECUCAO DO COMANDO
			*
			IF ACK <> 6 OR ST2 > 0 	&&  ECF NAO EXECUTOU O COMANDO
				LSstatus = "      E.RRO-"
				LSstat	 = "Erro Comando"
				LSerro	 = "E"
			ELSE
				LSstatus = "      P.ROCESSADO-"
				LSstat	 = "Concluido"
				LSerro	 = "N"
			ENDIF
			*
			*	2.	VERIFICANDO LEITURA Z e OUTROS
			*
			LSreducao	=	""
			LSliq		=	""
			LSbruto		=	""

			LSmenserro	=	""
			DO CASE
				CASE ST1 >=128
					LSmenserro	= "FIM DE PAPEL.........."
				CASE ST1 >=64
					LSmenserro	= "POUCO PAPEL..........."
				CASE ST1 >=32
					LSmenserro	= "ERRO NO RELOGIO......."
				CASE ST1 >=16
					LSmenserro	= "IMPRESSORA EM ERRO...."
				CASE ST1 >=8
					LSmenserro	= "1o DADO CMD N.FOI ESC."
				CASE ST1 >=4
					LSmenserro	= "COMANDO INEXISTENTE..."
				CASE ST1 >=2
					LSmenserro	= "CUPOM ABERTO.........."
				CASE ST1 >=1
					LSmenserro	= "PARAMETROS INVALIDOS.."
			ENDCASE
			DO CASE
				CASE ST2 >=128
					LSmenserro	= LSmenserro+"-TIPO PARAM.INVALIDO.."
				CASE ST2 >=64
					LSmenserro	= LSmenserro+"-MEMORIA FISC.LOTADA.."
				CASE ST2 >=32
					LSmenserro	= LSmenserro+"-ERRO MEMOR. RAM CMOS."
				CASE ST2 >=16
					LSmenserro	= LSmenserro+"-ALIQUOTA NAO PROG...."
				CASE ST2 >=8
					LSmenserro	= LSmenserro+"-ESGOTADA CAPAC.ALIQ.."
				CASE ST2 >=4
					LSmenserro	= LSmenserro+"-CANCELAMENTO NAO PERM"
				CASE ST2 >=2
					LSmenserro	= LSmenserro+"-CGC/IE NAO PROG......"
				CASE ST2 >=1
					LSmenserro	= LSmenserro+"-COMANDO NAO EXECUTADO"
			ENDCASE
			LSLSfazx	=	""

			LSpapel 	= ""
			DO CASE
				CASE ST1 >= 64
					LSpapel = "TROCAR PAPEL......"
			ENDCASE
			*********************************************************
  		CASE LSmarca = "INTEGRADOR"
			LScomando = "STATUS_ECF=***"
			LSstatus =  ECFEnviaCommandFile(LScomando)
			IF !("ERRO" $ LSstatus)
				LSstatus =  ECFBuscaCommandFile(LScomando,.t.)
			ENDIF

		OTHERWISE
			LSstatus = space(128)
			LSsttimp = space(128)
	ENDCASE

	=ECFSetPropVT("LSSTATUS",LSstatus)
	=ECFSetPropVT("LSSEQ",LSseq)
	=ECFSetPropVT("LSSTAT",LSstat)
	=ECFSetPropVT("LSTRANSACAO",LStransacao)
	=ECFSetPropVT("LSESCAPE",LSescape)
	=ECFSetPropVT("LSREDUCAO",LSreducao)
	=ECFSetPropVT("LSLIQ",LSLIQ)
	=ECFSetPropVT("LSBRUTO",LSBRUTO)
	=ECFSetPropVT("LSERRO",LSERRO)
	=ECFSetPropVT("LSMENSERRO",LSMENSERRO)
	=ECFSetPropVT("LSFAZX",LSFAZX)
	=ECFSetPropVT("LSPAPEL",LSPAPEL)

RETURN(LSstatus+LSmenserro)





*       ÷ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ∑
*       ∫                                                         ∫
*       ∫ _3II0LH1LP           ECFx_letura VALID                  ∫
*       ∫                                                         ∫
*       ∫ Function Origin:                                        ∫
*       ∫                                                         ∫
*       ∫ From Platform:       MS-DOS                             ∫
*       ∫ From Screen:         ECF,     Record Number:   28       ∫
*       ∫ Variable:            ECFx_letura                        ∫
*       ∫ Called By:           VALID Clause                       ∫
*       ∫ Object Type:         Push Button                        ∫
*       ∫ Snippet Number:      23                                 ∫
*       ∫                                                         ∫
*       ”ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒΩ
*

FUNCTION _3ii0lh1lp     &&  ECFx_letura VALID
#REGION 1
return
*---------------------------------------------------------------*

FUNCTION ECFx_letura

	PRIVATE LSmarca, LNecf
	
	LSmarca = ECFGetPropVT("TIPOECF")
	LNecf   = ECFGetPropVT("CONEXAO")

	PRIVATE LSstatus
	LSstatus = "------ERRO"
	WAIT WINDOW "Imprimindo Leitura X  " NOWAIT

	IF !("ERRO" $ ECFOpen())
		DO CASE
			CASE LSmarca = "TESTE"
				LSstatus = ""
			CASE LSmarca = "SWEDA"
				=FWRITE(LNecf,chr(27)+".13}")
				LSstatus = ECFstatus()
			CASE LSmarca = "BEMATEC"
			     Linha1 = Chr(27) + Chr(251) + "06|" + Chr(27)
				=FWrite(LNecf, Linha1, Len(Linha1))
				LSstatus = ECFstatus()
	  		CASE LSmarca = "INTEGRADOR"
				LScomando = "LEITURA_X=***"
				LSstatus =  ECFEnviaCommandFile(LScomando)
				IF !("ERRO" $ LSstatus)
					LSstatus =  ECFBuscaCommandFile(LScomando,.t.)
				ENDIF
		ENDCASE
	ENDIF
RETURN(LSstatus)




*       ÷ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ∑
*       ∫                                                         ∫
*       ∫ _3II0LH1LT           ECFcanccpm VALID                   ∫
*       ∫                                                         ∫
*       ∫ Function Origin:                                        ∫
*       ∫                                                         ∫
*       ∫ From Platform:       MS-DOS                             ∫
*       ∫ From Screen:         ECF,     Record Number:   29       ∫
*       ∫ Variable:            ECFcanccpm                         ∫
*       ∫ Called By:           VALID Clause                       ∫
*       ∫ Object Type:         Push Button                        ∫
*       ∫ Snippet Number:      24                                 ∫
*       ∫                                                         ∫
*       ”ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒΩ
*

FUNCTION _3ii0lh1lt     &&  ECFcanccpm VALID
#REGION 1
return
*---------------------------------------------------------------*

FUNCTION ECFcanccpm
	PARAMETER PrmNroCupom,PrmCartaoVlr

	PRIVATE LSmarca, LNecf

	

	LSmarca = ECFGetPropVT("TIPOECF")
	LNecf   = ECFGetPropVT("CONEXAO")

	PRIVATE LSstatus
	LSstatus = "------ERRO"

	IF !("ERRO" $ ECFOpen())
		DO CASE
			CASE LSmarca = "TESTE"
				LSstatus = ECFstatus()
			CASE LSmarca = "SWEDA"
				=FWRITE(LNecf,chr(27)+".05}")
				LSstatus = ECFstatus()
			CASE LSmarca = "BEMATEC"
			     Linha1 = Chr(27) + Chr(251) + "14|" + Chr(27)
				=FWrite(LNecf, Linha1, Len(Linha1))
			    LSstatus=ECFstatus()
				**********************************************************
				* NA BEMATEC SE O CUPOM ESTIVER ABERTO E INJETADO UM ITEM
				* E RECOMANDADO O CANCELAMENTO
				**********************************************************
				IF 	SUBS(LSstatus,7,1) = "E"
				   Linha1 = Chr(27)+Chr(251)+;
						"09|0000000000000|.............................|"+;
							"II|0001|00000001|0001|"+Chr(27)
				   =FWrite(LNecf, Linha1, Len(Linha1))
		       	   Linha1 = Chr(27) + Chr(251) + "14|" + Chr(27)
				   =FWrite(LNecf, Linha1, Len(Linha1))
			       LSstatus=ECFstatus()
				ENDIF
	  		CASE LSmarca = "INTEGRADOR"

				LSstatus=ECFsituacao()
		
				IF PrmCartaoVlr > 0 AND  !("CUPOM ABERTO" $ UPPER(LSstatus))
					LScomando = "CNC_CUPOM="+;
								 STRTRAN(STR(PrmNroCupom,6)," ","0")
				ELSE
					LScomando = "CANCELA_CUPOM="+;
							 STRTRAN(STR(PrmNroCupom,6)," ","0")
				ENDIF


				LSstatus =  ECFEnviaCommandFile(LScomando)
				IF !("ERRO" $ LSstatus)
					LSstatus =  ECFBuscaCommandFile(LScomando,.t.)
				ENDIF
		ENDCASE
	ENDIF
	
RETURN(LSstatus)


*       ÷ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ∑
*       ∫                                                         ∫
*       ∫ _3II0LH1LX           ECF_CNC VALID                      ∫
*       ∫                                                         ∫
*       ∫ Function Origin:                                        ∫
*       ∫                                                         ∫
*       ∫ From Platform:       MS-DOS                             ∫
*       ∫ From Screen:         ECF,     Record Number:   30       ∫
*       ∫ Variable:            ECF_CNC                            ∫
*       ∫ Called By:           VALID Clause                       ∫
*       ∫ Object Type:         Push Button                        ∫
*       ∫ Snippet Number:      25                                 ∫
*       ∫                                                         ∫
*       ”ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒΩ
*

FUNCTION _3ii0lh1lx     &&  ECF_CNC VALID
#REGION 1
return
*---------------------------------------------------------------*

FUNCTION ECF_CNC
	PARAMETER PrmNroCupom,PrmCartaoVlr

	PRIVATE LSmarca, LNecf

	

	LSmarca = ECFGetPropVT("TIPOECF")
	LNecf   = ECFGetPropVT("CONEXAO")

	PRIVATE LSstatus
	LSstatus = "------ERRO"

	IF !("ERRO" $ ECFOpen())
		DO CASE
			CASE LSmarca = "TESTE"
				LSstatus = ""
	  		CASE LSmarca = "INTEGRADOR"

				LSstatus=ECFsituacao()
		
				IF PrmCartaoVlr > 0 AND  !("CUPOM ABERTO" $ UPPER(LSstatus))
					LScomando = "CNC_CUPOM="+;
								 STRTRAN(STR(PrmNroCupom,6)," ","0")
					LSstatus =  ECFEnviaCommandFile(LScomando)
					IF !("ERRO" $ LSstatus)
						LSstatus =  ECFBuscaCommandFile(LScomando,.t.)
					ENDIF
				ENDIF
		ENDCASE
	ENDIF
	
RETURN(LSstatus)


*       ÷ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ∑
*       ∫                                                         ∫
*       ∫ _3II0LH1M1           ECFnrocupom VALID                  ∫
*       ∫                                                         ∫
*       ∫ Function Origin:                                        ∫
*       ∫                                                         ∫
*       ∫ From Platform:       MS-DOS                             ∫
*       ∫ From Screen:         ECF,     Record Number:   31       ∫
*       ∫ Variable:            ECFnrocupom                        ∫
*       ∫ Called By:           VALID Clause                       ∫
*       ∫ Object Type:         Push Button                        ∫
*       ∫ Snippet Number:      26                                 ∫
*       ∫                                                         ∫
*       ”ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒΩ
*

FUNCTION _3ii0lh1m1     &&  ECFnrocupom VALID
#REGION 1
return
*---------------------------------------------------------------*

FUNCTION ECFnrocupom

	PRIVATE LSmarca, LNecf
	
	LSmarca = ECFGetPropVT("TIPOECF")
	LNecf   = ECFGetPropVT("CONEXAO")


	PRIVATE LSstatus
	LSstatus = "------ERRO"
	PRIVATE LNnro

	=ECFSetPropVT("LNNRO",0)   && INICIALIZACAO

	LNnro    = -1

	IF !("ERRO" $ ECFOpen())
		DO CASE
			CASE LSmarca = "TESTE"
				LNnro 	 = 10    && INT(RAND()*100)
			CASE LSmarca = "SWEDA"
				=FWRITE(LNecf,chr(27)+".271}")
				LSstatus = FREAD(LNecf,128)
				LNnro 	 = VAL(SUBS(LSstatus,121,4))
			CASE LSmarca = "BEMATEC"
			     Linha1  = Chr(27) + Chr(251) + "30|" + Chr(27)
				=FWrite(LNecf, Linha1, Len(Linha1))
				LSstatus = fread(LNecf,3)
				LSstatus = fread(LNecf,6)
				LNnro    = INT(VAL(LSstatus))
	  		CASE LSmarca = "INTEGRADOR"
				LScomando = "NUMERO_CUPOM=***"
				LSstatus =  ECFEnviaCommandFile(LScomando)
				IF !("ERRO" $ LSstatus)
					LSstatus =  ECFBuscaCommandFile(LScomando,.t.)
					IF !("ERRO" $ LSstatus)
						LNnro    = INT(VAL(SUBS(LSSTATUS,14,6)))
					ENDIF
				ELSE
					LNnro    = INT(VAL(SUBS(LSSTATUS,14,6)))
				ENDIF

			*-----------------------------------------------*
			*	IF "STATUS=CUPOM ABERTO" $ UPPER(LSSTATUS)
			*		LNnro = LNnro -1
			*	ENDIF
			*-----------------------------------------------*
		ENDCASE
		=ECFSetPropVT("LNNRO",LNNRO)
	ENDIF

RETURN(LNnro)
		


*       ÷ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ∑
*       ∫                                                         ∫
*       ∫ _3II0LH1M6           ECFreset VALID                     ∫
*       ∫                                                         ∫
*       ∫ Function Origin:                                        ∫
*       ∫                                                         ∫
*       ∫ From Platform:       MS-DOS                             ∫
*       ∫ From Screen:         ECF,     Record Number:   32       ∫
*       ∫ Variable:            ECFreset                           ∫
*       ∫ Called By:           VALID Clause                       ∫
*       ∫ Object Type:         Push Button                        ∫
*       ∫ Snippet Number:      27                                 ∫
*       ∫                                                         ∫
*       ”ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒΩ
*
FUNCTION _3ii0lh1m6     &&  ECFreset VALID
#REGION 1
return
*---------------------------------------------------------------*

FUNCTION ECFreset

	PRIVATE LSmarca, LNecf
	
	LSmarca = ECFGetPropVT("TIPOECF")
	LNecf   = ECFGetPropVT("CONEXAO")


	PRIVATE LSstatus
	LSstatus = "------ERRO"

	IF !("ERRO" $ ECFOpen())
		DO CASE
			CASE LSmarca = "TESTE"
				LSstatus = ""
			CASE wp_TIPOECF = "SWEDA"
				LSstatus=ECFstatus()
			CASE wp_TIPOECF = "BEMATEC"
			     Linha1 = Chr(27) + Chr(251) + "70|" + Chr(27)
				=FWrite(LNecf, Linha1, Len(Linha1))
				LSstatus=ECFstatus()
	  		CASE LSmarca = "INTEGRADOR"
				LSstatus =  ""
		ENDCASE
	ENDIF
	
RETURN(LSstatus)


*       ÷ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ∑
*       ∫                                                         ∫
*       ∫ _3II0LH1M9           ECFlermemo VALID                   ∫
*       ∫                                                         ∫
*       ∫ Function Origin:                                        ∫
*       ∫                                                         ∫
*       ∫ From Platform:       MS-DOS                             ∫
*       ∫ From Screen:         ECF,     Record Number:   33       ∫
*       ∫ Variable:            ECFlermemo                         ∫
*       ∫ Called By:           VALID Clause                       ∫
*       ∫ Object Type:         Push Button                        ∫
*       ∫ Snippet Number:      28                                 ∫
*       ∫                                                         ∫
*       ”ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒΩ
*
FUNCTION _3ii0lh1m9     &&  ECFlermemo VALID
#REGION 1
return
*---------------------------------------------------------------*
FUNCTION ECFlerMemo

	PRIVATE LSmarca, LNecf
	
	LSmarca = ECFGetPropVT("TIPOECF")
	LNecf   = ECFGetPropVT("CONEXAO")


	PRIVATE LSstatus
	LSstatus = "------ERRO"

	PRIVATE LDdtinicio,LDdtfim,LFmtvretorno,LFtpdtfim
	PRIVATE LS_di, LS_df, LS_dts

	STORE DATE() TO LDdtinicio,LDdtfim
	LFmtvretorno="NORMAL"
	LFtpdtfim   = .T.
	DO obj_dat1.spr WITH LDdtinicio,LDdtfim,LFmtvretorno,LFtpdtfim

	IF !("ERRO" $ ECFOpen())
		IF LFmtvretorno <> "ABORTADO"
			WAIT WINDOW "Imprimindo Leitura Memoria Fiscal  " NOWAIT
			DO CASE
				CASE LSmarca = "TESTE"
					LSstatus = ""
				CASE LSmarca = "SWEDA"
					LS_di = SUBST(DTOC(LDdtinicio),1,2)+;
							SUBST(DTOC(LDdtinicio),4,2)+;
							SUBST(DTOC(LDdtinicio),9,2)
					LS_df = SUBST(DTOC(LDdtfim)   ,1,2)+;
							SUBST(DTOC(LDdtfim)   ,4,2)+;
							SUBST(DTOC(LDdtfim)   ,9,2)
					=FWRITE(LNecf,chr(27)+".16"+LS_di+LS_df+"}")
					LSstatus = ECFstatus()
	
				CASE LSmarca = "BEMATEC"
					LS_dts = SUBST(DTOC(LDdtinicio),1,2)+;
 							 SUBST(DTOC(LDdtinicio),4,2)+;
							 SUBST(DTOC(LDdtinicio),9,2)+"|"+;
							 SUBST(DTOC(LDdtfim)   ,1,2)+;
							 SUBST(DTOC(LDdtfim)   ,4,2)+;
							 SUBST(DTOC(LDdtfim)   ,9,2)+"|I|"
					Linha1 = Chr(27)+Chr(251)+;
				         "08|"+LS_dts+Chr(27)
					=FWrite(LNecf, Linha1, Len(Linha1))
					LSstatus = ECFstatus()

		  		CASE LSmarca = "INTEGRADOR"
					LS_dts = SUBST(DTOC(LDdtinicio),1,2)+;
 							 SUBST(DTOC(LDdtinicio),4,2)+;
							 SUBST(DTOC(LDdtinicio),9,2)+"|"+;
							 SUBST(DTOC(LDdtfim)   ,1,2)+;
							 SUBST(DTOC(LDdtfim)   ,4,2)+;
							 SUBST(DTOC(LDdtfim)   ,9,2)+"|I|"

					LScomando = "LER_MEMORIA_POR_DATA="+LS_dts

					LSstatus =  ECFEnviaCommandFile(LScomando)
					IF !("ERRO" $ LSstatus)
						LSstatus =  ECFBuscaCommandFile(LScomando,.t.)
					ENDIF
			ENDCASE
		ENDIF
	ENDIF
	
RETURN(LSstatus)


*       ÷ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ∑
*       ∫                                                         ∫
*       ∫ _3II0LH1ME           ECFleDadSintegra VALID             ∫
*       ∫                                                         ∫
*       ∫ Function Origin:                                        ∫
*       ∫                                                         ∫
*       ∫ From Platform:       MS-DOS                             ∫
*       ∫ From Screen:         ECF,     Record Number:   34       ∫
*       ∫ Variable:            ECFleDadSintegra                   ∫
*       ∫ Called By:           VALID Clause                       ∫
*       ∫ Object Type:         Push Button                        ∫
*       ∫ Snippet Number:      29                                 ∫
*       ∫                                                         ∫
*       ”ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒΩ
*
FUNCTION _3ii0lh1me     &&  ECFleDadSintegra VALID
#REGION 1
return
*---------------------------------------------------------------*
FUNCTION ECFleDadSintegra
PARAMETERS WP_DTOPER
	PRIVATE LSmarca, LNecf
	
	LSmarca = ECFGetPropVT("TIPOECF")
	LNecf   = ECFGetPropVT("CONEXAO")


	PRIVATE LSstatus
	LSstatus = "------ERRO"

	PRIVATE LDdtinicio,LDdtfim,LFmtvretorno,LFtpdtfim
	PRIVATE LS_di, LS_df, LS_dts

	STORE DATE() TO LDdtinicio,LDdtfim
	LFmtvretorno="NORMAL"
	LFtpdtfim   = .T.
	*DO obj_dat1.spr WITH LDdtinicio,LDdtfim,LFmtvretorno,LFtpdtfim

    STORE WP_DTOPER TO LDdtinicio,LDdtfim



	IF !("ERRO" $ ECFOpen())
		IF LFmtvretorno <> "ABORTADO"
			WAIT WINDOW "Lendo Dados SINTEGRA  " NOWAIT
			DO CASE
		  		CASE LSmarca = "INTEGRADOR"
					LS_dts = SUBST(DTOC(LDdtinicio),1,2)+;
 							 SUBST(DTOC(LDdtinicio),4,2)+;
							 SUBST(DTOC(LDdtinicio),9,2)+"|"+;
							 SUBST(DTOC(LDdtinicio)   ,1,2)+;
							 SUBST(DTOC(LDdtinicio)   ,4,2)+;
							 SUBST(DTOC(LDdtinicio)   ,9,2)+"|I|"

					LScomando = "MAPA_ECF="+LS_dts
					LScomando = "MAPA_ECF=***"

					LSstatus =  ECFEnviaCommandFile(LScomando)
					IF !("ERRO" $ LSstatus)
						LSstatus =  ECFBuscaCommandFile(LScomando,.t.)
						IF !("ERRO" $ LSstatus)
							=ECFBuscaDadosSintegra(wp_empresa,;
									    LDdtinicio)
						ENDIF
					ENDIF
			ENDCASE
		ENDIF
	ENDIF
	
RETURN(LSstatus)


*       ÷ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ∑
*       ∫                                                         ∫
*       ∫ _3II0LH1MI           ECFBuscaDadosSintegra VALID        ∫
*       ∫                                                         ∫
*       ∫ Function Origin:                                        ∫
*       ∫                                                         ∫
*       ∫ From Platform:       MS-DOS                             ∫
*       ∫ From Screen:         ECF,     Record Number:   35       ∫
*       ∫ Variable:            ECFBuscaDadosSintegra              ∫
*       ∫ Called By:           VALID Clause                       ∫
*       ∫ Object Type:         Push Button                        ∫
*       ∫ Snippet Number:      30                                 ∫
*       ∫                                                         ∫
*       ”ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒΩ
*

FUNCTION _3ii0lh1mi     &&  ECFBuscaDadosSintegra VALID
#REGION 1
return
*---------------------------------------------------------------*

FUNCTION ECFBuscaDadosSintegra
PARAMETERS PrmEmpresa,PrmData

	*-------------------------------------------------------*
	* pFlgAborta = .t. permite abortar espera apos 1 minuto
	* pFlgAborta = .f. espera nao pode ser abortada
	*-------------------------------------------------------*
	PRIVATE LNfile
	PRIVATE LSstatus,LSFile,LNctr,TECLA
	LSstatus = ""
	LNfile = 0


	LSFile    = "C:\retorno.txt"

	LNctr = 0

	LFlgEspera = .t.
	DO WHILE LFlgEspera
		DO WHILE !(FILE(LSFile))
			WAIT WINDOW "Aguardando retorno do Integrador TEF" NOWAIT
			TECLA=INKEY(1)
			LNctr = LNctr + 1
			IF LNctr > 60 or TECLA = 27
				IF TECLA = 27
					EXIT
				ENDIF
			ENDIF
		ENDDO

		LFlgEspera = .F.
		IF  !FILE(LSFile)
			LSstatus = "ERRO ! Nao houve retorno do comando"
		ELSE
			LFecfRtrno		= NetArq("ECFRTRNO",.t.)
		    IF (LFecfRtrno) > 100000  && HOUVE FALHA ABERT
				LSstatus = "ERRO ! Nao houve retorno do comando"
			ELSE
				SELE ECFRTRNO
				SET ORDER TO TAG DATA_MAPA
				SET NEAR ON
				SEEK STR(PrmEmpresa,3)+DTOS(PrmData)
				DO  WHILE EMPRESA = PrmEmpresa ;
				        AND DATA = PrmData
					DELETE
					SKIP
				ENDDO

				SET NEAR ON
				SEEK STR(0,3)
				DO WHILE !EOF() AND empresa = 0
					DELETE
					SEEK STR(0,3)
				ENDDO

				PACK
				REINDEX
				APPEND FROM  &LSFILE TYPE SDF
				SET NEAR ON
				SEEK STR(0,3)
				DO WHILE !EOF() AND empresa = 0
					REPLACE empresa with PrmEmpresa
					REPLACE data WITH PrmData
					REPLACE dtregis WITH date()
					REPLACE hregis WITH time()
					REPLACE usrregis WITH nUsr
					SEEK STR(0,3)
				ENDDO
				SET NEAR OFF
			ENDIF			
			DELETE FILE &LSFile
			=UP_fecha("ECFRTRNO" ,LFecfRtrno)
		ENDIF
	ENDDO
RETURN(LSstatus)


*       ÷ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ∑
*       ∫                                                         ∫
*       ∫ _3II0LH1MM           ECFz_letura VALID                  ∫
*       ∫                                                         ∫
*       ∫ Function Origin:                                        ∫
*       ∫                                                         ∫
*       ∫ From Platform:       MS-DOS                             ∫
*       ∫ From Screen:         ECF,     Record Number:   36       ∫
*       ∫ Variable:            ECFz_letura                        ∫
*       ∫ Called By:           VALID Clause                       ∫
*       ∫ Object Type:         Push Button                        ∫
*       ∫ Snippet Number:      31                                 ∫
*       ∫                                                         ∫
*       ”ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒΩ
*

FUNCTION _3ii0lh1mm     &&  ECFz_letura VALID
#REGION 1
return
*---------------------------------------------------------------*

FUNCTION ECFz_letura
	PARAMETER wp_dtoper


	PRIVATE LSmarca, LNecf
	
	LSmarca = ECFGetPropVT("TIPOECF")
	LNecf   = ECFGetPropVT("CONEXAO")

	PRIVATE LSstatus
	LSstatus = "------ERRO"

	PRIVATE LSdata
	WAIT WINDOW "Imprimindo Leitura Z  " NOWAIT


	IF !("ERRO" $ ECFOpen())
		DO CASE
			CASE LSmarca = "TESTE"
				LSstatus = ""
			CASE LSmarca = "SWEDA"
				LSdata = 	STR(DAY(wp_dtoper),2)+;
							STR(MONTH(wp_dtoper),2)+;
							SUBS(STR(YEAR(wp_dtoper),4),3)
				=FWRITE(LNecf,chr(27)+".14"+LSdata+"}")
				LSstatus = ECFstatus()

			CASE LSmarca = "BEMATEC"
			     Linha1 = Chr(27) + Chr(251) + "05|" + Chr(27)
				=FWrite(LNecf, Linha1, Len(Linha1))
				LSstatus = ECFstatus()
	  		CASE LSmarca = "INTEGRADOR"
				LScomando = "LEITURA_Z=***"
				LSstatus =  ECFEnviaCommandFile(LScomando)
				IF !("ERRO" $ LSstatus)
					LSstatus =  ECFBuscaCommandFile(LScomando,.t.)
					IF !("ERRO" $ LSstatus)
						=ECFleDadSintegra(wp_dtoper)
					ENDIF
				ENDIF
		ENDCASE
	ENDIF
	
RETURN(LSstatus)





*       ÷ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ∑
*       ∫                                                         ∫
*       ∫ _3II0LH1MP           ECFimpcupom VALID                  ∫
*       ∫                                                         ∫
*       ∫ Function Origin:                                        ∫
*       ∫                                                         ∫
*       ∫ From Platform:       MS-DOS                             ∫
*       ∫ From Screen:         ECF,     Record Number:   37       ∫
*       ∫ Variable:            ECFimpcupom                        ∫
*       ∫ Called By:           VALID Clause                       ∫
*       ∫ Object Type:         Push Button                        ∫
*       ∫ Snippet Number:      32                                 ∫
*       ∫                                                         ∫
*       ”ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒΩ
*

FUNCTION _3ii0lh1mp     &&  ECFimpcupom VALID
#REGION 1
return
*---------------------------------------------------------------*

FUNCTION ECFimpcupom
	PARAMETER LNnfini,LNnffim,LNvalor

	PRIVATE LSmarca, LNecf
	
	LSmarca = ECFGetPropVT("TIPOECF")
	LNecf   = ECFGetPropVT("CONEXAO")


	PRIVATE LSstatus
	LSstatus = "------ERRO"

	SELE itnfstmp
	SET ORDER TO TAG nota
	GO TOP
	*--------- INICIO - IMPRESSAO DO CUPOM FISCAL -------------------*

	WAIT WINDOW "Imprimindo Cupom Fiscal X  " NOWAIT

	* 1.2	- Cabecalho do cupom	[ OPCAO SO NA SWEDA ]

	DO CASE
		CASE LSmarca = "SWEDA"
			LSoper = STR(nota.operador,4)
			LSvend = STR(nota.serv_1,4)
			LSosi  = STR(nota.NOTA,7)	&& REGISTRO EQUIV. A NOTA
			=FWRITE(LNecf,chr(27)+".0905"+LSvend+"  |01"+LSoper+"}")
			=FWRITE(LNecf,chr(27)+".0929"+LSosi+"}")
	ENDCASE

	* 1.3	- Itens

		SELE itnfstmp
		CTR = 0
		DO WHILE !EOF() AND nota.empresa = itnfstmp.empresa ;
						AND  itnfstmp.nota <= LNnffim
						
			IF !(LEFT(itnfstmp.situacao,1) = "O")  && ALGO ERRADO NO ITEM
				SKIP
			ENDIF

			LScod 	=	itnfstmp.codigo+SPACE(2)

    	 	CTR = CTR + 0.01
		 	LSqtde	=	STR(itnfstmp.qtde,8,3)
			LSqtde	=	CHRTRAN(LSqtde,",","")
			LSqtde	=	CHRTRAN(LSqtde,".","")
			LSqtde	=	CHRTRAN(LSqtde," ","0")

			*-- verificar a impressao de preco unit 0 na nf ---*

			m.LFimpdescto = .f.
		
			LSprun  =	IIF(itnfstmp.qtde=0,itnfstmp.vlrvenda,;
							itnfstmp.vlrvenda / itnfstmp.qtde)
			DO CASE
				CASE LSmarca = "SWEDA"
					LSprun	=	STR(LSprun,10,2)
				CASE LSmarca = "BEMATEC"
					LSprun	=	STR(LSprun,9,2)
				CASE LSmarca = "TESTE"
					LSprun	=	STR(LSprun,9,2)
			ENDCASE
			LSprun  =	CHRTRAN(LSprun,",","")	&& RETIRA VIRGULA
			LSprun  =	CHRTRAN(LSprun,".","")	&& RETIRA VIRGULA
			LSprun  =	CHRTRAN(LSprun," ","0")	&& PREENCHE DE 0

			DO CASE
				CASE LSmarca = "SWEDA"
			 		LSprtot	=	STR(itnfstmp.vlrvenda,13,2)
				CASE LSmarca = "BEMATEC"
			 		LSprtot	=	STR(itnfstmp.vlrvenda,9,2)
				CASE LSmarca = "TESTE"
			 		LSprtot	=	STR(itnfstmp.vlrvenda,9,2)
			ENDCASE
			LSprtot	=	CHRTRAN(LSprtot,",","")	&& RETIRA VIRGULA
			LSprtot	=	CHRTRAN(LSprtot,".","")	&& RETIRA VIRGULA
			LSprtot	=	CHRTRAN(LSprtot," ","0")	&& PREENCHE DE 0

			DO CASE
				CASE LSmarca = "SWEDA"
					LSdescr	=	LEFT(itnfstmp.descricao+SPACE(24),24)		
				CASE LSmarca = "BEMATEC"
					LSdescr	=	LEFT(itnfstmp.descricao+SPACE(29),29)		
				CASE LSmarca = "TESTE"
					LSdescr	=	LEFT(itnfstmp.descricao+SPACE(29),29)		
			ENDCASE
	
			LSdsct  = "0000"
			*------ INICIO - ENQUADRAMENTO DA TRIBUTACAO -----*
			LStrib = "99"	&& SE NAO  ENQUADRAR 99 PROVOCA ERRO PARA
							&& NAO DEIXAR REGISTRAR O ITEM
			DO CASE
				CASE LSmarca = "SWEDA"
					*<<<<<<<<<<<<  VALORES DE TESTE SWEDA >>>>>>>>>>>
				 	*LSqtde	=	STR(1,8,3)
					*LSqtde	=	CHRTRAN(LSqtde,",","")
					*LSqtde	=	CHRTRAN(LSqtde,".","")
					*LSqtde	=	CHRTRAN(LSqtde," ","0")

					****LSprun	=	STR(0.01,10,2)
					*LSprun  =	CHRTRAN(LSprun,",","")	&& RETIRA VIRGULA
					*LSprun  =	CHRTRAN(LSprun,".","")	&& RETIRA VIRGULA
					*LSprun  =	CHRTRAN(LSprun," ","0")	&& PREENCHE DE 0

		 			*LSprtot	=	STR(0.01,13,2)
					*LSprtot	=	CHRTRAN(LSprtot,",","")	&& RETIR VIRGULA
					*LSprtot	=	CHRTRAN(LSprtot,".","")	&& RETIRAIRGULA
					*LSprtot	=	CHRTRAN(LSprtot," ","0") && PREENCHE 0

					*<<<<<<<<<<<<<<<<<<<------->>>>>>>>>>>>>>>>>>>>>>
	
					DO CASE
						CASE itnfstmp.cst = "6"
							 LStrib = "F  "
						CASE itnfstmp.cst = "9"
							 LStrib = "T0 "
						CASE itnfstmp.cst = "0"
							 LSaliq = INT(itnfstmp.aliq_icms)
							 LSaliq = STR(LSaliq,2)
							 LSaliq = CHRTRAN(LSaliq," ","0")
							 DO CASE
								CASE LSaliq = "17"
									LStrib = "T01"								
								CASE LSaliq = "05"
									LStrib = "T02"								
								CASE LSaliq = "07"
									LStrib = "T03"								
								CASE LSaliq = "12"
									LStrib = "T04"
								CASE LSaliq = "25"
									LStrib = "T05"								
							 ENDCASE
						OTHERWISE
							 LStrib = "N  "
					ENDCASE
				CASE LSmarca = "BEMATEC"
					DO CASE
						CASE itnfstmp.cst = "6"
							 LStrib = "FF"
						CASE itnfstmp.cst = "0"
							 LSaliq = INT(itnfstmp.aliq_icms)
							 LSaliq = STR(LSaliq,2)
							 LSaliq = CHRTRAN(LSaliq," ","0")
							 DO CASE
								CASE LSaliq = "07"
									LStrib = "03"								
								CASE LSaliq = "12"
									LStrib = "04"								
								CASE LSaliq = "17"
									LStrib = "01"								
								CASE LSaliq = "25"
									LStrib = "05"								
							 ENDCASE
						CASE itnfstmp.cst = "9"
							 LStrib = "02"
						CASE itnfstmp.cst = "2"   && REDUCAO NA  BASE DE CALC
							 LSaliq = INT(itnfstmp.aliq_icms)
							 LSaliq = STR(LSaliq,2)
							 LSaliq = CHRTRAN(LSaliq," ","0")
							 IF itnfstmp.empresa = 8	&& ARG TEM BASE REDUZIDA
							 	LSaliq = "12" && A REDUCAO => ALIQ DE 12%
							 ENDIF
							 DO CASE
								CASE LSaliq = "07"
									LStrib = "03"								
								CASE LSaliq = "12"
									LStrib = "04"								
								CASE LSaliq = "17"
									LStrib = "01"								
								CASE LSaliq = "25"
									LStrib = "05"								
							 ENDCASE
						OTHERWISE
							 LStrib = "NN"
					ENDCASE
			ENDCASE
			*-------------------------------------------------*		
			DO CASE
				CASE LSmarca = "SWEDA"
					=FWRITE(LNecf,chr(27)+".01"+LScod+LSqtde+LSprun+;
							LSprtot+LSdescr+LStrib+"08}")
				CASE LSmarca = "BEMATEC"
				     Linha1 = Chr(27) + Chr(251) + "09|"+;
				     		 LScod+"|"+LSdescr+"|"+LStrib+"|"+;
				     		 LSqtde+"|"+LSprun+"|"+LSdsct+"|"+ Chr(27)
					=FWrite(LNecf, Linha1, Len(Linha1))
			ENDCASE
			LSstatus=ECFstatus()
			IF SUBS(LSstatus,7,1) = "E"
				WAIT WINDOW LSstatus
				EXIT
			ENDIF			
			SKIP		
		ENDDO
		IF SUBS(LSstatus,7,1) = "E"
			WAIT WINDOW "A ECF Nao Acatou o ITEM "+itnfstmp.descricao
			WAIT WINDOW LSstatus
			RETURN(2)
		ENDIF			

	* 1.4	- Totalizando
		*-----------------------------------------------------------*
		* 	Operacionalmente o cartao foi desmembrado e varias formas
		* mas para impressora todas sao sitetizadas no registro 3
		* nota.forma_pgto > 4  sao cartao
		*-----------------------------------------------------------*
		LNforma_pg = nota.TP_PARCELA

		DO CASE
			CASE nota.tp_parcela =  3
				LNforma_pg = 4
			CASE nota.tp_parcela =  4 or nota.tp_parcela =  5
				LNforma_pg = 3
		ENDCASE		

		LSmodpg = CHRTRAN(STR(LNforma_pg,2)," ","0")

		LSvalor	=	STR(LNvalor,13,2)			&& VALOR DO FATURAMENTO
		LSvalor	=	CHRTRAN(LSvalor,",","")		&& RETIRA VIRGULA
		LSvalor	=	CHRTRAN(LSvalor,".","")		&& RETIRA PONTO
		LSvalor	=	CHRTRAN(LSvalor," ","0")	&& PREENCHE DE 0

		DO CASE
			CASE LSmarca = "SWEDA"
					*<<<<<<<<<<<<  VALORES DE TESTE SWEDA >>>>>>>>>>>
				*LSvalor	=	CHRTRAN(LSvalor,",","")	&& RETIRA VIRGULA
				*LSvalor	=	CHRTRAN(LSvalor,".","")		&& RETIRA PONTO
				*LSvalor	=	CHRTRAN(LSvalor," ","0")	&& PREENCHE DE 0
					*<<<<<<<<<<<< ----------------------- >>>>>>>>>>>

				=FWRITE(LNecf,chr(27)+".10"+LSmodpg+LSvalor+"}")
				LSstatus=ECFstatus()
			CASE LSmarca = "BEMATEC"
		    	***  INICIA FECHAMENTO COM FORMA DE PGTO ***
			     Linha1 = Chr(27) + Chr(251) + "32|A|0000|"+ Chr(27)
				 =FWrite(LNecf, Linha1, Len(Linha1))
				 LSstatus=ECFstatus()
				 IF SUBS(LSstatus,7,1) <> "E"
					 && EFETUA FORMA DE PAGAMENTO
				     Linha1 = Chr(27) + Chr(251) + "72|"+;
			     			LSmodpg+"|00"+LSvalor+"|"+ Chr(27)
					 =FWrite(LNecf, Linha1, Len(Linha1))
					LSstatus=ECFstatus()
				 ENDIF
		ENDCASE
		IF SUBS(LSstatus,7,1) = "E"
			WAIT WINDOW "A ECF Nao Acatou a TOTALIZACAO DO CUPOM"
			WAIT WINDOW LSstatus
			RETURN(3)
		ENDIF			
	

	* 1.5	- Informando CGC/CPF  e INSCRICAO
		DO CASE
			CASE LSmarca = "SWEDA"
				IF nota.tp_pessoa = 1
					LScgc = "01"+;
						TRANSFORM(STR(nota.favorecido,14),;
									"@R 99.999.999/9999.99")+SPACE(12)
				ELSE
					LScgc = "02"+;
						TRANSFORM(STR(nota.favorecido,14),;
									"@R 999.999.999.999-99")+SPACE(12)
				ENDIF
				=FWRITE(LNecf,chr(27)+".060"+LScgc+"}")
				LSstatus=ECFstatus()
				IF SUBS(LSstatus,7,1) = "E"
					SET DEVICE TO SCREEN
					WAIT WINDOW LSstatus
					RETURN(4)
				ENDIF			
				IF nota.tp_inscr = 1
					LScgc = "03"+nota.inscricao
					=FWRITE(LNecf,chr(27)+".060"+LScgc+"}")
					LSstatus=ECFstatus()
					IF SUBS(LSstatus,7,1) = "E"
						SET DEVICE TO SCREEN
						WAIT WINDOW LSstatus
						RETURN(5)
					ENDIF			
				ENDIF
		ENDCASE

	* 1.6	- Fechando o Cupom

		*<<<<<<<<<<<<<   MONTANDO MENSSAGEM FINAL >>>>>>>>>>>>>>>
		DO CASE
			CASE LSmarca = "SWEDA"
				LSlinha0 = "0"+STRTRAN(LEFT(nota.nome+SPACE(40),40)," ",".")

				IF orcament.tp_parcela = 1  	&& PGTO A VISTA
				 	LSlinha1 =  ""
				ELSE
					SELE banco
					SEEK orcament.banco
				 	LSlinha1 =  ""
					IF FOUND()
					 	LSlinha1 =  "0"+;
					 		LEFT("COBRANCA: "+banco.nome+SPACE(40),40)
							LSlinha1 =  STRTRAN(LSlinha1," ",".")
					ENDIF
				ENDIF
				***********************************************************
				* =ECFinfdpl NAO PODE RECEBER PARAMETROS POR REFERENCIA
				*			OS DADOS SAO ALTERADOS NA FUNCAO
				***********************************************************
				SET UDFPARMS VALUE
				STORE "" TO wp_retorno
				LNnronota = nota.nota

*				=ECFinfdpl(LSmarca,orcament.empresa,orcament.valor,;
*						 LNnronota,orcament.vlr_ent,;
*						 orcament.tp_parcela,orcament.banco,;
*						 orcament.prazo)

				=ECFinfdpl(LSmarca,orcament.empresa,LNnronota)

				SET UDFPARMS REFERENCE		&& DEFAUT DO SYSTEMA
				********************************************************
				LNind = 0
				LSlinha2 = ""
				LSlnaux  = ""
				FOR LNind = 1 TO 12		&& NRO DE OCORRENCIAS DE WP_RETORNO
					IF EMPTY(wp_retorno(LNind))
						EXIT
					ENDIF
					IF LNind = 1
						LSlnaux		= "0Dupl.:"
					ENDIF

					IF LEN(LSlnaux)	>= 41	&& CHEGOU PROX. DO LIMITE 40
											&& OU 2 DUPLIC POR LINHA
						LSlinha2 = LSlinha2+LEFT(LSlnaux,41)
						LSlnaux  = "0"+SUBS(LSlnaux,42)
					ENDIF

					LSlnaux	= LSlnaux+wp_retorno(LNind)
				NEXT

				IF LEN(LSlnaux)	>  1	&& TEM DADOS DE DUPLICATA
					LSlinha2 = LSlinha2+LEFT((LSlnaux+SPACE(42)),41)
				ENDIF
				LSlinha3 = ;
				  "0Servico:"+;
					TRANSF(nota.TOTSERVICO,"@Z *,***,**9.99")+;
				  "Mercad.:"+;
					TRANSF(nota.TOTPRODUTO,"@Z *,***,**9.99")

				LSlinha4 = ""

				LSlinha5 = "0"+SPACE(40)
				LSlinha6 = "0"+SPACE(40)
				LSlinha7 = "0"+REPLICATE("_",40)
				LSlinha8 ="0Recebi Merc. e Serv.deste Cupom              "
				LSlinha8 =  LEFT(STRTRAN(LSlinha8," ","."),41)

				LSlinha9 = "<< REG:" + STR(nota.nota,7)+;
					   " OSI:"+STR(nota.referencia,7)+" >>"+SPACE(40)
				LSlinha9 = "0"+LEFT(LSlinha9,40)
				LSlinha9 =  STRTRAN(LSlinha9," ",".")

				LSlinha9 =  ""

				LSgeral  =   LSlinha0+LSlinha1+LSlinha7+LSlinha8+;
						 LSlinha2+;
						 LSlinha3+LSlinha4+LSlinha5+;
						 LSlinha6+LSlinha9
				IF LEN(LSgeral) > 327
					LSBKPGERAL = LSGERAL
					LSgeral = LEFT(LSgeral,327)
				ENDIF

				=FWRITE(LNecf,chr(27)+".12"+LSgeral+"}")
				LSstatus=ECFstatus()
				IF SUBS(LSstatus,7,1) = "E"
					LSgeral = LEFT(LSgeral,287)
					=FWRITE(LNecf,chr(27)+".12"+LSgeral+"}")
					LSstatus=ECFstatus()
					IF SUBS(LSstatus,7,1) = "E"
						LSgeral = LEFT(LSgeral,246)
						=FWRITE(LNecf,chr(27)+".12"+LSgeral+"}")
					ENDIF			
				ENDIF			
			CASE LSmarca = "BEMATEC"
				LSlinha0 = STRTRAN(LEFT(nota.nome+SPACE(48),48)," ",".")
				IF orcament.tp_parcela = 1  	&& PGTO A VISTA
				 	LSlinha1 =  ""
				ELSE
					SELE banco
					SEEK orcament.banco
				 	LSlinha1 =  ""
					if FOUND()
					 	LSlinha1 =  ;
					 		LEFT("COBRANCA: "+banco.nome+SPACE(48),48)
						LSlinha1 =  STRTRAN(LSlinha1," ",".")
					ENDIF
				ENDIF
				***********************************************************
				* =ECFinfdpl NAO PODE RECEBER PARAMETROS POR REFERENCIA
				*			OS DADOS SAO ALTERADOS NA FUNCAO
				***********************************************************
				SET UDFPARMS VALUE
				STORE "" TO wp_retorno
				LNnronota = nota.nota
*				=ECFinfdpl(LSmarca,orcament.empresa,orcament.valor,;
*						 LNnronota,orcament.vlr_ent,;
*						 orcament.tp_parcela,orcament.banco,;
*						 orcament.prazo)

				=ECFinfdpl(LSmarca,orcament.empresa,LNnronota)


				SET UDFPARMS REFERENCE		&& DEFAUT DO SYSTEMA
				********************************************************
				LNind = 0
				LSlinha2 = ""
				FOR LNind = 1 TO 12		&& NRO DE OCORRENCIAS DE WP_RETORNO
					IF EMPTY(wp_retorno(LNind))
						EXIT
					ENDIF
					IF LNind = 1
						LSlinha2	= "DUPLIATAS: "
					ENDIF
					LSlinha2	= LSlinha2+wp_retorno(LNind)+ " -- "
				NEXT
				LSlinha2 =  STRTRAN(LSlinha2," ",".")
				LSlinha3 = ;
				  "Servico.:"+;
					TRANSF(nota.TOTSERVICO,"@Z *,***,**9.99")+" --- "
				LSlinha4 = ;
				  "Mercadoria.:"+;
					TRANSF(nota.TOTPRODUTO,"@Z *,***,**9.99")+" --- "
				LSlinha5 = ""
				LSlinha6 = ""
				LSlinha7 = REPLICATE("_",48)
				LSlinha8 =" Recebi as Mercadorias e Servicos deste Cupom   "
				LSlinha8 =  STRTRAN(LSlinha8," ",".")
				LSlinha9 = "<< REG:" +STR(nota.nota,7)+;
					   " OSI:"+STR(nota.referencia,7)+" >>"
				LSlinha9 =  STRTRAN(LSlinha9," ",".")
				LSgeral  =   LSlinha0+LSlinha1+LSlinha7+LSlinha8+;
						 LSlinha2+;
						 LSlinha3+LSlinha4+LSlinha5+;
						 LSlinha6+LSlinha9

				LSgeral= LEFT(LSgeral+REPLICATE(".",492),484)
			    LSgeral= Chr(27) + Chr(251)+"34|"+LSgeral+"|"+ Chr(27)
				=FWrite(LNecf, LSgeral,LEN(LSgeral))
		ENDCASE
		LSstatus=ECFstatus()
		IF SUBS(LSstatus,7,1) = "E"
			WAIT WINDOW "A ECF Nao Acatou o FECHAMENTO DO CUPOM"
			WAIT WINDOW LSstatus
			RETURN(6)
		ENDIF			
		*--------- FIM - IMPRESSAO DO CUPOM FISCAL ---------------*
		SET DEVICE TO SCREEN
RETURN(0)



*       ÷ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ∑
*       ∫                                                         ∫
*       ∫ _3II0LH1MQ           ECFctrlimpcupom VALID              ∫
*       ∫                                                         ∫
*       ∫ Function Origin:                                        ∫
*       ∫                                                         ∫
*       ∫ From Platform:       MS-DOS                             ∫
*       ∫ From Screen:         ECF,     Record Number:   38       ∫
*       ∫ Variable:            ECFctrlimpcupom                    ∫
*       ∫ Called By:           VALID Clause                       ∫
*       ∫ Object Type:         Push Button                        ∫
*       ∫ Snippet Number:      33                                 ∫
*       ∫                                                         ∫
*       ”ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒΩ
*

FUNCTION _3ii0lh1mq     &&  ECFctrlimpcupom VALID
#REGION 1
return
*---------------------------------------------------------------*

FUNCTION ECFctrlimpcupom
	PARAMETER LNnfini,LNnffim,LNvalor,PrmVlrNota

	PRIVATE LFlag
	PRIVATE LSmarca, LNecf
	
	LSmarca = ECFGetPropVT("TIPOECF")
	LNecf   = ECFGetPropVT("CONEXAO")


	PRIVATE LSstatus
	LSstatus = ""

	SELE itnfstmp
	SET ORDER TO TAG nota
	GO TOP
	*--------- INICIO - IMPRESSAO DO CUPOM FISCAL -------------------*

	WAIT WINDOW "Imprimindo Cupom Fiscal X  " NOWAIT



	* 1.2	- Cabecalho do cupom	[ OPCAO SO NA SWEDA ]


	=ECFimpCabec(nota.operador,nota.serv_1,nota.NOTA)


	* 1.3	- Itens

	SELE itnfstmp
	
	DO WHILE !EOF() AND nota.empresa = itnfstmp.empresa ;
						AND  itnfstmp.nota <= LNnffim
						
		IF !(LEFT(itnfstmp.situacao,1) = "O")  && ALGO ERRADO NO ITEM
			SKIP
		ENDIF

		LSstatus =ECFimpItens(itnfstmp.codigo,itnfstmp.Qtde,;
		     itnfstmp.VlrVenda,;
			 itnfstmp.Descricao,itnfstmp.cst,;
			 itnfstmp.Aliq_Icms,itnfstmp.Empresa)
		IF SUBS(LSstatus,7,1) = "E"    && HOUVE ERRO
			EXIT
		ENDIF			
		SELE itnfstmp
		SKIP		
	ENDDO
	IF SUBS(LSstatus,7,1) = "E"    && HOUVE ERRO
		RETURN(LSstatus)
	ENDIF			

	*-------------------------------------------------------*
	*    Adiciona item "virtual" referente a despesa e ou
	* substituicao tributaria
	*-------------------------------------------------------*

	IF nota.icms_subs > 0
		LSstatus =ECFimpItens("91919191",1,;
		     nota.icms_subs,;
			 "ICMS Retido","6",;
			 17,1)
		IF SUBS(LSstatus,7,1) = "E"    && HOUVE ERRO
			RETURN(LSstatus)
		ENDIF
	ENDIF			
	
	IF nota.VLR_IPI > 0
		LSstatus =ECFimpItens("91919191",1,;
		     nota.VLR_IPI,;
			 "IPI........","6",;
			 17,1)
		IF SUBS(LSstatus,7,1) = "E"    && HOUVE ERRO
			RETURN(LSstatus)
		ENDIF
	ENDIF			

	*-------------------------------------------------------*


	* 1.4	- Totalizando

**	LSstatus = ECFimpTotal(NOTA.Tp_Parcela,LNValor)


	LSstatus = ECFimpTotal(orcament.Empresa,nota.Referencia,;
	                       PrmVlrNota, orcament.dt_fat)

	IF SUBS(LSstatus,7,1) = "E"    && HOUVE ERRO
		RETURN(LSstatus)
	ENDIF			
	

	* 1.5	- Informando CGC/CPF  e INSCRICAO

	LSstatus = ECFimpCnpj_Cpf(nota.Tp_pessoa,nota.Favorecido,;
						nota.Tp_Inscr,nota.Inscricao)

	IF SUBS(LSstatus,7,1) = "E"    && HOUVE ERRO
		RETURN(LSstatus)
	ENDIF			
	

	* 1.6	- Fechando o Cupom

		*<<<<<<<<<<<<<   MONTANDO MENSSAGEM FINAL >>>>>>>>>>>>>>>

    *
	*LSstatus = ECFimpFecha(nota.Nome,orcament.Tp_parcela,;
	*					orcament.Banco,nota.Nota,orcament.Empresa,;
	*					nota.TOTSERVICO,nota.TOTPRODUTO,;
	*					nota.Referencia)
	*		

	LSstatus = ECFimpFecha(orcament.Empresa,LNnfini,LNnffim)

			
	IF SUBS(LSstatus,7,1) = "E"    && HOUVE ERRO
		RETURN(LSstatus)
	ENDIF			
		*--------- FIM - IMPRESSAO DO CUPOM FISCAL ---------------*
	SET DEVICE TO SCREEN

RETURN("")



*       ÷ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ∑
*       ∫                                                         ∫
*       ∫ _3II0LH1N6           ECFimpCabec VALID                  ∫
*       ∫                                                         ∫
*       ∫ Function Origin:                                        ∫
*       ∫                                                         ∫
*       ∫ From Platform:       MS-DOS                             ∫
*       ∫ From Screen:         ECF,     Record Number:   39       ∫
*       ∫ Variable:            ECFimpCabec                        ∫
*       ∫ Called By:           VALID Clause                       ∫
*       ∫ Object Type:         Push Button                        ∫
*       ∫ Snippet Number:      34                                 ∫
*       ∫                                                         ∫
*       ”ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒΩ
*

FUNCTION _3ii0lh1n6     &&  ECFimpCabec VALID
#REGION 1
return
*---------------------------------------------------------------*

FUNCTION ECFimpCabec
	PARAMETER PrmOperador,PrmVendedor,PrmNota

	PRIVATE LSmarca, LNecf
	
	LSmarca = ECFGetPropVT("TIPOECF")
	LNecf   = ECFGetPropVT("CONEXAO")

	*--------- INICIO - IMPRESSAO DO CUPOM FISCAL -------------------*

	WAIT WINDOW "Imprimindo Cupom Fiscal X  " NOWAIT

	* 1.2	- Cabecalho do cupom	[ OPCAO SO NA SWEDA ]

	PRIVATE LSstatus
	LSstatus = "------ERRO"

	IF !("ERRO" $ ECFOpen())
		DO CASE
			CASE LSmarca = "TESTE"
				LSstatus = ""
			CASE LSmarca = "SWEDA"
				LSoper = STR(PrmOperador,4)
				LSvend = STR(PrmVendedor,4)
				LSosi  = STR(PrmNota,7)	&& REGISTRO EQUIV. A NOTA
				=FWRITE(LNecf,chr(27)+".0905"+LSvend+"  |01"+LSoper+"}")
				=FWRITE(LNecf,chr(27)+".0929"+LSosi+"}")
				LSstatus = ""
		CASE LSmarca = "BEMATEC"
			LScgccpf = ""

			LScgccpf = CHRTRAN(STR(CLIENC.cliente,14)," ","0")
			LScgccpf = LScgccpf+"000000000000000|"
			Linha1 = Chr(27) + Chr(251) + "00|"+LScgccpf+ Chr(27)
			Linha1 = Chr(27) + Chr(251) + "00|"+ Chr(27)
			=FWrite(LNecf, Linha1, Len(Linha1))
			LSstatus=ECFstatus()

		OTHERWISE
				LSstatus = ""
		ENDCASE
	ENDIF
	
RETURN(LSstatus)



*       ÷ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ∑
*       ∫                                                         ∫
*       ∫ _3II0LH1NA           ECFimpItens VALID                  ∫
*       ∫                                                         ∫
*       ∫ Function Origin:                                        ∫
*       ∫                                                         ∫
*       ∫ From Platform:       MS-DOS                             ∫
*       ∫ From Screen:         ECF,     Record Number:   40       ∫
*       ∫ Variable:            ECFimpItens                        ∫
*       ∫ Called By:           VALID Clause                       ∫
*       ∫ Object Type:         Push Button                        ∫
*       ∫ Snippet Number:      35                                 ∫
*       ∫                                                         ∫
*       ”ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒΩ
*

FUNCTION _3ii0lh1na     &&  ECFimpItens VALID
#REGION 1
return
*---------------------------------------------------------------*

FUNCTION ECFimpItens
PARAMETER PrmCodigo,PrmQtde,PrmVlrVenda,;
				PrmDescricao,Prmcst,PrmAliq_Icms,PrmEmpresa

	PRIVATE LSmarca, LNecf
	
	LSmarca = ECFGetPropVT("TIPOECF")
	LNecf   = ECFGetPropVT("CONEXAO")


	PRIVATE LSstatus
	LSstatus = "------ERRO"


	IF !("ERRO" $ ECFOpen())
		LScod 	=	PrmCodigo+SPACE(13)
		DO CASE
			CASE LSmarca = "SWEDA"
				LScod 	=	PrmCodigo+SPACE(13)
			CASE LSmarca = "BEMATEC"
				LScod 	=	PrmCodigo+SPACE(13)
			CASE LSmarca = "TESTE"
				LScod 	=	PrmCodigo+SPACE(13)
			CASE LSmarca = "INTEGRADOR"
				LScod 	=	PrmCodigo+SPACE(13)
		ENDCASE
        LScod = Left(LScod,13)


		DO CASE
			CASE LSmarca = "SWEDA"
			 	LSqtde	=	STR(PrmQtde,8,3)
				LSqtde	=	CHRTRAN(LSqtde,",","")
				LSqtde	=	CHRTRAN(LSqtde,".","")
				LSqtde	=	CHRTRAN(LSqtde," ","0")
			CASE LSmarca = "BEMATEC"
			 	LSqtde	=	STR(PrmQtde,8,3)
				LSqtde	=	CHRTRAN(LSqtde,",","")
				LSqtde	=	CHRTRAN(LSqtde,".","")
				LSqtde	=	CHRTRAN(LSqtde," ","0")
			CASE LSmarca = "TESTE"
			 	LSqtde	=	STR(PrmQtde,8,3)
				LSqtde	=	CHRTRAN(LSqtde,",","")
				LSqtde	=	CHRTRAN(LSqtde,".","")
				LSqtde	=	CHRTRAN(LSqtde," ","0")
			CASE LSmarca = "INTEGRADOR"
			 	LSqtde	=	STR(PrmQtde,10,3)
				LSqtde	=	CHRTRAN(LSqtde,".",",")
				LSqtde	=	CHRTRAN(LSqtde," ","0")
		ENDCASE

		*-- verificar a impressao de preco unit 0 na nf ---*

		m.LFimpdescto = .f.
		
		LSprun  =	IIF(Prmqtde=0,PrmVlrvenda,;
						PrmVlrvenda / PrmQtde)
		DO CASE
			CASE LSmarca = "SWEDA"
				LSprun	=	STR(LSprun,10,2)
				LSprun  =	CHRTRAN(LSprun,",","")	&& RETIRA VIRGULA
				LSprun  =	CHRTRAN(LSprun,".","")	&& RETIRA VIRGULA
				LSprun  =	CHRTRAN(LSprun," ","0")	&& PREENCHE DE 0
			CASE LSmarca = "BEMATEC"
				LSprun	=	STR(LSprun,9,2)
				LSprun  =	CHRTRAN(LSprun,",","")	&& RETIRA VIRGULA
				LSprun  =	CHRTRAN(LSprun,".","")	&& RETIRA VIRGULA
				LSprun  =	CHRTRAN(LSprun," ","0")	&& PREENCHE DE 0
			CASE LSmarca = "TESTE"
				LSprun	=	STR(LSprun,9,2)
				LSprun  =	CHRTRAN(LSprun,",","")	&& RETIRA VIRGULA
				LSprun  =	CHRTRAN(LSprun,".","")	&& RETIRA VIRGULA
				LSprun  =	CHRTRAN(LSprun," ","0")	&& PREENCHE DE 0
			CASE LSmarca = "INTEGRADOR"
				LSprun	=	STR(LSprun,15,2)
				LSprun  =	CHRTRAN(LSprun,".","")	&& IMPOE A VIRGULA
				LSprun  =	CHRTRAN(LSprun," ","0")	&& PREENCHE DE 0
		ENDCASE

		DO CASE
			CASE LSmarca = "SWEDA"
		 		LSprtot	=	STR(PrmVlrvenda,13,2)
				LSprtot	=	CHRTRAN(LSprtot,",","")	&& RETIRA VIRGULA
				LSprtot	=	CHRTRAN(LSprtot,".","")	&& RETIRA VIRGULA
				LSprtot	=	CHRTRAN(LSprtot," ","0")	&& PREENCHE DE 0
			CASE LSmarca = "BEMATEC"
		 		LSprtot	=	STR(PrmVlrvenda,9,2)
				LSprtot	=	CHRTRAN(LSprtot,",","")	&& RETIRA VIRGULA
				LSprtot	=	CHRTRAN(LSprtot,".","")	&& RETIRA VIRGULA
				LSprtot	=	CHRTRAN(LSprtot," ","0")	&& PREENCHE DE 0
			CASE LSmarca = "TESTE"
		 		LSprtot	=	STR(PrmVlrvenda,9,2)
				LSprtot	=	CHRTRAN(LSprtot,",","")	&& RETIRA VIRGULA
				LSprtot	=	CHRTRAN(LSprtot,".","")	&& RETIRA VIRGULA
				LSprtot	=	CHRTRAN(LSprtot," ","0")	&& PREENCHE DE 0
			CASE LSmarca = "INTEGRADOR"
		 		LSprtot	=	"nao se aplica"
		ENDCASE

		DO CASE
			CASE LSmarca = "SWEDA"
				LSdescr	=	LEFT(PrmDescricao+SPACE(24),24)		
			CASE LSmarca = "BEMATEC"
				LSdescr	=	LEFT(PrmDescricao+SPACE(29),29)		
			CASE LSmarca = "TESTE"
				LSdescr	=	LEFT(PrmDescricao+SPACE(29),29)		
			CASE LSmarca = "INTEGRADOR"
				LSdescr	=	LEFT(PrmDescricao+SPACE(50),50)		
		ENDCASE



		DO CASE
			CASE LSmarca = "SWEDA"
				LSdsct  = "0000"
			CASE LSmarca = "BEMATEC"
				LSdsct  = "0000"
			CASE LSmarca = "TESTE"
				LSdsct  = "0000"
			CASE LSmarca = "INTEGRADOR"
				LSdsct  = "000000000000,00"
		ENDCASE
	
	
		*------ INICIO - ENQUADRAMENTO DA TRIBUTACAO -----*
		LStrib = "99"	&& SE NAO  ENQUADRAR 99 PROVOCA ERRO PARA
							&& NAO DEIXAR REGISTRAR O ITEM
		DO CASE
			CASE LSmarca = "SWEDA"
				*<<<<<<<<<<<<  VALORES DE TESTE SWEDA >>>>>>>>>>>
			 	*LSqtde	=	STR(1,8,3)
				*LSqtde	=	CHRTRAN(LSqtde,",","")
				*LSqtde	=	CHRTRAN(LSqtde,".","")
				*LSqtde	=	CHRTRAN(LSqtde," ","0")

				****LSprun	=	STR(0.01,10,2)
				*LSprun  =	CHRTRAN(LSprun,",","")	&& RETIRA VIRGULA
				*LSprun  =	CHRTRAN(LSprun,".","")	&& RETIRA VIRGULA
				*LSprun  =	CHRTRAN(LSprun," ","0")	&& PREENCHE DE 0

	 			*LSprtot	=	STR(0.01,13,2)
				*LSprtot	=	CHRTRAN(LSprtot,",","")	&& RETIR VIRGULA
				*LSprtot	=	CHRTRAN(LSprtot,".","")	&& RETIRAIRGULA
				*LSprtot	=	CHRTRAN(LSprtot," ","0") && PREENCHE 0

				*<<<<<<<<<<<<<<<<<<<------->>>>>>>>>>>>>>>>>>>>>>
	
				DO CASE
					CASE PrmCst = "6"
						 LStrib = "F  "
					CASE PrmCst = "9"
						 LStrib = "T0 "  && imposto sobre servico
					CASE PrmCst = "0"
						 LSaliq = INT(PrmAliq_icms)
						 LSaliq = STR(LSaliq,2)
						 LSaliq = CHRTRAN(LSaliq," ","0")
						 DO CASE
							CASE LSaliq = "17"
								LStrib = "T01"								
							CASE LSaliq = "05"
								LStrib = "T02"								
							CASE LSaliq = "07"
								LStrib = "T03"								
							CASE LSaliq = "12"
								LStrib = "T04"
							CASE LSaliq = "25"
								LStrib = "T05"								
						 ENDCASE
					OTHERWISE
						 LStrib = "N  "
				ENDCASE
			CASE LSmarca = "BEMATEC"
				DO CASE
					CASE PrmCst = "6"
						 LStrib = "FF"			&& substituicao tributaria
					CASE PrmCst = "0"
						 LSaliq = INT(PrmAliq_icms)
						 LSaliq = STR(LSaliq,2)
						 LSaliq = CHRTRAN(LSaliq," ","0")
						 DO CASE
							CASE LSaliq = "17"
								LStrib = "01"								
							CASE LSaliq = "07"
								LStrib = "03"								
							CASE LSaliq = "12"
								LStrib = "04"								
							CASE LSaliq = "25"
								LStrib = "05"								
						 ENDCASE
					CASE PrmCst = "9"
						 LStrib = "02"     && issqun 5%
					CASE PrmCst = "2"   && REDUCAO NA  BASE DE CALC
						 LSaliq = INT(PrmAliq_icms)
						 LSaliq = STR(LSaliq,2)
						 LSaliq = CHRTRAN(LSaliq," ","0")
						 IF PrmEmpresa = 8	&& ARG TEM BASE REDUZIDA
						 	LSaliq = "12" && A REDUCAO => ALIQ DE 12%
						 ENDIF
						 DO CASE
							CASE LSaliq = "17"
								LStrib = "01"								
							CASE LSaliq = "07"
								LStrib = "03"								
							CASE LSaliq = "12"
								LStrib = "04"								
							CASE LSaliq = "25"
								LStrib = "05"								
						 ENDCASE
				 ENDCASE
			CASE LSmarca = "INTEGRADOR"
			 	LSaliq = PrmAliq_icms
				*--------------------------------------------------*
				DO CASE
					CASE PrmCst = "6"
						 LStrib = "Substituicao Tributaria"  && = a "FF"
					CASE PrmCst = "0"
						 LStrib = "Tributado"  && = "01/03/04/05"
					CASE PrmCst = "9"
						 LStrib = "Tributado ISS" && serviáo = issqn ???
					CASE PrmCst = "2"   && REDUCAO NA  BASE DE CALC
						 LStrib = "Tributado"  && = "01/03/04/05"
						 IF PrmEmpresa = 8	&& ARG TEM BASE REDUZIDA
						 	LSaliq = 12 && A REDUCAO => ALIQ DE 12%
						 ENDIF
					OTHERWISE
						 LStrib = "Isento"
				ENDCASE


				*-----------------------------------------------*
				*****  OPCAO PARA TESTE DO SERGIO NA AREA DE TESTE
				*-----------------------------------------------*
			    IF SYS(5) = "X:" AND nUsr = 1
				 	LSaliq = 0
				    LStrib = "Isento"
				ENDIF

				*-----------------------------------------------*

				LStrib = LStrib+SPACE(25)
				LStrib = LEFT(LStrib,25)

			 	LSaliq = INT(LSaliq)
			 	LSaliq = STR(LSaliq,5,2)
				LSaliq = CHRTRAN(LSaliq," ","0")
				LSaliq = CHRTRAN(LSaliq,".",",")

		ENDCASE
		*-------------------------------------------------*		

		DO CASE
			CASE LSmarca = "SWEDA"
				=FWRITE(LNecf,chr(27)+".01"+LScod+LSqtde+LSprun+;
						LSprtot+LSdescr+LStrib+"08}")
				LSstatus=ECFstatus()
			CASE LSmarca = "BEMATEC"
			     Linha1 = Chr(27) + Chr(251) + "09|"+;
			     		 LScod+"|"+LSdescr+"|"+LStrib+"|"+;
			     		 LSqtde+"|"+LSprun+"|"+LSdsct+"|"+ Chr(27)
				=FWrite(LNecf, Linha1, Len(Linha1))
				LSstatus=ECFstatus()
			CASE LSmarca = "INTEGRADOR"
				LScomando = "VENDE_ITEM="+LScod+LSdescr+;
							LStrib+LSqtde+LSprun+;
				            LSdsct+LSaliq
				LSstatus =  ECFEnviaCommandFile(LScomando)
				IF !("ERRO" $ LSstatus)
					LSstatus =  ECFBuscaCommandFile(LScomando,.t.)
				ENDIF
		ENDCASE
	ENDIF
	IF LSmarca = "TESTE"
				LSstatus = ""
	ENDIF	
	IF SUBS(LSstatus,7,1) = "E"    && HOUVE ERRO
		WAIT WINDOW "A ECF Nao Acatou o ITEM "+PrmDescricao
		WAIT WINDOW LSstatus
	ENDIF
	
RETURN(LSstatus)



*       ÷ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ∑
*       ∫                                                         ∫
*       ∫ _3II0LH1NI           ECFimpTotal VALID                  ∫
*       ∫                                                         ∫
*       ∫ Function Origin:                                        ∫
*       ∫                                                         ∫
*       ∫ From Platform:       MS-DOS                             ∫
*       ∫ From Screen:         ECF,     Record Number:   41       ∫
*       ∫ Variable:            ECFimpTotal                        ∫
*       ∫ Called By:           VALID Clause                       ∫
*       ∫ Object Type:         Push Button                        ∫
*       ∫ Snippet Number:      36                                 ∫
*       ∫                                                         ∫
*       ”ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒΩ
*

FUNCTION _3ii0lh1ni     &&  ECFimpTotal VALID
#REGION 1
return
*---------------------------------------------------------------*

FUNCTION ECFimpTotal
	PARAMETER PrmEmpresa,PrmReferencia,PrmVlrNota,PrmData

	PRIVATE LSmarca, LNecf
	
	LSmarca = ECFGetPropVT("TIPOECF")
	LNecf   = ECFGetPropVT("CONEXAO")


	PRIVATE  LNCheque1Vlr,LNCheque2Vlr,LNCheque3Vlr,;
				 LNDinheiroVlr, LNCartaoVlr,LNTicketVlr,LNDuplicatVlr,;
				 LNdsctPrct,LNdsctVlr,LNacrePrct,LNacreVlr

	store 0  to  LNCheque1Vlr,LNCheque2Vlr,LNCheque3Vlr,;
				 LNDinheiroVlr, LNCartaoVlr,LNTicketVlr,LNDuplicatVlr,;
				 LNdsctPrct,LNdsctVlr,LNacrePrct,LNacreVlr

	PRIVATE LSstatus
	LSstatus = "------ERRO"

	IF !("ERRO" $ ECFOpen())

		* 1.4	- Totalizando

		*-----------------------------------------------------------*
		* 	Operacionalmente o cartao foi desmembrado e varias formas
		* mas para impressora todas sao sitetizadas no registro 3
		* nota.forma_pgto >= 4  sao cartao
		*
		*  A tabela abaixo encontra-se registrada em TAB002 (PRC)
		*
		* PrmTp_Parcela =  1 => A Vista
		* PrmTp_Parcela =  2 => Parcelado cheque
		* PrmTp_Parcela =  3 => Parcelado duplicata
		* PrmTp_Parcela =  4 => Parcelado Cartao
		* PrmTp_Parcela =  5 => Cartao a Vista
		*
		*  A tabela abaixo encontra-se registrada em TAB002
		*										(FPG=FORMAS PGTO)
		*
		* LNforma_pg = 1  => Dinheiro
		* LNforma_pg = 2  => Cheque
		* LNforma_pg = 3  => Duplicata
		* LNforma_pg = 4  => Parc.CartaoDuplicata
		* LNforma_pg = 5  => Cartao de credito
		*
		*-----------------------------------------------------------*
		************************************************************


		IF (PrmEmpresa = 6 AND PrmData >= {01.11.2004}) or nUsr = 1
			  LNCheque1Vlr = 0
			  LNDinheiroVlr = PrmVlrNota
			  LNCartaoVlr   = 0
			  LNDuplicatVlr = 0
		ELSE
			=W_DEFPROC("ORCAMENT.SPR")
			=ORVlr_e_FormPgto(PrmEmpresa,;
						  PrmReferencia,;
						  LNCheque1Vlr,;
						  LNDinheiroVlr,;
						  LNCartaoVlr,;
						  LNDuplicatVlr)
		ENDIF


		LNCheque1Vlr=STR(LNCheque1Vlr,13,2)
		LNCheque1Vlr=CHRTRAN(LNCheque1Vlr,",","") && RETIRA VIRGULA
		LNCheque1Vlr=CHRTRAN(LNCheque1Vlr,".","") && RETIRA PONTO
		LNCheque1Vlr=CHRTRAN(LNCheque1Vlr," ","0") && PREENCHE DE 0


		LNDinheiroVlr=STR(LNDinheiroVlr,13,2)
		LNDinheiroVlr=CHRTRAN(LNDinheiroVlr,",","")
		LNDinheiroVlr=CHRTRAN(LNDinheiroVlr,".","")
		LNDinheiroVlr=CHRTRAN(LNDinheiroVlr," ","0")


		LNCartaoVlr=STR(LNCartaoVlr,13,2)
		LNCartaoVlr=CHRTRAN(LNCartaoVlr,",","")
		LNCartaoVlr=CHRTRAN(LNCartaoVlr,".","")
		LNCartaoVlr=CHRTRAN(LNCartaoVlr," ","0")

		LNDuplicatVlr=STR(LNDuplicatVlr,13,2)
		LNDuplicatVlr=CHRTRAN(LNDuplicatVlr,",","")
		LNDuplicatVlr=CHRTRAN(LNDuplicatVlr,".","")
		LNDuplicatVlr=CHRTRAN(LNDuplicatVlr," ","0")



		************************************************************

		DO CASE
			CASE LSmarca = "TESTE"
				LSstatus = ""
			CASE LSmarca = "SWEDA"
				*<<<<<<<<<<<<  VALORES DE TESTE SWEDA >>>>>>>>>>>
				*LSvalor	=	CHRTRAN(LSvalor,",","")	&& RETIRA VIRGULA
				*LSvalor	=	CHRTRAN(LSvalor,".","")		&& RETIRA PONTO
				*LSvalor	=	CHRTRAN(LSvalor," ","0")	&& PREENCHE DE 0
				*<<<<<<<<<<<< ----------------------- >>>>>>>>>>>
				=FWRITE(LNecf,chr(27)+".10"+LSmodpg+LSvalor+"}")
				LSstatus=ECFstatus()
			CASE LSmarca = "BEMATEC"
		    	***  INICIA FECHAMENTO COM FORMA DE PGTO ***
			     Linha1 = Chr(27) + Chr(251) + "32|A|0000|"+ Chr(27)
				 =FWrite(LNecf, Linha1, Len(Linha1))
				 LSstatus=ECFstatus()
				 IF SUBS(LSstatus,7,1) <> "E"
					 && EFETUA FORMA DE PAGAMENTO

					 IF VAL(LNDinheiroVlr) > 0
					     Linha1 = Chr(27) + Chr(251) + "72|"+;
				     		 "01|00"+LNDinheiroVlr+"|"+Chr(27)
						 =FWrite(LNecf, Linha1, Len(Linha1))
					 ENDIF

					 IF VAL(LNCheque1Vlr) > 0
					     Linha1 = Chr(27) + Chr(251) + "72|"+;
				     		 "02|00"+LNCheque1Vlr+"|"+Chr(27)
						 =FWrite(LNecf, Linha1, Len(Linha1))
					 ENDIF
					
					 IF VAL(LNDuplicatVlr) > 0
					     Linha1 = Chr(27) + Chr(251) + "72|"+;
				     		 "03|00"+LNDuplicatVlr+"|"+Chr(27)
						 =FWrite(LNecf, Linha1, Len(Linha1))
					 ENDIF
					
					 IF VAL(LNCartaoVlr) > 0
					     Linha1 = Chr(27) + Chr(251) + "72|"+;
				     		 "04|00"+LNCartaoVlr+"|"+Chr(27)
						 =FWrite(LNecf, Linha1, Len(Linha1))
					 ENDIF

					 LSstatus=ECFstatus()
				 ENDIF
			CASE LSmarca = "INTEGRADOR"
				LSstatus=" " && A TOTALIZACAO ESTA INCLUIDA NO COMANDO DE
							 && FECHAMENTO
					
		ENDCASE
	ENDIF
	
	IF SUBS(LSstatus,7,1) = "E"    && HOUVE ERRO
		WAIT WINDOW "A ECF Nao Acatou a TOTALIZACAO DO CUPOM"
		WAIT WINDOW LSstatus
	ENDIF
	
RETURN(LSstatus)



*       ÷ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ∑
*       ∫                                                         ∫
*       ∫ _3II0LH1NP           ECFimpCnpj_Cpf VALID               ∫
*       ∫                                                         ∫
*       ∫ Function Origin:                                        ∫
*       ∫                                                         ∫
*       ∫ From Platform:       MS-DOS                             ∫
*       ∫ From Screen:         ECF,     Record Number:   42       ∫
*       ∫ Variable:            ECFimpCnpj_Cpf                     ∫
*       ∫ Called By:           VALID Clause                       ∫
*       ∫ Object Type:         Push Button                        ∫
*       ∫ Snippet Number:      37                                 ∫
*       ∫                                                         ∫
*       ”ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒΩ
*

FUNCTION _3ii0lh1np     &&  ECFimpCnpj_Cpf VALID
#REGION 1
return
*---------------------------------------------------------------*

FUNCTION ECFimpCnpj_Cpf
	PARAMETER PrmTp_pessoa,PrmFavorecido,PrmTp_Inscr,PrmInscricao

	PRIVATE LSmarca, LNecf
	
	LSmarca = ECFGetPropVT("TIPOECF")
	LNecf   = ECFGetPropVT("CONEXAO")


	PRIVATE LSstatus
	LSstatus = ""
	* 1.5	- Informando CGC/CPF  e INSCRICAO


	IF !("ERRO" $ ECFOpen())
		DO CASE
			CASE LSmarca = "SWEDA"
				IF PrmTp_pessoa = 1
					LScgc = "01"+;
						TRANSFORM(STR(PrmFavorecido,14),;
									"@R 99.999.999/9999.99")+SPACE(12)
				ELSE
					LScgc = "02"+;
						TRANSFORM(STR(PrmFavorecido,14),;
									"@R 999.999.999.999-99")+SPACE(12)
				ENDIF
				=FWRITE(LNecf,chr(27)+".060"+LScgc+"}")
				LSstatus=ECFstatus()
				IF SUBS(LSstatus,7,1) <> "E"
					IF PrmTp_inscr = 1
						LScgc = "03"+PrmInscricao
						=FWRITE(LNecf,chr(27)+".060"+LScgc+"}")
						LSstatus=ECFstatus()
						IF SUBS(LSstatus,7,1) <> "E"
							SET DEVICE TO SCREEN
							WAIT WINDOW LSstatus
						ENDIF
					ENDIF			
				ENDIF
		ENDCASE
	ENDIF
	
	IF SUBS(LSstatus,7,1) = "E"    && HOUVE ERRO
		WAIT WINDOW "A ECF Nao Acatou Impressao CNPJ/CPF"
		WAIT WINDOW LSstatus
	ENDIF
	
RETURN(LSstatus)



*       ÷ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ∑
*       ∫                                                         ∫
*       ∫ _3II0LH1NT           ECFimpFecha VALID                  ∫
*       ∫                                                         ∫
*       ∫ Function Origin:                                        ∫
*       ∫                                                         ∫
*       ∫ From Platform:       MS-DOS                             ∫
*       ∫ From Screen:         ECF,     Record Number:   43       ∫
*       ∫ Variable:            ECFimpFecha                        ∫
*       ∫ Called By:           VALID Clause                       ∫
*       ∫ Object Type:         Push Button                        ∫
*       ∫ Snippet Number:      38                                 ∫
*       ∫                                                         ∫
*       ”ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒΩ
*

FUNCTION _3ii0lh1nt     &&  ECFimpFecha VALID
#REGION 1
return
*---------------------------------------------------------------*

FUNCTION ECFimpFecha
	PARAMETER 	PrmEmpresa,PrmNfIni,PrmNfFim

	PRIVATE  LNCheque1Vlr,LNCheque2Vlr,LNCheque3Vlr,;
				 LNDinheiroVlr, LNCartaoVlr,LNTicketVlr,LNDuplicatVlr,;
				 LNdsctPrct,LNdsctVlr,LNacrePrct,LNacreVlr

	PRIVATE LSmarca, LNecf
	
	LSmarca = ECFGetPropVT("TIPOECF")
	LNecf   = ECFGetPropVT("CONEXAO")


	SELE nota
	SET ORDER TO TAG NOTA
	SEEK STR(PrmEmpresa,3)+STR(PrmNfIni,7)

	PRIVATE  PrmNome,PrmTp_parcela,PrmBanco,PrmNota,;
			PrmTOTSERVICO,PrmTOTPRODUTO,PrmReferencia

	PrmNome        = nota.Nome
	PrmTp_parcela  = nota.Tp_parcela
	PrmBanco       = nota.Banco
	PrmNota        = nota.Nota
	PrmEmpresa	   = PrmEmpresa
	PrmReferencia  = nota.Referencia
	PrmTOTSERVICO  = 0
	PrmTOTPRODUTO  = 0
	LNacreVlr      = 0


	DO WHILE !EOF() AND nota.nota <= PrmNfFim
		PrmTOTSERVICO  = PrmTOTSERVICO + nota.TOTSERVICO
		PrmTOTPRODUTO  = PrmTOTPRODUTO + nota.TOTPRODUTO
	    **LNacreVlr  = LNacreVlr + nota.icms_subs + nota.vlr_ipi
		SKIP
	ENDDO


	PRIVATE LSstatus
	LSstatus = "------ERRO"

	STORE 0 TO LNCheque1Vlr,LNCheque2Vlr,LNCheque3Vlr,;
				 LNDinheiroVlr, LNCartaoVlr, LNTicketVlr,LNDuplicatVlr,;
				 LNdsctPrct,LNdsctVlr,LNacrePrct

	* 1.6	- Fechando o Cupom

		*<<<<<<<<<<<<<   MONTANDO MENSSAGEM FINAL >>>>>>>>>>>>>>>
	IF !("ERRO" $ ECFOpen())
		DO CASE
			CASE LSmarca = "TESTE"
				LSstatus = ""
			CASE LSmarca = "SWEDA"
				LSlinha0 = "0"+STRTRAN(LEFT(PrmNome+SPACE(40),40)," ",".")

				IF Prmtp_parcela = 1  	&& PGTO A VISTA
				 	LSlinha1 =  ""
				ELSE
					SELE banco
					SEEK PrmBanco
				 	LSlinha1 =  ""
					IF FOUND()
					 	LSlinha1 =  "0"+;
					 		LEFT("COBRANCA:"+banco.nome+SPACE(40),40)
							LSlinha1 =  STRTRAN(LSlinha1," ",".")
					ENDIF
				ENDIF
				***********************************************************
				* =ECFinfdpl NAO PODE RECEBER PARAMETROS POR REFERENCIA
				*			OS DADOS SAO ALTERADOS NA FUNCAO
				***********************************************************
				SET UDFPARMS VALUE
				STORE "" TO wp_retorno
				LNnronota = PrmNota


				=ECFinfdpl(PrmEmpresa,LNnronota, LSmarca, LNecf)

				SET UDFPARMS REFERENCE		&& DEFAUT DO SYSTEMA
				********************************************************
				LNind = 0
				LSlinha2 = ""
				LSlnaux  = ""
				FOR LNind = 1 TO 12		&& NRO DE OCORRENCIAS DE WP_RETORNO
					IF EMPTY(wp_retorno(LNind))
						EXIT
					ENDIF
					IF LNind = 1
						LSlnaux		= "0Dupl.:"
					ENDIF
	
					IF LEN(LSlnaux)	>= 41	&& CHEGOU PROX. DO LIMITE 40
											&& OU 2 DUPLIC POR LINHA
						LSlinha2 = LSlinha2+LEFT(LSlnaux,41)
						LSlnaux  = "0"+SUBS(LSlnaux,42)
					ENDIF

					LSlnaux	= LSlnaux+wp_retorno(LNind)
				NEXT

				IF LEN(LSlnaux)	>  1	&& TEM DADOS DE DUPLICATA
					LSlinha2 = LSlinha2+LEFT((LSlnaux+SPACE(42)),41)
				ENDIF
				LSlinha3 = ;
				  "0Servico:"+;
					TRANSF(PrmTOTSERVICO,"@Z *,***,**9.99")+;
				  "Mercad.:"+;
					TRANSF(PrmTOTPRODUTO,"@Z *,***,**9.99")
				LSlinha4 = ""
	
				LSlinha5 = "0"+SPACE(40)
				LSlinha6 = "0"+SPACE(40)
				LSlinha7 = "0"+REPLICATE("_",40)
				LSlinha8 ="0Recebi Merc. e Serv.deste Cupom              "
				LSlinha8 =  LEFT(STRTRAN(LSlinha8," ","."),41)

				LSlinha9 = "<< REG:" + STR(PrmNota,7)+;
					   " OSI:"+STR(PrmReferencia,7)+" >>"+SPACE(40)
				LSlinha9 = "0"+LEFT(LSlinha9,40)
				LSlinha9 =  STRTRAN(LSlinha9," ",".")

				LSlinha9 =  ""

				LSgeral  =   LSlinha0+LSlinha1+LSlinha7+LSlinha8+;
						 LSlinha2+;
						 LSlinha3+LSlinha4+LSlinha5+;
						 LSlinha6+LSlinha9
				IF LEN(LSgeral) > 327
					LSBKPGERAL = LSGERAL
					LSgeral = LEFT(LSgeral,327)
				ENDIF

				=FWRITE(LNecf,chr(27)+".12"+LSgeral+"}")
				LSstatus=ECFstatus()
				IF SUBS(LSstatus,7,1) = "E"
					LSgeral = LEFT(LSgeral,287)
					=FWRITE(LNecf,chr(27)+".12"+LSgeral+"}")
					LSstatus=ECFstatus()
					IF SUBS(LSstatus,7,1) = "E"
						LSgeral = LEFT(LSgeral,246)
						=FWRITE(LNecf,chr(27)+".12"+LSgeral+"}")
					ENDIF			
				ENDIF			
				LSstatus=ECFstatus()
			CASE LSmarca = "BEMATEC"
				LSlinha0 = STRTRAN(LEFT(PrmNome+SPACE(48),48)," ",".")
				IF Prmtp_parcela = 1  	&& PGTO A VISTA
				 	LSlinha1 =  ""
				ELSE
					SELE banco
					SEEK PrmBanco
				 	LSlinha1 =  ""
					if FOUND()
					 	LSlinha1 =  ;
					 		LEFT("COBRANCA: "+banco.nome+SPACE(48),48)
						LSlinha1 =  STRTRAN(LSlinha1," ",".")
					ENDIF
				ENDIF
				***********************************************************
				* =ECFinfdpl NAO PODE RECEBER PARAMETROS POR REFERENCIA
				*			OS DADOS SAO ALTERADOS NA FUNCAO
				***********************************************************
				SET UDFPARMS VALUE
				STORE "" TO wp_retorno
				LNnronota = PrmNota

				=ECFinfdpl(PrmEmpresa,LNnronota, LSmarca, LNecf)

				SET UDFPARMS REFERENCE		&& DEFAUT DO SYSTEMA
				********************************************************
				LNind = 0
				LSlinha2 = ""
				FOR LNind = 1 TO 12		&& NRO DE OCORRENCIAS DE WP_RETORNO
					IF EMPTY(wp_retorno(LNind))
						EXIT
					ENDIF
					IF LNind = 1
						LSlinha2	= "DUPLIATAS: "
					ENDIF
					LSlinha2	= LSlinha2+wp_retorno(LNind)+ " -- "
				NEXT
				LSlinha2 =  STRTRAN(LSlinha2," ",".")
				LSlinha3 = ;
				  "Srvco:"+;
					TRANSF(PrmTOTSERVICO,"@Z *****9.99")+"--"
				LSlinha4 = ;
				  "Produto:"+;
					TRANSF(PrmTOTPRODUTO,"@Z *****9.99")+"--"
				LSlinha5 = ""
				LSlinha6 = ""
				LSlinha7 = REPLICATE("_",48)
				LSlinha8 =" Recebi as Mercadorias e Servicos deste Cupom   "
				LSlinha8 =  STRTRAN(LSlinha8," ",".")
				LSlinha9 = "<< REG:" +STR(PrmNota,7)+;
					   " OSI:"+STR(PrmReferencia,7)+" >>"
				LSlinha9 =  STRTRAN(LSlinha9," ",".")
				LSgeral  =   LSlinha0+LSlinha1+LSlinha7+LSlinha8+;
						 LSlinha2+;
						 LSlinha3+LSlinha4+LSlinha5+;
						 LSlinha6+LSlinha9
	
				LSgeral= LEFT(LSgeral+REPLICATE(".",492),484)
			    LSgeral= Chr(27) + Chr(251)+"34|"+LSgeral+"|"+ Chr(27)
				=FWrite(LNecf, LSgeral,LEN(LSgeral))
				LSstatus=ECFstatus()

			CASE LSmarca = "INTEGRADOR"
				LSlinha0 = STRTRAN(LEFT(PrmNome+SPACE(48),25)," ",".")
				IF Prmtp_parcela = 1  	&& PGTO A VISTA
				 	LSlinha1 =  ""
				ELSE
					SELE banco
					SEEK PrmBanco
				 	LSlinha1 =  ""
					if FOUND()
					 	LSlinha1 =  ;
					 		LEFT("Cobrar:"+banco.nome+SPACE(48),20)
						LSlinha1 =  STRTRAN(LSlinha1," ",".")
					ENDIF
				ENDIF
				***********************************************************
				SET UDFPARMS VALUE
				STORE "" TO wp_retorno
				LNnronota = PrmNota

				=ECFinfdpl(PrmEmpresa,LNnronota, LSmarca, LNecf)

				SET UDFPARMS REFERENCE		&& DEFAUT DO SYSTEMA
				********************************************************
				LNind = 0
				LSlinha2 = ""
				FOR LNind = 1 TO 12		&& NRO DE OCORRENCIAS DE WP_RETORNO

					IF EMPTY(wp_retorno(LNind))
						EXIT
					ENDIF
					IF LNind = 1
						LSlinha2	= "Parcelas:"
					ENDIF
					LSlinha2	= LSlinha2+wp_retorno(LNind)+ "--"
				NEXT
				LSlinha2 =  STRTRAN(LSlinha2," ",".")
				LSlinha3 = ;
				  "Srvco:"+;
					TRANSF(PrmTOTSERVICO,"@Z ******9.99")+"-"
				LSlinha4 = ;
				  "Produto:"+;
					TRANSF(PrmTOTPRODUTO,"@Z ******9.99")+"-"
				LSlinha5 = ""
				LSlinha6 = ""
				LSlinha7 = REPLICATE("_",48)
				LSlinha7 = REPLICATE("_",4)
				LSlinha8 ="Recebi Mercadorias e Servicos deste Cupom / "
				LSlinha8 =  STRTRAN(LSlinha8," ",".")
				LSlinha9 = "<REG:" +STR(PrmNota,7)+;
					   " OSI:"+STR(PrmReferencia,7)+">"
				LSlinha9 =  STRTRAN(LSlinha9," ",".")
				LSgeral  =   LSlinha0+LSlinha1+LSlinha7+LSlinha8+;
						 LSlinha2+;
						 LSlinha3+LSlinha4+LSlinha5+;
						 LSlinha6+LSlinha9
	
				LSgeral= LEFT(LSgeral+REPLICATE(".",492),484)


				=W_DEFPROC("ORCAMENT.SPR")
				=ORVlr_e_FormPgto(PrmEmpresa,;
						  PrmReferencia,;
						  LNCheque1Vlr,;
						  LNDinheiroVlr,;
						  LNCartaoVlr,;
						  LNDuplicatVlr)


				LNCheque1Vlr=STR(LNCheque1Vlr,15,2)
				LNCheque1Vlr=CHRTRAN(LNCheque1Vlr,".","") && IMPOE A VIRGULA
				LNCheque1Vlr=CHRTRAN(LNCheque1Vlr," ","0") && PREENCHE DE 0

				LNCheque2Vlr=STR(0,15,2)
				LNCheque2Vlr=CHRTRAN(LNCheque2Vlr,".","") && IMPOE A VIRGULA
				LNCheque2Vlr=CHRTRAN(LNCheque2Vlr," ","0") && PREENCHE DE 0

				LNCheque3Vlr=STR(0,15,2)
				LNCheque3Vlr=CHRTRAN(LNCheque3Vlr,".","") && IMPOE A VIRGULA
				LNCheque3Vlr=CHRTRAN(LNCheque3Vlr," ","0") && PREENCHE DE 0

				LNDinheiroVlr=STR(LNDinheiroVlr,15,2)
				LNDinheiroVlr=CHRTRAN(LNDinheiroVlr,".","")
				LNDinheiroVlr=CHRTRAN(LNDinheiroVlr," ","0")


				LNCartaoVlr=STR(LNCartaoVlr,15,2)
				LNCartaoVlr=CHRTRAN(LNCartaoVlr,".","")
				LNCartaoVlr=CHRTRAN(LNCartaoVlr," ","0")

				LNDuplicatVlr=STR(LNDuplicatVlr,15,2)
				LNDuplicatVlr=CHRTRAN(LNDuplicatVlr,".","")
				LNDuplicatVlr=CHRTRAN(LNDuplicatVlr," ","0")
				
				LNdsctPrct=STR(0,6,2)
				LNdsctPrct=CHRTRAN(LNdsctPrct,".","")
				LNdsctPrct=CHRTRAN(LNdsctPrct," ","0")

				LNdsctVlr=STR(0,15,2)
				LNdsctVlr=CHRTRAN(LNdsctVlr,".","")
				LNdsctVlr=CHRTRAN(LNdsctVlr," ","0")

				LNacrePrct=STR(0,6,2)
				LNacrePrct=CHRTRAN(LNacrePrct,".","")
				LNacrePrct=CHRTRAN(LNacrePrct," ","0")

				LNacreVlr=STR(LNacreVlr,15,2)
				LNacreVlr=CHRTRAN(LNacreVlr,".","")
				LNacreVlr=CHRTRAN(LNacreVlr," ","0")


				LScomando = "FECHA_CUPOM="+;
							LNdsctPrct+LNdsctVlr+LNacrePrct+LNacreVlr+;
							LNCheque1Vlr+LNCheque2Vlr+LNCheque3Vlr+;
						    LNDinheiroVlr+LNCartaoVlr+LNDuplicatVlr+;
						    LSgeral

                LSbkpComando = LScomando
                LSstatus =  ECFEnviaCommandFile(LSbkpComando)
                IF !("ERRO" $ LSstatus)
                   LFinterrompe = .f.
                   do while  LFinterrompe = .f.
                      LSstatus =  ECFBuscaCommandFile(LScomando,.t.)
                      IF SUBS(LSstatus,7,1) = "E"    && HOUVE ERRO
                        IF fox_alert("Operacao nao concluida. Tentar No"+;
                                     "vamente?")
                          LSstatus =  ECFEnviaCommandFile(LSbkpComando)
                        ELSE
                          LFinterrompe = .T.
                        ENDIF
                      ELSE
                        LFinterrompe = .T.
                      ENDIF
                  enddo
                ENDIF
		ENDCASE
	ENDIF
	
	IF SUBS(LSstatus,7,1) = "E"    && HOUVE ERRO
		WAIT WINDOW "A ECF Nao Acatou o FECHAMENTO DO CUPOM"
		WAIT WINDOW LSstatus
	ENDIF
	
RETURN(LSstatus)



*       ÷ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ∑
*       ∫                                                         ∫
*       ∫ _3II0LH1O3           ECFinfdpl VALID                    ∫
*       ∫                                                         ∫
*       ∫ Function Origin:                                        ∫
*       ∫                                                         ∫
*       ∫ From Platform:       MS-DOS                             ∫
*       ∫ From Screen:         ECF,     Record Number:   44       ∫
*       ∫ Variable:            ECFinfdpl                          ∫
*       ∫ Called By:           VALID Clause                       ∫
*       ∫ Object Type:         Push Button                        ∫
*       ∫ Snippet Number:      39                                 ∫
*       ∫                                                         ∫
*       ”ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒΩ
*

FUNCTION _3ii0lh1o3     &&  ECFinfdpl VALID
#REGION 1
return
*---------------------------------------------------------------*

FUNCTION ECFinfdpl	
	PARAMETERS	LNemp, LNnota, LSmarca, LNecf

	PRIVATE LSstatus
	LSstatus = ""


	=W_DEFPROC("rotinas.spr")
	*------------------------------------------*
	PRIVATE LNdup,LSalias
	LSalias = ALIAS()

	*----------------------------------------------------------------*
	*  O numero da duplicata e composto do numero da nota acrescido de
	* dois digitos para identicar a filiar e a ordem da duplicata
	* => (* 100) cria um numero imediatamento iferior a 1a duplicata
	*----------------------------------------------------------------*

	SELE duplicat
	SET ORDER TO TAG doc
	LNdup	= LNnota * 100		
	SET NEAR ON
	SEEK STR(LNemp,3)+STR(LNdup,9)
	SET NEAR OFF
	LNind 		= 1			&& INDICE DO VETOR DE ROTORNO


	DO WHILE !EOF() AND LNnota = duplicat.nota
		LSdt  =  STR(DAY(duplicat.dt_venc),2)+"/";
			   	+STR(MONTH(duplicat.dt_venc),2)
		LSdt  = CHRTRAN(LSdt," ","0")
		
		DO CASE
			CASE LSmarca = "SWEDA"
				LStmp = ;
				  TRANSF(duplicat.vlr_doc,"@Z 999999.99")+"-"+LSdt+" ."
				LStmp = LStmp + SPACE(40)
				wp_retorno(LNind)	=  LEFT(LStmp,40)
			CASE LSmarca = "BEMATEC"
				LStmp = ;
				  TRANSF(duplicat.vlr_doc,"@Z 999999.99")+"-"+LSdt+" "
				wp_retorno(LNind)	=  LStmp
			CASE LSmarca = "INTEGRADOR"
				LStmp = ;
   				  TRANSF(duplicat.duplicata,"@Z 999999999")+"-"+;
				  TRANSF(duplicat.vlr_doc,"@Z 999999.99")+"-"+LSdt+" "
				wp_retorno(LNind)	=  LStmp
		ENDCASE

		LNind = LNind + 1
		SELE DUPLICAT
		SKIP
	ENDDO
	SELE &LSalias
RETURN(0)


*       ÷ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ∑
*       ∫                                                         ∫
*       ∫ _3II0LH1O7           ECFmapa VALID                      ∫
*       ∫                                                         ∫
*       ∫ Function Origin:                                        ∫
*       ∫                                                         ∫
*       ∫ From Platform:       MS-DOS                             ∫
*       ∫ From Screen:         ECF,     Record Number:   45       ∫
*       ∫ Variable:            ECFmapa                            ∫
*       ∫ Called By:           VALID Clause                       ∫
*       ∫ Object Type:         Push Button                        ∫
*       ∫ Snippet Number:      40                                 ∫
*       ∫                                                         ∫
*       ”ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒΩ
*

FUNCTION _3ii0lh1o7     &&  ECFmapa VALID
#REGION 1
return
*---------------------------------------------------------------*

FUNCTION ECFmapa				&& MAPA RESUMO DE CAIXA
	PARAMETER LSreducao

	PRIVATE LSmarca, LNecf
	PRIVATE LScomando


	
	LSmarca = ECFGetPropVT("TIPOECF")
	LNecf   = ECFGetPropVT("CONEXAO")


	PRIVATE LSstatus
	LSstatus = ""
	LScomando = ""



    */*/*/*/*/*/*/*//

	return(.T.)

    */*/*/*/*/*/*/*//


	PRIVATE LSalias, LFmapa
	LSalias = ALIAS()
	LFmapa  = .F.
	IF !USED("mapaecf")
		LFmapa = .T.
		IF ! NetUse("mapaecf")
			SELE &LSalias
			return(.F.)
		ENDIF
	ENDIF
	

	PRIVATE LFReturn
	LFReturn = .t.
	IF ("ERRO" $ ECFOpen())
		IF LFmapa   		&& .t. =>  DEVE SER FECHADA NA SAIDA
			=UP_fecha("mapaecf")
		ENDIF
		SELE &LSalias
		RETURN(.F.)
	ENDIF

	m.empresa 	= 	wp_empresa
	m.data		=	wp_dtoper

	DO CASE
		CASE LSmarca = "SWEDA"
			m.ecf 			= 1 			&& NUM. DO ECF
		
			******* INTERPRETACAO DA LEITURA DOS TOTAIS **********
*------------------------------------------>> tipo=1 Tot. da trib=1. 17.00
			=FWRITE(LNecf,chr(27)+".271}")
			
			LSstatus = FREAD(LNecf,128)
			
			m.gt_final		= INT(VAL(SUBS(LSSTATUS,22,15)))/100
												&& Grande Total final
			m.cancela	 	= INT(VAL(SUBS(LSstatus,073,12)))/100
												&& Total de Canc
			m.desconto	 	= INT(VAL(SUBS(LSstatus,093,12)))/100
												&& Total de Desc
			m.ctrreducao 	= INT(VAL(SUBS(LSstatus,041,44)))/100
												&& Nß de reduá‰es
			m.tot_liq		= INT(VAL(SUBS(LSstatus,105,12)))/100
												&& total liquido do dia
			m.gt_inicial    = m.gt_final - m.tot_liq
												&& Grande Total inicial
			
*------------------------------------------>> tipo=2 Tot. da trib=1. 17.00
			
			=FWRITE(LNecf,chr(27)+".272}")			
			LSstatus 		= FREAD(LNecf,128)		
	        LSidenttrib1	= SUBS(LSstatus,90,3)	
			m.vlrisent		= VAL(SUBS(LSstatus,14,12))	
			m.vlrnaoincide	= VAL(SUBS(LSstatus,26,37))
			m.vlrsubst		= VAL(SUBS(LSstatus,38,12))
	        m.bs_icm17		= VAL(SUBS(LSstatus,93,12))	
			
*------------------------------------------>> tipo=3 Tot. da trib=2. 05.00
			=FWRITE(LNecf,chr(27)+".273}")			
			LSstatus 		= FREAD(LNecf,128)			
	        LSidenttrib2	= SUBS(LSstatus,02,3)
            m.bs_icm5		= VAL(SUBS(LSstatus,05,12))	
			
*------------------------------------------>> tipo=3 Tot. da trib=3. 07.00
            =FWRITE(LNecf,chr(27)+".273}")			
			LSstatus 		= FREAD(LNecf,128)			
	        LSidenttrib3	= SUBS(LSstatus,17,3)
            m.bs_icm7		= VAL(SUBS(LSstatus,20,12))	
			
*------------------------------------------>> tipo=3 Tot. da trib=4. 12.00
            =FWRITE(LNecf,chr(27)+".273}")			
			LSstatus 		= FREAD(LNecf,128)			
	        LSidenttrib4	= SUBS(LSstatus,32,3)
            m.bs_icm12		= VAL(SUBS(LSstatus,35,12))	
			
*------------------------------------------>> tipo=3 Tot. da trib=5. 25.00
            =FWRITE(LNecf,chr(27)+".273}")				
			LSstatus 		= FREAD(LNecf,128)			
	        LSidenttrib5	= SUBS(LSstatus,47,3)   	
	        m.bs_icm12		= VAL(SUBS(LSstatus,50,12))	
			
*------------------------------------------>> tipo=9 Serviáos
            =FWRITE(LNecf,chr(27)+".279}")			
			LSstatus 		= FREAD(LNecf,128)			
	        LSidenttrib9	= SUBS(LSstatus,52,4)
			m.cto_inicio	= SUBS(LSstatus,108,04)	    && Cupom Inicial
			m.cto_fim	 	= SUBS(LSstatus,108,04)		&& Cupom Final ??
            m.vlrservico	= INT(VAL(SUBS(LSstatus,56,12)))/100
			
*------------------------------------------>> gt_final = tot. liquido do dia
            =FWRITE(LNecf,chr(27)+".271}")			
			LSstatus 		= FREAD(LNecf,128)	
*           m.gt_final		= VAL(SUBS(LSstatus,105,12))
			
			m.vlrcontab     = m.gt_final - m.gt_inicial - ;
							  m.desconto - m.cancela
			
			IF LSreducao 	= "FAZ REDUCAO"
				=ECFz_letura(wp_dtoper)	
			ENDIF
			
		CASE LSmarca = "BEMATEC"
			Linha1  = Chr(27) + Chr(251) + "35|14|" + Chr(27)
			=FWrite(LNecf, Linha1, Len(Linha1))
			LSstatus 		= fread(LNecf,3)
			m.ecf 			= INT(VAL(fread(LNecf,4)))		&& NUM. DO ECF
			
			Linha1  		= Chr(27) + Chr(251) + "62|55|" + Chr(27)
			=FWrite(LNecf, Linha1, Len(Linha1))
			LSstatus 		= fread(LNecf,5)
			
			m.gt_inicial 	= INT(VAL(fread(LNecf,18))) / 100
          	
			LSstatus 		= fread(LNecf,548)				&& DESCARTE
			m.cto_inicio 	= INT(VAL(fread(LNecf,6))) + 1	&& CUPOM INICIAL
	*----------------------------------------------------------------------*
			Linha1  = Chr(27) + Chr(251) + "27|" + Chr(27)
			= FWrite(LNecf, Linha1, Len(Linha1))
			LSstatus 		= fread(LNecf,3)
			m.bs_icm17		= INT(VAL(fread(LNecf,14))) / 100
			m.vlrservico	= INT(VAL(fread(LNecf,14))) / 100
			m.bs_icm7		= INT(VAL(fread(LNecf,14))) / 100
			m.bs_icm12		= INT(VAL(fread(LNecf,14))) / 100
			m.bs_icm25		= INT(VAL(fread(LNecf,14))) / 100
			LSstatus 		= fread(LNecf,154)
			
			m.vlrisent		= INT(VAL(fread(LNecf,14))) / 100
			m.vlrnaoincide	= INT(VAL(fread(LNecf,14))) / 100
			m.vlrsubst		= INT(VAL(fread(LNecf,14))) / 100
			
			Linha1  		= Chr(27) + Chr(251) + "35|04|" + Chr(27)
			=FWrite(LNecf, Linha1, Len(Linha1))
			LSstatus 		= fread(LNecf,3)
			m.cancela	 	= INT(VAL(fread(LNecf,14))) / 100
			
			Linha1  		= Chr(27) + Chr(251) + "35|05|" + Chr(27)
			=FWrite(LNecf, Linha1, Len(Linha1))
			LSstatus 		= fread(LNecf,3)
			m.desconto	 	= INT(VAL(fread(LNecf,14))) / 100
			
			Linha1  		= Chr(27) + Chr(251) + "35|09|" + Chr(27)
			=FWrite(LNecf, Linha1, Len(Linha1))
			LSstatus 		= fread(LNecf,3)
			m.ctrreducao 	= INT(VAL(fread(LNecf,4)))
	*----------------------------------------------------------------*
			IF LSreducao 	= "FAZ REDUCAO"
				=ECFz_letura(wp_dtoper)	
			ENDIF
	*----------------------------------------------------------------*
			Linha1  		= Chr(27) + Chr(251) + "62|55|" + Chr(27)
			=FWrite(LNecf, Linha1, Len(Linha1))
			LSstatus 		= fread(LNecf,5)
			m.gt_final	 	= INT(VAL(fread(LNecf,18))) / 100
			
			m.vlrcontab     = m.gt_final - m.gt_inicial - ;
							  m.desconto - m.cancela
			LSstatus 		= fread(LNecf,548)				&& DESCARTE
			m.cto_fim	 	= INT(VAL(fread(LNecf,6))) - 1	&& CUPOM INICIAL
		CASE LSmarca = "INTEGRADOR"
			*---------------------------------------------------------*
			IF LSreducao 	= "FAZ REDUCAO"
				=ECFz_letura(wp_dtoper)
			ENDIF
			*-----------------------------------------------------------*
			LScomando = "REL_TIPO_60_MESTRE=***"
			IF !("ERRO" $ LSstatus)
				LSstatus =  ECFBuscaCommandFile(LScomando,.t.)
			ENDIF
			IF !("ERRO" $ LSstatus) AND FILE("C:RETORNOM.TXT")
			   	LNfile = FOPEN("C:RETORNOM.TXT")
		   	   	LSstring = Fgets(LNfile)
			   	DO WHILE !FEOF(LNfile)
					DO CASE
						CASE "Data de emiss„o...........:" $ LSstring
						   m.data   = subs(LSstring,43,10)
						   m.data   = chrtran(m.data,"/",".")
						   m.data   = ctod(m.data)
						CASE "N˙mero do equipamento.....:" $ LSstring
						   m.ecf   = subs(LSstring,49,4)
						CASE "COO inicial...............:"  $ LSstring
						   m.cto_inicio   = subs(LSstring,47,6)
						CASE "COO final.................:"  $ LSstring
						   m.cto_fim   = subs(LSstring,47,6)
						CASE "Contador de reduÁıes......:" $ LSstring
						   m.ctrreducao   = INT(VAL(subs(LSstring,49,4)))
						CASE "Venda Bruta...............:" $ LSstring
						   m.vd_bruta  = subs(LSstring,35,18)
						   m.vd_bruta  = CHRTRAN(m.vd_bruta,".","")
						   m.vd_bruta  = CHRTRAN(m.vd_bruta,",",".")
						   m.vd_bruta  = VAL(m.vd_bruta)
						CASE "Totalizador geral.........:" $ LSstring
						   m.gt_final  = subs(LSstring,35,18)
						   m.gt_final  = CHRTRAN(m.gt_final,".","")
						   m.gt_final  = CHRTRAN(m.gt_final,",",".")
						   m.gt_final  = VAL(m.gt_final)
					ENDCASE
				   	LSstring = Fgets(LNfile)
				ENDDO
				m.gt_inicial = m.gt_final - m.vd_bruta
			ENDIF

			
			LScomando = "REL_TIPO_60_ANALITICO=***"
			IF !("ERRO" $ LSstatus)
				LSstatus =  ECFBuscaCommandFile(LScomando,.t.)
			ENDIF
			IF !("ERRO" $ LSstatus) AND FILE("C:RETORNOA.TXT")
			   	LNfile = FOPEN("C:RETORNOA.TXT")
		   	   	LSstring = Fgets(LNfile)
			   	DO WHILE !FEOF(LNfile)
					DO CASE
						CASE "Cancelamentos.............:" $ LSstring
						   m.cancela   = subs(LSstring,35,18)
						   m.cancela   = CHRTRAN(m.cancela,".","")
						   m.cancela   = CHRTRAN(m.cancela,",",".")
						   m.cancela   = VAL(m.cancela)
						CASE "Descontos.................:" $ LSstring
						   m.desconto  = subs(LSstring,35,18)
						   m.desconto  = CHRTRAN(m.desconto,".","")
						   m.desconto  = CHRTRAN(m.desconto,",",".")
						   m.desconto  = VAL(m.desconto)
						CASE "I.........................:" $ LSstring
						   m.vlrisent  = subs(LSstring,35,18)
						   m.vlrisent  = CHRTRAN(m.vlrisent,".","")
						   m.vlrisent  = CHRTRAN(m.vlrisent,",",".")
						   m.vlrisent  = VAL(m.vlrisent)
						CASE "N.........................:" $ LSstring
						   m.vlrnaoinside  = subs(LSstring,35,18)
						   m.vlrnaoinside  = CHRTRAN(m.vlrnaoinside,".","")
						   m.vlrnaoinside  = CHRTRAN(m.vlrnaoinside,",",".")
						   m.vlrnaoinside  = VAL(m.vlrnaoinside)
						CASE "F.........................:" $ LSstring
						   m.vlrsubst      = subs(LSstring,35,18)
						   m.vlrsubst      = CHRTRAN(m.vlrsubst,".","")
						   m.vlrsubst      = CHRTRAN(m.vlrsubst,",",".")
						   m.vlrsubst      = VAL(m.vlrsubst)
						CASE "0700......................:" $ LSstring
						   m.bs_icm7      = subs(LSstring,35,18)
						   m.bs_icm7      = CHRTRAN(m.bs_icm7,".","")
						   m.bs_icm7      = CHRTRAN(m.bs_icm7,",",".")
						   m.bs_icm7      = VAL(m.bs_icm7)
						CASE "1200......................:" $ LSstring
						   m.bs_icm12      = subs(LSstring,35,18)
						   m.bs_icm12      = CHRTRAN(m.bs_icm12,".","")
						   m.bs_icm12      = CHRTRAN(m.bs_icm12,",",".")
						   m.bs_icm12      = VAL(m.bs_icm12)
						CASE "1700......................:" $ LSstring
						   m.bs_icm17      = subs(LSstring,35,18)
						   m.bs_icm17      = CHRTRAN(m.bs_icm17,".","")
						   m.bs_icm17      = CHRTRAN(m.bs_icm17,",",".")
						   m.bs_icm17      = VAL(m.bs_icm17)
						CASE "2500......................:" $ LSstring
						   m.bs_icm25      = subs(LSstring,35,18)
						   m.bs_icm25      = CHRTRAN(m.bs_icm25,".","")
						   m.bs_icm25      = CHRTRAN(m.bs_icm25,",",".")
						   m.bs_icm25      = VAL(m.bs_icm25)
					ENDCASE
				   	LSstring = Fgets(LNfile)
				ENDDO
				m.vlrcontab     = m.gt_final - m.gt_inicial - ;
							  m.desconto - m.cancela
			ENDIF


	*----------------------------------------------------------------*
	ENDC	
	SELE mapaecf
	SET ORDER TO TAG mapa
	
	*>>>>>>>>>>>>>>>>> LER ALIQUOTA
	* GRAVACAO PADRAO
	*-------------------------------------------------------
	m.aliquota = 17
	m.base_aliq= m.bs_icm17
	SEEK STR(m.empresa,3)+DTOS(m.data)+STR(m.ecf,4)+STR(m.aliquota,5,2)
	IF FOUND()
		=EDITHAND("REGRAVA")
 	 ELSE
		=EDITHAND("SAVE")
	ENDIF	
	STORE 0 TO CTO_INICIO ,CTO_FIM, GT_FINAL, GT_INICIAL, DESCONTO, ;
				CANCELA, VLRCONTAB,VLRISENT,VLRSUBST,VLRSERVICO,;
				VLROUTRO,CTRREDUCAO
	IF m.bs_icm7 > 0
		m.aliquota = 7
		m.base_aliq= m.bs_icm7
		SEEK STR(m.empresa,3)+DTOS(m.data)+STR(m.ecf,4)+STR(m.aliquota,5,2)
		IF FOUND()
			=EDITHAND("REGRAVA")
		ELSE
			=EDITHAND("SAVE")
		ENDIF	
	ENDIF
	
	IF m.bs_icm12 > 0
		m.aliquota = 12
		m.base_aliq= m.bs_icm12
		SEEK STR(m.empresa,3)+DTOS(m.data)+STR(m.ecf,4)+STR(m.aliquota,5,2)
		IF FOUND()
			=EDITHAND("REGRAVA")
		ELSE
			=EDITHAND("SAVE")
		ENDIF	
	ENDIF
	
	IF m.bs_icm25 > 0
		m.aliquota = 25
		m.base_aliq= m.bs_icm25
		SEEK STR(m.empresa,3)+DTOS(m.data)+STR(m.ecf,4)+STR(m.aliquota,5,2)
		IF FOUND()
			=EDITHAND("REGRAVA")
		ELSE
			=EDITHAND("SAVE")
		ENDIF	
	ENDIF
	IF LFmapa   		&& .t. =>  DEVE SER FECHADA NA SAIDA
		=UP_fecha("mapaecf")
	ENDIF
	SELE &LSalias

RETURN(.T.)


*       ÷ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ∑
*       ∫                                                         ∫
*       ∫ _3II0LH1O8           ECFRelMapa VALID                   ∫
*       ∫                                                         ∫
*       ∫ Function Origin:                                        ∫
*       ∫                                                         ∫
*       ∫ From Platform:       MS-DOS                             ∫
*       ∫ From Screen:         ECF,     Record Number:   46       ∫
*       ∫ Variable:            ECFRelMapa                         ∫
*       ∫ Called By:           VALID Clause                       ∫
*       ∫ Object Type:         Push Button                        ∫
*       ∫ Snippet Number:      41                                 ∫
*       ∫                                                         ∫
*       ”ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒΩ
*
FUNCTION _3ii0lh1o8     &&  ECFRelMapa VALID
#REGION 1
RETURN
*****************************************************************
*	Relatorio Mapa Resumo ECF
*	Chamada de 206B
*****************************************************************
PROCEDURE ECFRelMapa

	PRIVATE LNemp,LDdata

	LDdtinicio   = wp_dtoper
	DO OBJ_DAT2.SPR WITH LDdtinicio
	LDdata = LDdtinicio
	LNemp	 = wp_empresa

	*--------------------------------------------------------*
	=W_DEFPROC("rotinas.spr")
	*--------------------------------------------------------*
	PRIVATE LFmapa, m.dt_inicio, LSalias
	m.dt_inicio 	= 	LDdata
	LSalias			= 	ALIAS()

	*--------------------------------------------------------*
	*   As  variaveis LNemp e LDdata sao usadas  em subrotinas do
	* REL206 o que provoca uma falha no controle do relatorio. Para'
	* corrigir os dados s∆o levados para variaveis auxiliares
	*--------------------------------------------------------*

	LNempRef =  LNemp
	LDdtRef  =  LDdata


	SELE empresa
	SET ORDER TO TAG empresa
	SEEK LNemp
    ********************************************************
	LFmapa = .F.
	IF !USED("mapaecf")
		LFmapa = .T.
		IF ! NetUse("mapaecf")
			SELE &LSalias
			return
		ENDIF
	ENDIF
	SELE mapaecf
	SET ORDER TO TAG mapa
	********************************************************
	SET NEAR ON
	SEEK STR(LNemp,3)+DTOS(LDdata)
	SET NEAR OFF
	IF EOF() OR mapaecf.empresa <> LNemp OR mapaecf.data <> LDdata
		WAIT WINDOW "Nao Existem Dados Com Parametros Informados. <ENTER> "
		SELE &LSalias
		RETURN
	ENDIF
	********************************************************
	*------------------------------------------------------------*
	*  			INICIA GERACAO DE ARQUIVO TEMPORARIO			 *
	*------------------------------------------------------------*
	LSarqtmp 	= "" 			&& EX: C:\TMP\TMP0001
	LSaliastmp 	= "TMP" 		&&     TMP001
	LSaliastmp  = UPopentmp(wp_dirtmp,LSarqtmp,LSaliastmp,1)


	IF EMPTY(LSaliastmp)
		WAIT WINDOW "Nao Foi possivel gerar arq. temporario. <ENTER> "
		SELE &LSalias
		RETURN
	ENDIF
	
	WAIT WINDOW "AGUARDE. Gerando Arq. Temporario. " NOWAIT
	
	SELE mapaecf
	COPY TO &LSaliastmp ;
    		WHILE mapaecf.empresa = LNempRef AND mapaecf.data = LDdtRef

	SELE 0
	USE &lsaliastmp ALIAS ARQ_GER1

	*******************
	*---->   (INICIALIZACAO DO CONTROLE DE STATUS IMPRESSAO)
	*******************	
	DO RELINIC.PRG          && INICIA VAR P/ TERMOMETRO
	LFsegue 	= .t.
	
	LNregistro 	= RECNO()

    COUNT TO LNimpressao

	LNimpressos = 0
	GO LNregistro
	*******************
	*---->   (COMPLETADO PREPARACAO DO CONTROLE DE STATUS IMPRESSAO)
	*******************	

	**************************>>> REGISTRO DE SAIDAS

	LFsegue  	= .T.
	wp_arqname 	= ""
    LSrel 		= "REL206"
	*------------------------------------------------------------------*
	*  Goiania, 2 de abril de 2001
	*
	*  A condiá∆o abaixo foi mudada devido algum bug interno do FOX
	* que tratava dois registros em situaá‰es em que s¢ existe um.
	* A condiá∆o de igualdade da data n∆o esta sendo corretamente tratada
	* fazendo a contagem do registro com data igual e do registro com
	* data imeditamente superior que n∆o deveria entrar.
	*
	*     Ao colocar a condiá∆o de < que a proxima data o FOX processou
	* corretamente
	*------------------------------------------------------------------*
	* LSorienta 	= " WHILE mapaecf.empresa = LNempRef "+;
	*					"AND mapaecf.data = LDdata AND LFsegue "
	*

	LSorienta 	= " WHILE LFsegue "
	*------------------------------------------------------------------*
	SELE ARQ_GER1
	***********
	DO UPimpressao    && COORDENA TRABALHO DE IMPRESSAO
	***********
	DO RELFIM.PRG          && FIM VAR P/ TERMOMETRO
	*-----------------------------
	SELE ARQ_GER1
	USE

	IF LFmapa   		&& .t. =>  DEVE SER FECHADA NA SAIDA
		=UP_fecha("mapaecf")
	ENDIF
	SELE &LSalias
	*-----------------------------
    SET PRINTER TO SET('PRINTER',1)
	SET RELATION TO
	SET POINT TO
	SET SEPARATOR  TO
RETURN



*       ÷ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ∑
*       ∫                                                         ∫
*       ∫ _3II0LH1OM           ECFpede_Xleitura VALID             ∫
*       ∫                                                         ∫
*       ∫ Function Origin:                                        ∫
*       ∫                                                         ∫
*       ∫ From Platform:       MS-DOS                             ∫
*       ∫ From Screen:         ECF,     Record Number:   47       ∫
*       ∫ Variable:            ECFpede_Xleitura                   ∫
*       ∫ Called By:           VALID Clause                       ∫
*       ∫ Object Type:         Push Button                        ∫
*       ∫ Snippet Number:      42                                 ∫
*       ∫                                                         ∫
*       ”ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒΩ
*

FUNCTION _3ii0lh1om     &&  ECFpede_Xleitura VALID
#REGION 1
return
*---------------------------------------------------------------*

FUNCTION ECFpede_Xleitura


	LSmarca = ECFGetPropVT("TIPOECF")
	LNecf   = ECFGetPropVT("CONEXAO")

	PRIVATE LSstatus
	LSstatus = ""


	SELECT empresa
	SET ORDER TO TAG empresa
	SEEK wp_empresa				&& EMPRESA OPERADORA DO SISTEMA
	IF empresa.FLAGIMPNF <> 4 OR empresa.FLAGIMPCPM <> 4
		IF empresa.FLAGIMPNF <> 4
			LSnronf = STR(empresa.nota,6)
			DO OBJ_MENS.SPR WITH "   ATENCAO !!! " +CHR(13)+CHR(13)+;
				" O Faturamento Anterior Gerou a Capa da NF. "+LSnronf+;
				" mas nao Concluiu com a impressao. CANCELE A NF."+LSnronf+;
				" e CANCELE O FORMULARIO P/ MANTER SEQUENCIA NUMERACAO"
		ELSE
			LSnronf    = empresa.ult_cupom 						 				
			IF LSnronf < 1000000
				LSnronf = LSnronf + 1000000
			ENDIF
			LSnronf = STR(LSnronf,6)
			DO OBJ_MENS.SPR WITH "   ATENCAO !!! " +CHR(13)+CHR(13)+;
			" O Faturamento Anterior Gerou a Capa do REGISTRO DE CUPOM "+;
			" [NF.] Numero "+LSnronf+;
			" mas nao Concluiu com a impressao. CANCELE O REGISTRO"+LSnronf+;
			" Para Proceguir."
		ENDIF
		sele orcament
		RETURN
	ENDIF
	sele orcament
	=ECFx_letura()
RETURN


*       ÷ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ∑
*       ∫                                                         ∫
*       ∫ _3II0LH1OQ           ECFpede_zleitura VALID             ∫
*       ∫                                                         ∫
*       ∫ Function Origin:                                        ∫
*       ∫                                                         ∫
*       ∫ From Platform:       MS-DOS                             ∫
*       ∫ From Screen:         ECF,     Record Number:   48       ∫
*       ∫ Variable:            ECFpede_zleitura                   ∫
*       ∫ Called By:           VALID Clause                       ∫
*       ∫ Object Type:         Push Button                        ∫
*       ∫ Snippet Number:      43                                 ∫
*       ∫                                                         ∫
*       ”ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒΩ
*

FUNCTION _3ii0lh1oq     &&  ECFpede_zleitura VALID
#REGION 1
return
*---------------------------------------------------------------*

FUNCTION ECFpede_zleitura


	LSmarca = ECFGetPropVT("TIPOECF")
	LNecf   = ECFGetPropVT("CONEXAO")

	PRIVATE LSstatus
	LSstatus = ""


	DO OBJ_ALER.SPR WITH ;
   "Atencao !!!!!!" +CHR(13)+;
   "Ao executar a REDUÄAO-Z voce estara encerrando as "+;
   " operaá‰es  do  dia. Tecle <ENTER> e em seguida confirme."

	LSmsg  = "1ß Confirmaáao de LEITURA-Z em "+dtoc(wp_dtoper)+;
					". Confirma ? "
	IF !fox_alert(LSmsg)
		RETURN
	ENDIF
	LSmsg  = "2ß Confirmaáao de LEITURA-Z em "+dtoc(wp_dtoper)+;
					". Confirma ? "
					
	IF !fox_alert(LSmsg)
		RETURN
	ENDIF
	wp_msg = 'Encerramento das Vendas...'
	LNusuario = nUsr
	BTMP   =  'usuario.usuario = LNusuario '
	LNusr_ret = 0
	DO obj_prmt.SPR WITH   wp_msg , Btmp
	IF LNusr_ret = 0
		RETURN
	ENDIF
	DO CASE
		CASE wp_TIPOECF = "SWEDA"
			LFtmp = ECFmapa("FAZ REDUCAO")	
							* MAPA REZUMO DE CAIXA
			IF !LFtmp
				 LSmsg = ;
			 		"Nao Foi Possivel Gerar o Mapa Resumo de Caixa."+;
				 	CHR(13)+chr(13)+;
			 		"Prossegue REDUCAO Z e faz Lancamento Manual no Mapa ?"
				 IF fox_alert(lsmsg)
					****************************************
					=ECFz_letura(wp_dtoper)	
							* REDUCAO SEM O MAPA RESUMO
					****************************************
				 ENDIF
			ENDIF		
		CASE wp_TIPOECF = "BEMATEC"
			LFtmp = ECFmapa("FAZ REDUCAO")	
							* MAPA REZUMO DE CAIXA
			IF !LFtmp
				 LSmsg = ;
			 		"Nao Foi Possivel Gerar o Mapa Resumo de Caixa."+;
				 	CHR(13)+chr(13)+;
			 		"Prossegue REDUCAO Z e faz Lancamento Manual no Mapa ?"
				 IF fox_alert(lsmsg)
					****************************************
					=ECFz_letura(wp_dtoper)	
							* REDUCAO SEM O MAPA RESUMO
					****************************************
				 ENDIF
			ENDIF		
		CASE wp_TIPOECF = "INTEGRADOR"
			LFtmp = ECFmapa("FAZ REDUCAO")	
							* MAPA REZUMO DE CAIXA



			*IF !LFtmp
			*	 LSmsg = ;
			* 		"Nao Foi Possivel Gerar o Mapa Resumo de Caixa."+;
			*	 	CHR(13)+chr(13)+;
			* 		"Prossegue REDUCAO Z e faz Lancamento Manual no Mapa ?"

				 IF fox_alert(lsmsg)
					****************************************
					=ECFz_letura(wp_dtoper)	
							* REDUCAO SEM O MAPA RESUMO
					****************************************
				 ENDIF

			*ENDIF		
			
	ENDCASE
RETURN





*       ÷ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ∑
*       ∫                                                         ∫
*       ∫ _3II0LH1OV           ECFpede_cancpmant VALID            ∫
*       ∫                                                         ∫
*       ∫ Function Origin:                                        ∫
*       ∫                                                         ∫
*       ∫ From Platform:       MS-DOS                             ∫
*       ∫ From Screen:         ECF,     Record Number:   49       ∫
*       ∫ Variable:            ECFpede_cancpmant                  ∫
*       ∫ Called By:           VALID Clause                       ∫
*       ∫ Object Type:         Push Button                        ∫
*       ∫ Snippet Number:      44                                 ∫
*       ∫                                                         ∫
*       ”ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒΩ
*

FUNCTION _3ii0lh1ov     &&  ECFpede_cancpmant VALID
#REGION 1
return
*---------------------------------------------------------------*

FUNCTION ECFpede_cancpmant


	PRIVATE  Flg_aceita,LNCheque1Vlr,LNDinheiroVlr, LNCartaoVlr
	STORE 0  TO  LNCheque1Vlr,LNDinheiroVlr, LNCartaoVlr

	LSmarca = ECFGetPropVT("TIPOECF")
	LNecf   = ECFGetPropVT("CONEXAO")

	PRIVATE LSstatus
	LSstatus = ""


	PRIVATE LSdbant,VLleitura,VLlerfim,VLcompara,VLchvlimi, LNregvolta
	PRIVATE LStipo,LNnf, LNnroNF
	******>>>> INICIO CONTROLE ARQUIVOS
	*>> parametros repassados a btn_val
	VLleitura = "STR(wp_empresa,3)"
                         * repassa chave de leitura p/ btn_val
	VLlerfim  = "STR(wp_empresa+1,3)"
           * repassa chave de leitura p/ btn_val (POSICAO FINAL + 1 REG)

	VLcompara = "nota.empresa = wp_empresa "
                         * repassa chave de comparacao p/ btn_val
	VLchvlimi = "STR(wp_empresa,3)"
	*-----------------------------------------------------------------*
	LSdbant = ALIAS()
	SELE nota
	SET ORDER TO TAG data
	SET NEAR ON
	SEEK VLlerfim
	ON KEY LABEL ESCAPE
	DO loc_dlog WITH .T.,Vlcompara, VLchvlimi,.F.,.F., .F.
	ON KEY LABEL ESCAPE KEYBOARD "{BACKTAB}"
	SET NEAR OFF

	IF LASTKEY() = 27
		SELE orcament
	    RETURN .F.
	ENDIF


	LNnota = nota.nota

	IF LNnota = 0
	   SELE orcament
	   RETURN
	ENDIF
    LScp1 = STR(LNnota,7)

	wp_msg = "Confirma Solicitacao de Cancelamento p/ "+LScp1
	IF !fox_alert(wp_msg)
	   SELE orcament
	   RETURN
	ENDIF
	wp_msg = 'Informe Seu Codigo e sua Senha p/ CANCELAR..'
	LNusuario = nUsr
	BTMP   =  'usuario.usuario = LNusuario '
	LNusr_ret = 0
	DO obj_prmt.SPR WITH   wp_msg , Btmp
	IF LNusr_ret =  0
	   WAIT WINDOW "Cancelamento nao Efetuado.....<ENTER>"
	   SELE orcament
	   RETURN
	ENDIF

	SELE nota
	SET ORDER TO TAG nota
	SEEK STR(wp_empresa,3)+STR(LNnota,7)
	IF !FOUND()
	   WAIT WINDOW ;
	   "Cancelamento no iniciado. Nao Localizou Reg. no Sistema .<ENTER>"
	   SELE orcament
	   RETURN
	ENDIF

	SELE empresa
	SEEK wp_empresa
	IF !REGLOCK(.T.)
	   WAIT WINDOW ;
	   "Registro Empresa nao Pode ser Bloq. Tente Novamente.<ENTER>"
	   SELE orcament
	   RETURN
	ENDIF
		
		***<<<<<<<<<<<<<<  MONTA NUMERO DE SISTEMA P/ CUPOM >>>>>>>>***
	DO CASE
		CASE (LNnota > 999999 AND LNnota < 2000000) ;
		    OR (nota.cupom > 0 AND nota.tipo <> "CPM")
						&& > 999999 => SOLICITOU CANCELAMENTO DE CUPOM
						&& > 0      => SOLICITOU CANCELAMENTO DE NOTA/CUPOM

			LNcupom = INT(ECFnrocupom())
			IF LNcupom = 0
	    		DO OBJ_MENS.SPR WITH "    ATENCAO!!"+CHR(13)+chr(13)+;
				   "  A ECF esta Retornando Numero de CUPOM = ZERO." +;
				   "Verifique <STATUS>. Verifique <Numero do Cupom>. "+;
				   "Verifique <RESET>. Se Persistir Contacte SUPORTE."
			    SELE orcament
	   			RETURN
			ENDIF

			SELE nota

			=W_DEFPROC("ORCAMENT.SPR")
			=ORVlr_e_FormPgto(nota.Empresa,;
							  nota.Referencia,;
							  LNCheque1Vlr,;
							  LNDinheiroVlr,;
							  LNCartaoVlr)

			IF LNCartaoVlr > 0
			   IF (nota.cupom+1) = LNcupom OR;
				  (nota.cupom)   = LNcupom
				  Flg_aceita = .T.
			   ELSE
				  Flg_aceita = .F.
			   ENDIF
		    ELSE
			   IF nota.cupom   = LNcupom
				  Flg_aceita = .T.
			   ELSE
				  Flg_aceita = .F.
			   ENDIF
		    ENDIF			
							
			IF !Flg_aceita
			   LScp1 = STR(LNnota,7)
			   LScp2 = STR(nota.cupom,7)
			   LScp3 = STR(LNcupom,7)
			   DO OBJ_MENS.SPR WITH "    ATENCAO!!"+CHR(13)+CHR(13)+;
				   "      O numero de DOCUMENTO ["+LScp1+;
				   "] informado p/ cancelamento "+;
				    "esta relacionado ao CUPOM ["+LScp2+;
				    " ] sendo que o ultimo CUPOM localizado pelo "+;
				    "sistema e  ["+LScp3+"]"+;
				    chr(13)+"   Verifique os dados e tente novamente."
			   SELE orcament
			   RETURN
			ENDIF

			IF !REGLOCK(.T.)
			   WAIT WINDOW ;
			   "Reg. Cupom Nao Pode ser Bloqueado Para Cancelamento.<ENTER>"
			   SELE orcament
			   RETURN
			ENDIF

			************************************************	
			LSstatus=ECFcanccpm(nota.cupom,LNCartaoVlr)

			IF SUBS(LSstatus,7,1) = "E"
			   DO OBJ_MENS.SPR WITH "    ATENCAO!!"+CHR(13)+CHR(13)+;
				   "      A impressora fiscal nao acatou o cancelamento."+;
				   "Repita o processo e se persistir a negacao entre "+;
				   " em contato com suporte informando o menssagem : "+;
				    LSstatus
			   SELE orcament
			   RETURN
			ENDIF			
			CLEAR TYPEAHEAD
			SELE  NOTA
			SCATTER MEMVAR
			*-----------------------------------------------------------*
			=W_DEFPROC("nota.spr")
			=NFCtrlCancFatura((nota.empresa),(nota.nota),"AUTOMATICO")
			***=NFcancFatura((nota.empresa),(nota.nota),"AUTOMATICO")
			*-----------------------------------------------------------*
			***********   LIBERAR STATUS DE PROCESSO EM EMPRESA *******
			SELE empresa 			&& DEVE ESTA BLOQ. FUNCINA COM SINALEIRO
			REPLACE FLAGIMPNF 	WITH 4	&& LIBERA FATURAMENTO
			REPLACE FLAGIMPCPM 	WITH 4	&& LIBERA FATURAMENTO
			*************************************************************
			UNLOCK ALL
		    LScp1 = STR(LNnota,7)
		    DO OBJ_MENS.SPR WITH ;
		    	   "    OK !! " + CHR(13)+CHR(13)+;
				   "    Cumpom cancelado na ECF e no REGISTRO "+chr(13)+;
				   " [ "+LScp1+" ]"

		OTHERWISE			&& SOLICITOU CANCELAMENTO DE NOTA

			SELE nota
			SET ORDER TO TAG nota
			SEEK STR(wp_empresa,3)+STR(LNnota,7)
			IF nota.data <> wp_dtoper
			   DO OBJ_MENS.SPR WITH "    ATENCAO!!"+CHR(13)+CHR(13)+;
				   "      A Nota Fiscal informada para cancelamento "+;
				   "nao pertence a data de hoje. Esta operacao so "+;
				   " e permitida em caso de intervencao do suporte."

				wp_msg = 'Usuario Suporte...'
				BTMP   =  'usuario.retroacao = "S"'
				LNusr_ret = 0
				DO obj_prmt.SPR WITH   wp_msg , Btmp
				IF LNusr_ret =  0
				   SELE orcament
				   RETURN
				ENDIF
			ENDIF	
			SCATTER MEMVAR
			*-----------------------------------------------------------*
			=W_DEFPROC("nota.spr")
			=NFCtrlCancFatura((nota.empresa),(nota.nota),"AUTOMATICO")
			***=NFcancFatura((nota.empresa),(nota.nota),"AUTOMATICO")

			*-----------------------------------------------------------*
			SELE empresa 			&& DEVE ESTA BLOQ. FUNCINA COM SINALEIRO
			REPLACE FLAGIMPNF 	WITH 4	&& LIBERA FATURAMENTO
			REPLACE FLAGIMPCPM 	WITH 4	&& LIBERA FATURAMENTO
			*************************************************************
			UNLOCK ALL
		    SELE orcament
			RETURN
	ENDCASE
RETURN


*       ÷ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ∑
*       ∫                                                         ∫
*       ∫ _3II0LH1P1           ECFpede_fchcpm VALID               ∫
*       ∫                                                         ∫
*       ∫ Function Origin:                                        ∫
*       ∫                                                         ∫
*       ∫ From Platform:       MS-DOS                             ∫
*       ∫ From Screen:         ECF,     Record Number:   50       ∫
*       ∫ Variable:            ECFpede_fchcpm                     ∫
*       ∫ Called By:           VALID Clause                       ∫
*       ∫ Object Type:         Push Button                        ∫
*       ∫ Snippet Number:      45                                 ∫
*       ∫                                                         ∫
*       ”ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒΩ
*

FUNCTION _3ii0lh1p1     &&  ECFpede_fchcpm VALID
#REGION 1
return
*---------------------------------------------------------------*

FUNCTION ECFpede_fchcpm


	LSmarca = ECFGetPropVT("TIPOECF")
	LNecf   = ECFGetPropVT("CONEXAO")

	PRIVATE LSstatus
	LSstatus = ""


	PRIVATE LNnrocp, LFcancela
	LNnrocp=(ECFnrocupom())

	IF LNnrocp = 0
	    DO OBJ_MENS.SPR WITH "    ATENCAO!!"+CHR(13)+chr(13)+;
		   "  A ECF esta Retornando Numero de CUPOM = ZERO." +;
		   "Verifique <STATUS>. Verifique <Numero do Cupom>. "+;
		   "Verifique <RESET>. Se Persistir Contacte SUPORTE."
	   SELE orcament
	   RETURN
	ENDIF


	SELE nota
	SET ORDER TO TAG data
	SET NEAR ON
	SEEK STR(wp_empresa+1,3)
	SET NEAR OFF
	LFcancela = .t.
	SKIP -1
	DO WHILE !BOF() AND nota.empresa = wp_empresa
		IF nota.cupom = LNnrocp
			LFcancela = .f.		&& NAO PODE CANCELAR
		    LScp1 = STR(nota.nota,7)
			LScp2 = STR(nota.cupom,7)
		    DO OBJ_MENS.SPR WITH "    ATENCAO!!"+CHR(13)+;
				   "  O numero de CUPOM  ["+LScp2+;
				   "] informado pela ECF   "+;
				    "esta relacionado ao FATURAMENTO NF/REGISTRO ["+LScp1+;
				    " ] " +CHR(13)+;
				    " ESTA OPCAO SO FECHA O CUPOM QUANDO NAO EXISTE"+;
				    " REGISTRO. NESTE CASO CANCELE O "+;
				    " FATURAMENTO E CUPOM SERA CANCELADO."
			EXIT
		ENDIF
		* VOLTA ATE seis  CUPONS PARA COMPROVAR NAO HAVER VINCULO
		IF nota.cupom > 0 AND  nota.cupom < LNnrocp - 6
			EXIT		
		ENDIF
		* VOLTA ATE DOIS DIAS PARA COMPROVAR NAO HAVER VINCULO
		IF nota.data < wp_dtoper - 2
			EXIT		
		ENDIF
		SKIP -1
	ENDDO
	if !LFcancela
	   SELE orcament
	   RETURN
	ENDIF

	LScp1 = STR(LNnrocp,7)
	wp_msg = "Confirma Solicitacao de Cancelamento p/ "+LScp1
	IF !fox_alert(wp_msg)
	   SELE orcament
	   RETURN
	ENDIF

	LSstatus=ECFcanccpm(LNnrocp,0)

	IF SUBS(LSstatus,7,1) = "E"
	   DO OBJ_MENS.SPR WITH "    ATENCAO!!"+CHR(13)+CHR(13)+;
	   	"      A impressora fiscal nao acatou o cancelamento."+;
	   	"Repita o processo e se persistir a negacao entre "+;
	   	" em contato com suporte informando o menssagem : "+;
	    LSstatus
	   	SELE orcament
	 	RETURN
	ENDIF			
    DO OBJ_MENS.SPR WITH ;
   	   "    OK !! " + CHR(13)+CHR(13)+;
	   "    Cumpom CANCELADO na ECF  [ "+LScp1+" ]"
RETURN


*       ÷ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ∑
*       ∫                                                         ∫
*       ∫ _3II0LH1P6           ECFAdm VALID                       ∫
*       ∫                                                         ∫
*       ∫ Function Origin:                                        ∫
*       ∫                                                         ∫
*       ∫ From Platform:       MS-DOS                             ∫
*       ∫ From Screen:         ECF,     Record Number:   51       ∫
*       ∫ Variable:            ECFAdm                             ∫
*       ∫ Called By:           VALID Clause                       ∫
*       ∫ Object Type:         Push Button                        ∫
*       ∫ Snippet Number:      46                                 ∫
*       ∫                                                         ∫
*       ”ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒΩ
*

FUNCTION _3ii0lh1p6     &&  ECFAdm VALID
#REGION 1
return
*---------------------------------------------------------------*

FUNCTION ECFAdm

	PRIVATE LSmarca, LNecf
	
	LSmarca = ECFGetPropVT("TIPOECF")
	LNecf   = ECFGetPropVT("CONEXAO")


	PRIVATE LSstatus
	LSstatus = " "
	PRIVATE LNnro

	=ECFSetPropVT("LNNRO",0)   && INICIALIZACAO

	LNnro    = -1

	IF !("ERRO" $ ECFOpen())
		DO CASE
	  		CASE LSmarca = "INTEGRADOR"
				LScomando = "ADM=***"
				LSstatus =  ECFEnviaCommandFile(LScomando)
				IF !("ERRO" $ LSstatus)
					LSstatus =  ECFBuscaCommandFile(LScomando,.t.)
				ENDIF
			*-----------------------------------------------*
		ENDCASE
	ENDIF

RETURN(LNnro)
		


*       ÷ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ∑
*       ∫                                                         ∫
*       ∫ _3II0LH1PA           ECF_CNC VALID                      ∫
*       ∫                                                         ∫
*       ∫ Function Origin:                                        ∫
*       ∫                                                         ∫
*       ∫ From Platform:       MS-DOS                             ∫
*       ∫ From Screen:         ECF,     Record Number:   52       ∫
*       ∫ Variable:            ECF_CNC                            ∫
*       ∫ Called By:           VALID Clause                       ∫
*       ∫ Object Type:         Push Button                        ∫
*       ∫ Snippet Number:      47                                 ∫
*       ∫                                                         ∫
*       ”ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒΩ
*

FUNCTION _3ii0lh1pa     &&  ECF_CNC VALID
#REGION 1
return
*---------------------------------------------------------------*

FUNCTION ECFPedeCNC


	PRIVATE  Flg_aceita,LNCheque1Vlr,LNDinheiroVlr, LNCartaoVlr
	STORE 0  TO  LNCheque1Vlr,LNDinheiroVlr, LNCartaoVlr

	LSmarca = ECFGetPropVT("TIPOECF")
	LNecf   = ECFGetPropVT("CONEXAO")

	PRIVATE LSstatus
	LSstatus = ""


	PRIVATE LSdbant,VLleitura,VLlerfim,VLcompara,VLchvlimi, LNregvolta
	PRIVATE LStipo,LNnf, LNnroNF
	******>>>> INICIO CONTROLE ARQUIVOS
	*>> parametros repassados a btn_val
	VLleitura = "STR(wp_empresa,3)"
                         * repassa chave de leitura p/ btn_val
	VLlerfim  = "STR(wp_empresa+1,3)"
           * repassa chave de leitura p/ btn_val (POSICAO FINAL + 1 REG)

	VLcompara = "nota.empresa = wp_empresa "
                         * repassa chave de comparacao p/ btn_val
	VLchvlimi = "STR(wp_empresa,3)"
	*-----------------------------------------------------------------*
	LSdbant = ALIAS()
	SELE nota
	SET ORDER TO TAG data
	SET NEAR ON
	SEEK VLlerfim
	ON KEY LABEL ESCAPE
	DO loc_dlog WITH .T.,Vlcompara, VLchvlimi,.F.,.F., .F.
	ON KEY LABEL ESCAPE KEYBOARD "{BACKTAB}"
	SET NEAR OFF

	IF LASTKEY() = 27
		SELE orcament
	    RETURN .F.
	ENDIF


	LNnota = nota.nota

	IF LNnota = 0
	   SELE orcament
	   RETURN
	ENDIF
    LScp1 = STR(LNnota,7)

	wp_msg = "Confirma CNC para cartao vinculado a NF: "+LScp1
	IF !fox_alert(wp_msg)
	   SELE orcament
	   RETURN
	ENDIF
	wp_msg = 'Informe Seu Codigo e sua Senha p/ CANCELAR..'
	LNusuario = nUsr
	BTMP   =  'usuario.usuario = LNusuario '
	LNusr_ret = 0
	DO obj_prmt.SPR WITH   wp_msg , Btmp
	IF LNusr_ret =  0
	   WAIT WINDOW "CNC nao Efetuado.....<ENTER>"
	   SELE orcament
	   RETURN
	ENDIF

	SELE nota
	SET ORDER TO TAG nota
	SEEK STR(wp_empresa,3)+STR(LNnota,7)
	IF !FOUND()
	   WAIT WINDOW ;
	   "CNC nao iniciado. Nao Localizou Reg. no Sistema .<ENTER>"
	   SELE orcament
	   RETURN
	ENDIF

	SELE empresa
	SEEK wp_empresa
	IF !REGLOCK(.T.)
	   WAIT WINDOW ;
	   "Registro Empresa nao Pode ser Bloq. Tente Novamente.<ENTER>"
	   SELE orcament
	   RETURN
	ENDIF
		
		***<<<<<<<<<<<<<<  MONTA NUMERO DE SISTEMA P/ CUPOM >>>>>>>>***
	DO CASE
		CASE (LNnota > 999999 AND LNnota < 2000000) ;
		    OR (nota.cupom > 0 AND nota.tipo <> "CPM")
						&& > 999999 => SOLICITOU CANCELAMENTO DE CUPOM
						&& > 0      => SOLICITOU CANCELAMENTO DE NOTA/CUPOM

			LNcupom = INT(ECFnrocupom())
			IF LNcupom = 0
	    		DO OBJ_MENS.SPR WITH "    ATENCAO!!"+CHR(13)+chr(13)+;
				   "  A ECF esta Retornando Numero de CUPOM = ZERO." +;
				   "Verifique <STATUS>. Verifique <Numero do Cupom>. "+;
				   "Verifique <RESET>. Se Persistir Contacte SUPORTE."
			    SELE orcament
	   			RETURN
			ENDIF

			SELE nota

			=W_DEFPROC("ORCAMENT.SPR")
			=ORVlr_e_FormPgto(nota.Empresa,;
							  nota.Referencia,;
							  LNCheque1Vlr,;
							  LNDinheiroVlr,;
							  LNCartaoVlr)

		   IF (nota.cupom+1) = LNcupom OR;
			  (nota.cupom)   = LNcupom
			  Flg_aceita = .F.
		   ELSE
			  Flg_aceita = .T.
		   ENDIF
							
			IF !Flg_aceita
			   LScp1 = STR(LNnota,7)
			   LScp2 = STR(nota.cupom,7)
			   LScp3 = STR(LNcupom,7)
			   DO OBJ_MENS.SPR WITH "    ATENCAO!!"+CHR(13)+CHR(13)+;
				   "      O cupom ["+LScp1+;
				   "] informado p/ cancelamento "+;
				    " e o ultimo CUPOM ["+LScp2+;
				    " ] -> Execute Cancelamento do Normal do Doc.Fiscal "+;
				    chr(13)+"   Verifique os dados e tente novamente."
			   SELE orcament
			   RETURN
			ENDIF

			IF !REGLOCK(.T.)
			   WAIT WINDOW ;
			   "Reg. Cupom Nao Pode ser Bloqueado Para Cancelamento.<ENTER>"
			   SELE orcament
			   RETURN
			ENDIF

			************************************************	
			LSstatus=ECF_CNC(nota.cupom,LNCartaoVlr)

			IF SUBS(LSstatus,7,1) = "E"
			   DO OBJ_MENS.SPR WITH "    ATENCAO!!"+CHR(13)+CHR(13)+;
				   "      O TEF nao acatou o CNC."+;
				   "Repita o processo e se persistir a negacao entre "+;
				   " em contato com suporte informando o menssagem : "+;
				    LSstatus
			   SELE orcament
			   RETURN
			ENDIF			
			CLEAR TYPEAHEAD
			SELE  NOTA
			SCATTER MEMVAR
			*-----------------------------------------------------------*
			*-----------------------------------------------------------*
			***********   LIBERAR STATUS DE PROCESSO EM EMPRESA *******
			SELE empresa 			&& DEVE ESTA BLOQ. FUNCINA COM SINALEIRO
			*************************************************************
			UNLOCK ALL
		    LScp1 = STR(LNnota,7)
		    DO OBJ_MENS.SPR WITH ;
		    	   "    OK !! " + CHR(13)+CHR(13)+;
				   "    CNC executado "+chr(13)+;
				   " [ "+LScp1+" ]"
	ENDCASE
RETURN
