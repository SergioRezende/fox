*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º 12/17/14              PRECO.SPR                15:55:36 º
*       º                                                         º
*       ÇÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¶
*       º                                                         º
*       º Author's Name                                           º
*       º                                                         º
*       º Copyright (c) 2014 Company Name                         º
*       º Address                                                 º
*       º City,     Zip                                           º
*       º                                                         º
*       º Description:                                            º
*       º This program was automatically generated by GENSCRN.    º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½


#REGION 0
REGIONAL m.currarea, m.talkstat, m.compstat

IF SET("TALK") = "ON"
	SET TALK OFF
	m.talkstat = "ON"
ELSE
	m.talkstat = "OFF"
ENDIF
m.compstat = SET("COMPATIBLE")
SET COMPATIBLE FOXPLUS

*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º                MS-DOS Window definitions                º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*


*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º           PRECO/MS-DOS Setup Code - SECTION 2           º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*

#REGION 1
return

*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º               PRECO/MS-DOS Screen Layout                º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*

#REGION 1
@ 1,0 GET PRVlrSaida ;
	PICTURE "@*HN PRVlrSaida - Obert Valor para Operacao de saida" ;
	SIZE 1,49,1 ;
	DEFAULT 1 ;
	VALID _48h0y4x8v()
@ 2,3 GET PRVlrTransf ;
	PICTURE "@*HN PRVlrTransf   - Obter Valor para Transferencias" ;
	SIZE 1,49,1 ;
	DEFAULT 1 ;
	VALID _48h0y4x8w()
@ 8,4 GET PRVlrVenda ;
	PICTURE "@*HN PRVlrVenda -Preco Vendas Para OSI Informada" ;
	SIZE 1,45,1 ;
	DEFAULT 1 ;
	VALID _48h0y4x8x()
@ 11,4 GET PRClas_Cms ;
	PICTURE "@*HN PRClas_Cms - Obter a Classificao de Grupo de Comissao para Produto" ;
	SIZE 1,68,1 ;
	DEFAULT 1 ;
	VALID _48h0y4x8y()
@ 12,0 GET PRCusto ;
	PICTURE "@*HN PRCusto - Obter Custo do Produto" ;
	SIZE 1,34,1 ;
	DEFAULT 1 ;
	VALID _48h0y4x8z()
@ 13,0 GET PRtabvigor ;
	PICTURE "@*HN PRtabvigor" ;
	SIZE 1,12,1 ;
	DEFAULT 1 ;
	VALID _48h0y4xa8()
@ 14,0 GET PRdesconto ;
	PICTURE "@*HN PRdesconto" ;
	SIZE 1,12,1 ;
	DEFAULT 1 ;
	VALID _48h0y4xaf()
@ 15,0 GET PRbrow_tab ;
	PICTURE "@*HN PRbrow_tab" ;
	SIZE 1,12,1 ;
	DEFAULT 1 ;
	VALID _48h0y4xan()
@ 16,0 GET PRpromocao ;
	PICTURE "@*HN PRpromocao" ;
	SIZE 1,12,1 ;
	DEFAULT 1 ;
	VALID _48h0y4xao()
@ 9,7 GET PRVlrTabVgr ;
	PICTURE "@*HN PRVlrTabVgr -Preco em Vigor na Dt Informada" ;
	SIZE 1,45,1 ;
	DEFAULT 1 ;
	VALID _48h0y4xap()
@ 3,5 GET PRVlrTransf ;
	PICTURE "@*HN trfdp1912 - aux de PRVlrTransf - para Orcamentos apos 01-09-2012" ;
	SIZE 1,66,1 ;
	DEFAULT 1 ;
	VALID _48h0y4xaq()
@ 4,5 GET PRVlrTransf ;
	PICTURE "@*HN trf_dep010503 - aux de PRVlrTransf - para Orcamentos apos 01-05-2003" ;
	SIZE 1,70,1 ;
	DEFAULT 1 ;
	VALID _48h0y4xar()
@ 5,5 GET PRVlrTransf ;
	PICTURE "@*HN trf_ate010503 - aux de PRVlrTransf - para Orcamentos antes de 01-05-2003" ;
	SIZE 1,74,1 ;
	DEFAULT 1 ;
	VALID _48h0y4xbx()



READ


#REGION 0
IF m.talkstat = "ON"
	SET TALK ON
ENDIF
IF m.compstat = "ON"
	SET COMPATIBLE ON
ENDIF


*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º                PRECO/MS-DOS Cleanup Code                º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*

#REGION 1
return


*****
************************************
********************


*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _48H0Y4X8V           PRVlrSaida VALID                   º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         PRECO,     Record Number:    2     º
*       º Variable:            PRVlrSaida                         º
*       º Called By:           VALID Clause                       º
*       º Object Type:         Push Button                        º
*       º Snippet Number:      1                                  º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*

FUNCTION _48h0y4x8v     &&  PRVlrSaida VALID
#REGION 1
return
*---------------------------------------------------------------*
	*------------------------------------------------------------*
	* CLASSIFICACAO:  [*****]
	*------------------------------------------------------------*
	* OBJETIVO....: Informar Valor do Produto Para Transferencia
	*------------------------------------------------------------*
	* COMENTARIO..:   A funcao permite identificar :
	*
	*------------------------------------------------------------*
	* OBS........ :
	*------------------------------------------------------------*
	*  TABELAS....:
	*------------------------------------------------------------*
	*  PARAMETROS..:
	*
	*------------------------------------------------------------*
	*  RETORNO.....:
	*------------------------------------------------------------*
	* EXEMPLO : CHAMADA DO PROGRAMA ?
	*------------------------------------------------------------*

FUNCTION PRVlrSaida
PARAMETERS PrmEmpresa, PrmOrcamento, PrmProduto, PrmEspecifico

	=W_DEFPROC("rotinas.spr")
	PRIVATE LNvalor
	PRIVATE LSalias

	PRIVATE LNtp_mercad
	
    PRIVATE ARQ_Empresa,ALS_Empresa
    PRIVATE ARQ_orcamento,ALS_orcamento
    PRIVATE ARQ_clienc,ALS_clienc
    PRIVATE ARQ_tipooper,ALS_tipooper
    PRIVATE ARQ_grupo,ALS_grupo
    PRIVATE ARQ_saldo,ALS_saldo
    PRIVATE ARQ_Preco,ALS_Preco




	LSalias = ALIAS()
	LNvalor = 0

    ARQ_Empresa     = NetArqAgain("EMPRESA")
    ALS_Empresa     = Alias()

    ARQ_orcamento     = NetArqAgain("ORCAMENTO")
    ALS_Orcamento     = Alias()

    ARQ_clienc     = NetArqAgain("clienc")
    ALS_clienc     = Alias()


    ARQ_Tipooper     = NetArqAgain("TIPOOPER")
    ALS_Tipooper     = Alias()

    ARQ_Grupo     = NetArqAgain("GRUPO")
    ALS_Grupo     = Alias()

    ARQ_Saldo     = NetArqAgain("SALDO")
    ALS_Saldo     = Alias()

    ARQ_Preco     = NetArqAgain("PRECO")
    ALS_Preco     = Alias()


	IF (ARQ_Empresa + ARQ_Orcamento+ARQ_tipooper+;
		ARQ_grupo+ARQ_Saldo+ARQ_Preco+Arq_clienc) > 100000
        =up_fecha("&ALS_Empresa")
        =up_fecha("&ALS_Orcamento")
        =up_fecha("&ALS_Tipooper")
        =up_fecha("&ALS_Grupo")
        =up_fecha("&ALS_Saldo")
        =up_fecha("&ALS_Preco")
        =up_fecha("&ALS_Clienc")
		IF !EMPTY(LSalias) AND USED(LSalias)
			SELECT &LSalias
		ENDIF
		RETURN(LNvalor)
	ENDIF
	*---------------------------------------------------------*
    SELE &ALS_Empresa
  	SET ORDER TO TAG empresa
    SEEK PrmEmpresa
	IF !FOUND()
        =up_fecha("&ALS_Empresa")
        =up_fecha("&ALS_Orcamento")
        =up_fecha("&ALS_Tipooper")
        =up_fecha("&ALS_Grupo")
        =up_fecha("&ALS_Saldo")
        =up_fecha("&ALS_Preco")
        =up_fecha("&ALS_Clienc")
		IF !EMPTY(LSalias) AND USED(LSalias)
			SELECT &LSalias
		ENDIF
		RETURN(LSclascms)
	ENDIF


	SELECT &ALS_Orcamento
	SET ORDER TO tag geral
	SEEK STR(PrmEmpresa,3)+STR(PrmOrcamento,6)
	IF !FOUND()
        =up_fecha("&ALS_Empresa")
        =up_fecha("&ALS_Orcamento")
        =up_fecha("&ALS_Tipooper")
        =up_fecha("&ALS_Grupo")
        =up_fecha("&ALS_Saldo")
        =up_fecha("&ALS_Preco")
        =up_fecha("&ALS_Clienc")
		IF !EMPTY(LSalias) AND USED(LSalias)
			SELECT &LSalias
		ENDIF
		RETURN(LNvalor)
	ENDIF

	SELECT &ALS_Clienc
	SET ORDER TO tag emporca
	SEEK STR(PrmEmpresa,3)+STR(PrmOrcamento,6)
	IF !FOUND()
        =up_fecha("&ALS_Empresa")
        =up_fecha("&ALS_Orcamento")
        =up_fecha("&ALS_Tipooper")
        =up_fecha("&ALS_Grupo")
        =up_fecha("&ALS_Saldo")
        =up_fecha("&ALS_Preco")
        =up_fecha("&ALS_Clienc")
		IF !EMPTY(LSalias) AND USED(LSalias)
			SELECT &LSalias
		ENDIF
		RETURN(LNvalor)
	ENDIF


	SELECT &Als_tipooper
	SET ORDER TO TAG tipo
	SEEK 'S'+ &Als_orcamento .tipo
	IF !FOUND()
		SEEK 's'+  &Als_orcamento .tipo  	
	ENDIF
	IF !FOUND()
        =up_fecha("&ALS_Empresa")
        =up_fecha("&ALS_Orcamento")
        =up_fecha("&ALS_Tipooper")
        =up_fecha("&ALS_Grupo")
        =up_fecha("&ALS_Saldo")
        =up_fecha("&ALS_Preco")
        =up_fecha("&ALS_Clienc")
		IF !EMPTY(LSalias) AND USED(LSalias)
			SELECT &LSalias
		ENDIF
		RETURN(LNvalor)
	ENDIF

	*------------------------------------------------------------*
	=W_DEFPROC("TRIBUTAR.SPR")

	DO CASE

        *------------------------------------------------------------*
        * A venda bonificacao deve sair com mesmo valor aplicado as  *
        * transferencias                                             *
        *------------------------------------------------------------*
		Case TYPE("PrmEspecifico") = "C"
		    DO CASE
			  CASE PrmEspecifico = "VENDA BONIFICACAO"
				LNvalor = PRVlrTransf(PrmEmpresa, PrmOrcamento, PrmProduto,;
					ALS_Orcamento,ALS_Tipooper,ALS_Grupo,ALS_Saldo)
		    ENDCASE

		CASE &ALS_tipooper .ch_opera = "2" && TRANSFERENCIAS
			LNvalor = PRVlrTransf(PrmEmpresa, PrmOrcamento, PrmProduto,;
				ALS_Orcamento,ALS_Tipooper,ALS_Grupo,ALS_Saldo)


		CASE &ALS_tipooper .tipo = "ECP" && REMESP DEPO.FECHADO
			LNvalor = PRVlrTransf(PrmEmpresa, PrmOrcamento, PrmProduto,;
				ALS_Orcamento,ALS_Tipooper,ALS_Grupo,ALS_Saldo)

		CASE &ALS_tipooper .tipo = "RDO" && REMESP DEPO.FECHADO
			LNvalor = PRVlrTransf(PrmEmpresa, PrmOrcamento, PrmProduto,;
				ALS_Orcamento,ALS_Tipooper,ALS_Grupo,ALS_Saldo)

		CASE left( &ALS_tipooper .tipo,1) = "R" && REMESSAS EM GERAL
			LNvalor = PRVlrTransf(PrmEmpresa, PrmOrcamento, PrmProduto,;
				ALS_Orcamento,ALS_Tipooper,ALS_Grupo,ALS_Saldo)


		OTHERWISE
			LNvalor = PRVlrVenda(PrmEmpresa, PrmOrcamento, PrmProduto,;
	 			ALS_Empresa,ALS_Orcamento,ALS_Preco)

	ENDCASE

	*------------------------------------------------------------*

    =up_fecha("&ALS_Empresa")
    =up_fecha("&ALS_Orcamento")
    =up_fecha("&ALS_Tipooper")
    =up_fecha("&ALS_Grupo")
    =up_fecha("&ALS_Saldo")
    =up_fecha("&ALS_Preco")
    =up_fecha("&ALS_Clienc")

	IF !EMPTY(LSalias) AND USED(LSalias)
		SELECT &LSalias
	ENDIF
RETURN(LNvalor)



*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _48H0Y4X8W           PRVlrTransf VALID                  º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         PRECO,     Record Number:    3     º
*       º Variable:            PRVlrTransf                        º
*       º Called By:           VALID Clause                       º
*       º Object Type:         Push Button                        º
*       º Snippet Number:      2                                  º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*

FUNCTION _48h0y4x8w     &&  PRVlrTransf VALID
#REGION 1
return
*---------------------------------------------------------------*
	*------------------------------------------------------------*
	* CLASSIFICACAO:  [*****]
	*------------------------------------------------------------*
	* OBJETIVO....: Informar Valor do Produto Para Transferencia
	*------------------------------------------------------------*
	* COMENTARIO..:   A funcao permite identificar :
	*
	*------------------------------------------------------------*
	* OBS........ :
	*------------------------------------------------------------*
	*  TABELAS....:
	*------------------------------------------------------------*
	*  PARAMETROS..:
	*
	*------------------------------------------------------------*
	*  RETORNO.....:
	*------------------------------------------------------------*
	* EXEMPLO : CHAMADA DO PROGRAMA ?
	*------------------------------------------------------------*

FUNCTION PRVlrTransf
PARAMETERS PrmEmpresa, PrmOrcamento, PrmProduto,;
		ALS_Orcamento,ALS_Tipooper,ALS_Grupo,ALS_Saldo


	=W_DEFPROC("rotinas.spr")
	PRIVATE LNvalor
	PRIVATE LSalias

	PRIVATE LNtp_mercad
	

	LSalias = ALIAS()
	LNvalor = 0

	*---------------------------------------------------------*

	SELECT &ALS_Orcamento
	SET ORDER TO tag geral
	SEEK STR(PrmEmpresa,3)+STR(PrmOrcamento,6)
	IF !FOUND()
		IF !EMPTY(LSalias) AND USED(LSalias)
			SELECT &LSalias
		ENDIF
		RETURN(LNvalor)
	ENDIF

    SELE &ALS_Empresa
  	SET ORDER TO TAG empresa
    SEEK PrmEmpresa
	IF !FOUND()
		IF !EMPTY(LSalias) AND USED(LSalias)
			SELECT &LSalias
		ENDIF
		RETURN(LNvalor)
	ENDIF


    SELE &ALS_Grupo
  	SET ORDER TO TAG codigo
    SEEK PrmProduto
	IF !FOUND()
		IF !EMPTY(LSalias) AND USED(LSalias)
			SELECT &LSalias
		ENDIF
		RETURN(LNvalor)
	ENDIF


	SELECT &Als_tipooper
	SET ORDER TO TAG tipo
	SEEK 'S'+ &Als_orcamento .tipo
	IF !FOUND()
		SEEK 's'+  &Als_orcamento .tipo  	
	ENDIF
	IF !FOUND()
		IF !EMPTY(LSalias) AND USED(LSalias)
			SELECT &LSalias
		ENDIF
		RETURN(LNvalor)
	ENDIF

	*------------------------------------------------------------*
**    IF &ALS_tipooper .ch_opera = "2" && TRANSFERENCIAS


        DO CASE

		  CASE &ALS_Orcamento .data < CTOD("01.05.2003")
			DO trf_ate010503

		  CASE &ALS_Orcamento .data < CTOD("01.09.2012")
			DO trf_dep010503
          OTHERWISE

			DO trfdp1912

        ENDCASE



				
****  ENDIF
	*------------------------------------------------------------*

	IF !EMPTY(LSalias) AND USED(LSalias)
		SELECT &LSalias
	ENDIF
RETURN(LNvalor)




*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _48H0Y4X8X           PRVlrVenda VALID                   º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         PRECO,     Record Number:    4     º
*       º Variable:            PRVlrVenda                         º
*       º Called By:           VALID Clause                       º
*       º Object Type:         Push Button                        º
*       º Snippet Number:      3                                  º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*


FUNCTION _48h0y4x8x     &&  PRVlrVenda VALID
#REGION 1
return
	*------------------------------------------------------------*
	* CLASSIFICACAO:  [*****]
	*------------------------------------------------------------*
	* OBJETIVO....: Informar Preo de Tabela do Produto
	*------------------------------------------------------------*
	* COMENTARIO..:   A funcao permite identificar :
	*
	*					- TABELA EM VIGOR : Conforme a data passada
	*				como parametro;
	*
	*					- EMPRESA DE REFERENCIA : Duas Empresas podem
	*				usar uma tabela comum para evitar redundancia de
	*				informaäes ;
	*					EX : SIA usa tabela 2 (EMPTAB = 2)
	*						 W-3 refere a mesma (EMPTAB = 2)
	*
	*					- PRECO DIFERENCIADO PARA :
	*						Transferencia
	*						Vendas E Outras
	*------------------------------------------------------------*
	* OBS........ :
	*------------------------------------------------------------*
	*  TABELAS....:
	*------------------------------------------------------------*
	*  PARAMETROS..:
	*		LNemp..........: Empresa que se quer obter informacoes
	*		LSnatu_oper....: Indicativo da Natureza da Opercao
	*							(2) = 	Transferencia
	*							(<>2)	=	Outras Operacoes
	*						  Alteram a forma de definir o preco
	*		LSTpOper.......: TIPO Identificador da Operacao Comercial
	*		LScodigo..........: Codigo do produto
    *       LDdata.........: Data para Refereciar a tabela em Vigor
	*
	*------------------------------------------------------------*
	*  RETORNO.....:
	*		LNpreco........: Preco Localizado
	*		LSclascms......: Grupo de Comissao 		
	*------------------------------------------------------------*
	* EXEMPLO : CHAMADA DO PROGRAMA ?
	*------------------------------------------------------------*

FUNCTION PRVlrVenda
PARAMETERS PrmEmpresa, PrmOrcamento, PrmProduto,;
 			ALS_Empresa,ALS_Orcamento,ALS_Preco

	=W_DEFPROC("rotinas.spr")
	PRIVATE LSalias

	PRIVATE LNpreco
	PRIVATE LNtbVigor, LSsrVigor

	*-----------------------------------------------------------*

	LSalias	= ALIAS()
	*-----------------------------------------------------------*
	LNpreco 	= 0
	STORE 0  TO LNtbVigor
	STORE "" TO LSsrVigor

	*-----------------------------------------------------------*
	*-----------------------------------------------------------*
	*--------------------------------------------------------

    SELE &ALS_Empresa
  	SET ORDER TO TAG empresa
    SEEK PrmEmpresa
	IF !FOUND()
		IF !EMPTY(LSalias) AND USED(LSalias)
			SELECT &LSalias
		ENDIF
		RETURN(LNpreco)
	ENDIF
	

	SELECT &ALS_Orcamento
	SET ORDER TO tag geral
	SEEK STR(PrmEmpresa,3)+STR(PrmOrcamento,6)
	IF !FOUND()
		IF !EMPTY(LSalias) AND USED(LSalias)
			SELECT &LSalias
		ENDIF
		RETURN(LNpreco)
	ENDIF

	SELECT &Als_tipooper
	SET ORDER TO TAG tipo
	SEEK 'S'+ &Als_orcamento .tipo
	IF !FOUND()
		SEEK 's'+  &Als_orcamento .tipo  	
	ENDIF
	IF !FOUND()
		IF !EMPTY(LSalias) AND USED(LSalias)
			SELECT &LSalias
		ENDIF
		RETURN(LNpreco)
	ENDIF

	*------------------------------------------------------------*

	IF !PRtabvigor(( &ALS_Orcamento .data ),LNtbVigor, LSsrVigor)
		IF !EMPTY(LSalias) AND USED(LSalias)
			SELECT &LSalias
		ENDIF
		RETURN(LNpreco)
	ENDIF

	*------------------------------------------------------------*
    SELECT &ALS_preco
   	SET ORDER TO TAG tabela
    IF SEEK(STR( &ALS_empresa .emptab,3);
           +STR( LNtbVigor ,3)+ LSsrVigor + PrmProduto)
       LNpreco 		=   &ALS_preco .preco
    ELSE
        LNpreco 	=	0
	ENDIF
	*------------------------------------------------------------*
	IF !EMPTY(LSalias) AND USED(LSalias)
		SELECT &LSalias
	ENDIF
RETURN(LNpreco)




*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _48H0Y4X8Y           PRClas_Cms VALID                   º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         PRECO,     Record Number:    5     º
*       º Variable:            PRClas_Cms                         º
*       º Called By:           VALID Clause                       º
*       º Object Type:         Push Button                        º
*       º Snippet Number:      4                                  º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*


FUNCTION _48h0y4x8y     &&  PRClas_Cms VALID
#REGION 1
return
	*------------------------------------------------------------*
	* CLASSIFICACAO:  [*****]
	*------------------------------------------------------------*
	* OBJETIVO....: Informar Preo de Tabela do Produto
	*------------------------------------------------------------*
	* COMENTARIO..:   A funcao permite identificar :
	*
	*					- TABELA EM VIGOR : Conforme a data passada
	*				como parametro;
	*
	*					- EMPRESA DE REFERENCIA : Duas Empresas podem
	*				usar uma tabela comum para evitar redundancia de
	*				informaäes ;
	*					EX : SIA usa tabela 2 (EMPTAB = 2)
	*						 W-3 refere a mesma (EMPTAB = 2)
	*
	*					- PRECO DIFERENCIADO PARA :
	*						Transferencia
	*						Vendas E Outras
	*------------------------------------------------------------*
	* OBS........ :
	*------------------------------------------------------------*
	*  TABELAS....:
	*------------------------------------------------------------*
	*  PARAMETROS..:
	*		LNemp..........: Empresa que se quer obter informacoes
	*		LSnatu_oper....: Indicativo da Natureza da Opercao
	*							(2) = 	Transferencia
	*							(<>2)	=	Outras Operacoes
	*						  Alteram a forma de definir o preco
	*		LSTpOper.......: TIPO Identificador da Operacao Comercial
	*		LScodigo..........: Codigo do produto
    *       LDdata.........: Data para Refereciar a tabela em Vigor
	*
	*------------------------------------------------------------*
	*  RETORNO.....:
	*		LSclascms........: Preco Localizado
	*		LSclascms......: Grupo de Comissao 		
	*------------------------------------------------------------*
	* EXEMPLO : CHAMADA DO PROGRAMA ?
	*------------------------------------------------------------*

FUNCTION PRClas_Cms
PARAMETERS PrmEmpresa, PrmOrcamento, PrmProduto

	=W_DEFPROC("rotinas.spr")
	PRIVATE LSalias

	PRIVATE LSclascms
	PRIVATE LNtbVigor, LSsrVigor


    PRIVATE ARQ_Empresa,ALS_Empresa
    PRIVATE ARQ_Orcamento,ALS_Orcamento
    PRIVATE ARQ_Preco,ALS_Preco



	*-----------------------------------------------------------*

	LSalias	= ALIAS()
	*-----------------------------------------------------------*

	LSclascms 	= ""
	STORE 0  TO LNtbVigor
	STORE "" TO LSsrVigor

	*-----------------------------------------------------------*
	*-----------------------------------------------------------*
    ARQ_Empresa     = NetArqAgain("EMPRESA")
    ALS_Empresa     = Alias()

    ARQ_Orcamento  = NetArqAgain("ORCAMENTO")
    ALS_Orcamento  = Alias()

    ARQ_Preco     = NetArqAgain("PRECO")
    ALS_Preco     = Alias()

	*--------------------------------------------------------
    IF (ARQ_Empresa + ARQ_Orcamento + ARQ_Preco) > 100000
								    && HOUVE FALHA ABERT
	    =up_fecha("&ALS_Empresa")
	   	=up_fecha("&ALS_Orcamento")
	   	=up_fecha("&ALS_Preco")
		IF !EMPTY(LSalias) AND USED(LSalias)
			SELECT &LSalias
		ENDIF
		RETURN(LSclascms)
	ENDIF

	*--------------------------------------------------------

    SELE &ALS_Empresa
  	SET ORDER TO TAG empresa
    SEEK PrmEmpresa
	IF !FOUND()
	    =up_fecha("&ALS_Empresa")
	   	=up_fecha("&ALS_Orcamento")
	   	=up_fecha("&ALS_Preco")
		IF !EMPTY(LSalias) AND USED(LSalias)
			SELECT &LSalias
		ENDIF
		RETURN(LSclascms)
	ENDIF
	

	SELECT &ALS_Orcamento
	SET ORDER TO tag geral
	SEEK STR(PrmEmpresa,3)+STR(PrmOrcamento,6)
	IF !FOUND()
	    =up_fecha("&ALS_Empresa")
	   	=up_fecha("&ALS_Orcamento")
	   	=up_fecha("&ALS_Preco")
		IF !EMPTY(LSalias) AND USED(LSalias)
			SELECT &LSalias
		ENDIF
		RETURN(LSclascms)
	ENDIF


	*------------------------------------------------------------*

	IF !PRtabvigor(( &ALS_Orcamento .data ),LNtbVigor, LSsrVigor)
	    =up_fecha("&ALS_Empresa")
	   	=up_fecha("&ALS_Orcamento")
	   	=up_fecha("&ALS_Preco")
		IF !EMPTY(LSalias) AND USED(LSalias)
			SELECT &LSalias
		ENDIF
		RETURN(LSclascms)
	ENDIF

	*------------------------------------------------------------*
    SELECT &ALS_preco
   	SET ORDER TO TAG tabela
    IF SEEK(STR( &ALS_empresa .emptab,3);
           +STR( LNtbVigor ,3)+ LSsrVigor + PrmProduto)
       LSclascms 		=   &ALS_preco .clas_cms
	ENDIF
	*------------------------------------------------------------*
    =up_fecha("&ALS_Empresa")
   	=up_fecha("&ALS_Orcamento")
   	=up_fecha("&ALS_Preco")
	IF !EMPTY(LSalias) AND USED(LSalias)
		SELECT &LSalias
	ENDIF
RETURN(LSclascms)




*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _48H0Y4X8Z           PRCusto VALID                      º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         PRECO,     Record Number:    6     º
*       º Variable:            PRCusto                            º
*       º Called By:           VALID Clause                       º
*       º Object Type:         Push Button                        º
*       º Snippet Number:      5                                  º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*

FUNCTION _48h0y4x8z     &&  PRCusto VALID
#REGION 1
return

FUNCTION  PRCusto
	PARAMETERS 	LSproduto,;
				LSufOrigem,;
				LSufDestino,;
				LNvlrMercadoria,;
				LNvlrIPI,;
				LNcdg_Forn,;
				PrmCUSTO_IND

	PRIVATE LNcusto, LNRtdoSaida, LNRtdoEntrada
	PRIVATE LNtp_mercad
	PRIVATE LNaliq_icms, LNicms
	LNcusto = 0
		

	=W_DEFPROC("tributar.spr")
	LNRtdoSaida = TRRtdoSaida(LSproduto,;
				LSufOrigem,;
				LSufDestino,;
				LNvlrMercadoria,;
				LNvlrIPI,;
				LNcdg_Forn)
	=W_DEFPROC("tributar.spr")
	LNRtdoEntrada = TRRtdoEntrada(LSproduto,;
				LSufOrigem,;
				LSufDestino,;
				LNvlrMercadoria,;
				LNvlrIPI,;
				LNcdg_Forn)
	
	=W_DEFPROC("tributar.spr")
	LNaliq_icms = TRAlqIcmInUF(LSufDestino)

	=W_DEFPROC("tributar.spr")
	LNtp_mercad = TRRegTrbMercadoria(LSufDestino,LSproduto)


	LNicms = 0.00
	*---------------------------------------------------------*
	=W_DEFPROC("tributar.spr")
	LNicms = TRicmNormal (LSproduto,;
				LSufOrigem,;
				LSufDestino,;
				LNvlrMercadoria,;
				LNvlrIPI,;
				LNcdg_Forn)
	*---------------------------------------------------------*

	IF LNtp_mercad = 1  && TRIBUTADA
		LNcusto = LNvlrMercadoria + LNvlrIPI + PrmCUSTO_IND+;
				LNRtdoEntrada + LNRtdoSaida	 - LNicms
	ELSE
		LNcusto = LNvlrMercadoria + LNvlrIPI + PrmCUSTO_IND+;
				LNRtdoEntrada + LNRtdoSaida	
	ENDIF

	*---------------------------------------------------------*



RETURN(LNcusto)


*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _48H0Y4XA8           PRtabvigor VALID                   º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         PRECO,     Record Number:    7     º
*       º Variable:            PRtabvigor                         º
*       º Called By:           VALID Clause                       º
*       º Object Type:         Push Button                        º
*       º Snippet Number:      6                                  º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*
FUNCTION _48h0y4xa8     &&  PRtabvigor VALID
#REGION 1
RETURN

FUNCTION PRtabvigor
	PARAMETER LDdata,LNtabela,LSserie
    =W_DEFPROC("rotinas.spr")
    PRIVATE LSalias
	PRIVATE LFcadtab

	LNtabela = 0
   	LSserie  = ""

    LSalias	    = ALIAS()
    LFcadtab	= NetArq("cadtab")
    IF (LFcadtab) > 100000 && HOUVE FALHA ABERT
		=UP_fecha("cadtab" ,LFcadtab)
		IF !EMPTY(LSalias) AND USED(LSalias)
			SELECT &LSalias
		ENDIF
    	RETURN(.f.)
    ENDIF
	SELE cadtab
	SET ORDER TO TAG tabela
	GO TOP
	DO WHILE !EOF()
		IF LDdata < cadtab.dtinicio or LDdata > cadtab.dtfim
			skip
			LOOP
		ENDIF
		LNtabela = cadtab.tabela
    	LSserie  = cadtab.serie
		EXIT
	ENDDO
	IF EOF()
	   DO OBJ_ALER.SPR WITH ;
		  "Nao foi encontrada nenhuma Tabela que vigor nesta data "+ ;
		    DTOC(LDdata)
	ENDIF
	=UP_fecha("cadtab" ,LFcadtab)
	IF !EMPTY(LSalias) AND USED(LSalias)
		SELECT &LSalias
	ENDIF
RETURN(LNtabela <> 0)


*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _48H0Y4XAF           PRdesconto VALID                   º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         PRECO,     Record Number:    8     º
*       º Variable:            PRdesconto                         º
*       º Called By:           VALID Clause                       º
*       º Object Type:         Push Button                        º
*       º Snippet Number:      7                                  º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*
FUNCTION _48h0y4xaf     &&  PRdesconto VALID
#REGION 1
RETURN

FUNCTION PRdesconto
    PARAMETER LNemp,LSCodigo,LDdata,LNnat_clie,LNdesconto,LNerro, ;
        PrmVendedor

    = W_DEFPROC("rotinas.spr")
    PRIVATE LSalias
    PRIVATE LFpreco,LFprod_cms,LFempresa
	PRIVATE LNtabela,LSserie
    PRIVATE LFvertab
    PRIVATE LNFuncaoComissao

	LNdesconto  = 0
    LNERRO      = 0
	LNtabela	= 0
	LSserie 	= ""

	IF TYPE("PrmVendedor") = "N"
    	=W_DEFPROC("USUARIO.SPR")
		LNFuncaoComissao = USGetComissFuncao(PrmVendedor)
	ELSE

		LNFuncaoComissao = 0
	ENDIF

    LSalias	    = ALIAS()
    LFpreco     = NetArq("preco")
    LFprod_cms  = NetArq("prod_cms")
    LFempresa   = NetArq("empresa")
    IF (LFpreco+LFprod_cms) > 100000 && HOUVE FALHA ABERT
	    DO ULFchDesconto
	    LNERRO = 99         && OUTRAS FALHAS
    	RETURN(.F.)
    ENDIF
    IF !Prtabvigor(LDdata,LNtabela,LSserie)
	    DO ULFchDesconto
		LNERRO = 1         && NAO HA TABELA EM VIGOR NESTE PERIODO
    	RETURN(.F.)
    ENDI
    IF !Prpromocao(LNemp,LScodigo,LNnat_clie,LDdata,{},0,LNdesconto)
	   SELE empresa
	   SET ORDER TO TAG empresa 	
	   SEEK LNemp
	   IF !FOUND()
	       DO ULFchDesconto
		   LNERRO = 99         && OUTRAS FALHAS
    	   RETURN(.F.)
	   ENDIF
       SELE Preco
       SET ORDE TO tabela
       seek str(empresa.emptab,3)+STR(LNtabela,3)+LSserie+LSCodigo

       IF !FOUND()
		  DO ULFchDesconto
		  LNERRO = 4         && PRODUTO NAO CADASTRO EM TABELA PRECO
          RETURN(.F.)
       ENDI

       LSclas_cms = Preco.clas_cms

       SELE Prod_cms
       SET ORDE TO tabela



	   *--------------------------------------------------------------*	
	   *    O controle de desonto por funcao nao e viavel sendo assim
	   * a comissao fica vinculada a funcao mas o desconto sera o que
	   * estiver cadastrado no nivel padrao = 00
	   *--------------------------------------------------------------*	
       *seek str(LNemp,3)+STR(LNtabela,3)+LSserie+;
       *       LSClas_cms+str(LNFuncaoComissao,2)
       *IF !FOUND()
	   *    seek str(LNemp,3)+STR(LNtabela,3)+LSserie+LSClas_cms+str(0,2)
       *   IF !FOUND()
	   *	  DO ULFchDesconto
	   *      LNERRO = 1   && PRODUTO NAO CADASTRADO NA TABELA PROD_CMS
	   *      RETURN(.F.)
       *   ENDI
       * ENDIF
	   *--------------------------------------------------------------*	

       seek str(LNemp,3)+STR(LNtabela,3)+LSserie+LSClas_cms+str(0,2)
   	   IF !FOUND()
		  DO ULFchDesconto
          LNERRO = 1   && PRODUTO NAO CADASTRADO NA TABELA PROD_CMS
          RETURN(.F.)
   	   ENDI



       Do Case
          Case LNnat_clie = 0
               LNdesconto = prod_cms.desc_varej
          Case LNnat_clie = 1
               LNdesconto = prod_cms.desc_reven
          Case LNnat_clie = 2
               LNdesconto = prod_cms.desc_ppubl
          Case LNnat_clie = 3
               LNdesconto = prod_cms.desc_frota
       EndC
    ENDI

	DO ULFchDesconto

    IF LNdesconto=0
       LNERRO = 2
      ELSE
       LNERRO = 3
    ENDI
RETURN(LNdesconto<>0)

PROCEDURE ULFchDesconto
    =UP_fecha("preco"    ,LFpreco)
	=UP_fecha("prod_cms" ,LFprod_cms)
	=UP_fecha("empresa" ,LFempresa)
	IF !EMPTY(LSalias) AND USED(LSalias)
	   SELECT &LSalias
	ENDIF
RETURN


*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _48H0Y4XAN           PRbrow_tab VALID                   º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         PRECO,     Record Number:    9     º
*       º Variable:            PRbrow_tab                         º
*       º Called By:           VALID Clause                       º
*       º Object Type:         Push Button                        º
*       º Snippet Number:      8                                  º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*
FUNCTION _48h0y4xan     &&  PRbrow_tab VALID
#REGION 1
RETURN

FUNCTION PRbrow_Tab
PARAMETERS LNemp,LNempTab,LNtab,LSserie,LDdtsaldo,LScodigo,LSclassifica
	*------------------------------------------------------------*
	* CLASSIFICACAO:  [*****]
	*------------------------------------------------------------*
	* OBJETIVO....: Visualizar Tabela de Precos,Saldos e Reservas
	*------------------------------------------------------------*
	* COMENTARIO..: A funcao permite visualizar a TABELA DE PRECOS
	*			demontrando SALDO e REZERVAS DE CADA PRODUTO
	*------------------------------------------------------------*
	* OBS........ :
	*------------------------------------------------------------*
	*  TABELAS....:
	*------------------------------------------------------------*
	*  PARAMETROS..:
	*		LNemp..........: Empresa que se quer obter informacoes
	*		LNemptab.......: Empresa de Referencia Para Tabela de Precos
	*		LNtab..........: Codigo da Tabela de Precos
	*		LSserie........: Serie da Tabela de Precos
	*		LDdtsaldo......: Data de Referencia para Consultar
	*						tabela de SALDOS
	*		LScodigo.......: Codigo do Produto que se quer
	*						 Posicionar ou Aproximar ou retornar
	*						 para rotina chamadora
	*		LSclassifica...: Classificao do Produto que se quer
	*						 Posicionar ou Aproximar ou retornar
	*						 para rotina chamadora
	*------------------------------------------------------------*
	*  RETORNO.....:- REGISTRO DO PRODUTO e PRECO POSICIONADO para
	*					ser tratado na rotina
	*------------------------------------------------------------*
	* EXEMPLO : CHAMADA DO PROGRAMA SCGC201.SCR
	*------------------------------------------------------------*
	=W_DEFPROC("rotinas.spr")
	PRIVATE LSalias
	PRIVATE LSemptmp

	*-----------------------------------------------------------*
	LSalias	= ALIAS()
	*-----------------------------------------------------------*
	PUSH KEY CLEAR		&& desabilita teclas de atalho def. anteriormente



	*------------------------------------------------------------*

	=W_DEFPROC("AUTOPROC.SPR")
	=APTempGeral()

	*------------------------------------------------------------*

	SELE preco
	SET ORDER TO TAG tabela
	SET NEAR ON
	SEEK STR(LNempTab,3)+;
	     STR(LNtab,3)+;
	     LSserie+;
         ALLTRIM(LScodigo)
	SET NEAR OFF


    SELECT saldo
    SET ORDER TO TAG clas_saldo
    SELECT grupo
    SET ORDER TO TAG codigo
    SEEK preco.codigo
		
    SET ORDER TO TAG ordem

    SET RELATION TO STR(LNempTab,3)+STR(LNtab,3)+LSserie+;
                            grupo.codigo INTO preco ADDITIVE
    SET RELATION TO STR(LNemp,3)+grupo.classifica+;
        STR(YEAR(LDdtsaldo),4)+STR(MONTH(LDdtsaldo),2) ;
        	INTO saldo ADDITIVE
*--------
    LSemptmp =  STRTRAN(STR(LNemp,3),' ','0')

	KEYBOARD "{CTRL-F10}"

 	DO loc_dlog WITH .T.,;
		  " grupo.FLG_DESCRI = 'S' OR ;
		  (('&LSemptmp' $ grupo.tab_preco OR grupo.tp_mercad = 7)) ;
		    AND (!EMPTY(preco.codigo) OR ;
			 grupo.cdg_tipo <> 4) ","","B","ULtabres"

	CLEAR FIELDS
	SET FIELDS OFF
    SET ORDER TO TAG classifica
	SET RELATION TO
	*--------------------------------------------------------------*
	POP KEY 	&& reabilita teclas de atalho def. anteriormente
	*-----------------------------------------------------------*
	IF !EMPTY(LSalias) AND USED(LSalias)
		SELECT &LSalias
	ENDIF
RETURN(.T.)



*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _48H0Y4XAO           PRpromocao VALID                   º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         PRECO,     Record Number:   10     º
*       º Variable:            PRpromocao                         º
*       º Called By:           VALID Clause                       º
*       º Object Type:         Push Button                        º
*       º Snippet Number:      9                                  º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*
FUNCTION _48h0y4xao     &&  PRpromocao VALID
#REGION 1
RETURN

FUNCTION PRPROMOCAO
PARAMETERS LNemp,LScod,LNNatuclie,LDFIM,LDINICIO,LNPRECO,LNDesconto

	*------------------------------------------------------------*
	* CLASSIFICACAO:  [*****]
	*------------------------------------------------------------*
	* OBJETIVO....: Informar Preo Promocional
	*------------------------------------------------------------*
	* COMENTARIO..: A funcao permite informar preco e desconto
	*			    promocional atraves de parametros
	*------------------------------------------------------------*
	* OBS........ :
	*------------------------------------------------------------*
	*  TABELAS....: PROMOCAO
	*------------------------------------------------------------*
	*  PARAMETROS..:
	*		LNemp..........: Empresa que se quer obter informacoes
	*		LScod..........: Codigo do produto
    *       LNNotclie......: Tipo do Cliente
    *                        0 - Varejo
    * 						 1 - Revenda
    *     					 2 - Poder Publico
    *						 3 - Frota
	*		LDFim..........: Data Final da Promocao
	*       LDInicio.......: Data Inicial da Promocao
	*       LNPreco........: Preco Promocao
    *       LNDesconto.....: Desconto conforme tipo do cliente
    *       LFretorno......: .t.  => Tem Promocao na data informada
    *                        .f.  => Nao Tem Promocao na data informada
	*------------------------------------------------------------*
	*  RETORNO.....: LFretorno
	*------------------------------------------------------------*
	* EXEMPLO : CHAMADA DO PROGRAMA ?
	*------------------------------------------------------------*
	=W_DEFPROC("rotinas.spr")
	PRIVATE LSalias
	PRIVATE LFretorno, LFpromocao
	*-----------------------------------------------------------*
	LSalias	= ALIAS()
	*-----------------------------------------------------------*
	LFpromocao		= NetArq("promocao")
	IF (LFpromocao) > 100000 && HOUVE FALHA DE ABERTURA
		=UP_fecha("promocao" ,LFpromocao)
		IF !EMPTY(LSalias) AND USED(LSalias)
			SELECT &LSalias
		ENDIF
		RETURN(.f.)
	ENDIF

	LFretorno 	= .f.

    SELE PROMOCAO
    SET ORDE TO PROMOCAO
    SET NEAR ON
    SEEK STR(LNemp,3)+LScod+DTOS(LDfim)
    SET NEAR OFF
    IF promocao.empresa <> LNemp ;
    	OR promocao.codigo <> LScod ;
    	OR LDfim < promocao.dt_inicio ;
    	OR LDfim > promocao.Dt_fim
    	
       LFretorno = .f.
      else
       LFretorno = .t.
	   LDFim 	=  promocao.dt_fim
	   LDInicio =  promocao.dt_inicio
	   LNPreco  =  promocao.preco
	   	Do Case
	    	Case LNNatuclie = 0
	           LNDesconto = promocao.desc_varej
	     	Case LNNatuclie = 1
   	           LNDesconto = promocao.desc_reven
	      	Case LNNatuclie = 2
   	           LNDesconto = promocao.desc_ppubl
	      	Case LNNatuclie = 3
   	           LNDesconto = promocao.desc_frota
   	  	EndC
   	ENDI
	IF LNdesconto = 0
       LFretorno = .f.
	ENDIF
	
	=UP_fecha("promocao" ,LFpromocao)
   IF !EMPTY(LSalias) AND USED(LSalias)
      SELECT &LSalias
   ENDIF
RETURN(LFretorno)


*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _48H0Y4XAP           PRVlrTabVgr VALID                  º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         PRECO,     Record Number:   11     º
*       º Variable:            PRVlrTabVgr                        º
*       º Called By:           VALID Clause                       º
*       º Object Type:         Push Button                        º
*       º Snippet Number:      10                                 º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*


FUNCTION _48h0y4xap     &&  PRVlrTabVgr VALID
#REGION 1
return
	*------------------------------------------------------------*

FUNCTION PRVlrTabVgr
PARAMETERS PrmEmpresa, PrmData,PrmProduto

	=W_DEFPROC("rotinas.spr")
	PRIVATE LSalias

	PRIVATE LNpreco
	PRIVATE LNtbVigor, LSsrVigor
	PRIVATE LNEmpTab

	*-----------------------------------------------------------*

	LSalias	= ALIAS()
	*-----------------------------------------------------------*
	LNpreco 	= 0
	STORE 0  TO LNtbVigor
	STORE "" TO LSsrVigor

	*-----------------------------------------------------------*
	=W_DEFPROC("EMPRESA.SPR")
	LNEmpTab = EMGetFieldValue(PrmEmpresa,"EMPTAB")

	*------------------------------------------------------------*

	IF !PRtabvigor(PrmData, LNtbVigor, LSsrVigor)
		IF !EMPTY(LSalias) AND USED(LSalias)
			SELECT &LSalias
		ENDIF
		RETURN(LNpreco)
	ENDIF

	*------------------------------------------------------------*
    SELECT preco
   	SET ORDER TO TAG tabela
    IF SEEK(STR( LNEmpTab, 3);
           +STR( LNtbVigor ,3)+ LSsrVigor + PrmProduto)
       LNpreco 		=   preco .preco
    ELSE
        LNpreco 	=	0
	ENDIF
	*------------------------------------------------------------*
	IF !EMPTY(LSalias) AND USED(LSalias)
		SELECT &LSalias
	ENDIF
RETURN(LNpreco)




*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _48H0Y4XAQ           PRVlrTransf VALID                  º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         PRECO,     Record Number:   12     º
*       º Variable:            PRVlrTransf                        º
*       º Called By:           VALID Clause                       º
*       º Object Type:         Push Button                        º
*       º Snippet Number:      11                                 º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*

FUNCTION _48h0y4xaq     &&  PRVlrTransf VALID
#REGION 1
return
*---------------------------------------------------------------*
	*------------------------------------------------------------*
	* CLASSIFICACAO:  [*****]
	*------------------------------------------------------------*
	* OBJETIVO....: Informar Valor do Produto Para Transferencia
	*------------------------------------------------------------*



PROCEDURE trfdp1912

		PRIVATE LSUFdestino


		=W_DEFPROC("TRIBUTAR.SPR")
	   	LNtp_mercad = TRDef_TpMercad(PrmEmpresa,PrmOrcamento,PrmProduto)

		*------------------------------------------------------------*
		SELECT &ALS_Saldo
	   	SET ORDER TO TAG clas_saldo
	   	SEEK STR(PrmEmpresa,3)+ &ALS_grupo .classifica+;
    	    	STR(YEAR( &ALS_Orcament .data ),4)+;
    	    	STR(MONTH( &ALS_Orcament .data ),2)

	   	IF FOUND()

			IF &ALS_saldo .sld_atu = 0
		        LNvalor		=	&ALS_saldo .vlr_atu / 1
			else
		        LNvalor		=	&ALS_saldo .vlr_atu / &ALS_saldo .sld_atu
			ENDIF

			***************************************************************
			*	      TRANSFERENCIA INTERNA DE MERCADORIA COM RETENCAO    *
			*   ENTRA NO CALCULO DE INDICES ESPECIFICOS					  *
			***************************************************************

			IF &ALS_tipooper .ch_desti = "1"  && INTERNAS

				DO CASE
					CASE	LNtp_mercad = 1
				        LNvalor	= ;
				          LNvalor/((100 -  &als_tipooper .aliq_icms) / 100)
					CASE	LNtp_mercad = 2
							LNvalor = LNvalor
					OTHERWISE
							LNvalor = LNvalor
				ENDCASE

			ELSE

				DO CASE
					CASE	LNtp_mercad = 1
				        LNvalor	= ;
				          LNvalor/((100 -  &als_tipooper .aliq_icms) / 100)
					CASE	LNtp_mercad = 2

						=W_DEFPROC("CLIENC.SPR")
						LSUFdestino = CNGetUFDestino(PrmEmpresa,;
													PrmOrcamento)

						=W_DEFPROC("TRIBUTAR.SPR")
						LNiva = TRGet_IVA(  &als_empresa .estado, ;
								            PrmProduto,;
								            LSUFdestino ,;
								            &ALS_Orcament .data )

						*=W_DEFPROC("TRIBUTAR.SPR")
						*LNiva=TRGet_IVA( &als_empresa .estado, PrmProduto)

						DO CASE
							CASE LNiva = 1.32
								LNvalor = LNvalor * 0.8945
							CASE LNiva = 1.42
								LNvalor = LNvalor * 0.8803
							CASE LNiva = 1.45
								LNvalor = LNvalor * 0.8761
							OTHERWISE							
								LNvalor = LNvalor
						ENDCASE
					OTHERWISE
							LNvalor = LNvalor
				ENDCASE
			ENDIF
	   ENDIF
       IF LNvalor = 0
			=W_DEFPROC("ITEMMOV.SPR")
            LNvalor = IMGetUltCstMedioEstq(PrmEmpresa, ;
                                          &ALS_Orcament .data, ;
                                           PrmProduto)
       ENDIF
RETURN





*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _48H0Y4XAR           PRVlrTransf VALID                  º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         PRECO,     Record Number:   13     º
*       º Variable:            PRVlrTransf                        º
*       º Called By:           VALID Clause                       º
*       º Object Type:         Push Button                        º
*       º Snippet Number:      12                                 º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*

FUNCTION _48h0y4xar     &&  PRVlrTransf VALID
#REGION 1
return
*---------------------------------------------------------------*
	*------------------------------------------------------------*
	* CLASSIFICACAO:  [*****]
	*------------------------------------------------------------*
	* OBJETIVO....: Informar Valor do Produto Para Transferencia
	*------------------------------------------------------------*



PROCEDURE trf_dep010503

		PRIVATE LSUFdestino


		=W_DEFPROC("TRIBUTAR.SPR")
	   	LNtp_mercad = TRDef_TpMercad(PrmEmpresa,PrmOrcamento,PrmProduto)

		*------------------------------------------------------------*
		SELECT &ALS_Saldo
	   	SET ORDER TO TAG clas_saldo
	   	SEEK STR(PrmEmpresa,3)+ &ALS_grupo .classifica+;
    	    	STR(YEAR( &ALS_Orcament .data ),4)+;
    	    	STR(MONTH( &ALS_Orcament .data ),2)

	   	IF FOUND()

			IF &ALS_saldo .sld_atu = 0
		        LNvalor		=	&ALS_saldo .vlr_atu / 1
			else
		        LNvalor		=	&ALS_saldo .vlr_atu / &ALS_saldo .sld_atu
			ENDIF

			***************************************************************
			*	      TRANSFERENCIA INTERNA DE MERCADORIA COM RETENCAO    *
			*   ENTRA NO CALCULO DE INDICES ESPECIFICOS					  *
			***************************************************************

			IF &ALS_tipooper .ch_desti = "1"  && INTERNAS

				DO CASE
					CASE	LNtp_mercad = 1
				        LNvalor	= ;
				          LNvalor/((100 -  &als_tipooper .aliq_icms) / 100)
					CASE	LNtp_mercad = 2
							LNvalor = LNvalor
					OTHERWISE
							LNvalor = LNvalor
				ENDCASE

			ELSE

				DO CASE
					CASE	LNtp_mercad = 1
				        LNvalor	= ;
				          LNvalor/((100 -  &als_tipooper .aliq_icms) / 100)
					CASE	LNtp_mercad = 2

						=W_DEFPROC("CLIENC.SPR")
						LSUFdestino = CNGetUFDestino(PrmEmpresa,;
													PrmOrcamento)

						=W_DEFPROC("TRIBUTAR.SPR")
						LNiva = TRGet_IVA(  &als_empresa .estado, ;
								            PrmProduto,;
								            LSUFdestino ,;
								            &ALS_Orcament .data )

						*=W_DEFPROC("TRIBUTAR.SPR")
						*LNiva=TRGet_IVA( &als_empresa .estado, PrmProduto)

						DO CASE
							CASE LNiva = 1.32
								LNvalor = LNvalor * 0.9055
							CASE LNiva = 1.42
								LNvalor = LNvalor * 0.8917
							CASE LNiva = 1.45
								LNvalor = LNvalor * 0.8877
							OTHERWISE							
								LNvalor = LNvalor
						ENDCASE
					OTHERWISE
							LNvalor = LNvalor
				ENDCASE
			ENDIF
	   ENDIF
RETURN



*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _48H0Y4XBX           PRVlrTransf VALID                  º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         PRECO,     Record Number:   14     º
*       º Variable:            PRVlrTransf                        º
*       º Called By:           VALID Clause                       º
*       º Object Type:         Push Button                        º
*       º Snippet Number:      13                                 º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*

FUNCTION _48h0y4xbx     &&  PRVlrTransf VALID
#REGION 1
return
*---------------------------------------------------------------*
	*------------------------------------------------------------*
	* CLASSIFICACAO:  [*****]
	*------------------------------------------------------------*
	* OBJETIVO....: Informar Valor do Produto Para Transferencia
	*------------------------------------------------------------*

PROCEDURE trf_ate010503

		=W_DEFPROC("TRIBUTAR.SPR")
	   	LNtp_mercad = TRDef_TpMercad(PrmEmpresa,PrmOrcamento,PrmProduto)

		*------------------------------------------------------------*
		SELECT &ALS_Saldo
	   	SET ORDER TO TAG clas_saldo
	   	SEEK STR(PrmEmpresa,3)+ &ALS_grupo .classifica+;
    	    	STR(YEAR( &ALS_Orcament .data ),4)+;
    	    	STR(MONTH( &ALS_Orcament .data ),2)
	   	IF FOUND()
			IF &ALS_saldo .sld_atu = 0
		        LNvalor		=	&ALS_saldo .vlr_atu / 1
			else
		        LNvalor		=	&ALS_saldo .vlr_atu / &ALS_saldo .sld_atu
			ENDIF
			***************************************************************
			*	      TRANSFERENCIA INTERNA DE MERCADORIA COM RETENCAO    *
			*   ENTRA NO CALCULO DE INDICES ESPECIFICOS					  *
			***************************************************************
			IF &ALS_tipooper .ch_desti = "1"
				DO CASE
					CASE	LNtp_mercad = 1
				        LNvalor	= ;
				          LNvalor/((100 -  &als_tipooper .aliq_icms) / 100)
					CASE	LNtp_mercad = 2
						************************************************
						*    Inicio de tratamento nao parametrizavel
						*	( ESPECIFICO)
						*	Para PNEUS Ind,Caminhao,Tratores,Agric,	
						*	Terrapl > "00448"  e < "00800"	
						************************************************
						IF LEFT( &ALS_grupo .classifica,5) > "00448" AND ;
						   LEFT( &ALS_grupo .classifica,5) < "00800"
						        LNvalor = LNvalor * 1.24
						ELSE
						        LNvalor = LNvalor * 1.26
						ENDIF				
					OTHERWISE
						LNvalor = LNvalor
				ENDCASE
			ELSE
		        LNvalor = LNvalor / ((100 - &ALS_tipooper .aliq_icms) / 100)
			ENDIF
	   ENDIF
RETURN
