*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º 06/25/09            OUTRASRT.SPR               15:20:59 º
*       º                                                         º
*       ÇÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¶
*       º                                                         º
*       º Author's Name                                           º
*       º                                                         º
*       º Copyright (c) 2009 Company Name                         º
*       º Address                                                 º
*       º City,     Zip                                           º
*       º                                                         º
*       º Description:                                            º
*       º This program was automatically generated by GENSCRN.    º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½


#REGION 0
REGIONAL m.currarea, m.talkstat, m.compstat

IF SET("TALK") = "ON"
	SET TALK OFF
	m.talkstat = "ON"
ELSE
	m.talkstat = "OFF"
ENDIF
m.compstat = SET("COMPATIBLE")
SET COMPATIBLE FOXPLUS

*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º                MS-DOS Window definitions                º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*


*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º              OUTRASRT/MS-DOS Screen Layout              º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*

#REGION 1
@ 2,1 GET OUAnexaFilial ;
	PICTURE "@*HN OUAnexaFilial-Transf Dados de uma Filial de DBF(Origem) para DBF(Destino)" ;
	SIZE 1,75,1 ;
	DEFAULT 1 ;
	VALID _2on0wwesf()
@ 3,3 GET OUAnexaDBF ;
	PICTURE "@*HN OUAnexaDBF-Processa transferencia de registro entre tabelas anexadas" ;
	SIZE 1,70,1 ;
	DEFAULT 1 ;
	VALID _2on0wwesg()
@ 6,1 GET OUCtrlIndexaDBF ;
	PICTURE "@*HN OUCtrlIndexaDBF-Controla a Reindexacao Principais dbf de um dir informado" ;
	SIZE 1,75,1 ;
	DEFAULT 1 ;
	VALID _2on0wwesh()
@ 7,3 GET OUIndexaDBF ;
	PICTURE "@*HN OUIndexaDBF-Processa Idexacao de registro entre tabelas principais" ;
	SIZE 1,68,1 ;
	DEFAULT 1 ;
	VALID _2on0wwetc()



READ


#REGION 0
IF m.talkstat = "ON"
	SET TALK ON
ENDIF
IF m.compstat = "ON"
	SET COMPATIBLE ON
ENDIF


*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º              OUTRASRT/MS-DOS Cleanup Code               º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*

#REGION 1
return










*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _2ON0WWESF           OUAnexaFilial VALID                º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         OUTRASRT,     Record Number:    2  º
*       º Variable:            OUAnexaFilial                      º
*       º Called By:           VALID Clause                       º
*       º Object Type:         Push Button                        º
*       º Snippet Number:      1                                  º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*
FUNCTION _2on0wwesf     &&  OUAnexaFilial VALID
#REGION 1
RETURN
*-----------------------------------------------------------------*
*	Em algumas situacoes ocorreram danos nos dados de uma filial
* na central e para evitar que os dados de outras filiais fossem
* perdidos pela restauracao de um backup sugerimos a presente rotina
*
*   - > RESTAURAR BACKUP PARA UMA AREA ESPECIFICA
*   - > INFORMAR O CAMINHO ORIGEM (BACKUP)
*   - > INFORMAR O CAMINHO DESTINO (BASE A SER RECUPERADA)
*   - > INFORMAR FILIAL A SER RECUPERADA
*   - > PROCESSAR RECUPERACAO
*       -> ELIMINAR REGISTROS DA FILIAL NA BASE DESTINO
*       -> IMPORTAR REGISTROS DA FILIAL DA BASE ORIGEM PARA DESTINO
*-----------------------------------------------------------------*


PROCEDURE OUAnexaFilial
	PARAMETERS PrmTAGProc,PrmEmp,PrmDirOrigem,PrmDirDestino
	
	*---------------------------------------------------------------*
	* PrmTAGProc = uma identificacao criada para o operador
	*            identificando o processo em curso e que sera usado
	*            para evitar que ,caso haja interrupcao do processo,
	*            os arquivos ja processados seja reprocessados
	*
	*---------------------------------------------------------------*

	=W_DEFPROC("rotinas.spr")


	PRIVATE  LSarqOrig,LSarqDest, LSaliasDestino


	PRIVATE  LSalias

	PRIVATE FlgCI,;
	        FlgCTRLREFN,;
	        FlgDUPLICAT,;
	        FlgITEMMOV,;
	        FlgITMANEXO,;
	        FlgLANCACX,;
	        FlgMAPAECF,;
	        FlgNF_ANEXO,;
	        FlgNOTA,;
	        FlgNOTAENT,;
	        FlgNOTAITE,;
	        FlgORC_ANEX,;
	        FlgORCA_PGT,;
	        FlgORCAMENT,;
	        FlgORCATMP,;
	        FlgPEDIDO,;
	        FlgPEDITE,;
	        FlgQE,;
	        FlgRETORNBC,;
	        FlgRETORNMV,;
	        FlgSALDO,;
	        FlgREMESSBC,;
	        FlgREMESSMV


	store .f. to ;
	        FlgCI,;
	        FlgCTRLREFN,;
	        FlgDUPLICAT,;
	        FlgITEMMOV,;
	        FlgITMANEXO,;
	        FlgLANCACX,;
	        FlgMAPAECF,;
	        FlgNF_ANEXO,;
	        FlgNOTA,;
	        FlgNOTAENT,;
	        FlgNOTAITE,;
	        FlgORC_ANEX,;
	        FlgORCA_PGT,;
	        FlgORCAMENT,;
	        FlgORCATMP,;
	        FlgPEDIDO,;
	        FlgPEDITE,;
	        FlgQE,;
	        FlgRETORNBC,;
	        FlgRETORNMV,;
	        FlgSALDO,;
	        FlgREMESSBC,;
	        FlgREMESSMV





	*************** BUSCA PARAMETROS PARA PROXIMO RELATO *****
	ON ERROR TMP=""   && EVITA MENS. DE ERRO QDO ARQ.NAO EXISTIR
	ARQTMP = "\TMP\"+ALLTRIM(PrmTAGProc)
	RESTORE FROM  &ARQTMP ADDITIVE
	ON ERROR
	****************************************************************



	
	LSalias= ALIAS()
    *-------------------------------------------------------------*

	IF FlgCI = .F.
		FlgCI       = OUAnexaDBF(PrmEmp,PrmDirOrigem,PrmDirDestino,"CI")
		SAVE TO &ARQTMP ALL LIKE Flg*
	ENDIF

	IF FlgCTRLREFN = .F.
		FlgCTRLREFN =;
			 OUAnexaDBF(PrmEmp,PrmDirOrigem,PrmDirDestino,"CTRLREFN")
		SAVE TO &ARQTMP ALL LIKE Flg*
	ENDIF

	IF FlgDUPLICAT = .F.
		FlgDUPLICAT =;
			 OUAnexaDBF(PrmEmp,PrmDirOrigem,PrmDirDestino,"DUPLICAT")
		SAVE TO &ARQTMP ALL LIKE Flg*
	ENDIF

	IF FlgITEMMOV = .F.
		FlgITEMMOV  =;
			 OUAnexaDBF(PrmEmp,PrmDirOrigem,PrmDirDestino,"ITEMMOV")
		SAVE TO &ARQTMP ALL LIKE Flg*
	ENDIF

	IF FlgITMANEXO = .F.
		FlgITMANEXO =;
			 OUAnexaDBF(PrmEmp,PrmDirOrigem,PrmDirDestino,"ITMANEXO")
		SAVE TO &ARQTMP ALL LIKE Flg*
	ENDIF

	IF FlgLANCACX = .F.
		FlgLANCACX  =;
			 OUAnexaDBF(PrmEmp,PrmDirOrigem,PrmDirDestino,"LANCACX")
		SAVE TO &ARQTMP ALL LIKE Flg*
	ENDIF

	IF FlgMAPAECF = .F.
		FlgMAPAECF  =;
			 OUAnexaDBF(PrmEmp,PrmDirOrigem,PrmDirDestino,"MAPAECF")
		SAVE TO &ARQTMP ALL LIKE Flg*
	ENDIF

	IF FlgNF_ANEXO = .F.
		FlgNF_ANEXO =;
			 OUAnexaDBF(PrmEmp,PrmDirOrigem,PrmDirDestino,"NF_ANEXO")
		SAVE TO &ARQTMP ALL LIKE Flg*
	ENDIF

	IF FlgNOTA = .F.
		FlgNOTA     = OUAnexaDBF(PrmEmp,PrmDirOrigem,PrmDirDestino,"NOTA")
		SAVE TO &ARQTMP ALL LIKE Flg*
	ENDIF

	IF FlgNOTAENT = .F.
		FlgNOTAENT  =;
			 OUAnexaDBF(PrmEmp,PrmDirOrigem,PrmDirDestino,"NOTAENT")
		SAVE TO &ARQTMP ALL LIKE Flg*
	ENDIF

	IF FlgNOTAITE = .F.
		FlgNOTAITE  =;
			 OUAnexaDBF(PrmEmp,PrmDirOrigem,PrmDirDestino,"NOTAITE")
		SAVE TO &ARQTMP ALL LIKE Flg*
	ENDIF

	IF FlgORC_ANEX = .F.
		FlgORC_ANEX =;
			 OUAnexaDBF(PrmEmp,PrmDirOrigem,PrmDirDestino,"ORC_ANEX")
		SAVE TO &ARQTMP ALL LIKE Flg*
	ENDIF

	IF FlgORCA_PGT = .F.
		FlgORCA_PGT =;
			 OUAnexaDBF(PrmEmp,PrmDirOrigem,PrmDirDestino,"ORCA_PGT")
		SAVE TO &ARQTMP ALL LIKE Flg*
	ENDIF

	IF FlgORCAMENT = .F.
		FlgORCAMENT =;
			 OUAnexaDBF(PrmEmp,PrmDirOrigem,PrmDirDestino,"ORCAMENT")
		SAVE TO &ARQTMP ALL LIKE Flg*
	ENDIF

	IF FlgORCATMP = .F.
		FlgORCATMP  =;
			 OUAnexaDBF(PrmEmp,PrmDirOrigem,PrmDirDestino,"ORCATMP")
		SAVE TO &ARQTMP ALL LIKE Flg*
	ENDIF

	IF FlgPEDIDO = .F.
		FlgPEDIDO   = OUAnexaDBF(PrmEmp,PrmDirOrigem,PrmDirDestino,"PEDIDO")
		SAVE TO &ARQTMP ALL LIKE Flg*
	ENDIF

	IF FlgPEDITE = .F.
		FlgPEDITE   = OUAnexaDBF(PrmEmp,PrmDirOrigem,PrmDirDestino,"PEDITE")
		SAVE TO &ARQTMP ALL LIKE Flg*
	ENDIF

	IF FlgQE = .F.
		FlgQE       = OUAnexaDBF(PrmEmp,PrmDirOrigem,PrmDirDestino,"QE")
		SAVE TO &ARQTMP ALL LIKE Flg*
	ENDIF

	IF FlgRETORNBC = .F.
		FlgRETORNBC =;
			 OUAnexaDBF(PrmEmp,PrmDirOrigem,PrmDirDestino,"RETORNBC")
		SAVE TO &ARQTMP ALL LIKE Flg*
	ENDIF

	IF FlgRETORNMV = .F.
		FlgRETORNMV =;
			 OUAnexaDBF(PrmEmp,PrmDirOrigem,PrmDirDestino,"RETORNMV")
		SAVE TO &ARQTMP ALL LIKE Flg*
	ENDIF

	IF FlgSALDO = .F.
		FlgSALDO    = OUAnexaDBF(PrmEmp,PrmDirOrigem,PrmDirDestino,"SALDO")
		SAVE TO &ARQTMP ALL LIKE Flg*
	ENDIF

	IF FlgREMESSBC = .F.
		FlgREMESSBC =;
			 OUAnexaDBF(PrmEmp,PrmDirOrigem,PrmDirDestino,"REMESSBC")
		SAVE TO &ARQTMP ALL LIKE Flg*
	ENDIF

	IF FlgREMESSMV = .F.
		FlgREMESSMV =;
			 OUAnexaDBF(PrmEmp,PrmDirOrigem,PrmDirDestino,"REMESSMV")
		SAVE TO &ARQTMP ALL LIKE Flg*
	ENDIF
	

    *-------------------------------------------------------------*
	SELE &LSalias

RETURN


*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _2ON0WWESG           OUAnexaDBF VALID                   º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         OUTRASRT,     Record Number:    3  º
*       º Variable:            OUAnexaDBF                         º
*       º Called By:           VALID Clause                       º
*       º Object Type:         Push Button                        º
*       º Snippet Number:      2                                  º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*
FUNCTION _2on0wwesg     &&  OUAnexaDBF VALID
#REGION 1
RETURN
*-----------------------------------------------------------------*


FUNCTION  OUAnexaDBF
	PARAMETERS PrmEmp,PrmDirOrigem,PrmDirDestino,PrmDBF

    *-------------------------------------------------------------*
	LSarqOrig  = PrmDirOrigem+PrmDBF
	LSarqDest  = PrmDirDestino+PrmDBF

	IF ! NetUse( LSarqDest ,.T.)   && ABRIR EM MODO EXCLUSIVO
		WAIT WINDOW "Nao Foi Pssivel Abrir: "+LSarqDest
		SELE &LSalias
		RETURN(.f.)
	ENDIF
	LSaliasDestino = ALIAS()

	SET TALK ON

	SELE &LSaliasDestino
	DELETE ALL FOR EMPRESA = PrmEmp
	PACK
	APPEND FROM &LSarqOrig FOR empresa = PrmEmp

	SET TALK OFF

	=UP_fecha(PrmDBF)

RETURN(.t.)




*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _2ON0WWESH           OUCtrlIndexaDBF VALID              º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         OUTRASRT,     Record Number:    4  º
*       º Variable:            OUCtrlIndexaDBF                    º
*       º Called By:           VALID Clause                       º
*       º Object Type:         Push Button                        º
*       º Snippet Number:      3                                  º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*
FUNCTION _2on0wwesh     &&  OUCtrlIndexaDBF VALID
#REGION 1
RETURN
*-----------------------------------------------------------------*
*	Em algumas situacoes ocorreram danos nos dados de uma filial
* na central e para evitar que os dados de outras filiais fossem
* perdidos pela restauracao de um backup sugerimos a presente rotina
*
*   - > RESTAURAR BACKUP PARA UMA AREA ESPECIFICA
*   - > INFORMAR O CAMINHO ORIGEM (BACKUP)
*   - > INFORMAR O CAMINHO DESTINO (BASE A SER RECUPERADA)
*   - > INFORMAR FILIAL A SER RECUPERADA
*   - > PROCESSAR RECUPERACAO
*       -> ELIMINAR REGISTROS DA FILIAL NA BASE DESTINO
*       -> IMPORTAR REGISTROS DA FILIAL DA BASE ORIGEM PARA DESTINO
*-----------------------------------------------------------------*


PROCEDURE OUCtrlIndexaDBF
	PARAMETERS PrmTAGProc,PrmDirOrigem
	
	*---------------------------------------------------------------*
	* PrmTAGProc = uma identificacao criada para o operador
	*            identificando o processo em curso e que sera usado
	*            para evitar que ,caso haja interrupcao do processo,
	*            os arquivos ja processados seja reprocessados
	*
	*---------------------------------------------------------------*

	=W_DEFPROC("rotinas.spr")


	PRIVATE  LSarqOrig,LSarqDest, LSaliasDestino


	PRIVATE  LSalias

	PRIVATE FlgCI,;
	        FlgCTRLREFN,;
	        FlgDUPLICAT,;
	        FlgITEMMOV,;
	        FlgITMANEXO,;
	        FlgLANCACX,;
	        FlgMAPAECF,;
	        FlgNF_ANEXO,;
	        FlgNOTA,;
	        FlgNOTAENT,;
	        FlgNOTAITE,;
	        FlgORC_ANEX,;
	        FlgORCA_PGT,;
	        FlgORCAMENT,;
	        FlgORCATMP,;
	        FlgPEDIDO,;
	        FlgPEDITE,;
	        FlgQE,;
	        FlgRETORNBC,;
	        FlgRETORNMV,;
	        FlgSALDO,;
	        FlgREMESSBC,;
	        FlgREMESSMV


	store .f. to ;
	        FlgCI,;
	        FlgCTRLREFN,;
	        FlgDUPLICAT,;
	        FlgITEMMOV,;
	        FlgITMANEXO,;
	        FlgLANCACX,;
	        FlgMAPAECF,;
	        FlgNF_ANEXO,;
	        FlgNOTA,;
	        FlgNOTAENT,;
	        FlgNOTAITE,;
	        FlgORC_ANEX,;
	        FlgORCA_PGT,;
	        FlgORCAMENT,;
	        FlgORCATMP,;
	        FlgPEDIDO,;
	        FlgPEDITE,;
	        FlgQE,;
	        FlgRETORNBC,;
	        FlgRETORNMV,;
	        FlgSALDO,;
	        FlgREMESSBC,;
	        FlgREMESSMV





	*************** BUSCA PARAMETROS PARA PROXIMO RELATO *****
	ON ERROR TMP=""   && EVITA MENS. DE ERRO QDO ARQ.NAO EXISTIR
	ARQTMP = "\TMP\"+ALLTRIM(PrmTAGProc)
	RESTORE FROM  &ARQTMP ADDITIVE
	ON ERROR
	****************************************************************



	
	LSalias= ALIAS()
    *-------------------------------------------------------------*

	IF FlgCI = .F.
		FlgCI       = OUIndexaDBF(PrmDirOrigem,"CI")
		SAVE TO &ARQTMP ALL LIKE Flg*
	ENDIF

	IF FlgCTRLREFN = .F.
		FlgCTRLREFN =;
			 OUIndexaDBF(PrmDirOrigem,"CTRLREFN")
		SAVE TO &ARQTMP ALL LIKE Flg*
	ENDIF

	IF FlgDUPLICAT = .F.
		FlgDUPLICAT =;
			 OUIndexaDBF(PrmDirOrigem,"DUPLICAT")
		SAVE TO &ARQTMP ALL LIKE Flg*
	ENDIF

	IF FlgITEMMOV = .F.
		FlgITEMMOV  =;
			 OUIndexaDBF(PrmDirOrigem,"ITEMMOV")
		SAVE TO &ARQTMP ALL LIKE Flg*
	ENDIF

	IF FlgITMANEXO = .F.
		FlgITMANEXO =;
			 OUIndexaDBF(PrmDirOrigem,"ITMANEXO")
		SAVE TO &ARQTMP ALL LIKE Flg*
	ENDIF

	IF FlgLANCACX = .F.
		FlgLANCACX  =;
			 OUIndexaDBF(PrmDirOrigem,"LANCACX")
		SAVE TO &ARQTMP ALL LIKE Flg*
	ENDIF

	IF FlgMAPAECF = .F.
		FlgMAPAECF  =;
			 OUIndexaDBF(PrmDirOrigem,"MAPAECF")
		SAVE TO &ARQTMP ALL LIKE Flg*
	ENDIF

	IF FlgNF_ANEXO = .F.
		FlgNF_ANEXO =;
			 OUIndexaDBF(PrmDirOrigem,"NF_ANEXO")
		SAVE TO &ARQTMP ALL LIKE Flg*
	ENDIF

	IF FlgNOTA = .F.
		FlgNOTA     = OUIndexaDBF(PrmDirOrigem,"NOTA")
		SAVE TO &ARQTMP ALL LIKE Flg*
	ENDIF

	IF FlgNOTAENT = .F.
		FlgNOTAENT  =;
			 OUIndexaDBF(PrmDirOrigem,"NOTAENT")
		SAVE TO &ARQTMP ALL LIKE Flg*
	ENDIF

	IF FlgNOTAITE = .F.
		FlgNOTAITE  =;
			 OUIndexaDBF(PrmDirOrigem,"NOTAITE")
		SAVE TO &ARQTMP ALL LIKE Flg*
	ENDIF

	IF FlgORC_ANEX = .F.
		FlgORC_ANEX =;
			 OUIndexaDBF(PrmDirOrigem,"ORC_ANEX")
		SAVE TO &ARQTMP ALL LIKE Flg*
	ENDIF

	IF FlgORCA_PGT = .F.
		FlgORCA_PGT =;
			 OUIndexaDBF(PrmDirOrigem,"ORCA_PGT")
		SAVE TO &ARQTMP ALL LIKE Flg*
	ENDIF

	IF FlgORCAMENT = .F.
		FlgORCAMENT =;
			 OUIndexaDBF(PrmDirOrigem,"ORCAMENT")
		SAVE TO &ARQTMP ALL LIKE Flg*
	ENDIF

	IF FlgORCATMP = .F.
		FlgORCATMP  =;
			 OUIndexaDBF(PrmDirOrigem,"ORCATMP")
		SAVE TO &ARQTMP ALL LIKE Flg*
	ENDIF

	IF FlgPEDIDO = .F.
		FlgPEDIDO   = OUIndexaDBF(PrmDirOrigem,"PEDIDO")
		SAVE TO &ARQTMP ALL LIKE Flg*
	ENDIF

	IF FlgPEDITE = .F.
		FlgPEDITE   = OUIndexaDBF(PrmDirOrigem,"PEDITE")
		SAVE TO &ARQTMP ALL LIKE Flg*
	ENDIF

	IF FlgQE = .F.
		FlgQE       = OUIndexaDBF(PrmDirOrigem,"QE")
		SAVE TO &ARQTMP ALL LIKE Flg*
	ENDIF

	IF FlgRETORNBC = .F.
		FlgRETORNBC =;
			 OUIndexaDBF(PrmDirOrigem,"RETORNBC")
		SAVE TO &ARQTMP ALL LIKE Flg*
	ENDIF

	IF FlgRETORNMV = .F.
		FlgRETORNMV =;
			 OUIndexaDBF(PrmDirOrigem,"RETORNMV")
		SAVE TO &ARQTMP ALL LIKE Flg*
	ENDIF

	IF FlgSALDO = .F.
		FlgSALDO    = OUIndexaDBF(PrmDirOrigem,"SALDO")
		SAVE TO &ARQTMP ALL LIKE Flg*
	ENDIF

	IF FlgREMESSBC = .F.
		FlgREMESSBC =;
			 OUIndexaDBF(PrmDirOrigem,"REMESSBC")
		SAVE TO &ARQTMP ALL LIKE Flg*
	ENDIF

	IF FlgREMESSMV = .F.
		FlgREMESSMV =;
			 OUIndexaDBF(PrmDirOrigem,"REMESSMV")
		SAVE TO &ARQTMP ALL LIKE Flg*
	ENDIF
	

    *-------------------------------------------------------------*
	SELE &LSalias

RETURN


*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _2ON0WWETC           OUIndexaDBF VALID                  º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         OUTRASRT,     Record Number:    5  º
*       º Variable:            OUIndexaDBF                        º
*       º Called By:           VALID Clause                       º
*       º Object Type:         Push Button                        º
*       º Snippet Number:      4                                  º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*
FUNCTION _2on0wwetc     &&  OUIndexaDBF VALID
#REGION 1
RETURN
*-----------------------------------------------------------------*


FUNCTION  OUIndexaDBF
	PARAMETERS PrmDir,PrmDBF

    *-------------------------------------------------------------*
	LSarqDest  = PrmDir+PrmDBF

	IF ! NetUse( LSarqDest ,.T.)   && ABRIR EM MODO EXCLUSIVO
		WAIT WINDOW "Nao Foi Pssivel Abrir: "+LSarqDest
		SELE &LSalias
		RETURN(.f.)
	ENDIF
	LSaliasDestino = ALIAS()

	SET TALK ON

	SELE &LSaliasDestino
	PACK
	REINDEX

	SET TALK OFF

	=UP_fecha(PrmDBF)

RETURN(.t.)


