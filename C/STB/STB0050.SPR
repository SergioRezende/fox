*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º 06/08/2015            STB0050.SPR              17:58:31 º
*       º                                                         º
*       ÇÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¶
*       º                                                         º
*       º Author's Name                                           º
*       º                                                         º
*       º Copyright (c) 2015 Company Name                         º
*       º Address                                                 º
*       º City,     Zip                                           º
*       º                                                         º
*       º Description:                                            º
*       º This program was automatically generated by GENSCRN.    º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½


*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º          STB0050/MS-DOS Setup Code - SECTION 1          º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*

#REGION 1
*---------------------------------------------------------------*
* OPERA ARQUIVOS :
*			EMPRESA
*			GRUPO
*		    CADTAB
*		    PRECO
* OBJETIVO:	IMPRIMIR TABELA DE PRECOS
*	
*---------------------------------------------------------------*

******>>>> INICIO CONTROLE AMBIENTAL

ON KEY LABEL ESCAPE

PRIVATE isediting,isadding,isreading
PRIVATE wp_record
PRIVATE isreadonly,is2table,wzalias
PRIVATE LS410areant
LS410areant = ALLTRIM(ALIAS()) && PERMITE RETORNAR A AREA ANTER. A CHAMADA

m.wzalias	=	SELECT()
m.isediting	=	.F.
m.isadding	=	.F.
m.isreading=	.F.
m.is2table 	= 	.F.
wp_flgfecha = 	.F. 		&& defaut nao fechamento da secao
WP_RECORD 	= 	0
wp_ref_local =  .f.     && NAO POSSUI CONTROLE DE REFRESH LOCAL

m.codinicio  = " "
m.clasinicio = " "
m.descinicio = " "
m.ordinicio  = 0
m.ordfim     = 0
m.codfim     = " "    && CODIGO FINAL INFORMADO
m.clasfim    = " "    && CLASSIFIC. DE ENCERRA ALTERACAO
m.descfim    = " "
m.marca     = 0

LFemp410	= 	.F.		
LFgrp410	= 	.F.		
LFpre410	= 	.F.		
LFctb410	= 	.F.		
LFcms410	= 	.F.		
LFmarca		= 	.F.		
LFtbforn	= 	.F.		

******>>>> INICIO CONTROLE ARQUIVOS
IF !USED("empresa")
	LFemp410	= .T.
	IF ! NetUse("empresa")
		wp_flgfecha = .t.  && implica no fechamento da secao
	ENDIF
ENDIF
IF !USED("grupo")
	LFgrp410	= .T.
	IF ! NetUse("grupo")
		wp_flgfecha = .t.  && implica no fechamento da secao
	ENDIF
ENDIF
IF !USED("preco")
	LFpre410	= .T.
	IF ! NetUse("preco")
		wp_flgfecha = .t.  && implica no fechamento da secao
	ENDIF
ENDIF
IF !USED("prod_cms")
	LFcms410	= .T.
	IF ! NetUse("prod_cms")
		wp_flgfecha = .t.  && implica no fechamento da secao
	ENDIF
ENDIF
IF !USED("marca")
	LFmarca	= .T.
	IF ! NetUse("marca")
		wp_flgfecha = .t.  && implica no fechamento da secao
	ENDIF
ENDIF

IF !USED("cadtab")
	LFctb410	= .T.
	IF ! NetUse("cadtab")
		wp_flgfecha = .t.  && implica no fechamento da secao
	ENDIF
ENDIF

IF !USED("tabforn")
	LFtbforn	= .T.
	IF ! NetUse("tabforn")
		wp_flgfecha = .t.  && implica no fechamento da secao
	ENDIF
ENDIF


IF wp_flgfecha
	DO ULfecha 		&& FECHA ARQUIVOS ABERTOS
	RETURN
ENDIF

#REGION 0
REGIONAL m.currarea, m.talkstat, m.compstat

IF SET("TALK") = "ON"
	SET TALK OFF
	m.talkstat = "ON"
ELSE
	m.talkstat = "OFF"
ENDIF
m.compstat = SET("COMPATIBLE")
SET COMPATIBLE FOXPLUS

*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º                MS-DOS Window definitions                º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*

IF NOT WEXIST("stb0050") ;
	OR UPPER(WTITLE("STB0050")) == "STB0050.PJX" ;
	OR UPPER(WTITLE("STB0050")) == "STB0050.SCX" ;
	OR UPPER(WTITLE("STB0050")) == "STB0050.MNX" ;
	OR UPPER(WTITLE("STB0050")) == "STB0050.PRG" ;
	OR UPPER(WTITLE("STB0050")) == "STB0050.FRX" ;
	OR UPPER(WTITLE("STB0050")) == "STB0050.QPR"
	DEFINE WINDOW stb0050 ;
		FROM INT((SROW()-22)/2),INT((SCOL()-77)/2) ;
		TO INT((SROW()-22)/2)+21,INT((SCOL()-77)/2)+76 ;
		TITLE "[ Imprime Tabela de Precos ]" ;
		FOOTER "stb0050" ;
		NOFLOAT ;
		NOCLOSE ;
		SHADOW ;
		NOMINIMIZE ;
		NONE ;
		COLOR SCHEME 1
ENDIF


*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º          STB0050/MS-DOS Setup Code - SECTION 2          º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*

#REGION 1

******>>>> INICIO CONTROLE LOCAL

DO CASE
	CASE !wp_flgfecha
		*-------------------------> criado pelo wizard
		m.wzalias=SELECT()
		m.isreadonly=IIF(ISREAD(),.T.,.F.)
		SELE GRUPO
ENDCASE



*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º              STB0050/MS-DOS Screen Layout               º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*

#REGION 1
IF WVISIBLE("stb0050")
	ACTIVATE WINDOW stb0050 SAME
ELSE
	ACTIVATE WINDOW stb0050 NOSHOW
ENDIF
@ 2,8 SAY "-" ;
	SIZE 1,1, 0
@ 0,0 TO 21,75 ;
	COLOR SCHEME 23
@ 21,1 TO 21,74 ;
	COLOR SCHEME 24
@ 21,75 SAY "Ù" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 1,75 TO 20,75 ;
	COLOR SCHEME 24
@ 0,75 SAY "¿" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 18,2 TO 20,18 ;
	COLOR SCHEME 24
@ 20,3 TO 20,17 ;
	COLOR SCHEME 23
@ 19,18 SAY "³" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 23
@ 20,18 SAY "Ù" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 23
@ 18,18 SAY "¿" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 23
@ 18,29 TO 20,45 ;
	COLOR SCHEME 24
@ 20,30 TO 20,44 ;
	COLOR SCHEME 23
@ 19,45 SAY "³" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 23
@ 20,45 SAY "Ù" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 23
@ 18,45 SAY "¿" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 23
@ 18,56 TO 20,72 ;
	COLOR SCHEME 24
@ 20,57 TO 20,71 ;
	COLOR SCHEME 23
@ 19,72 SAY "³" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 23
@ 20,72 SAY "Ù" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 23
@ 18,72 SAY "¿" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 23
@ 7,2 TO 10,64 ;
	COLOR SCHEME 23
@ 10,3 TO 10,63 ;
	COLOR SCHEME 24
@ 7,64 SAY "¿" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 8,64 TO 9,64 ;
	COLOR SCHEME 24
@ 10,64 SAY "Ù" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 7,4 SAY "[Intervalo Produtos]" ;
	SIZE 1,20, 0
@ 1,2 TO 3,15 ;
	COLOR SCHEME 23
@ 3,3 TO 3,14 ;
	COLOR SCHEME 24
@ 3,15 SAY "Ù" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 2,15 SAY "³" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 1,15 SAY "¿" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 1,3 SAY "[ Tabela ]" ;
	SIZE 1,10, 0
@ 1,18 TO 3,31 ;
	COLOR SCHEME 23
@ 3,19 TO 3,30 ;
	COLOR SCHEME 24
@ 3,31 SAY "Ù" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 2,31 SAY "³" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 1,31 SAY "¿" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 1,20 SAY "[ Filial ]" ;
	SIZE 1,10, 0
@ 0,22 SAY "[ Impressao de Tabela de Precos ]" ;
	SIZE 1,33, 0
@ 5,32 SAY "-" ;
	SIZE 1,1, 0
@ 5,22 SAY "Marca :" ;
	SIZE 1,7, 0
@ 5,4 SAY "Grupo Prod." ;
	SIZE 1,11, 0
@ 4,2 TO 6,51 ;
	COLOR SCHEME 23
@ 6,3 TO 6,50 ;
	COLOR SCHEME 24
@ 4,51 SAY "¿" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 6,51 SAY "Ù" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 4,4 SAY "[ Filtrar ]" ;
	SIZE 1,11, 0
@ 2,5 GET m.tbbase ;
	SIZE 1,3 ;
	DEFAULT 0 ;
	PICTURE "999" ;
	WHEN _4ez12izg4() ;
	VALID _4ez12izha() ;
	MESSAGE "<TAB> = Zoom  ;  <ESC> = Sai " ;
	ERROR "Codigo de Tabela Nao Confere."
@ 2,9 GET m.sbase ;
	SIZE 1,1 ;
	DEFAULT " " ;
	WHEN _4ez12izhj() ;
	VALID _4ez12izhp()
@ 2,23 GET m.empresa ;
	SIZE 1,3 ;
	DEFAULT 0 ;
	PICTURE "999" ;
	WHEN isediting ;
	VALID _4ez12izhv() ;
	MESSAGE "<TAB> = Zoom  ;  <ESC> = Sai " ;
	ERROR "Codigo de Tabela Nao Confere."
@ 5,16 GET m.grupo ;
	SIZE 1,2 ;
	DEFAULT 0 ;
	WHEN _4ez12izi2() ;
	ERROR wp_msg
@ 5,30 GET m.marca ;
	SIZE 1,2 ;
	DEFAULT 0 ;
	PICTURE "@Z 99" ;
	WHEN _4ez12izia() ;
	VALID _4ez12izib()
@ 5,33 GET m.marcdesc ;
	SIZE 1,13 ;
	DEFAULT " " ;
	WHEN .f.
@ 8,5 GET m.codinicio ;
	SIZE 1,16 ;
	DEFAULT " " ;
	PICTURE "&masc_codi" ;
	WHEN _4ez12izic() ;
	VALID _4ez12iziu() ;
	ERROR wp_msg
@ 8,38 GET m.codfim ;
	SIZE 1,16 ;
	DEFAULT " " ;
	PICTURE "&masc_codi" ;
	WHEN _4ez12izj1() ;
	VALID _4ez12izj7() ;
	ERROR wp_msg
@ 9,9 GET m.descinicio ;
	SIZE 1,22 ;
	DEFAULT " " ;
	PICTURE "@!" ;
	WHEN .f.
@ 9,39 GET m.descfim ;
	SIZE 1,24 ;
	DEFAULT " " ;
	PICTURE "@!" ;
	WHEN .f.
@ 11,3 GET m.tp_rel ;
	PICTURE "@*RVN Imp. Tabela de Precos;Imp. Tabela Indicando Ordem;Imp. Tabela de Todos Produdos Independente de Comercializacao;Imp. Tabela P/ Televendas;Imp. Tabela de Precos em Uma coluna - continua;Lista Produtos com Cod Fornecedor" ;
	SIZE 1,65,0 ;
	DEFAULT 1 ;
	WHEN _4ez12izje()
@ 19,6 GET m.edit_btn ;
	PICTURE "@*HN \<Edita" ;
	SIZE 1,9,1 ;
	DEFAULT 1 ;
	WHEN _4ez12izjk() ;
	VALID btn_val1('EDIT') ;
	MESSAGE 'Permite a alteracao de dados do registro corrente'
@ 19,33 GET m.imp_btn ;
	PICTURE "@*HN \<Imprime" ;
	SIZE 1,9,1 ;
	DEFAULT 1 ;
	VALID _4ez12izjq() ;
	DISABLE
@ 19,61 GET exit_btn ;
	PICTURE "@*HN \<Saida" ;
	SIZE 1,7,1 ;
	DEFAULT 1 ;
	VALID _4ez12izjx()
@ 0,65 SAY "[stb0050]" ;
	SIZE 1,9, 0
@ 5,51 SAY "³" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24

IF NOT WVISIBLE("stb0050")
	ACTIVATE WINDOW stb0050
ENDIF

READ CYCLE

RELEASE WINDOW stb0050

#REGION 0
IF m.talkstat = "ON"
	SET TALK ON
ENDIF
IF m.compstat = "ON"
	SET COMPATIBLE ON
ENDIF


*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º               STB0050/MS-DOS Cleanup Code               º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*

#REGION 1
DO ULfecha
ON KEY LABEL ESCAPE
SET FORMAT TO
RETURN

*-------------------->>>>>>>>>


*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º   STB0050/MS-DOS Supporting Procedures and Functions    º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*

#REGION 1
PROCEDURE BTN_VAL1
	PARAMETER tecla, m.chv_ler, m.chv_compara, m.chv_brow
	LN_prxobj = _CUROBJ
    DO CASE
		CASE tecla = "EDIT" AND !isediting   && INICIA EDICAO
			SHOW GET edit_btn,1 PROMPT "\<Ok"
			SHOW GET m.imp_btn DISABLE
			isediting = .t.
			_CUROBJ = 1	
		    ON KEY LABEL ESCAPE KEYBOARD "{BACKTAB}"
			ON KEY LABEL END DO BTN_VAL1 WITH 'DELETE'
		CASE tecla = "EDIT" AND isediting     && CONFIRMA EDICAO
			SHOW GET edit_btn,1 PROMPT "\<Edita"
			isediting = .f.
			_CUROBJ = 1	
			SHOW GET m.imp_btn ENABLE
		    ON KEY LABEL ESCAPE
			ON KEY LABEL END
		CASE tecla = "DELETE" AND isediting     && CANCELA EDICAO
			SHOW GET edit_btn,1 PROMPT "\<Edita"
			isediting = .f.
			_CUROBJ = 1	
			SHOW GET m.imp_btn DISABLE
		    ON KEY LABEL ESCAPE
			ON KEY LABEL END
	ENDCASE
RETURN


PROCEDURE ULfecha
	IF LFctb410		&& .t. =>  DEVE SER FECHADA NA SAIDA
		=UP_fecha("cadtab")
	ENDIF
	IF LFpre410		&& .t. =>  DEVE SER FECHADA NA SAIDA
		=UP_fecha("preco")
	ENDIF
	IF LFemp410		&& .t. =>  DEVE SER FECHADA NA SAIDA
		=UP_fecha("empresa")
	ENDIF
	IF LFcms410		&& .t. =>  DEVE SER FECHADA NA SAIDA
		=UP_fecha("prod_cms")
	ENDIF
	IF LFgrp410		&& .t. =>  DEVE SER FECHADA NA SAIDA
		=UP_fecha("grupo")
	ENDIF
	IF LFmarca		&& .t. =>  DEVE SER FECHADA NA SAIDA
		=UP_fecha("marca")
	ENDIF
	IF LFtbforn		&& .t. =>  DEVE SER FECHADA NA SAIDA
		=UP_fecha("tabforn")
	ENDIF
RETURN

FUNCTION AULlecodigo  && RETORNA O NOME DO CODIGO INFORMADO GRUPO//SUBGRUPO
PARAMETERS LScdg
	LSalias = ALIAS()

	SELE GRUPO
	LNrgtmp = RECNO()
	SET ORDER TO classifica
	SEEK LScdg
	LSnome = grupo.descricao
	SET ORDER TO ordem
	GO LNrgtmp
	
	SELE &LSalias
RETURN(LSnome)


FUNCTION ULlecodigo  && RETORNA O NOME DO CODIGO INFORMADO GRUPO//SUBGRUPO
PARAMETERS LScdg
	LSalias = ALIAS()

	SELE GRUPO
	LNrgtmp = RECNO()
	SET ORDER TO classifica

	SEEK LScdg
	LSnome = ALLTRIM(grupo.descricao)


	SET ORDER TO ordem
	GO LNrgtmp

	LFQBR = .T.
	
	SELE &LSalias
RETURN(LSnome)


FUNCTION ULcol  && RETORNA A DESCRICAO CONFORME A COLUNA INFORMADA
PARAMETERS LScoluna
	_PLENGTH = 9999
	IF LScoluna = 1
		LSdesc = &wl_arqtb1 .descricao
	ELSE
		LSdesc = &wl_arqtb2 .descricao
	ENDIF
RETURN(LSdesc)

FUNCTION ULquebra
	PARAMETERS LFtipo_cdg

		IF LFtipo_cdg = 3	&& PROVOCA QUEBRA
			LNquebrador = LNquebrador +1
		ENDIF		
RETURN(LNquebrador)

***********************************************************************
*  IMPRESSAO DE TABELAS
***********************************************************************
PROCEDURE ULtbvenda
	LNquebrador = 0  && SEMPRE QUE CDG_TIPO = 3 SERA SOMADO 1
					 && PERMITINTO O TRABALHO DE QUEBRA

	SELECT cadtab
	SET ORDER TO  TAG tabela
	SEEK STR(m.tbbase,3)+m.sbase


	SELE EMPRESA
	SET ORDER TO TAG empresa
	SEEK m.empresa

	SELE PRECO
	SET ORDER TO  TAG tabela

	SELE GRUPO
	SET ORDER TO TAG ordem
	SET NEAR ON
	SEEK  m.ordinicio
	SET NEAR OFF
	IF EOF()
		WAIT WINDOW 'NAO EXISTEM DADOS  PARA PROCESSO.'
		SHOW GET m.imp_btn DISABLE
		RETURN
	ENDIF
*>>>>>>>>>>>>>>>>>>>>>>   1A ETAPA   /  3    <<<<<<<<<<<<<<<<<<<<<<<<
*                  GERAR ARQUIVO TEXTO CONTINUO                    *
*------------------------------------------------------------------*
*******************
*---->   (INICIALIZACAO DO CONTROLE DE STATUS IMPRESSAO)
*******************	
	DO RELINIC.PRG          && INICIA VAR P/ TERMOMETRO
	LFsegue = .t.
	LNregistro = RECNO()
    SET ORDER TO TAG ordem
    wl_tmp =  STRTRAN(STR(m.empresa,3),' ','0')
	*----------------------------------------------------------*
	LSforlocal  = ""

	IF m.marca <> 0
		LSgrupo   = CHRTRAN(STR(m.grupo,2)," ","0")
		LSforlocal = ;
	   "(LEFT(grupo.classifica,2) = LSgrupo AND grupo.marca = m.marca) AND "
	ENDIF	

	*----------------------------------------------------------*


    COUNT FOR &LSforlocal ;
  		  ((wl_tmp $ grupo.empresas OR grupo.tp_mercad = 7) AND ;
		   wl_tmp $ grupo.tab_preco AND (grupo.cdg_tipo = 3 OR ;
		   grupo.cdg_tipo = 4)) ;
	    WHILE  grupo.ordem  <= m.ordfim	TO   LNimpressao

	LNimpressos = 0
	GO LNregistro
*******************
*---->   (COMPLETADO PREPARACAO DO CONTROLE DE STATUS IMPRESSAO)
*******************	
	SET RELATION TO  STR(m.empresa,3)+STR(m.tbbase,3)+m.sbase+;
		  +codigo  INTO preco ADDITIVE
**************************>>> REGISTRO DE SAIDAS

	IF m.tp_rel = 1
	    LSrel = "RTB0050A"      && TABELA DE PRECOS
	ELSE
	    LSrel = "RTB0050B"      && relatorio com a ordem
	ENDIF

	LSorienta  = " "          && fornece as condicoe de impressao

	IF m.tp_rel = 3	&& relatorio geral
	    LSorienta = " FOR " +  LSforlocal +;
   		  "((grupo.cdg_tipo = 3  OR  grupo.cdg_tipo = 4)  AND  " + ;
		  " left(grupo.classifica,2) $ '00/01') " + ;
		  "		 WHILE  grupo.ordem <= m.ordfim	AND LFsegue "
	ELSE
	    LSorienta = " FOR " +  LSforlocal +;
   		  "((wl_tmp $ grupo.empresas OR grupo.tp_mercad = 7) AND " + ;
		  " wl_tmp $ grupo.tab_preco AND (grupo.cdg_tipo = 3  OR  " + ;
		  " grupo.cdg_tipo = 4)) " + ;
		  "		 WHILE  grupo.ordem <= m.ordfim	AND LFsegue "
	ENDIF
	wp_arqname = SYS(5)+"\TMP\TBP1"+STRTRAN(str(nUsr,4)," ","0")+".TXT"


***********
	_PLENGTH = 9999

    REPORT FORM &LSrel &LSorienta NOCONSOLE TO FILE &wp_arqname
***********
	DO RELFIM.PRG          && FIM VAR P/ TERMOMETRO
*-----------------------------
    SET PRINTER TO SET('PRINTER',1)
	SET RELATION TO
	SET POINT TO
	SET SEPARATOR  TO

	SHOW GET m.imp_btn DISABLE

*>>>>>>>>>>>>>>>>>>>>>>  2A ETAPA / 3     <<<<<<<<<<<<<<<<<<<<<<<<
*          GERAR ARQUIVO DBF COM BASE NO TEXTO CONTINUO            *
*------------------------------------------------------------------*

	wl_arqtmp = ""
	wl_arqtb1 = ""		&& ORIENTA A 1A COLUNA
	wl_arqtb2 = ""		&& ORIENTA A 2A COLUNA
	wl_arqtb3 = ""		&& ARMAZENA O TEXTO GERADO

	LNtmp     = 65		&& TABELA ASCII A = 65
	IF !UPabretmp("tb1")
		WAIT WINDOW "Nao foi possivel gera arq. TMP.  <ENTER>"
		RETURN
	ENDIF
	wl_arqtb1 = wl_arqtmp
	LNtmp     = 65		&& TABELA ASCII A = 65
	IF !UPabretmp("tb2")
		WAIT WINDOW "Nao foi possivel gera arq. TMP.  <ENTER>"
		RETURN
	ENDIF
	wl_arqtb2 = wl_arqtmp

	LNtmp     = 65		&& TABELA ASCII A = 65
	IF !UPabretmp("tb3")
		WAIT WINDOW "Nao foi possivel gera arq. TMP.  <ENTER>"
		RETURN
	ENDIF
	wl_arqtb3 = wl_arqtmp

	SELE 0
	CREATE TABLE  "\TMP\"+"&wl_arqtb1" ;
							(DESCRICAO C(61,0),;
							 LINHA N(6,0))
   	USE "\TMP\"+"&wl_arqtb1" exclu
   	INDEX ON LINHA TAG registro ADDITIVE

	SELE 0
	CREATE TABLE  "\TMP\"+"&wl_arqtb2" ;
							(DESCRICAO C(61,0),;
							 LINHA N(6,0))
   	USE "\TMP\"+"&wl_arqtb2" exclu
   	INDEX ON LINHA TAG registro ADDITIVE

	SELE 0
	CREATE TABLE  "\TMP\"+"&wl_arqtb3" ;
							(DESCRICAO C(61,0),;
							 LINHA N(6,0))

   	USE "\TMP\"+"&wl_arqtb3" exclu
   	INDEX ON RECNO() TAG registro ADDITIVE
	APPEND FROM &wp_arqname ;
			FOR LEFT(DESCRICAO,1) <> ""  FIELDS DESCRICAO TYPE SDF
	REPLACE ALL LINHA WITH RECNO()
	GO BOTT
	LN_lhini = 1

***	LN_lhfim = 56
	LN_lhfim = 55
	LN_lhend = RECNO()


	DO WHILE LN_lhini <= LN_lhend
		
		SELE &wl_arqtb1
		APPEND FROM \TMP\&wl_arqtb3 FOR LINHA >= LN_lhini ;
							   AND LINHA <= LN_lhfim
		LN_lhini = LN_lhini + 55
		LN_lhfim = LN_lhfim + 55
		SELE &wl_arqtb2
		APPEND FROM \TMP\&wl_arqtb3 FOR LINHA >= LN_lhini ;
							   AND LINHA <= LN_lhfim
		LN_lhini = LN_lhini + 55
		LN_lhfim = LN_lhfim + 55
	ENDDO

	SELE &wl_arqtb2
	REPLACE ALL LINHA WITH RECNO()
	GO TOP
	SELE &wl_arqtb1
	REPLACE ALL LINHA WITH RECNO()
	GO TOP
*>>>>>>>>>>>>>>>>>>>>>>>>  3A ETAPA / 3     <<<<<<<<<<<<<<<<<<<<<<<<
*          IMPRESSAO DA TABELA DE PRECOS EM COLUNAS                *
*------------------------------------------------------------------*
*******************
*---->   (INICIALIZACAO DO CONTROLE DE STATUS IMPRESSAO)
*******************	
	DO RELINIC.PRG          && INICIA VAR P/ TERMOMETRO
	LFsegue = .t.
	LNregistro = RECNO()
    LNimpressao = RECCOUNT()
	LNimpressos = 0
	GO LNregistro
*******************
*---->   (COMPLETADO PREPARACAO DO CONTROLE DE STATUS IMPRESSAO)
*******************	
	SET RELATION TO  linha  INTO &wl_arqtb2 ADDITIVE
**************************>>> REGISTRO DE SAIDAS
    LSrel = "RTB0050C"      && relatorio padrao p/ impressoras ex: epson
	LSorienta  = " "          && fornece as condicoe de impressao
    LSorienta = " WHILE LFsegue "
	wp_arqname = SYS(5)+"\RELATO\TBP2"+STRTRAN(str(nUsr,4)," ","0")+".TXT"
***********
	DO UPimpressao    && COORDENA TRABALHO DE IMPRESSAO
***********
	DO RELFIM.PRG          && FIM VAR P/ TERMOMETRO
*-----------------------------
    SET PRINTER TO SET('PRINTER',1)
	SET RELATION TO
	SET POINT TO
	SET SEPARATOR  TO
	SHOW WINDOW STB0050 TOP
	SHOW GET m.imp_btn DISABLE
******************************************************************

	SELE &wl_arqtb1
	USE
	SELE &wl_arqtb2
	USE
	SELE &wl_arqtb3
	USE
RETURN

***********************************************************************
*  IMPRESSAO DE TABELAS TELEVENDAS
***********************************************************************
PROCEDURE ULtbtele
	LNquebrador = 0  && SEMPRE QUE CDG_TIPO = 3 SERA SOMADO 1
					 && PERMITINTO O TRABALHO DE QUEBRA

	SELE EMPRESA
	SET ORDER TO TAG empresa
	SEEK m.empresa

	LNempReferencia = empresa.emptab && BUSCA A TABELA DA EM
									 && PRESA DE REFERENCIA

	SELE PROD_CMS
	SET ORDER TO TAG tabela
	
	SELE PRECO
	SET ORDER TO  TAG tabela

	SELE GRUPO
	SET ORDER TO TAG classifica
	SET NEAR ON
	SEEK m.clasinicio
	SET NEAR OFF
	SET ORDER TO TAG ordem

	IF EOF()
		WAIT WINDOW 'NAO EXISTEM DADOS  PARA PROCESSO.'
		SHOW GET m.imp_btn DISABLE
		SET RELATION TO
		RETURN
	ENDIF
*******************
*---->   (INICIALIZACAO DO CONTROLE DE STATUS IMPRESSAO)
*******************	
	DO RELINIC.PRG          && INICIA VAR P/ TERMOMETRO
	LFsegue = .t.
	LNregistro = RECNO()

    wl_tmp =  STRTRAN(STR(m.empresa,3),' ','0')
*    COUNT FOR grupo.cdg_tipo = 4 AND wl_tmp $ grupo.tab_preco ;
*	    	  WHILE  classifica <> m.clasfim	TO   LNimpressao
*
    COUNT  FOR  ;
   		  ((wl_tmp $ grupo.empresas OR grupo.tp_mercad = 7) AND  ;
		  wl_tmp $ grupo.tab_preco AND (grupo.cdg_tipo = 3  OR   ;
		   grupo.cdg_tipo = 4))  ;
		  		 WHILE  grupo.ordem <= m.ordfim	TO   LNimpressao



	LNimpressos = 0

	GO LNregistro
*******************
*---->   (COMPLETADO PREPARACAO DO CONTROLE DE STATUS IMPRESSAO)
*******************	
	SET RELATION TO  STR(LNempReferencia,3)+STR(m.tbbase,3)+m.sbase+;
		  +codigo  INTO preco ADDITIVE
	SET RELATION TO  STR(LNempReferencia,3)+STR(m.tbbase,3)+m.sbase;
		  +preco.clas_cms+STR(0,2)   INTO prod_cms ADDITIVE
**************************>>> REGISTRO DE SAIDAS
    LSrel = "RTB0050D"      && relatorio para classificacao de comissao

    LSorienta = " FOR " + ;
   		  "((wl_tmp $ grupo.empresas OR grupo.tp_mercad = 7) AND " + ;
		  " wl_tmp $ grupo.tab_preco AND (grupo.cdg_tipo = 3  OR  " + ;
		  " grupo.cdg_tipo = 4)) " + ;
		  "		 WHILE  grupo.ordem <= m.ordfim	AND LFsegue "
***********
	DO UPimpressao    && COORDENA TRABALHO DE IMPRESSAO
***********
	DO RELFIM.PRG          && FIM VAR P/ TERMOMETRO
*-----------------------------
    SET PRINTER TO SET('PRINTER',1)
	SET RELATION TO
	SET POINT TO
	SET SEPARATOR  TO

	SHOW WINDOW STB0050 TOP
	SHOW GET m.imp_btn DISABLE

RETURN


***********************************************************************
*  IMPRESSAO LISTA DE PRECOS CONTINUA EM UMA COLUNA (Sr Jorge)
***********************************************************************
PROCEDURE ULtbLista
	LNquebrador = 0  && SEMPRE QUE CDG_TIPO = 3 SERA SOMADO 1
					 && PERMITINTO O TRABALHO DE QUEBRA

	SELE EMPRESA
	SET ORDER TO TAG empresa
	SEEK m.empresa

	LNempReferencia = empresa.emptab && BUSCA A TABELA DA EM
									 && PRESA DE REFERENCIA

	SELE PROD_CMS
	SET ORDER TO TAG tabela
	
	SELE PRECO
	SET ORDER TO  TAG tabela


	SELE TABFORN
	SET ORDER TO TAG TABELA


	SELE GRUPO
	SET ORDER TO TAG classifica
	SET NEAR ON
	SEEK m.clasinicio
	SET NEAR OFF
	SET ORDER TO TAG ordem

	IF EOF()
		WAIT WINDOW 'NAO EXISTEM DADOS  PARA PROCESSO.'
		SHOW GET m.imp_btn DISABLE
		SET RELATION TO
		RETURN
	ENDIF
*******************
*---->   (INICIALIZACAO DO CONTROLE DE STATUS IMPRESSAO)
*******************	
	DO RELINIC.PRG          && INICIA VAR P/ TERMOMETRO
	LFsegue = .t.
	LNregistro = RECNO()

    wl_tmp =  STRTRAN(STR(m.empresa,3),' ','0')
    COUNT  FOR  ;
   		  ((wl_tmp $ grupo.empresas OR grupo.tp_mercad = 7) AND  ;
		  wl_tmp $ grupo.tab_preco AND (grupo.cdg_tipo = 3  OR   ;
		   grupo.cdg_tipo = 4))  ;
		  		 WHILE  grupo.ordem <= m.ordfim	TO   LNimpressao



	LNimpressos = 0

	GO LNregistro
*******************
*---->   (COMPLETADO PREPARACAO DO CONTROLE DE STATUS IMPRESSAO)
*******************	
	SET RELATION TO  STR(LNempReferencia,3)+STR(m.tbbase,3)+m.sbase+;
		  +codigo  INTO preco ADDITIVE
	SET RELATION TO  STR(LNempReferencia,3)+STR(m.tbbase,3)+m.sbase;
		  +preco.clas_cms+STR(0,2)   INTO prod_cms ADDITIVE



	SET RELATION TO STR(GRUPO.CODFORN,5)+GRUPO.CODIGO  ;
	   INTO tabforn ADDITIVE

**************************>>> REGISTRO DE SAIDAS
    LSrel = "RTB0050E"      && relatorio para classificacao de comissao

    LSorienta = " FOR " + ;
   		  "((wl_tmp $ grupo.empresas OR grupo.tp_mercad = 7) AND " + ;
		  " wl_tmp $ grupo.tab_preco AND (grupo.cdg_tipo = 3  OR  " + ;
		  " grupo.cdg_tipo = 4)) " + ;
		  "		 WHILE  grupo.ordem <= m.ordfim	AND LFsegue "
***********
	DO UPimpressao    && COORDENA TRABALHO DE IMPRESSAO
***********
	DO RELFIM.PRG          && FIM VAR P/ TERMOMETRO
*-----------------------------
    SET PRINTER TO SET('PRINTER',1)
	SET RELATION TO
	SET POINT TO
	SET SEPARATOR  TO

	SHOW WINDOW STB0050 TOP
	SHOW GET m.imp_btn DISABLE

RETURN

***********************************************************************
*  IMPRESSAO LISTA Produtos com Codigo Fornecedor
***********************************************************************
PROCEDURE ULtbCodForn
	LNquebrador = 0  && SEMPRE QUE CDG_TIPO = 3 SERA SOMADO 1
					 && PERMITINTO O TRABALHO DE QUEBRA

	SELE EMPRESA
	SET ORDER TO TAG empresa
	SEEK m.empresa

	LNempReferencia = empresa.emptab && BUSCA A TABELA DA EM
									 && PRESA DE REFERENCIA

	SELE PROD_CMS
	SET ORDER TO TAG tabela
	
	SELE PRECO
	SET ORDER TO  TAG tabela


	SELE TABFORN
	SET ORDER TO TAG TABELA


	SELE GRUPO
	SET ORDER TO TAG classifica
	SET NEAR ON
	SEEK m.clasinicio
	SET NEAR OFF
	SET ORDER TO TAG ordem

	IF EOF()
		WAIT WINDOW 'NAO EXISTEM DADOS  PARA PROCESSO.'
		SHOW GET m.imp_btn DISABLE
		SET RELATION TO
		RETURN
	ENDIF
*******************
*---->   (INICIALIZACAO DO CONTROLE DE STATUS IMPRESSAO)
*******************	
	DO RELINIC.PRG          && INICIA VAR P/ TERMOMETRO
	LFsegue = .t.
	LNregistro = RECNO()

    wl_tmp =  STRTRAN(STR(m.empresa,3),' ','0')
    COUNT  FOR  ;
   		  ((wl_tmp $ grupo.empresas OR grupo.tp_mercad = 7) AND  ;
		  wl_tmp $ grupo.tab_preco AND (grupo.cdg_tipo = 3  OR   ;
		   grupo.cdg_tipo = 4))  ;
		  		 WHILE  grupo.ordem <= m.ordfim	TO   LNimpressao



	LNimpressos = 0

	GO LNregistro
*******************
*---->   (COMPLETADO PREPARACAO DO CONTROLE DE STATUS IMPRESSAO)
*******************	
	SET RELATION TO  STR(LNempReferencia,3)+STR(m.tbbase,3)+m.sbase+;
		  +codigo  INTO preco ADDITIVE
	SET RELATION TO  STR(LNempReferencia,3)+STR(m.tbbase,3)+m.sbase;
		  +preco.clas_cms+STR(0,2)   INTO prod_cms ADDITIVE



	SET RELATION TO STR(GRUPO.CODFORN,5)+GRUPO.CODIGO  ;
	   INTO tabforn ADDITIVE

**************************>>> REGISTRO DE SAIDAS
    LSrel = "RTB0050F"      && relatorio para classificacao de comissao

    LSorienta = " FOR " + ;
   		  "((wl_tmp $ grupo.empresas OR grupo.tp_mercad = 7) AND " + ;
		  " wl_tmp $ grupo.tab_preco AND (grupo.cdg_tipo = 3  OR  " + ;
		  " grupo.cdg_tipo = 4)) " + ;
		  "		 WHILE  grupo.ordem <= m.ordfim	AND LFsegue "
***********
	DO UPimpressao    && COORDENA TRABALHO DE IMPRESSAO
***********
	DO RELFIM.PRG          && FIM VAR P/ TERMOMETRO
*-----------------------------
    SET PRINTER TO SET('PRINTER',1)
	SET RELATION TO
	SET POINT TO
	SET SEPARATOR  TO

	SHOW WINDOW STB0050 TOP
	SHOW GET m.imp_btn DISABLE

RETURN



*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _4EZ12IZG4           m.tbbase WHEN                      º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         STB0050,     Record Number:   50   º
*       º Variable:            m.tbbase                           º
*       º Called By:           WHEN Clause                        º
*       º Object Type:         Field                              º
*       º Snippet Number:      1                                  º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*
FUNCTION _4ez12izg4     &&  m.tbbase WHEN
#REGION 1
ON KEY LABEL ESCAPE	KEYBOARD "{END}"
IF LASTKEY() = 15 AND !(isediting)
	KEYBOARD "{ESCAPE}"
ENDIF
RETURN(isediting)

*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _4EZ12IZHA           m.tbbase VALID                     º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         STB0050,     Record Number:   50   º
*       º Variable:            m.tbbase                           º
*       º Called By:           VALID Clause                       º
*       º Object Type:         Field                              º
*       º Snippet Number:      2                                  º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*

FUNCTION _4ez12izha     &&  m.tbbase VALID
#REGION 1
SELECT cadtab
IF LASTKEY() = 9
   ON KEY LABEL ESCAPE
   DO loc_dlog WITH .T.,""
   m.tbbase = cadtab.tabela
   m.sbase  = cadtab.serie
   SHOW GET  m.tbbase
   SHOW GET  m.sbase
   ON KEY LABEL ESCAPE KEYBOARD "{BACKTAB}"
ENDIF
RETURN .T.


*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _4EZ12IZHJ           m.sbase WHEN                       º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         STB0050,     Record Number:   51   º
*       º Variable:            m.sbase                            º
*       º Called By:           WHEN Clause                        º
*       º Object Type:         Field                              º
*       º Snippet Number:      3                                  º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*
FUNCTION _4ez12izhj     &&  m.sbase WHEN
#REGION 1
ON KEY LABEL ESCAPE KEYBOARD "{BACKTAB}"
RETURN(isediting)

*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _4EZ12IZHP           m.sbase VALID                      º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         STB0050,     Record Number:   51   º
*       º Variable:            m.sbase                            º
*       º Called By:           VALID Clause                       º
*       º Object Type:         Field                              º
*       º Snippet Number:      4                                  º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*
FUNCTION _4ez12izhp     &&  m.sbase VALID
#REGION 1
IF SEEK(STR(m.tbbase,3)+m.sbase)
   SHOW GET  m.tbbase
   SHOW GET  m.sbase
   RETURN .T.
ENDIF
_CUROBJ = 1
RETURN .T.

*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _4EZ12IZHV           m.empresa VALID                    º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         STB0050,     Record Number:   52   º
*       º Variable:            m.empresa                          º
*       º Called By:           VALID Clause                       º
*       º Object Type:         Field                              º
*       º Snippet Number:      5                                  º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*

FUNCTION _4ez12izhv     &&  m.empresa VALID
#REGION 1
SELECT empresa
IF LASTKEY() = 9
   ON KEY LABEL ESCAPE
   DO loc_dlog WITH .T.
	ON KEY LABEL ESCAPE KEYBOARD "{BACKTAB}"
   m.empresa = empresa.empresa
   SHOW GET  m.empresa
ELSE
	SET ORDER TO TAG empresa
	IF SEEK(m.empresa)
   	   m.empresa = empresa.empresa
	   SHOW GET  m.empresa
	ELSE
	   RETURN .F.
	ENDIF
ENDIF
RETURN .T.


*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _4EZ12IZI2           m.grupo WHEN                       º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         STB0050,     Record Number:   53   º
*       º Variable:            m.grupo                            º
*       º Called By:           WHEN Clause                        º
*       º Object Type:         Field                              º
*       º Snippet Number:      6                                  º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*
FUNCTION _4ez12izi2     &&  m.grupo WHEN
#REGION 1
ON KEY LABEL ENTER
ON KEY LABEL ESCAPE KEYBOARD "{BACKTAB}"
RETURN(isediting)

*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _4EZ12IZIA           m.marca WHEN                       º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         STB0050,     Record Number:   54   º
*       º Variable:            m.marca                            º
*       º Called By:           WHEN Clause                        º
*       º Object Type:         Field                              º
*       º Snippet Number:      7                                  º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*
FUNCTION _4ez12izia     &&  m.marca WHEN
#REGION 1
ON KEY LABEL ENTER
ON KEY LABEL ESCAPE KEYBOARD "{BACKTAB}"
RETURN(isediting)

*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _4EZ12IZIB           m.marca VALID                      º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         STB0050,     Record Number:   54   º
*       º Variable:            m.marca                            º
*       º Called By:           VALID Clause                       º
*       º Object Type:         Field                              º
*       º Snippet Number:      8                                  º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*
FUNCTION _4ez12izib     &&  m.marca VALID
#REGION 1
select marca
SET ORDER TO TAG marca
if lastkey() = 9
   ON KEY LABEL ESCAPE
   DO loc_dlog
   ON KEY LABEL ESCAPE KEYBOARD "{BACKTAB}"
   m.marca = marca
   m.marcdesc = descricao
   select grupo
   show get m.marca
   SHOW GET m.marcdesc
	IF LASTKEY() = 27
		RETURN .F.
	ENDIF
   return .T.
endif

IF m.marca = 0
   m.marcdesc = "TODAS"
   select grupo
   SHOW GET m.marcdesc
   return .t.
endif

if SEEK(STR(m.grupo,2)+STR(m.marca,2))
   m.marcdesc = descricao
   select grupo
   SHOW GET m.marcdesc
   return .t.
endif

select grupo
return .f.


*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _4EZ12IZIC           m.codinicio WHEN                   º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         STB0050,     Record Number:   56   º
*       º Variable:            m.codinicio                        º
*       º Called By:           WHEN Clause                        º
*       º Object Type:         Field                              º
*       º Snippet Number:      9                                  º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*
FUNCTION _4ez12izic     &&  m.codinicio WHEN
#REGION 1
ON KEY LABEL ENTER
ON KEY LABEL ESCAPE KEYBOARD "{BACKTAB}"
RETURN(isediting or isreading)

*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _4EZ12IZIU           m.codinicio VALID                  º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         STB0050,     Record Number:   56   º
*       º Variable:            m.codinicio                        º
*       º Called By:           VALID Clause                       º
*       º Object Type:         Field                              º
*       º Snippet Number:      10                                 º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*
FUNCTION _4ez12iziu     &&  m.codinicio VALID
#REGION 1
IF EMPTY(m.codinicio) AND LASTKEY() <> 9
	m.clasinicio  = " "
	m.descinicio  =   "PRIMEIRO"
	m.ordinicio   = 0
	SHOW GET  m.descinicio
	RETURN(.T.)
ENDIF
*----------------------------------------------------------*
LSforlocal  = ""

IF m.marca <> 0
	LSgrupo   = CHRTRAN(STR(m.grupo,2)," ","0")
	LSforlocal = ;
	   "LEFT(grupo.classifica,2) = LSgrupo AND grupo.marca = m.marca "
ENDIF	
*----------------------------------------------------------*

SELE grupo
SET ORDER TO TAG codigo
SET NEAR ON
SEEK ALLTRIM(m.codinicio)
SET NEAR OFF
*----------------------------------------------------------*
SELECT grupo
ON KEY LABEL ESCAPE
IF LASTKEY() = 9
	SET ORDER TO TAG ordem
	ON KEY LABEL ESCAPE
	DO loc_dlog WITH .T.,LSforlocal
	ON KEY LABEL ESCAPE KEYBOARD "{BACKTAB}"
	IF LASTKEY() = 27
		RETURN .F.
	ENDIF
ENDIF
m.codinicio  = grupo.codigo
m.clasinicio = grupo.classifica
m.descinicio = grupo.descricao
m.ordinicio  = grupo.ordem
*******
SHOW GET  m.codinicio
SHOW GET  m.descinicio
RETURN .t.


*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _4EZ12IZJ1           m.codfim WHEN                      º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         STB0050,     Record Number:   57   º
*       º Variable:            m.codfim                           º
*       º Called By:           WHEN Clause                        º
*       º Object Type:         Field                              º
*       º Snippet Number:      11                                 º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*
FUNCTION _4ez12izj1     &&  m.codfim WHEN
#REGION 1
ON KEY LABEL ENTER
ON KEY LABEL ESCAPE KEYBOARD "{BACKTAB}"
RETURN(isediting or isreading)

*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _4EZ12IZJ7           m.codfim VALID                     º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         STB0050,     Record Number:   57   º
*       º Variable:            m.codfim                           º
*       º Called By:           VALID Clause                       º
*       º Object Type:         Field                              º
*       º Snippet Number:      12                                 º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*

FUNCTION _4ez12izj7     &&  m.codfim VALID
#REGION 1
IF EMPTY(m.codfim) AND LASTKEY() <> 9
	m.clasfim 	= 	REPL("9",15)
	m.descfim   =   "ULTIMO"
	m.ordfim	= 99999
	SHOW GET  m.descfim
	RETURN(.T.)
ENDIF
*----------------------------------------------------------*
LSforlocal  = ""

IF m.marca <> 0
	LSgrupo   = CHRTRAN(STR(m.grupo,2)," ","0")
	LSforlocal = ;
	   "LEFT(grupo.classifica,2) = LSgrupo AND grupo.marca = m.marca "
ENDIF	

*----------------------------------------------------------*

SELE grupo
SET ORDER TO TAG codigo
SET NEAR ON
IF !EMPTY(m.codfim)
	SEEK ALLTRIM(m.codfim)
ELSE
	SEEK ALLTRIM(m.codinicio)
ENDIF
SET NEAR OFF
*----------------------------------------------------------*
SELECT grupo
ON KEY LABEL ESCAPE
IF LASTKEY() = 9
	SET ORDER TO TAG ordem
	ON KEY LABEL ESCAPE
	DO loc_dlog WITH .T.,LSforlocal
	ON KEY LABEL ESCAPE KEYBOARD "{BACKTAB}"
	IF LASTKEY() = 27
		RETURN .F.
	ENDIF
ENDIF
m.codfim  = grupo.codigo
m.clasfim = grupo.classifica
m.descfim = grupo.descricao
m.ordfim  = grupo.ordem
*******
SHOW GET  m.codfim
SHOW GET  m.descfim
IF m.ordfim < m.ordinicio
	wp_msg = "Ordem final deve ser Maior que a inicial."
	RETURN(.F.)
ENDIF
RETURN .t.


*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _4EZ12IZJE           m.tp_rel WHEN                      º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         STB0050,     Record Number:   60   º
*       º Variable:            m.tp_rel                           º
*       º Called By:           WHEN Clause                        º
*       º Object Type:         Radio Button                       º
*       º Snippet Number:      13                                 º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*
FUNCTION _4ez12izje     &&  m.tp_rel WHEN
#REGION 1
IF isediting
	ON KEY LABEL ENTER KEYBOARD "{RIGHTARROW}"
ENDIF	
RETURN(isediting)


*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _4EZ12IZJK           m.edit_btn WHEN                    º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         STB0050,     Record Number:   61   º
*       º Variable:            m.edit_btn                         º
*       º Called By:           WHEN Clause                        º
*       º Object Type:         Push Button                        º
*       º Snippet Number:      14                                 º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*
FUNCTION _4ez12izjk     &&  m.edit_btn WHEN
#REGION 1
ON KEY LABEL ENTER
ON KEY LABEL ESCAPE KEYBOARD "{BACKTAB}"
RETURN(.t.)

*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _4EZ12IZJQ           m.imp_btn VALID                    º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         STB0050,     Record Number:   62   º
*       º Variable:            m.imp_btn                          º
*       º Called By:           VALID Clause                       º
*       º Object Type:         Push Button                        º
*       º Snippet Number:      15                                 º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*
FUNCTION _4ez12izjq     &&  m.imp_btn VALID
#REGION 1
do CASE
	CASE  m.tp_rel < 4
		DO ULtbvenda
	CASE  m.tp_rel = 4
		DO ULtbtele
	CASE  m.tp_rel = 5
		DO ULtbLista
	OTHERWISE
		DO ULtbCodForn
ENDCASE
SHOW WINDOW stb0050 TOP
SHOW GET m.imp_btn DISABLE
RETURN





*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _4EZ12IZJX           exit_btn VALID                     º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         STB0050,     Record Number:   63   º
*       º Variable:            exit_btn                           º
*       º Called By:           VALID Clause                       º
*       º Object Type:         Push Button                        º
*       º Snippet Number:      16                                 º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*
FUNCTION _4ez12izjx     &&  exit_btn VALID
#REGION 1
CLEAR READ
CLEAR GETS
