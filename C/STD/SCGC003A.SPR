*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ 05/25/15            SCGC003A.SPR               10:53:34 ╨
*       ╨                                                         ╨
*       гддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╤
*       ╨                                                         ╨
*       ╨ Author's Name                                           ╨
*       ╨                                                         ╨
*       ╨ Copyright (c) 2015 Company Name                         ╨
*       ╨ Address                                                 ╨
*       ╨ City,     Zip                                           ╨
*       ╨                                                         ╨
*       ╨ Description:                                            ╨
*       ╨ This program was automatically generated by GENSCRN.    ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨         SCGC003A/MS-DOS Setup Code - SECTION 1          ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*

#REGION 1

*~ WIZARDSCREEN
#DEFINE C_DBFEMPTY		'Database is empty, add a record?'
#DEFINE C_DELREC		'Apagar Registro Selecionado ?'
#DEFINE C_ENDFILE		'Final do Arquivo.'
#DEFINE C_CANCTRF		'Confirma o Cancelamento da Devolucao ? '
#DEFINE C_APROTRF		'Confirma o Aprovacao da Devolucao ? '
*---------------------------------------------------------------------*
* ARQUIVOS UTILIZADOS :                                               *
*              - DUPLICAT
*              - ORCAMENT
*              - ORCATMP
*              - NOTAENT
*              - NOTAITE
*              - EMPRESA
*              - CLIENTES
*              - FORNECE
*              - TIPOOPER
*              - TAB_CITA
*              - PARAMETR
*              - NOTA
*			   - NF_ANEXO
*              - TAB_CST
*              - SALDO
*              - ITEMMOV
*              - GRUPO
*              - PRECO
*              - TRANSPRT
*              - TAB001
* OBJETIVOS : IMPORTACAO DE FATURAMENTO DO SISTEMA ANTIGO
*	
*---------------------------------------------------------------------*
	=W_DEFPROC("rotinas.spr")
	PRIVATE LSalias
	LSalias = ALIAS()

	ON KEY LABEL ESCAPE
	PRIVATE isediting,isadding,isreading
	PRIVATE wp_record
	PRIVATE isreadonly,is2table,wzalias

	m.wzalias	=	SELECT()
	m.isediting	=	.F.
	m.isadding	=	.F.
	m.isreading =  	.F.
	m.is2table 	= 	.F.
	wp_flgfecha = 	.F. 		&& defaut nao fechamento da secao
	WP_RECORD 	= 	0
	wp_ref_local =  .T.     &&  POSSUI CONTROLE DE REFRESH LOCAL



	M.CUPOM 	= 0

	********>>>>>> INTERESE LOCAL
	wl_cota     = .f.
	iscancela   = .f.
	isitens     = .f. && indica se houve edicao doas itens durante ed. orca.
	M.TAB_CST   = 0   && referencia a tabela sit. trib. da empresa em proces
	m.empresa   = 0		  && indica a empresa em processo
	LFcomp		= .t.     && indica que arquivos estao compactados
	LFentra		= .t.     && indica que arquivos estao compactados
	LFsaida		= .t.     && indica que arquivos estao compactados
	LFbaixa		= .t.     && indica que arquivos estao compactados
	LFbordero	= .t.     && indica que arquivos estao compactados
	LFqe			= .t.
	LFci		=	.t.
	LFimpoqe     	= .t.     && indica que arquivos estao compactados
	LFimpoci     	= .t.     && indica que arquivos estao compactados
	LFalerta    = .t.     && pede alerta para menssagens
	******>>>> INICIO CONTROLE ARQUIVOS

	*>> parametros repassados a btn_val


	VLleitura = "" && OPERACOES DE REMESSA
                         * repassa chave de leitura p/ btn_val
	VLlerfim  = ""  && 1o REG. DE OPERACOES DE REQUISICAO
           * repassa chave de leitura p/ btn_val (POSICAO FINAL + 1 REG)
	VLcompara = ""
                         * repassa chave de comparacao p/ btn_val
	VLchvlimi = ""  && otimiza browse
	*******************************************************
	PRIVATE LFgrfiscal,LFduplicat,LForcament,LForcatmp,LForc_anex
	PRIVATE LFclienc,LFclientes
	PRIVATE LFempresa,LFfornece,LFtipooper,LFtab_cita,LFparametr,LFnota
	PRIVATE LFnf_anexo
	PRIVATE LFtab_cst,LFsaldo,LFitemmov,LFitmanexo,LFgrupo,LFpreco
	PRIVATE LFtransprt
	PRIVATE LFtab001,LFnotaite,LFarqqe,LFnotaent,LFarqci,LFretornbc,LFretornmv
	PRIVATE LFpedido,LFpedite,LFtransmit

	LFgrfiscal = NetArq("grfiscal")
	LFduplicat = NetArq("duplicat")
	LForcament = NetArq("orcament")
	LForcatmp  = NetArq("orcatmp")
	LForc_anex = NetArq("orc_anex")
	LFclienc   = NetArq("clienc")
	LFclientes = NetArq("clientes")

	LFempresa  = NetArq("empresa")
	LFfornece  = NetArq("fornece")
	LFtipooper = NetArq("tipooper")
	LFtab_cita = NetArq("tab_cita")
	LFparametr = NetArq("parametr")
	LFnota     = NetArq("nota")
	LFnf_anexo = NetArq("nf_anexo")

	LFtab_cst  = NetArq("tab_cst")
	LFsaldo    = NetArq("saldo")
	LFitemmov  = NetArq("itemmov")
	LFitmanexo = NetArq("itmanexo")
	LFgrupo    = NetArq("grupo")
	LFpreco    = NetArq("preco")
	LFtransprt = NetArq("transprt")

	LFtab001   = NetArq("tab001")
	LFnotaite  = NetArq("notaite")
	LFarqqe       = NetArq("qe")
	LFnotaent  = NetArq("notaent")
	LFarqci       = NetArq("ci")
	LFretornbc = NetArq("retornbc")
	LFretornmv = NetArq("retornmv")

	LFpedido   = NetArq("pedido")
	LFpedite   = NetArq("pedite")
	LFtransmit = NetArq("transmit")


	IF (LFgrfiscal+LFduplicat+LForcament+LForcatmp+LForc_anex+LFclienc+;
		LFclientes)  > 100000 && HOUVE FALHA DE ABERTURA
		DO ULfecha 		&& FECHA ARQUIVOS ABERTOS
		RETURN
	ENDIF
	IF (LFempresa+LFfornece+LFtipooper+LFtab_cita+LFparametr+LFnota+;
		LFnf_anexo)  > 100000 && HOUVE FALHA DE ABERTURA
		DO ULfecha 		&& FECHA ARQUIVOS ABERTOS
		RETURN
	ENDIF

	IF (LFtab_cst+LFsaldo+LFitemmov+LFitmanexo+LFgrupo+LFpreco+;
		LFtransprt)  > 100000 && HOUVE FALHA DE ABERTURA
		DO ULfecha 		&& FECHA ARQUIVOS ABERTOS
		RETURN
	ENDIF
	IF (LFtab001+LFnotaite+LFarqqe+LFnotaent+LFarqci+LFretornbc+;
		LFretornmv)  > 100000 && HOUVE FALHA DE ABERTURA
		DO ULfecha 		&& FECHA ARQUIVOS ABERTOS
		RETURN
	ENDIF

	IF (LFpedido+LFpedite+LFtransmit) > 100000 && HOUVE FALHA DE ABERTURA
		DO ULfecha 		&& FECHA ARQUIVOS ABERTOS
		RETURN
	ENDIF






#REGION 0
REGIONAL m.currarea, m.talkstat, m.compstat

IF SET("TALK") = "ON"
	SET TALK OFF
	m.talkstat = "ON"
ELSE
	m.talkstat = "OFF"
ENDIF
m.compstat = SET("COMPATIBLE")
SET COMPATIBLE FOXPLUS

*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨                MS-DOS Window definitions                ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*

IF NOT WEXIST("scgc003") ;
	OR UPPER(WTITLE("SCGC003")) == "SCGC003.PJX" ;
	OR UPPER(WTITLE("SCGC003")) == "SCGC003.SCX" ;
	OR UPPER(WTITLE("SCGC003")) == "SCGC003.MNX" ;
	OR UPPER(WTITLE("SCGC003")) == "SCGC003.PRG" ;
	OR UPPER(WTITLE("SCGC003")) == "SCGC003.FRX" ;
	OR UPPER(WTITLE("SCGC003")) == "SCGC003.QPR"
	DEFINE WINDOW scgc003 ;
		FROM INT((SROW()-20)/2),INT((SCOL()-76)/2) ;
		TO INT((SROW()-20)/2)+19,INT((SCOL()-76)/2)+75 ;
		TITLE "[ IMPORTACAO DE DADOS DO SISTEMA COBOL ]" ;
		FOOTER "[ 003 ]" ;
		FLOAT ;
		NOCLOSE ;
		SHADOW ;
		NOMINIMIZE ;
		NONE ;
		COLOR SCHEME 1
ENDIF


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨         SCGC003A/MS-DOS Setup Code - SECTION 2          ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*

#REGION 1
******>>>> INICIO CONTROLE LOCAL


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨              SCGC003A/MS-DOS Screen Layout              ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*

#REGION 1
IF WVISIBLE("scgc003")
	ACTIVATE WINDOW scgc003 SAME
ELSE
	ACTIVATE WINDOW scgc003 NOSHOW
ENDIF
@ 6,61 SAY "a" ;
	SIZE 1,1, 0
@ 6,5 SAY "-" ;
	SIZE 1,1, 0
@ 6,29 SAY "-" ;
	SIZE 1,1, 0
@ 0,0 TO 19,75 ;
	COLOR SCHEME 23
@ 1,2 TO 3,35 ;
	COLOR SCHEME 23
@ 3,3 TO 3,34 ;
	COLOR SCHEME 24
@ 3,35 SAY "ы" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 2,35 SAY "Ё" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 1,35 SAY "©" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 1,3 SAY "[Diretorio origem com arquivos]" ;
	SIZE 1,31, 0
@ 1,39 TO 3,72 ;
	COLOR SCHEME 23
@ 3,40 TO 3,71 ;
	COLOR SCHEME 24
@ 3,72 SAY "ы" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 2,72 SAY "Ё" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 1,72 SAY "©" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 1,40 SAY "[Dir.destino (TEMPORARIO)]" ;
	SIZE 1,26, 0
@ 5,49 TO 7,73 ;
	COLOR SCHEME 23
@ 7,50 TO 7,72 ;
	COLOR SCHEME 24
@ 7,73 SAY "ы" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 6,73 SAY "Ё" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 5,73 SAY "©" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 5,50 SAY "[Periodo de]" ;
	SIZE 1,12, 0
@ 13,1 TO 15,9 ;
	COLOR SCHEME 24
@ 15,2 TO 15,8 ;
	COLOR SCHEME 23
@ 14,9 SAY "Ё" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 23
@ 15,9 SAY "ы" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 23
@ 13,9 SAY "©" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 23
@ 13,64 TO 15,74 ;
	COLOR SCHEME 24
@ 15,65 TO 15,73 ;
	COLOR SCHEME 23
@ 14,74 SAY "Ё" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 23
@ 15,74 SAY "ы" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 23
@ 13,74 SAY "©" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 23
@ 13,52 TO 15,62 ;
	COLOR SCHEME 24
@ 15,53 TO 15,61 ;
	COLOR SCHEME 23
@ 14,62 SAY "Ё" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 23
@ 15,62 SAY "ы" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 23
@ 13,62 SAY "©" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 23
@ 13,40 TO 15,50 ;
	COLOR SCHEME 24
@ 15,41 TO 15,49 ;
	COLOR SCHEME 23
@ 14,50 SAY "Ё" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 23
@ 15,50 SAY "ы" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 23
@ 13,50 SAY "©" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 23
@ 13,27 TO 15,38 ;
	COLOR SCHEME 24
@ 15,28 TO 15,37 ;
	COLOR SCHEME 23
@ 14,38 SAY "Ё" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 23
@ 15,38 SAY "ы" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 23
@ 13,38 SAY "©" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 23
@ 13,11 TO 15,25 ;
	COLOR SCHEME 24
@ 15,12 TO 15,24 ;
	COLOR SCHEME 23
@ 14,25 SAY "Ё" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 23
@ 15,25 SAY "ы" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 23
@ 13,25 SAY "©" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 23
@ 1,75 TO 18,75 ;
	COLOR SCHEME 24
@ 19,1 TO 19,74 ;
	COLOR SCHEME 24
@ 19,75 SAY "ы" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 0,75 SAY "©" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 16,1 TO 18,16 ;
	COLOR SCHEME 24
@ 18,2 TO 18,15 ;
	COLOR SCHEME 23
@ 17,16 SAY "Ё" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 23
@ 18,16 SAY "ы" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 23
@ 16,16 SAY "©" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 23
@ 16,59 TO 18,74 ;
	COLOR SCHEME 24
@ 18,60 TO 18,73 ;
	COLOR SCHEME 23
@ 17,74 SAY "Ё" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 23
@ 18,74 SAY "ы" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 23
@ 16,74 SAY "©" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 23
@ 6,24 SAY "a" ;
	SIZE 1,1, 0
@ 5,2 TO 7,48 ;
	COLOR SCHEME 23
@ 7,3 TO 7,47 ;
	COLOR SCHEME 24
@ 7,48 SAY "ы" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 6,48 SAY "Ё" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 5,48 SAY "©" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 5,3 SAY "[Filiais a Importar]" ;
	SIZE 1,20, 0
@ 0,17 SAY "[Importacao e Processamento Filias COBOL ]" ;
	SIZE 1,42, 0
@ 0,67 SAY "[003A]" ;
	SIZE 1,6, 0
@ 16,19 TO 18,56 ;
	COLOR SCHEME 23
@ 18,20 TO 18,55 ;
	COLOR SCHEME 24
@ 18,56 SAY "ы" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 17,56 SAY "Ё" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 16,56 SAY "©" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 2,3 GET m.drvorigem ;
	SIZE 1,31 ;
	DEFAULT " " ;
	WHEN _4cy0nci83() ;
	VALID _4cy0nci84()
@ 2,40 GET m.drive ;
	SIZE 1,31 ;
	DEFAULT " " ;
	WHEN _4cy0nci85() ;
	VALID _4cy0nci8t()
@ 6,3 GET m.empinicio ;
	SIZE 1,2 ;
	DEFAULT " " ;
	PICTURE "99" ;
	WHEN _4cy0nci90() ;
	VALID _4cy0nci97()
@ 6,6 GET m.nome_ini ;
	SIZE 1,17 ;
	DEFAULT " " ;
	PICTURE "@!K" ;
	WHEN .F.
@ 6,27 GET m.empfim ;
	SIZE 1,2 ;
	DEFAULT " " ;
	PICTURE "99" ;
	WHEN _4cy0nci9f() ;
	VALID _4cy0nci9m()
@ 6,30 GET m.nome_fim ;
	SIZE 1,17 ;
	DEFAULT " " ;
	PICTURE "@!K" ;
	WHEN .F.
@ 6,50 GET m.dt_inicio ;
	SIZE 1,10 ;
	DEFAULT {  /  /  } ;
	WHEN isediting ;
	VALID _4cy0nci9n()
@ 6,63 GET m.dt_fim ;
	SIZE 1,10 ;
	DEFAULT {  /  /  } ;
	WHEN _4cy0nci9o() ;
	VALID m.dt_fim >= m.dt_inicio ;
	MESSAGE "Data Final deve ser maior ou igual a Inicial"
@ 9,2 GET LFcomp ;
	PICTURE "@*C Arquivos Comp. (.ZIP)" ;
	SIZE 1,25 ;
	DEFAULT 0 ;
	WHEN _4cy0nci9p()
@ 9,42 GET LFalerta ;
	PICTURE "@*C Alerta sonoro p/ menssagens" ;
	SIZE 1,31 ;
	DEFAULT 0 ;
	WHEN _4cy0nciab()
@ 11,2 GET LFentra ;
	PICTURE "@*C Entradas" ;
	SIZE 1,12 ;
	DEFAULT 0 ;
	WHEN _4cy0nciai()
@ 11,15 GET LFsaida ;
	PICTURE "@*C Saidas" ;
	SIZE 1,10 ;
	DEFAULT 0 ;
	WHEN _4cy0nciap()
@ 11,28 GET LFbaixa ;
	PICTURE "@*C Baixas" ;
	SIZE 1,10 ;
	DEFAULT 0 ;
	WHEN _4cy0nciav()
@ 11,42 GET LFbordero ;
	PICTURE "@*C Borderos" ;
	SIZE 1,12 ;
	DEFAULT 0 ;
	WHEN _4cy0ncib2()
@ 11,57 GET LFqe ;
	PICTURE "@*C Q.E." ;
	SIZE 1,8 ;
	DEFAULT 0 ;
	WHEN _4cy0ncib3()
@ 11,66 GET LFci ;
	PICTURE "@*C C.I." ;
	SIZE 1,8 ;
	DEFAULT 0 ;
	WHEN _4cy0ncib4()
@ 14,2 GET m.edit_btn ;
	PICTURE "@*HN \<Edita" ;
	SIZE 1,7,1 ;
	DEFAULT 1 ;
	WHEN _4cy0ncib5() ;
	VALID btn_val1('EDIT') ;
	MESSAGE 'Permite a alteracao de dados do registro corrente'
@ 14,12 GET m.desc_btn ;
	PICTURE "@*HN \<Descompacta" ;
	SIZE 1,13,1 ;
	DEFAULT 1 ;
	VALID _4cy0ncib6()
@ 14,28 GET m.conv_btn ;
	PICTURE "@*HN \<Converte" ;
	SIZE 1,10,1 ;
	DEFAULT 1 ;
	VALID _4cy0nciby()
@ 14,41 GET m.imp_btn ;
	PICTURE "@*HN \<Importa" ;
	SIZE 1,9,1 ;
	DEFAULT 1 ;
	VALID _4cy0ncic4() ;
	DISABLE
@ 14,54 GET m.tot_btn ;
	PICTURE "@*HN \<Geral" ;
	SIZE 1,7,1 ;
	DEFAULT 1 ;
	VALID _4cy0ncica()
@ 14,66 GET m.canc_btn ;
	PICTURE "@*HT \<Saida" ;
	SIZE 1,7,1 ;
	DEFAULT 1 ;
	VALID _4cy0ncicg()
@ 17,2 GET m.ci_btn ;
	PICTURE "@*HN \<1-Confere CI" ;
	SIZE 1,14,1 ;
	DEFAULT 1 ;
	VALID _4cy0ncico()
@ 17,21 GET m.msg_acomp ;
	SIZE 1,22 ;
	DEFAULT " " ;
	WHEN .F.
@ 17,45 GET m.contador ;
	SIZE 1,10 ;
	DEFAULT 0 ;
	PICTURE "9999999999" ;
	WHEN .F.
@ 17,60 GET m.QE_btn ;
	PICTURE "@*HN \<2-Confere.QE" ;
	SIZE 1,14,1 ;
	DEFAULT 1 ;
	VALID _4cy0ncicp()

IF NOT WVISIBLE("scgc003")
	ACTIVATE WINDOW scgc003
ENDIF


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨    MS-DOSREAD contains clauses from SCREEN scgc003a     ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*

READ CYCLE ;
	ACTIVATE READACT() ;
	DEACTIVATE READDEAC() ;
	NOLOCK

RELEASE WINDOW scgc003

#REGION 0
IF m.talkstat = "ON"
	SET TALK ON
ENDIF
IF m.compstat = "ON"
	SET COMPATIBLE ON
ENDIF


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨              SCGC003A/MS-DOS Cleanup Code               ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*

#REGION 1

DO ULfecha 		&& FECHA ARQUIVOS ABERTOS
RETURN

*********************************
*    P R O C E D I M E N T O S  *
*********************************


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨  SCGC003A/MS-DOS Supporting Procedures and Functions    ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*

#REGION 1
PROCEDURE ULfecha
	=UP_fecha("grfiscal",LFgrfiscal)
	=UP_fecha("duplicat",LFduplicat)
	=UP_fecha("orcament",LForcament)
	=UP_fecha("orcatmp",LForcatmp)
	=UP_fecha("orc_anex",LForc_anex)
	=UP_fecha("clienc",LFclienc)
	=UP_fecha("clientes",LFclientes)

	=UP_fecha("empresa",LFempresa)
	=UP_fecha("fornece",LFfornece)
	=UP_fecha("tipooper",LFtipooper)
	=UP_fecha("tab_cita",LFtab_cita)
	=UP_fecha("parametr",LFparametr)
	=UP_fecha("nota",LFnota)
	=UP_fecha("nf_anexo",LFnf_anexo)

	=UP_fecha("tab_cst",tab_cst)
	=UP_fecha("saldo",LFsaldo)
	=UP_fecha("itemmov",LFitemmov)
	=UP_fecha("itmanexo",LFitmanexo)
	=UP_fecha("grupo",LFgrupo)
	=UP_fecha("preco",LFpreco)
	=UP_fecha("transprt",LFtransprt)

	=UP_fecha("tab001",LFtab001)
	=UP_fecha("notaite",LFnotaite)
	=UP_fecha("qe",LFarqqe)
	=UP_fecha("notaent",LFnotaent)
	=UP_fecha("ci",LFarqci)
	=UP_fecha("retornbc",LFretornbc)
	=UP_fecha("retornmv",LFretornmv)

	=UP_fecha("pedido",LFpedido)
	=UP_fecha("pedite",LFpedite)
	=UP_fecha("transmit",LFtransmit)
	IF !EMPTY(LSalias) AND USED(LSalias)
		SELECT &LSalias
	ENDIF

	wp_flgfecha = .F. 		&& defaut nao fechamento da secao
	ON KEY LABEL ESCAPE
	SET FORMAT TO
	ON KEY LABEL CTRL-I
RETURN

PROCEDURE BTN_VAL1
	PARAMETER tecla, m.chv_ler, m.chv_compara, m.chv_brow
	LN_prxobj = _CUROBJ
	SHOW GET wp_empresa
    DO CASE
		CASE tecla = "EDIT" AND !isediting   && INICIA EDICAO
			SHOW GET edit_btn,1 PROMPT "\<Ok"
			SHOW GET m.imp_btn DISABLE
			isediting = .t.
			m.drvorigem = "N:"
			m.drive     = "L:"
			SHOW GET m.drive
			SHOW GET m.drvorigem
			_CUROBJ = 1	
		    ON KEY LABEL ESCAPE KEYBOARD "{BACKTAB}"
			ON KEY LABEL END DO BTN_VAL1 WITH 'DELETE'
		CASE tecla = "EDIT" AND isediting     && CONFIRMA EDICAO
			SHOW GET edit_btn,1 PROMPT "\<Edita"
			isediting = .f.
			_CUROBJ = 1	
			SHOW GET m.imp_btn ENABLE
		    ON KEY LABEL ESCAPE
			ON KEY LABEL END
		CASE tecla = "DELETE" AND isediting     && CANCELA EDICAO
			SHOW GET edit_btn,1 PROMPT "\<Edita"
			isediting = .f.
			_CUROBJ = 1	
			SHOW GET m.imp_btn DISABLE
		    ON KEY LABEL ESCAPE
			ON KEY LABEL END
	ENDCASE
RETURN

*-------------------->>>>>>>>>
PROCEDURE ULopevenda
		m.motivo		= INT(VAL(m.ch_motiv))
									&& 1=NORMAL  2=RECLAMADA
									&& 3=COMPLEMENTO 4=ENTRGA FUTU.		
		DO CASE
			CASE m.ch_produ = "2"			&& IMOBILIZADO
				m.motivo   = 5
			CASE m.ch_produ = "3"			&& CARCACAS
				m.motivo   = 6
			CASE m.ch_produ = "4"			&& SUCATA
				m.motivo   = 7
		ENDCASE
		LNacmprz = 0		
		FOR LNctr = 1  TO 	notaimpo.qtde_dup
			LNacmprz		=  LNacmprz + (m.venc_dup - m.dt_emi)
			m.prazo 		=   m.prazo + STRTRAN(STR(m.venc_dup -;
	 							 m.dt_emi,3)," ","0")+"/"
			m.venc_dup 		=   m.venc_dup + notaimpo.intervalo			
			m.prazomedio 	=	LNacmprz / notaimpo. qtde_dup
		ENDFOR
		IF notaimpo.qtde_dup = 0
			m.prazo 		=   "000/"
		ENDIF
	
RETURN

PROCEDURE ULopetransf
		m.motivo = INT(VAL(m.ch_produ))	 && VALIDO P/ OPCAO 1 e 2
		IF m.ch_produ = "5"  && 5=MAT.DE USO SERVICO
			m.motivo = 3
	    ELSE
			IF m.ch_produ = "6"  && 6=MAT.DE CONSUMO
				m.motivo = 4
			ENDIF
		ENDIF
RETURN
PROCEDURE ULoperemessa
		DO CASE
			CASE m.ch_motiv = "5" && 5=CONSIGNACAO
				m.motivo = 1
			CASE m.ch_motiv = "6" && 6=DEMONSTRACAO
	    	     m.motivo = 2
			CASE m.ch_motiv = "2" && 2=RECLAMADA
			     m.motivo = 3
			CASE m.ch_motiv = "4" && 4=ENTREGA FUTURA
			     m.motivo = 4
			CASE m.ch_motiv = "7" && 7=CONSERTO
			     m.motivo = 5
			CASE m.ch_motiv = "8" && 8=OUTRAS
			     m.motivo = 6
		ENDCASE
RETURN
PROCEDURE ULopedevol
		DO CASE
			CASE m.ch_produ = "1" AND m.ch_motiv = "5"
			     m.motivo = 2
			CASE m.ch_produ = "1" AND m.ch_motiv = "6"
			     m.motivo = 3
			CASE m.ch_produ = "5"
			     m.motivo = 4
			CASE m.ch_produ = "6"
			     m.motivo = 5
			CASE m.ch_produ = "2"
			     m.motivo = 6
			CASE m.ch_produ = "7"
			     m.motivo = 7
			CASE m.ch_produ = "8"
			     m.motivo = 8
		ENDCASE
RETURN

PROCEDURE ULoperequ
	DO CASE
		CASE m.ch_produ = "1"
			m.motivo = 1
		CASE m.ch_produ = "5"
			m.motivo = 2
		CASE m.ch_produ = "6"
			m.motivo = 3
		OTHERWISE
			m.motivo = 4	
	ENDCASE
RETURN
***********************************************************************
***********************************************************************
***********************************************************************

PROCEDURE ULconvsaida
	wp_flgfecha = .F.
	IF ! NetUse("notaimpo",.t.)
		wp_flgfecha = .t.  && implica no fechamento da secao
	ENDIF
	IF ! NetUse("itemimpo",.t.)
		wp_flgfecha = .t.  && implica no fechamento da secao
	ENDIF
	IF ! NetUse("cobrimpo",.t.)
		wp_flgfecha = .t.  && implica no fechamento da secao
	ENDIF

	IF ! NetUse("IDLNFS",.t.)
		wp_flgfecha = .t.  && implica no fechamento da secao
	ENDIF
	IF ! NetUse("IDLITNFS",.t.)
		wp_flgfecha = .t.  && implica no fechamento da secao
	ENDIF

	IF m.empresa = 10
		IF !FILE("l:\tmp\saidas.txt") OR wp_flgfecha
			=UP_fecha("notaimpo")
			=UP_fecha("itemimpo")
			=UP_fecha("cobrimpo")
			=UP_fecha("idlnfs")
			=UP_fecha("idlitnfs")
			RETURN
		ENDIF
	ELSE
		IF !FILE(LSnfstmp) OR !FILE(LSitemtmp) ;
					   OR !FILE(LScobrtmp)	OR wp_flgfecha
			=UP_fecha("notaimpo")
			=UP_fecha("itemimpo")
			=UP_fecha("cobrimpo")
			=UP_fecha("idlnfs")
			=UP_fecha("idlitnfs")
			RETURN
		ENDIF
	ENDIF


	SELE notaimpo
*>>>>>>>>>>>>>>>>>>>>>>>>>>  LIMPEZA DO ARQUIVO
	LStmp  = sys(5)+sys(2003)  		&&  UNIDADE E DIRETORIO CORRENTES
	SET DEFA TO &wp_dirdat

	SELE notaimpo
    USE notaimpo EXCL
    COPY STRU TO tmp WITH CDX
    USE tmp EXCL
    COPY STRU TO notaimpo WITH CDX
	USE

	SELE itemimpo
    USE itemimpo EXCL
    COPY STRU TO tmp WITH CDX
    USE tmp EXCL
    COPY STRU TO itemimpo WITH CDX
	USE

	SELE cobrimpo
    USE cobrimpo EXCL
    COPY STRU TO tmp WITH CDX
    USE tmp EXCL
    COPY STRU TO cobrimpo WITH CDX
	USE

	SELE idlnfs
    USE idlnfs EXCL
    COPY STRU TO tmp WITH CDX
    USE tmp EXCL
    COPY STRU TO idlnfs WITH CDX
	USE

	SELE idlitnfs
    USE idlitnfs EXCL
    COPY STRU TO tmp WITH CDX
    USE tmp EXCL
    COPY STRU TO idlitnfs WITH CDX
	USE



	SET DEFA TO &LStmp
*----------------------------------------------------------------
	IF ! NetUse("notaimpo",.t.)
		wp_flgfecha = .t.  && implica no fechamento da secao
	ENDIF
	IF ! NetUse("itemimpo",.t.)
		wp_flgfecha = .t.  && implica no fechamento da secao
	ENDIF
	IF ! NetUse("cobrimpo",.t.)
		wp_flgfecha = .t.  && implica no fechamento da secao
	ENDIF
	IF ! NetUse("IDLNFS",.t.)
		wp_flgfecha = .t.  && implica no fechamento da secao
	ENDIF
	IF ! NetUse("IDLITNFS",.t.)
		wp_flgfecha = .t.  && implica no fechamento da secao
	ENDIF
*--------------------------------------------------------------*

	IF m.empresa = 10
		SELE idlnfs
		ZAP
		PACK
		APPEND FROM L:\tmp\saidas.txt TYPE SDF ;
				for filial = 10 and tipo_nf = 1
		replace all natu_cli with 0 for natureza = "V" and Rlock()
		replace all natu_cli with 1 for natureza = "R" and Rlock()
		replace all natu_cli with 2 for natureza = "P" and Rlock()
		replace all natu_cli with 3 for natureza = "F" and Rlock()


		replace all TIPO_CLI with "0" for TIPO_CLI = "F" and Rlock()
		replace all TIPO_CLI with "1" for TIPO_CLI = "J" and Rlock()


		replace all tel_cli with chrtran(tel_cli,"-","") for Rlock()
		replace all tel_cli with chrtran(tel_cli,"(","") for Rlock()
		replace all tel_cli with chrtran(tel_cli,")","") for Rlock()
		replace all tel_cli with chrtran(tel_cli,"/","") for Rlock()


		replace all insc_cli with "ISENTO" for insc_cli = "1" AND Rlock()

		SELE notaimpo
		ZAP
		PACK
		a=DBF("idlnfs")
		APPEND FROM &a
	
	ELSE
		SELE notaimpo
		ZAP
		PACK
		APPEND FROM &LSnfstmp TYPE SDF
		GO TOP
	ENDIF
	IF EOF() AND BOF()
		=UP_fecha("notaimpo")
		=UP_fecha("itemimpo")
		=UP_fecha("cobrimpo")
		=UP_fecha("idlnfs")
		=UP_fecha("idlitnfs")
		RETURN
	ENDIF


	IF m.empresa = 10
		SELE idlitnfs
		ZAP
		PACK
		APPEND FROM L:\tmp\saidas.txt TYPE SDF ;
				for filial = 10 and tipo_nf = 2
		SELE itemimpo
		ZAP
		PACK
		a=DBF("idlitnfs")
		APPEND FROM &a

	ELSE
		SELE itemimpo
		ZAP
		PACK
		APPEND FROM &LSitemtmp TYPE SDF
	ENDIF
	GO TOP
	
	SELE cobrimpo
	ZAP
	PACK
	IF m.empresa <> 10
		APPEND FROM &LScobrtmp FOR FILIAL = notaimpo.filial TYPE SDF
	ENDIF

	SELE notaimpo
*******************
*---->   (INICIALIZACAO DO CONTROLE DE STATUS IMPRESSAO)
*******************	
	DO RELINIC.PRG          && INICIA VAR P/ TERMOMETRO

	LFsegue = .t.
	LNregistro = RECNO()
	LNimpressao = RECCOUNT()
	LNimpressos = 0
	GO LNregistro
*******************
	GO TOP
	m.msg_acomp = "Importa Saidas       "
	SHOW GET m.msg_acomp
	m.contador = 0
	SHOW GET m.contador
	
	DO WHILE !EOF() AND !wp_flgfecha  AND LFsegue
		SELE notaimpo
		wp_msg = "IMP. SAIDAS [Emp.: "+STR(m.empresa,3)+ " ]"+;
									DTOC(m.dt_inicio)
		=UPtermo()
************
		=UPtransacao("INICIAR")
************
	*>>>>>>>>>>>>>>>>>     INICIO CONVERSAO P/ ORCAMENT ou OUTROPER
		m.orcamento		=   notaimpo.nota
		m.empresa 		= 	notaimpo.filial
		m.tipo			=   notaimpo.tipo_sai
		m.descr_sai     =   notaimpo.descr_sai

*********
*		IF m.tipo = "NSP"    && INFORMATIVO SEM EFEITO GERADO NA INDUSTRIA
*			SELE notaimpo
*			SKIP
*			LOOP
*		ENDIF			
**********

		DO CASE
			**********   TIPOS ANTIGO USADOS NA RECONSTITUICAO DE 95/96/97
			CASE m.tipo = "VVC"
					m.tipo = "VLA"

			CASE   m.tipo = "VPC" ;
			    OR m.tipo = "D  " ;
			    OR ALLTRIM(m.descr_sai) $ "5.933/6.933"
			
				if  notaimpo.UF_cli <> "GO"
					m.tipo = "VFW"
				else
					m.tipo = "VLP"
				ENDIF
			CASE   ALLTRIM(m.descr_sai) $ "5.916/6.916"
			
				if  notaimpo.UF_cli <> "GO"
					m.tipo = "RDM"
				else
					m.tipo = "RDN"
				ENDIF
			CASE m.tipo = "VVF"
					m.tipo = "VFA"

			CASE m.tipo = "VPF" OR m.tipo = "F  "
					m.tipo = "VFW"


			CASE m.tipo = "RTP"
					m.tipo = "VFD"
			CASE m.tipo = "O  "
					m.tipo = "RDF"
			CASE m.tipo $ "TIT/TST"
					m.tipo = "TDA"
			CASE m.tipo $ "TIF"
					m.tipo = "TDB"
			CASE m.tipo = "TET"
					m.tipo = "TCA"
			CASE m.tipo = "TIC"
					m.tipo = "TDC"
			CASE m.tipo = "RTV"
					m.tipo = "VFC"
			CASE m.tipo = "RMC"
					m.tipo = "RCE"
			CASE m.tipo = "CVV"
					m.tipo = "VLG"
			CASE m.tipo = "RMI"
					m.tipo = "RDC"
			CASE m.tipo = "VRV"
					m.tipo = "VLE"
			CASE m.tipo = "RRT"
					m.tipo = "RDC"
			CASE m.tipo = "TCM"
					m.tipo = "TCC"
			CASE m.tipo = "VAI"
					m.tipo = "VLK"
			**************************************************************
			CASE m.tipo = "NSP" OR m.tipo = "NS "
					m.tipo = "NSP"
			CASE m.tipo = "RCG"    && O TIPO RCG FOI CRIADO, MAS E = RCC
					m.tipo = "RCC"
			CASE m.tipo = "VPC"   && TIPO ESPECIFICO DA IDL
					m.tipo = "VLB"

			&& TIPO ESPECIFICO DA IDL
			CASE m.tipo = "RD " OR m.tipo = "RF "
				m.tipo = "RCE"


			CASE m.tipo = "RCI"
				if  notaimpo.UF_cli <> "GO"
					m.tipo = "VRI"
				else
					m.tipo = "VRE"
				ENDIF


			CASE m.tipo = "VPF"   && TIPO ESPECIFICO DA IDL
					m.tipo = "VFB"
			CASE m.tipo $ "DIC/DCC/DPI"   && TIPO ESPECIFICO DA IDL
					m.tipo = "DCC"
			CASE m.tipo $ "DAI/DPP"   && TIPO ESPECIFICO DA IDL
					m.tipo = "DCD"
			CASE m.tipo $ "DCF/DCM/DSI"   && TIPO ESPECIFICO DA IDL
					m.tipo = "DDC"
		ENDCASE
		LDTtmp			= (SUBS(notaimpo.dt_emi,1,2)+"."+;
								 SUBS(notaimpo.dt_emi,3,2)+"."+;
								 SUBS(notaimpo.dt_emi,5,2))


		IF LDTtmp		= "29.02.00"
			LDTtmp	= {29.02.2000}
		ELSE
			LDTtmp	= CTOD(LDTtmp)
		ENDIF								
	 	m.dt_fat    	=	UPValData(LDTtmp)  && bug 20000

		m.hora_fat		=	space(8)


        *---------------------------------
        * ALTERACAO 19/10/2011  SERGIO ****
        *---------------------------------

		IF m.empresa = 10
 		    m.nota     		= 	m.orcamento + 4000000
		    m.NFSERVICO     = 	m.orcamento + 4000000
		ELSE
 		    m.nota     		= 	m.orcamento
		    m.NFSERVICO     = 	m.orcamento
		ENDIF




		*-------------------------------------------------------------
		*  VERIFICACAO DA EXISTENCIA DO DOC. anterior NO ARQ. DESTINO
		*-------------------------------------------------------------
		SELE nota
		SET ORDER TO TAG nota
		SEEK STR(m.empresa,3)+STR(m.nota - 1 ,7)		
		IF !FOUND()			&& Nota nao existe
		   DO OBJ_ALER.SPR WITH ;
		   "Documento anterior nao foi importado. " + ;
		   "Verifique data e importe."+ ;
		   "  Doc :  "+STR(m.nota - 1 ,7)		
			wp_flgfecha = .t.   				

			SELE notaimpo
            go bott
			SKIP
			LOOP
		ENDIF



		*-------------------------------------------------------------
		*  VERIFICACAO DA EXISTENCIA DO DOC. NO ARQ. DESTINO
		*-------------------------------------------------------------
		SELE nota
		SET ORDER TO TAG nota
		SEEK STR(m.empresa,3)+STR(m.nota,7)		
		IF FOUND()			&& Nota ja existe
			SELE notaimpo
			SKIP
			LOOP
		ENDIF
		*-------------------------------------------------------------
		*  NOTAS CANCELADAS E NOTAS DE ENTRADA
		*-------------------------------------------------------------
 		IF     m.tipo = "CAN" ;
 		    OR m.tipo = "ENT" ;
 		    OR ALLTRIM(m.descr_sai) $ "0.000"

 		    && "0.000" CANCELAMENTO SISTEMA ADV

			m.nota     		= m.orcamento

			IF m.empresa = 10
 			    m.nota     		= 	m.orcamento + 4000000
			ELSE
	 		    m.nota     		= 	m.orcamento
			ENDIF


			LDTtmp			=	(SUBS(notaimpo.dt_emi,1,2)+"."+;
								 SUBS(notaimpo.dt_emi,3,2)+"."+;
								 SUBS(notaimpo.dt_emi,5,2))
			IF LDTtmp		= "29.02.00"
				LDTtmp		= {29.02.2000}
			ELSE
				LDTtmp		= CTOD(LDTtmp)
			ENDIF								
		 	m.data    	    =	UPValData(LDTtmp)  && bug 20000

			m.status = 1
			m.operacao = "S"		&& NOTA FISCAL DE ENTRADA
			*---------------------------------------------------------*
			*	ATRIBUINDO DADOS PARA O CADASTRO
			*---------------------------------------------------------*
			m.nome		=	notaimpo.nome_cli
			m.endereco	=	notaimpo.end_cli
			m.cidade	=	notaimpo.mun_cli
			m.bairro	=	notaimpo.bairro_cli
			m.cep		= 	notaimpo.cep_cli
			m.cep		=   STRTRAN(m.cep," ","0")
			m.estado 	= 	notaimpo.uf_cli
*			m.fone		= "(   )-"+SUBS(STR(notaimpo.tel_cli,7),1,3)+"-"+;
*									 SUBS(STR(notaimpo.tel_cli,7),4,4)
*
*

			m.fone		=   notaimpo.tel_cli


			**** m.regiao 		=   notaimpo.regiao_cli
			IF UPPER(m.cidade) <> UPPER(empresa.cidade)
				m.regiao = 888  && INTERIOR
			ELSE
				m.regiao = 101  && CAPITAL
			ENDIF

	 		m.tp_transp		= 	notaimpo.tipo_trans
			m.tp_pessoa		= 	notaimpo.tipo_cli + 1
*			m.inscricao		= 	STR(notaimpo.insc_cli,13)
			m.inscricao		= 	notaimpo.insc_cli

			LDTtmp			= (SUBS(notaimpo.dt_emi,1,2)+"."+;
								 SUBS(notaimpo.dt_emi,3,2)+"."+;
								 SUBS(notaimpo.dt_emi,5,2))
			IF LDTtmp		= "29.02.00"
				LDTtmp	= {29.02.2000}
			ELSE
				LDTtmp	= CTOD(LDTtmp)
			ENDIF								

		 	m.DATA    	=	UPValData(LDTtmp)  && bug 20000



			m.cliente		=	notaimpo.cgc_cpf
			m.favorecido	=	notaimpo.cgc_cpf
			m.valor			=	notaimpo.total_nota / 100
			m.vlr_ent       =   notaimpo.vlr_dup / 100
			m.taxa			=	notaimpo.taxa / 100
			m.banco			=	notaimpo.cobranca
			m.agencia		=	notaimpo.agencia
			m.vlrfrete		=	notaimpo.frete / 100
			m.vlrseguro		=	notaimpo.seguro / 100
			m.vlrdespes		=	0
			if m.vlr_ent > 0
				m.tp_parcela    = 3		&& DUPLICATA
			ELSE
				m.tp_parcela    = 1		&& A VOSTA
			ENDIF			
			*---------------------------------------------------------*
			IF m.tipo = "CAN"		
					m.status = 2
					DO CASE
						CASE notaimpo.tipo_nota = 1
							m.ch_opera = "1"
						CASE notaimpo.tipo_nota <= 3
							m.ch_opera = "2"
						OTHERWISE
							m.ch_opera = "3"
					ENDCASE	
			ELSE
				m.operacao = "E"		&& NOTA FISCAL DE ENTRADA
			ENDIF
			SELE nota
		    =edithand('SAVE')
			SELE notaimpo
			SKIP
************
			=UPtransacao("TERMINAR")
************
			LOOP
		ENDIF
********************************************************************
********************************************************************
		SELE tipooper
		SET ORDER TO TAG tipo
		SEEK 's'+m.tipo
		IF !FOUND()
			SEEK 'S'+m.tipo
		ENDIF


	    SCATTER FIELDS ch_opera, ch_produ, ch_motiv, ch_desti,;
		    		 ch_contr, ch_condi, cfo  MEMVAR  MEMO
***>>PARA PROCESSO POR NAO ENCONTRAR CLASSIFICACAO
		IF !FOUND()
			wp_msg = "Emp["+STR(m.empresa,3)+"]"+;
					 " SAIDA No "+STR(m.orcamento,6)+;
					 " de "+DTOC(m.dt_inicio)+" TIPO=>"+m.tipo+;
					  " Nao identifcado"
			=UPbeeps(LFalerta,wp_msg)
			wp_flgfecha = .T.
			m.dt_inicio = m.dt_fim + 1	
			SELE notaimpo
************
			=UPtransacao("ABORTAR")
************
			LOOP
		ENDIF			
		SELE orcament
		SET ORDER TO TAG geral
		SEEK STR(m.empresa,3)+STR(m.orcamento,6)		

		IF FOUND()
			DO CASE
			    CASE !(LEFT(orcament.situacao,1) $ "OZ")
				   DO OBJ_ALER.SPR WITH ;
				   "Documento ja importado e NAO FATURADO. " + ;
				   "Apague o registro para processeguir IMPORTACAO."+ ;
				   "  Doc : "+m.tipo+"  "+str(m.orcamento,6)
					wp_flgfecha = .t.   				
	
			    CASE (LEFT(orcament.situacao,1) $ "O")
				   DO OBJ_ALER.SPR WITH ;
				   "Documento Consta Como Faturado sem que "+ ;
				   "NF.esteja emitida"+ ;
			       chr(13)+"Verifique com Suporte o Motivo de Erro."+ ;
			       chr(13)+" Doc : "+m.tipo+"  "+str(m.orcamento,6)
				   wp_flgfecha = .t.   				
			    CASE (LEFT(orcament.situacao,1) $ "Z")
				   DO OBJ_ALER.SPR WITH ;
				   "Orcamento Consta Como Cancelado e Impede Processo "+ ;
			       chr(13)+" Elimine o Orcamento Para Prosseguir."+ ;
			       chr(13)+" Doc : "+m.tipo+"  "+str(m.orcamento,6)
				   wp_flgfecha = .t.   				
			ENDCASE
			SELE notaimpo
			SKIP
			=UPtransacao("ABORTAR")
			LOOP
		ELSE
			SELE itemmov
			SET ORDER TO TAG orcamento
			SEEK STR(m.empresa,3)+STR(m.orcamento,6)
			IF FOUND()
			   DO OBJ_ALER.SPR WITH ;
			   "N. Documento nao Consta entre Notas e Orcamentos mas " + ;
			   " consta no movimento  => "+ CHR(13)+;
	    		      " Orc. = "+STR(m.orcamento,6)+" de "+;
	          			DTOC(itemmov.data) + ;
			          " NFS. = "+STR(itemmov.nota,7)+" de "+;
					  " ITEM=> "+itemmov.codigo
				wp_flgfecha = .t.   				
				SELE notaimpo
				SKIP
				=UPtransacao("ABORTAR")
				LOOP
			ENDIF
		ENDIF
		*---------------------------------------------------------*
		*	ATRIBUINDO DADOS PARA O CADASTRO
		*---------------------------------------------------------*
		*   		 CAMPOS COM CORRESPONDENCIA DIRETA

		m.cliente		=	notaimpo.cgc_cpf
		m.nome			=	notaimpo.nome_cli
		m.endereco		=	notaimpo.end_cli
		m.cidade		=	notaimpo.mun_cli
		m.bairro		=	notaimpo.bairro_cli
		m.cep			= 	notaimpo.cep_cli
		m.cep			=   STRTRAN(m.cep," ","0")
		m.estado 		= 	notaimpo.uf_cli



*			m.fone		= "(   )-"+SUBS(STR(notaimpo.tel_cli,7),1,3)+"-"+;
*									 SUBS(STR(notaimpo.tel_cli,7),4,4)
*
*

			m.fone		=   notaimpo.tel_cli



        m.e_mail        = "nao@informado"
        m.e_mail_nfe    = "nao@informado"



		**** m.regiao 		=   notaimpo.regiao_cli
		IF UPPER(m.cidade) <> UPPER(empresa.cidade)
			m.regiao = 888  && INTERIOR
		ELSE
			m.regiao = 101  && CAPITAL
		ENDIF

		IF m.ch_contr 	= "4"
			m.revendedor = "S"
		ELSE
			m.revendedor = "N"
		ENDIF
		*---------------------------------------------------------*
		*	CAPTURANDO ENDERECO DE COBRANCA DO CADASTRO
		*---------------------------------------------------------*
		STORE "" TO m.cbnome, m.cbendereco, m.cbbairro, m.cbcidade, ;
						m.cbestado, m.cbcep	

	    IF m.empresa = 10
			IF EMPTY(RTRIM(notaimpo.cbbairro))
					m.CBnome			=	notaimpo.nome_cli
					m.CBendereco		=	notaimpo.end_cli
					m.CBbairro		=	notaimpo.bairro_cli
					m.CBcidade		=	notaimpo.mun_cli
					m.CBestado 		= 	notaimpo.uf_cli
					m.CBcep			= 	notaimpo.cep_cli
					m.CBcep			=   STRTRAN(m.CBcep," ","0")
			ELSE
					m.cbnome		= 	m.nome
					m.cbendereco	= 	RTRIM(notaimpo.cbend)+"; "+;
											  notaimpo.cbnumero
					m.cbbairro		= 	notaimpo.cbbairro
					m.cbcidade		=	notaimpo.cbmunicipi
					m.cbestado		=	notaimpo.cbestado
					m.cbcep		    = 	notaimpo.cbcep
			endif
		else
		
			SELE cobrimpo

			SET ORDER TO TAG cgc
			SEEK m.cliente
			IF FOUND()
				IF !EMPTY(RTRIM(cobrimpo.endereco))
					m.cbnome		= 	m.nome
					m.cbendereco	= 	RTRIM(cobrimpo.endereco)+"; "+;
											  cobrimpo.numero
					m.cbbairro		= 	cobrimpo.bairro
					m.cbcidade		=	cobrimpo.municipio
					m.cbestado		=	cobrimpo.uf
					m.cbcep		    = 	cobrimpo.cep+cobrimpo.cep2
					m.cbcep			=   STRTRAN(m.cbcep," ","0")
				endif
			ELSE
				m.cbnome		= 	m.nome
				m.cbendereco	=	notaimpo.end_cli
				m.cbbairro		=	notaimpo.bairro_cli
				m.cbcidade		=	notaimpo.mun_cli
				m.cbestado 		= 	notaimpo.uf_cli
				m.cbcep			=   notaimpo.cep_cli
				m.cbcep			=   STRTRAN(m.cep," ","0")
			ENDIF
		ENDIF
		*---------------------------------------------------------*
 		m.tp_transp		= 	notaimpo.tipo_trans
		m.tp_pessoa		= 	notaimpo.tipo_cli + 1

*		m.inscricao		= 	STR(notaimpo.insc_cli,13)
		m.inscricao		= 	notaimpo.insc_cli


		LDTtmp			= (SUBS(notaimpo.dt_emi,1,2)+"."+;
								 SUBS(notaimpo.dt_emi,3,2)+"."+;
								 SUBS(notaimpo.dt_emi,5,2))
		IF LDTtmp		= "29.02.00"
			LDTtmp	= {29.02.2000}
		ELSE
			LDTtmp	= CTOD(LDTtmp)
		ENDIF								
	 	m.DATA    	=	UPValData(LDTtmp)  && bug 20000

		m.favorecido	=	notaimpo.cgc_cpf
		m.valor			=	notaimpo.total_nota / 100
		m.vlr_ent       =   notaimpo.vlr_dup / 100
		m.taxa			=	notaimpo.taxa / 100
		m.banco			=	notaimpo.cobranca
		m.agencia		=	notaimpo.agencia

		**** COBRANCA CHEQUE => FORMA_PGTO = 2
		IF m.banco = 898	
			m.forma_pgto	=	2
		ELSE
			m.forma_pgto	=	4	
		ENDIF

		m.vlrfrete		=	notaimpo.frete / 100
		m.vlrseguro		=	notaimpo.seguro / 100
		m.vlrdespes		=	0
*********************** ATE CONVERTER OPERADOR P/ 5 DIGITOS ******
		IF m.empresa > 9
			m.operador		=	notaimpo.vendedor
		ELSE
			m.operador		=	notaimpo.vendedor + (m.empresa * 1000)
		ENDIF
************************************************************
		m.serv_1        =   m.operador
		m.situacao		= "A "   && ESTADO INICIAL P/ FAT. SEM RESERVA
		m.obs			=   notaimpo.obs
*------->>>>>>>>>>>>    CAMPOS COM CONVERCAO P/ NOVAS CONDICOES >>>>>>>>		
		IF notaimpo.insc_cli > ""
			m.tp_inscr = 1    && ESTADUAL
		ELSE
			m.tp_inscr = 4    && OUTROS
		ENDIF
		m.juro_mes		= 	m.taxa * 30
		m.tp_pgto		= 	notaimpo.condicao  && 1=vista 2=prazo 		

		LDTtmp			= (SUBS(notaimpo.dt_emi,1,2)+"."+;
								 SUBS(notaimpo.dt_emi,3,2)+"."+;
								 SUBS(notaimpo.dt_emi,5,2))
		IF LDTtmp		= "29.02.00"
			LDTtmp	= {29.02.2000}
		ELSE
			LDTtmp	= CTOD(LDTtmp)
		ENDIF								

	 	m.dt_emi    	=	UPValData(LDTtmp)  && bug 20000

		LDTtmp			= (SUBS(notaimpo.venc_dup,1,2)+"."+;
								 SUBS(notaimpo.venc_dup,3,2)+"."+;
								 SUBS(notaimpo.venc_dup,5,2))
		IF LDTtmp		= "29.02.00"
			LDTtmp	= {29.02.2000}
		ELSE
			LDTtmp	= CTOD(LDTtmp)
		ENDIF								
	 	m.venc_dup 	=	UPValData(LDTtmp)  && bug 20000


		m.vias_osi = 1

*>>>>>>>>>> OPERACOES EPCIFICAS POR OPERACAO ex: VENDAS/TRANS/DEV/REMS..	
		m.motivo = 0
		m.prazo  = ""
		m.prazomedio= 0
***************
		m.natu_oper   = INT(VAL(m.ch_opera))
**************
		DO CASE
			CASE m.ch_opera	= "1"		&& VENDA
				DO ULopevenda
			CASE m.ch_opera	= "2"		&& TRANSF
				DO ULopetransf
			CASE m.ch_opera	= "3"		&& REMSSS
				DO ULoperemessa
			CASE m.ch_opera	= "4"		&& DEVOLUCAO
				DO ULopedevol
		ENDCASE		
*********
		IF m.tipo = "NSP"    && INFORMATIVO SEM EFEITO GERADO NA INDUSTRIA
			m.tp_pgto = 1		&& A VISTA
			m.prazo  = ""
			m.prazomedio= 0
		ENDIF			
**********
		SELE orcament
		m.prazo         =   CHRTRAN(m.prazo," ","0")
		m.lim_libera	=	m.valor
		m.lim_prazo		=	m.prazomedio
		m.lim_forma		=   0
		m.usr_libera	= 	0


		LDTtmp			= (SUBS(notaimpo.dt_emi,1,2)+"."+;
								 SUBS(notaimpo.dt_emi,3,2)+"."+;
								 SUBS(notaimpo.dt_emi,5,2))
		IF LDTtmp		= "29.02.00"
			LDTtmp	= {29.02.2000}
		ELSE
			LDTtmp	= CTOD(LDTtmp)
		ENDIF								
	 	m.dt_libera 	=	UPValData(LDTtmp)  && bug 20000


		IF m.tp_pgto = 2 AND m.prazomedio > 0
			m.tp_pgto = 3		&& a prazo (AJUSTA P/ CODIGO DO NV.SIST)
		ENDIF


		DO CASE
			CASE m.tp_pgto = 1
				m.tp_parcela = m.tp_pgto
			CASE m.banco = 898
				m.tp_parcela = 2
			CASE m.banco <> 898  AND (m.banco < 850 or m.banco > 856)
				m.tp_parcela = 3
			CASE m.banco >= 850 AND m.banco <= 856
				m.tp_parcela = 4
		ENDCASE

		m.lmt_parcel = "N"

		m.flgtransac = .t.
		=edithand('SAVE')

		*-----------------------------------------------------------*
		*   Os dados do  cliete etarao no ORCAMENT se a importacao
		* ja estiver sendo feita para o sistema sem reestruturacao
		* mas ja transcrevera os dados para CLIENC prevendo o fatura-
		* mento com sistema ja reestruturado
		*-----------------------------------------------------------*


		SELE clienc
		SET ORDER TO TAG emporca
		SEEK STR(m.empresa,3)+STR(m.orcamento,6)		
		IF !FOUND()		
			=edithand('SAVE')
		ELSE
			=edithand('REGRAVA')
		ENDIF		
*>>>>>>>>>>>>>>>>>     FIM CONVERSAO P/ ORCAMENT ou OUTROPER
      							*********
*>>>>>>>>>>>>>>>>>     INICIO CONVERSAO DE ITENS P/ ORCATMP
		m.ordem 	 = 0   &&  p/ diferenciar codigo com + de um movimento

		SELE itemimpo
		SET ORDER TO TAG nota
		SEEK STR(m.empresa,2)+STR(m.orcamento,6)

		LNrgant = 0		&& lancada para pesqusar o avanco do registro
		*------------------------------------------------------*
		*   Para apurar o valor de Fechamento da osi
		*------------------------------------------------------*
	    FCHvlr_Orcamento     = 0  && valor do orcamento pela soma dos itens
	    FCHvlr     = 0
		FCHqtde    = 0        && base para calculo ipi
		*------------------------------------------------------*

		DO WHILE !EOF() AND m.orcamento = nota AND  !wp_flgfecha
		*------------------------------------------------------*
		*  ESTA LINHA FOI COLOCADA POR QUE ESTAVA ACONTECENDO GRAV.
		*            DUPLAS DO MESMO REGISTRO                  *
		*------------------------------------------------------*
			IF LNrgant <> 0 AND RECNO() = LNrgant  && NAO AVANCOU
			   SKIP
			   LNrgant = RECNO()  && marca o registro atual P/ VER NA PROX.
			ENDIF			    		
		*------------------------------------------------------*
			m.ordem 	= 	m.ordem + 1
			m.codigo 	=	LEFT(itemimpo.codigo,7)
			m.codigo	=   ALLTRIM(m.codigo)+UPCALCDIG(m.codigo)

			m.qtde  	=	itemimpo.qtde
			m.desconto 	=	itemimpo.desconto / 10



			IF m.tipo $ "VRI/VRE"
							
				m.desconto 	=	99.99
			ENDIF

	

			m.preco 	= 0
			m.clas_cms 	= ""
			=W_DEFPROC("PRECO.SPR")
			m.preco = PRVlrSaida((orcament.empresa),;
		                     (orcament.orcamento),;
		                      (m.codigo))
			=W_DEFPROC("PRECO.SPR")
			m.clas_cms = PRClas_Cms((orcament.empresa),;
		                     (orcament.orcamento),;
		                      (m.codigo))

			if m.preco = 0
			   m.preco		=	itemimpo.vlr_tab / 100
			endif


		
**** NAS TRANSFERENCIAS O CUSTO E JOGADO EM VLR_UNI E O SISTEMA TEM
*** QUE CONSIDERAR O CUSTO DO SISTEMA ORIGEM PARA EFEITO DOS LANCAMENTOS
*** CONTABEIS DE MERCADORIA P/ REVENDA ONDE O CUSTO INFLUENCIA NO CALCULO
*** E PORTANTO DEVE SER USADO O MESMO CUSTO DA MONTAGEM DA NOTA.	

			IF m.preco  =   0 OR m.tipo $ "TCA/TDA"
				m.preco = itemimpo.vlr_uni / 100
			ENDIF
			
          *--==============================>>> CALC. VALOR VENDA
			m.vlr_uni	=	itemimpo.vlr_uni / 100
			
*********   Para truncar desconto e valor liquido

			IF m.desconto = 0			
	 		    LVVLRVENDA   = m.vlr_uni * m.qtde
			ELSE
********    	LVVLRVENDA =
*********   	ABS((m.vlr_uni - (m.vlr_uni*m.desconto/100))  * m.qtde)
*********   Para truncar desconto e valor liquido
					SET DECIMALS TO 6
************** modulo substituido
		   	        LVVLRVENDA   = ABS(m.vlr_uni-(m.vlr_uni*m.desconto/100))
					LVVLRVENDA   = STRTRAN(STR(LVVLRVENDA,16,5),",",".")
					LVVLRVENDA   = VAL(LEFT(LVVLRVENDA,13))*m.qtde
					SET DECIMALS TO 2
			ENDIF

 			m.vlrvenda   = LVvlrvenda
          *
          *--==============================>>> CALC. DESCONTO REAL
		     LNtotal  = m.preco * m.qtde
		     LNvlreal = LNtotal + LNtotal * TAXA / 100
		     LNperct  = LNvlreal - m.vlrvenda
		     LNdesconto = (LNperct * 100) / LNvlreal
		     m.desconto = LNdesconto
			 IF m.desconto < -99 or m.desconto > 100
			     m.desconto = 0
			 ENDIF
			*****************************
			IF m.qtde > 0
				 m.precofinal	= m.vlrvenda / m.qtde
			ELSE
				 m.precofinal	= m.vlrvenda
			ENDIF


			*-------------------------------------------------*
			FCHvlr  = FCHvlr + precofinal
			FCHqtde = FCHqtde + qtde
			*-------------------------------------------------*
			m.comissiona=	""
		   	SELECT grupo
		    SET ORDER TO  TAG codigo
		    SEEK m.codigo

***>>PARA PROCESSO POR NAO ENCONTRAR PRODUTO
			IF !FOUND() AND LEFT(m.codigo,7) <> "0000009"
				wp_msg = "Emp["+STR(m.empresa,3)+"]"+;
				         "SAIDA No "+STR(m.orcamento,6)+" de "+;
						  DTOC(m.dt_inicio)+" ITEM=>"+m.codigo+;
						  " Nao identifcado"
				=UPbeeps(LFalerta,wp_msg)
				wp_flgfecha = .T.
				m.dt_inicio = m.dt_fim + 1	
				SELE itemimpo
				LOOP
			ENDIF			

			m.cfo        =  tipooper.cfo
			m.info_icms  =  tipooper.info_icms
			IF m.info_icms = "S"
				m.aliq_icms  = notaimpo.aliq_icm / 10
			ELSE
				m.aliq_icms  =  tipooper.aliq_icms
			ENDIF
			m.aliq_iss   =  empresa.aliq_iss
			m.info_vlr   =  tipooper.info_vlr
			m.info_base  =  tipooper.info_base
		*		CALCULO ENVOLVENDO IPI ==> ALIQ_IPI
			m.TMPipi   = notaimpo.vlr_ipi / 100
			m.vlr_ipi  = 0
			m.aliq_ipi = 0
			m.TMPmerc  = notaimpo.mercadoria / 100
			IF notaimpo.vlr_ipi > 0
				m.aliq_ipi = (m.TMPipi * 100) / m.TMPmerc
				m.vlr_ipi  = (m.vlrvenda * m.aliq_ipi) / 100
			ENDIF
		*
			IF LEFT(m.codigo,7) = "0000009"
				m.codigo     =  "99999999"
				m.classifica =  "99999999"
				m.descricao  =  " "
				m.tp_mercad  =  1
				m.movestq    =  "N"
				m.movvalor   =  "N"
				m.movcusto   =  "N"
				m.cst        = ""
				m.iva  		 =  0
			ELSE
				m.codigo     =  grupo.codigo
				m.descricao  =  LTRIM(grupo.descricao)
				m.classifica =  grupo.classifica
				m.origem     =  grupo.origem
				m.tp_mercad  =  grupo.tp_mercad
				m.movestq    =  tipooper.movestq
				m.movvalor   =  tipooper.movvalor
				m.movcusto   =  tipooper.movcusto
				m.iva  		 =  grupo.iva
			ENDIF
*>>>>>
			SELECT tab_cst
			SET ORDER TO TAG cst
			SEEK STR(m.tab_cst,2)+tipooper.tipo;
					+STR(m.tp_mercad,1)

			m.cst        =  RIGHT(tab_cst.cst,1)

		    IF cst = "2"	&& REDUZIR BASE DO ICMS
			    m.base_calc = ROUND(m.vlrvenda * empresa.reduz_base/100,2)
		    ELSE
	    	 	m.base_calc = m.vlrvenda
		    ENDIF

			*------------  acumula valor do orcamento  ------------*
			FCHvlr_Orcamento = FCHvlr_Orcamento + m.vlrvenda
			*------------------------------------------------------*

			m.desc_adici = 0
			LSid_chamada = "DADO PRECO FINAL (PRECOFINAL)"
			*----------------------------------------------------------*
			=W_DEFPROC("ORCAMENT.SPR")
			=ORcalc_vlres(m.preco,(m.qtde),m.DESCONTO,m.desc_adici,;
				(m.taxa),m.precofinal,m.vlrvenda,LSid_chamada)
			*----------------------------------------------------------*
			SELE orcatmp
			=edithand('SAVE')
			SELE itemimpo
			SKIP
			UNLOCK ALL
		ENDDO
		*---------------------------------------------------------
		* Gravar valor de Fechamento da OSI
		*---------------------------------------------------------
		SELE orcament
		=REGLOCK(.T.)
		REPLACE orcament.fecha WITH FCHvlr + (FCHqtde / 100)
		REPLACE orcament.valor WITH FCHvlr_Orcamento

		*---------------------------------------------------------
		SELE itemimpo

		*>>>>>>>>>>>>>>>>>     INICIO ATUALIZA CADASTRO CLIENTES
		IF  m.cliente > 0
			IF m.empresa = 10
				m.natureza		=	notaimpo.natu_cli
			ELSE
				m.natureza		=	notaimpo.natu_cli + 1
			ENDIF
			m.ult_atend		=	m.data
			m.status		=   1
			SELE clientes
			SET ORDER TO TAG cliente
			SEEK m.cliente
			IF FOUND() AND m.cliente > 0
				m.dtcad			= 	clientes.dtcad
				m.dt_alter 		=   m.data
				m.credito		=	clientes.credito
				=REGLOCK(.T.)
				=edithand('REGRAVA')
				REPLACE USRREGIS WITH 9999   &&  SISTEMA
			ELSE
				m.dtcad			= 	m.data
				m.dt_alter 		=   m.data
				m.credito		=	0
				=edithand('SAVE')
			ENDIF			
		ENDIF
*>>>>>>>>>>>>>>>>>     INICIO ATUALIZA CADASTRO FORNECEDORES
		IF  m.cliente > 0	AND m.ch_opera	= "4"
			SELE fornece
			SET ORDER TO TAG cgc
			SEEK m.cliente
			IF !FOUND()
				SET ORDER TO TAG codigo
				go bott
				m.codigo = fornece.codigo + 1
				m.pais   = "BRASIL"
				m.cgc 	 = m.cliente
				m.dt_alter 		=   m.data
				=edithand('SAVE')
			ENDIF			
		ENDIF
*>>>>>>>>>>>>>>>>>     FIM ATUALIZA CADASTRO FORNECEDORES
		IF 	wp_flgfecha = .T.
			=UPtransacao("ABORTAR")
			SKIP
			UNLOCK ALL
			LOOP
		ELSE
			=UPtransacao("TERMINAR")
		ENDIF
*-----------------   FINAL DO REGISTRO DA PRE NOTA
*-----------------   INICIO DO FATURAMENTO
************
		=UPtransacao("INICIAR")
************
		SELE orcament
		*---------------------------------------------------------*
		=W_DEFPROC("NOTA.SPR")
		wp_flgfecha = !NFrot_fat("IMPORTACAO","EFETIVAR FATURAMENTO")
		*---------------------------------------------------------*
		SELE notaimpo
*>>>>>>>>>>>>>>>>>     FINAL DO FATURAMENTO
		IF 	wp_flgfecha = .T.
			=UPtransacao("ABORTAR")
		ELSE
			=UPtransacao("TERMINAR")
		ENDIF
		SKIP
		UNLOCK ALL
	ENDDO
	=UP_fecha("notaimpo")
	=UP_fecha("itemimpo")
	=UP_fecha("cobrimpo")
	=UP_fecha("IDLNFS")
	=UP_fecha("IDLITNFS")

*****
	DO RELFIM.PRG          && FIM VAR P/ TERMOMETRO

RETURN

***********************************************************************
***********************************************************************
***********************************************************************

PROCEDURE ULconventrada
	wp_flgfecha = .F.
	IF ! NetUse("nfenimpo",.t.)
		wp_flgfecha = .t.  && implica no fechamento da secao
	ENDIF
	IF ! NetUse("itenimpo",.t.)
		wp_flgfecha = .t.  && implica no fechamento da secao
	ENDIF
	IF ! NetUse("idlnfe",.t.)
		wp_flgfecha = .t.  && implica no fechamento da secao
	ENDIF
	IF ! NetUse("idlitnfe",.t.)
		wp_flgfecha = .t.  && implica no fechamento da secao
	ENDIF

	
	IF m.empresa = 10
		IF !FILE("l:\tmp\entradas.txt") OR wp_flgfecha
			=UP_fecha("nfenimpo")
			=UP_fecha("itenimpo")
			=UP_fecha("idlnfe")
			=UP_fecha("idlitnfe")
			RETURN
		ENDIF
	ELSE
		IF !FILE(LSnfetmp) OR !FILE(LSitemetmp) OR wp_flgfecha
			=UP_fecha("nfenimpo")
			=UP_fecha("itenimpo")
			=UP_fecha("idlnfe")
			=UP_fecha("idlitnfe")
			RETURN
		ENDIF
	ENDIF
	
	
	
*>>>>>>>>>>>>>>>>>>>>>>>>>>  LIMPEZA DO ARQUIVO
	LStmp  = sys(5)+sys(2003)  		&&  UNIDADE E DIRETORIO CORRENTES
	SET DEFA TO &wp_dirdat

	SELE nfenimpo
    USE nfenimpo EXCL
    COPY STRU TO tmp WITH CDX
    USE tmp EXCL
    COPY STRU TO nfenimpo WITH CDX
	USE

	SELE itenimpo
    USE itenimpo EXCL
    COPY STRU TO tmp WITH CDX
    USE tmp EXCL
    COPY STRU TO itenimpo WITH CDX
	USE

	SELE idlnfe
    USE idlnfe EXCL
    COPY STRU TO tmp WITH CDX
    USE tmp EXCL
    COPY STRU TO idlnfe WITH CDX
	USE

	SELE idlitnfe
    USE idlitnfe EXCL
    COPY STRU TO tmp WITH CDX
    USE tmp EXCL
    COPY STRU TO idlitnfe WITH CDX
	USE


	SET DEFA TO &LStmp
*>>>>>>>>>>>>>>>>>>>>>>>>>>>
*------------------------------------------------------*
	IF ! NetUse("nfenimpo",.t.)
		wp_flgfecha = .t.  && implica no fechamento da secao
	ENDIF
	IF ! NetUse("itenimpo",.t.)
		wp_flgfecha = .t.  && implica no fechamento da secao
	ENDIF
	IF ! NetUse("idlnfe",.t.)
		wp_flgfecha = .t.  && implica no fechamento da secao
	ENDIF
	IF ! NetUse("idlitnfe",.t.)
		wp_flgfecha = .t.  && implica no fechamento da secao
	ENDIF
*------------------------------------------------------*

	IF m.empresa = 10
		SELE idlnfe
		ZAP
		PACK
		APPEND FROM l:\tmp\entradas.txt ;
			TYPE SDF for (("S" $ FILLER) OR ("N" $ FILLER))

		SELE nfenimpo
		ZAP
		PACK
		a=DBF("idlnfe")
		APPEND FROM &a
        X = idlnfe.DT_EMI
		REPLACE ALL FORNECE    WITH 9999, ;
		            NOTA       WITH INT(VAL( idlnfe.DT_EMI ))   , ;
		            PEDIDO     WITH 0  , ;
		            DT_EMI     WITH idlnfe.DT_EMI, ;
		            TIPO       WITH "QLA",;
		            IND_ESTQ   WITH "1",;
		            IND_GIRO   WITH "1",;
		            TIPO_NOTA  WITH 1,;
		            TOTAL_NOTA WITH 0,;
		            FRETE      WITH 0,;
		            CONHECI    WITH 0,;
		            BASE_CALC  WITH 0,;
		            CFO        WITH "  ",;
		            ALIQ_ICMS  WITH 0,;
		            FIL_TRANS  WITH "  ",;
		            IND_MTV    WITH " ",;
		            ATU_MEDIO  WITH " ",;
		            SERIE      WITH "  ",;
		            DT_ENTRADA WITH idlnfe.DT_EMI, ;
		            IND_ATU    WITH " ",;
		            VLR_ICM    WITH 0,;
		            RETIDO     WITH 0,;
		            BASE_RETID WITH 0
		GO TOP
	ELSE
		SELE nfenimpo
		ZAP
		PACK
		APPEND FROM &LSnfetmp TYPE SDF
	ENDIF

	IF EOF() AND BOF()
		=UP_fecha("nfenimpo")
		=UP_fecha("itenimpo")
		=UP_fecha("idlnfe")
		=UP_fecha("idlitnfe")
		RETURN
	ENDIF

	IF m.empresa = 10
		SELE idlitnfe
		ZAP
		PACK
		APPEND FROM L:\tmp\entradas.txt ;
			TYPE SDF for !(("S" $ vlr_uni) AND ("N" $ vlr_uni))
		SELE itenimpo
		ZAP
		PACK
		a=DBF("idlitnfe")
		APPEND FROM &a
		REPLACE ALL FILIAL     WITH 10,;
		            TP_ENT     WITH 1,;
					FORN       WITH 9999, ;
		            NOTA       WITH INT(VAL( idlnfe.DT_EMI ))   , ;
		            QTDE       WITH 1  , ;
		            VLR_DESC   WITH 0, ;
		            IPI        WITH 0,;
		            GRUPO      WITH 0,;
		            ISENTO     WITH "S"
	ELSE
		SELE itenimpo
		ZAP
		PACK
		APPEND FROM &LSitemetmp TYPE SDF
	endif
	
	SELE nfenimpo
*******************
*---->   (INICIALIZACAO DO CONTROLE DE STATUS IMPRESSAO)
*******************	
	DO RELINIC.PRG          && INICIA VAR P/ TERMOMETRO
	LFsegue = .t.
	LNregistro = RECNO()
	LNimpressao = RECCOUNT()
	LNimpressos = 0
	GO LNregistro
*******************
	GO TOP
	m.msg_acomp = "Importa Entradas     "
	SHOW GET m.msg_acomp
	m.contador = 0
	SHOW GET m.contador
	
	DO WHILE !EOF() AND !wp_flgfecha  AND LFsegue
		wp_msg = "IMP. ENTRADAS [Emp.: "+STR(m.empresa,3)+ " ]"+;
										DTOC(m.dt_inicio)
		=UPtermo()
		************
		=UPtransacao("INICIAR")
		************

		*>>>> INICIO CONVERSAO P/ ORCAMENT ou OUTROPER <<<<*

		m.empresa 		= 	nfenimpo.filial
		m.nota			=   nfenimpo.nota
		m.referencia	=   nfenimpo.nota
		********************************************************
		IF LEFT(nfenimpo.serie,1) = "U"
			m.serie	= LEFT(nfenimpo.serie,1)
		ELSE
			m.serie			=   STR(INT(VAL(nfenimpo.serie)),1)
			IF m.serie  = " "
				m.serie = "0"
			ENDIF
		ENDIF
		********************************************************

		LDTtmp			= (SUBS(nfenimpo.dt_entrada,1,2)+"."+;
								 SUBS(nfenimpo.dt_entrada,3,2)+"."+;
								 SUBS(nfenimpo.dt_entrada,5,2))
		IF LDTtmp		= "29.02.00"
			LDTtmp	= {29.02.2000}
		ELSE
			LDTtmp	= CTOD(LDTtmp)
		ENDIF								

	 	m.data_emi  	=	UPValData(LDTtmp)  && bug 20000

		LDTtmp			= (SUBS(nfenimpo.dt_emi,1,2)+"."+;
								 SUBS(nfenimpo.dt_emi,3,2)+"."+;
								 SUBS(nfenimpo.dt_emi,5,2))
		IF LDTtmp		= "29.02.00"
			LDTtmp	= ctod("29.02.2000")
		ELSE
			LDTtmp	= CTOD(LDTtmp)
		ENDIF								

	 	LDTtmp  	=	UPValData(LDTtmp)  && bug 20000

		IF  LDTtmp < date() - 20
		   DO OBJ_MENS.SPR WITH ;
			   "Nao e autorizado Importacao de Documentos Com "+;
			   " Mais de 20 dias da data de hoje." + ;
			   "  Doc : "+str(m.nota,6)
			SELE nfenimpo
			SKIP
			LOOP
		ENDIF

	 	m.data  	=	UPValData(LDTtmp)  && bug 20000




		m.hora			=   SPACE(8)		
		m.tipo			=   nfenimpo.tipo
*-----> CONVERSAO DO TIPO
		DO CASE
			CASE m.tipo = "CTF"
				m.tipo	= "CLJ"
			CASE m.tipo = "CTR"
				m.tipo	= "CFJ"
			CASE m.tipo = "CME"
				m.tipo	= "CLB"
			CASE m.tipo = "CMI"
				m.tipo	= "CFB"
			CASE m.tipo = "CEV"
				m.tipo	= "CLA"
			CASE m.tipo = "CIV"
				m.tipo	= "CFA"
			CASE m.tipo = "NFC"
				m.tipo	= "CFI"
			CASE m.tipo = "CCE"
				m.tipo	= "CLD"
			CASE m.tipo = "CCI"
				m.tipo	= "CFD"
			CASE m.tipo = "CCV"
				m.tipo	= "CLC"
			CASE m.tipo = "CCP"
				m.tipo	= "CFC"
			CASE m.tipo = "CTE"
				m.tipo	= "CLH"
			CASE m.tipo = "CTI"
				m.tipo	= "CFH"
			CASE m.tipo = "CTV"
				m.tipo	= "CLG"
			CASE m.tipo = "CMV"
				m.tipo	= "CFG"
			CASE m.tipo = "CAE"
				m.tipo	= "CLF"
			CASE m.tipo = "CAI"
				m.tipo	= "CFF"
			CASE m.tipo = "CAV"
				m.tipo	= "CLE"
			CASE m.tipo = "CAP"
				m.tipo	= "CFE"
			CASE m.tipo = "TME"
				m.tipo	= "TAA"
			CASE m.tipo = "TMI"
				m.tipo	= "TBA"
			CASE m.tipo = "TIE"
				m.tipo	= "TAA"
			CASE m.tipo = "TII"
				m.tipo	= "TBA"
			CASE m.tipo = "TMR"
				m.tipo	= "TAA"
			CASE m.tipo = "TAE"
				m.tipo	= "TAB"
			CASE m.tipo = "TAI"
				m.tipo	= "TBB"
			CASE m.tipo = "TCI"
				m.tipo	= "TAC"
			CASE m.tipo = "TCT"
				m.tipo	= "TBD"
			CASE m.tipo = "TIC"
				m.tipo	= "TBC"
			CASE m.tipo = "CTF"
				m.tipo	= "TAE"
			CASE m.tipo = "DME"
				m.tipo	= "DAA"
			CASE m.tipo = "DMI"
				m.tipo	= "DBA"
			CASE m.tipo = "DIE"
				m.tipo	= "DAA"
			CASE m.tipo = "DII"
				m.tipo	= "DBA"
			CASE m.tipo = "CIM"
				m.tipo	= "CIA"
			CASE m.tipo = "OIR" OR m.tipo = "OEI"
				m.tipo	= "RBE"
			CASE m.tipo = "ORI"
				m.tipo	= "RBC"
*---REQUISICOES
			CASE m.tipo = "ORP"	&& ENTRADA PRODUCAO IDL
				m.tipo	= "QLB"	

				* Adequacao de numero para evitar duplicacao
				* pois o sistema antigo gera n. iguais em meses diferentes
				* ddmmas  => dd=dia, mm=mes, a=final do ano, s=sequencia
				
				lNftmp	=	STRTRAN(STR(m.nota,6)," ","0")
				lNftmp2 =   SUBS(nfenimpo.dt_emi,1,2)+;
							SUBS(nfenimpo.dt_emi,3,2)+;
							SUBS(nfenimpo.dt_emi,6,1)+;
							SUBS(lNftmp,6,1)

				m.nota		=   VAL(lNftmp2)
				m.referencia=   m.nota

*---REQUISICOES
			CASE m.tipo = "CRC"	&& ENTRADA PRODUCAO IDL
				m.tipo	= "OCE"	
*---REQUISICOES
			CASE m.tipo = "AIE"
				m.tipo	= "QLA"
*---REQUISICOES DE SAIDA
			CASE m.tipo = "OSI" OR m.tipo = "OFI" OR m.tipo = "AIS"
				m.tipo	= "SCA"
		ENDCASE
**************** NOTAS CANCELADAS E NOTAS DE ENTRADA ***************
		IF m.tipo = "CAN" OR  m.tipo = "ENT"   && AND m.ch_opera <> "5")
			SELE nota
			SET ORDER TO TAG nota
			SEEK STR(m.empresa,3)+STR(m.nota,7)
			IF FOUND()
				=REGLOCK(.T.)
				REPLACE tipo with m.tipo
			ELSE
			   =edithand('SAVE')
			ENDIF
			SELE nfenimpo
			SKIP
************
			=UPtransacao("TERMINAR")
************
			LOOP
		ENDIF
********************************************************************
*-----> FIM CONVERSAO DO TIPO
		SELE tipooper
		SET ORDER TO TAG tipo
		IF m.tipo = "SCA"
			SEEK "s"+m.tipo
			IF !FOUND()
				SEEK "S"+m.tipo
			ENDIF
		ELSE
			SEEK "e"+m.tipo
			IF !FOUND()
				SEEK "E"+m.tipo
			ENDIF
		ENDIF
	    SCATTER FIELDS ch_opera, ch_produ, ch_motiv, ch_desti,;
		    		 ch_contr, ch_condi, cfo  MEMVAR  MEMO

***>>PARA PROCESSO POR NAO ENCONTRAR CLASSIFICACAO
		IF !FOUND()
			wp_msg = "Emp["+STR(m.empresa,3)+"]"+;
			         "ENTRADA No "+STR(m.referencia,6)+" de "+;
					  DTOC(m.dt_inicio)+" TIPO=>"+m.tipo+;
					  " Nao identifcado"
			=UPbeeps(LFalerta,wp_msg)
			wp_flgfecha = .T.
			m.dt_inicio = m.dt_fim + 1	
			SELE nfenimpo
************
			=UPtransacao("ABORTAR")
************
			LOOP
		ENDIF			
		SELE fornece
		SET ORDER TO TAG codigo
		SEEK nfenimpo.fornece
		m.favorecido 	= 	fornece.cgc		
		m.codforn		=   nfenimpo.fornece
		m.pedido 		=	0
********************************************************************
*<<<<<<<<<<<<< ALTERADO P/ ATENDER SITUACOES CRIADAS PELO TRANSITO
*
*		SELE notaent
*		SET ORDER TO TAG nota
*		SEEK STR(m.empresa,3)+STR(m.codforn,5)+STR(m.nota,6)+;
*				m.serie+LEFT(m.tipo,1)
********************************************************************
		SELE notaent
		SET ORDER TO TAG boletim
		SEEK STR(m.empresa,3)+STR(m.referencia,6)+STR(m.codforn,5)

		IF FOUND()
			IF LEFT(notaent.situacao,1) $ "A")
			   DO OBJ_ALER.SPR WITH ;
			   "Documento ja importado e NAO FATURADO. " + ;
			   "Apague o registro para processeguir IMPORTACAO."+ ;
			   " Doc : "+m.tipo+"  "+str(m.nota,6)+"Forn: "+STR(m.codforn,5)
				wp_flgfecha = .t.   				
			ENDIF
			IF notaent.data <> m.data
			   DO OBJ_ALER.SPR WITH ;
			   "Documento com Numero Duplicado em Datas Distintas. " + ;
			   "Verifiqu Docs."+ ;
			   " Doc : "+m.tipo+"  "+str(m.nota,6)+"Forn: "+STR(m.codforn,5)
				wp_flgfecha = .t.   				
			ENDIF

			IF LEFT(notaent.situacao,1) $ "AC")
				SELE nfenimpo
				=UPtransacao("ABORTAR")
				SKIP
				LOOP
			ENDIF
			m.pedido = notaent.pedido	&&ENCONTROU FAX DIGITADO
		ENDIF
*------->>>>>>>>>>>>    CAMPOS COM CORRESPONDENCIA DIRETA >>>>>>>>		
		m.nome 			= 	fornece.nome
		m.uf			= 	fornece.estado
		m.pais			= 	fornece.pais
		m.endereco		=	fornece.endereco
		m.bairro		=	fornece.bairro
		m.cidade		=	fornece.cidade
		m.cep			=	fornece.cep
		m.fone			= 	fornece.fone
		m.tp_pessoa		=	fornece.tp_pessoa
		m.tp_inscr		=	fornece.tp_inscr
		m.inscricao		=	fornece.inscricao
        m.e_mail        = "nao@informado"
        m.e_mail_nfe    = "nao@informado"

*************************************************************************
*-->>>>     VALORES ATRIBUIDOS NO FINAL DA CONV. DOS ITENS  	  <<<<--*
*************************************************************************
		m.base_icms		=	0
		m.aliq_icms		=	0
		m.vlr_icms		=	0
		m.base_outr		=	0
		m.base_isent	=	0
		m.base_subs		=	0
		m.icms_subs		=	0
		m.vlrfrete		=	0
		m.vlrseguro		=	0
		m.vlrdespes		=	0
***********************************************************************
		m.situacao		= 	"BB"   && APROVADO e LIBERADO
		m.status 		=	1
		m.tipo_nota		=	nfenimpo.tipo_nota

		m.vlr_icms		=	nfenimpo.vlr_icm   / 100
		m.icms_subs		=	nfenimpo.retido / 100
		m.cst 			=	""

 		DO CASE
			CASE m.icms_subs > 0
				m.cst			=   "2"    && SEM ICMS e C/ RETENCAO
 		 	CASE m.tipo_nota = 0 OR m.tipo_nota = 1 OR m.tipo_nota = 4
				 m.cst		  	=   "1"    && TRIBUTADA
 		 	CASE m.tipo_nota = 2 OR m.tipo_nota = 5 OR m.tipo_nota = 6
				 m.cst		  	=   "5"    && ISENTAS SEM TRIBU
			OTHERWISE
				m.cst			=   "4"    &&  OUTROS TRIBUTOS
 		ENDCASE
 		m.vlr_icms		=	0
 		m.icms_subs		=	0
		m.vlr_icms		=	nfenimpo.vlr_icm   / 100
		m.icms_subs		=	nfenimpo.retido / 100

		m.natureza      =  tipooper.descnatu
*------->>>>>>>>>>>>    CAMPOS COM CONVERCAO P/ NOVAS CONDICOES >>>>>>>>		

*>>>>>>>>>> OPERACOES EPCIFICAS POR OPERACAO ex: COMPRA/TRANS/DEV/REMS..	
		m.motivo = 0
		IF m.ch_condi = "1"
			m.condicao = 1
		ELSE
			m.condicao = 2
		ENDIF
***************
		IF m.tipo = "SCA"
			m.natu_oper   = 6
		ELSE
			m.natu_oper   = INT(VAL(m.ch_opera))
		ENDIF
**************
		DO CASE
			CASE m.ch_opera	= "1"		&& COMPRA
				DO ULopecompra
			CASE m.ch_opera	= "2"		&& TRANSF
				DO ULope_etransf
			CASE m.ch_opera	= "3"		&& REMSSS
				DO ULope_eremessa
			CASE m.ch_opera	= "4"		&& DEVOLUCAO
				DO ULope_edevol
		ENDCASE		
*>>>>>>>>>>>>>>>>>     FIM CONVERSAO P/ ORCAMENT ou OUTROPER
      							*********
*>>>>>>>>>>>>>>>>>     INICIO CONVERSAO DE ITENS P/ ORCATMP
************************************
	     m.valor     = 0
		 m.LNqtde    = 0 	&& soma das qtdes
		 m.LNbs_ipi  = 0         && base para calculo ipi
		 m.LNbs_icms = 0         && base para calculo icms
		 m.LNbs_subs = 0	     && base para calculo subs
	     m.LNbs_sbbrt= 0	     && base para abater icms do icms da subs
		 m.LNbs_iss  = 0        && base para calculo iss
		 m.LNbs_isen = 0        && mercadorias isentas
		 m.LNbs_outr = 0        && outras tributacoes
		 m.LNalqicms = 0		&& aliquota de icms
		 m.LNalqiss  = 0		&& aliquota de iss
		 m.LNicms 	 = 0		&& valor de icms
		 m.LNsubs 	 = 0		&& valor de icms por substituicao
		 m.LNiss  	 = 0		&& valor de iss
		 m.LNtotprod = 0		&& soma dos valores dos produtos
		 m.LNtot  	 = 0		&& total da nota

		m.ordem 	 = 0   &&  p/ diferenciar codigo com + de um movimento
*****
		SELE itenimpo
		SET ORDER TO TAG nota
		SEEK STR(nfenimpo.fornece,4)+STR(nfenimpo.nota,6)
		DO WHILE !EOF() AND nfenimpo.nota = itenimpo.nota ;
						AND nfenimpo.fornece = itenimpo.forn ;
						AND	!wp_flgfecha
*******************************************************************
			m.aliq_icms	=	nfenimpo.aliq_icms / 10
			m.ordem 	=	m.ordem + 1
			m.orcamento	=	m.nota
			m.codigo 	=	LEFT(itenimpo.codigo,7)
			m.codigo	=   ALLTRIM(m.codigo)+UPCALCDIG(m.codigo)
			m.qtde  	=	itenimpo.qtde

			m.preco		=	itenimpo.vlr_uni / 100
			m.vlripi	=	itenimpo.ipi / 100
          *--==============================>>> CALC. VALOR VENDA
 			m.vlrvenda   =  itenimpo.vlr_uni / 100
            m.base_calc  =  m.vlrvenda
          *--==============================>>> CALC. VALOR VENDA
			m.desconto = 0
		  *----------------------------------------------------------
			m.comissiona=	""
		   	SELECT grupo
		    SET ORDER TO  TAG codigo
		    SEEK m.codigo
***>>PARA PROCESSO POR NAO ENCONTRAR PRODUTO
			IF !FOUND() AND LEFT(m.codigo,7) <> "0000009"
				wp_msg = "Emp["+STR(m.empresa,3)+"]"+;
				         "ENTRADA No "+STR(m.referencia,6)+" de "+;
						  DTOC(m.dt_inicio)+" ITEM=>"+m.codigo+;
						  " Nao identifcado"
				=UPbeeps(LFalerta,wp_msg)
				wp_flgfecha = .T.
				m.dt_inicio = m.dt_fim + 1	
				SELE itenimpo
				LOOP
			ENDIF			
			IF LEFT(m.codigo,7) = "0000009"
				m.codigo     =  "99999999"
				m.classifica =  "99999999"
				m.descricao  =  " "
				m.tp_mercad  =  1
 	            m.movfin     =  "N"

				m.movestq    =  "N"
				m.movvalor   =  "N"
				m.movcusto   =  "N"

				m.cfo        =  tipooper.cfo
				m.info_icms  =  tipooper.info_icms
				m.aliq_iss   =  empresa.aliq_iss
				m.info_vlr   =  tipooper.info_vlr
				m.info_base  =  tipooper.info_base
				m.iva  		 =  0
			ELSE
				m.codigo     =  grupo.codigo
				m.descricao  =  LTRIM(grupo.descricao)
				m.classifica =  grupo.classifica
				m.origem     =  grupo.origem
				m.tp_mercad  =  grupo.tp_mercad
				m.movestq    =  tipooper.movestq
 	            m.movfin     =  tipooper.info_vlr

				m.movestq    =  tipooper.movestq
				m.movvalor   =  tipooper.movvalor
				m.movcusto   =  tipooper.movcusto

				m.cfo        =  tipooper.cfo
				m.info_icms  =  tipooper.info_icms
				m.aliq_iss   =  empresa.aliq_iss
				m.info_vlr   =  tipooper.info_vlr
				m.info_base  =  tipooper.info_base
				m.iva  		 =  grupo.iva
			ENDIF
			SELE notaite

			SELE notaite
			SET ORDER TO TAG chv_bkp
			SEEK STR(m.empresa,3)+STR(m.favorecido,14)+;
				 STR(m.orcamento,6)+STR(m.ordem,3)
			IF FOUND()	&& ENCONTRO ITEM DO FAX DIGITADO
				=edithand('REGRAVA')
			ELSE
				=edithand('SAVE')
			ENDIF
    	    LNbs_ipi  = LNbs_ipi + vlripi
			LNbs_outr = m.LNbs_outr + vlripi
			LNtotprod = LNtotprod + vlrvenda
			LNqtde	  = LNqtde + qtde
    	    m.valor   = m.valor + vlrvenda

	*		DO UPimpent		&& TOTALIZA P/ ATUALIZAR A NOTA ENTRADA

			SELE itenimpo
			SKIP
			UNLOCK ALL
		ENDDO
		IF 	wp_flgfecha = .T.
			=UPtransacao("ABORTAR")
 			SKIP
			UNLOCK ALL
			LOOP
		ENDIF
		SELE notaent
		m.vlrfrete		=	nfenimpo.CONHECI / 100
		m.vlrseguro		=	0
		m.vlrdespes		=	0

		m.totproduto 	= m.LNtotprod
		m.vlr_ipi		= m.LNbs_ipi
		m.base_outr 	= m.LNbs_outr
		m.base_sbbrt	= m.LNbs_sbbrt
		m.base_icms		= nfenimpo.base_calc / 100
		m.vlr_icms		= nfenimpo.vlr_icm / 100
		IF m.vlr_icms   = 0
			m.base_icms =  0	&& FORCA PARA O VALOR DA BASE IR PARA
								&&  ISENTAS		
		ENDIF
		m.base_subs	    = nfenimpo.base_retid / 100
		m.icms_subs		= nfenimpo.retido / 100
		m.total_nota =  m.totproduto + m.vlr_ipi + ;
						m.icms_subs +  m.vlrdespes
		m.base_isent	= m.total_nota - m.base_icms - ;
					  m.base_outr - m.icms_subs

		DO case

			CASE m.ch_opera $ "12" AND  m.icms_subs > 0
					m.base_isent = m.base_icms
			CASE m.ch_opera $ "12"  AND m.ch_produ = "1" AND ;
				 m.aliq_icms = 0 	AND  m.icms_subs = 0
				 	m.base_isent = m.totproduto
				 	m.base_icms  = 0
			CASE m.ch_opera $ "12"  AND m.ch_produ = "1" AND m.aliq_icms > 0
				 m.base_isent = m.totproduto - m.base_icms
			CASE m.ch_opera $ "2"  AND m.ch_desti = "1"	AND ;
				 m.ch_produ = "1"  AND m.aliq_icms = 0
				 	m.base_isent = m.totproduto
					m.base_icms  = 0
			CASE m.ch_opera $ "4"  AND m.ch_produ = "1"  AND m.aliq_icms = 0
				 	m.base_isent = m.totproduto
				 	m.base_icms  = 0
			CASE m.ch_opera $ "12"  AND m.ch_produ $ "56"
	    			m.aliq_icms  = 0
					m.base_isent = 0
					m.base_icms  = 0
					m.base_outr  = m.totproduto + m.vlr_ipi
		ENDCASE
		IF m.empresa = 10
			m.base_outr 	= m.base_outr + m.base_isent
			m.base_isent	= 0
		ENDIF

		******************  VALOR PARA FECHAMENTO ********************
		m.soma_qtde  = (m.LNqtde/100) + m.totproduto + m.vlr_ipi ;
			+  m.vlr_icms + m.base_subs	+  m.icms_subs	;
			+  m.vlrfrete + m.vlrseguro + m.vlrdespes
		***************************************************************

		SELE notaent
		IF FOUND()
			=edithand('REGRAVA')
		ELSE
			=edithand('SAVE')
		ENDIF

		=UPtransacao("TERMINAR")
*-----------------   FINAL DO REGISTRO DA PRE NOTA
*-----------------   INICIO DO FATURAMENTO
************
		=UPtransacao("INICIAR")
************

		SELE notaent
		DO SCGCF211.PRG
*>>>>>>>>>>>>>>>>>     FINAL DO FATURAMENTO
		IF 	wp_flgfecha = .T.
			=UPtransacao("ABORTAR")
		ELSE
			=UPtransacao("TERMINAR")
		ENDIF
*-----------------
		SELE nfenimpo
		SKIP
		UNLOCK ALL
	ENDDO
	=UP_fecha("nfenimpo")
	=UP_fecha("itenimpo")
	=UP_fecha("IDLnfe")
	=UP_fecha("IDLITNFE")
*****
	DO RELFIM.PRG          && FIM VAR P/ TERMOMETRO

RETURN
***********************************************************************
PROCEDURE ULconvqe
	SELE saldo
	SET ORDER TO TAG emp_mes
	SELE qe
	SET ORDER TO TAG movimento
	SELE itemmov
	SET ORDER TO TAG movimento
	wp_flgfecha = .F.
	IF ! NetUse("qeimpo",.t.)
		wp_flgfecha = .t.  && implica no fechamento da secao
	ENDIF
	IF !FILE(LSqetmp) OR wp_flgfecha
		=UP_fecha("qeimpo")
		RETURN
	ENDIF
*>>>>>>>>>>>>>>>>>>>>>>>>>>  LIMPEZA DO ARQUIVO
	LStmp  = sys(5)+sys(2003)  		&&  UNIDADE E DIRETORIO CORRENTES
	SET DEFA TO &wp_dirdat
	SELE qeimpo
    COPY STRU TO tmp419 WITH CDX
    USE tmp419 EXCL
    COPY STRU TO qeimpo WITH CDX
	USE
	SET DEFA TO &LStmp
*---------------------------
	IF ! NetUse("qeimpo",.t.)
		wp_flgfecha = .t.  && implica no fechamento da secao
	ENDIF
	SELE qeimpo
	APPEND FROM &LSqetmp TYPE SDF
	IF EOF()
		=UP_fecha("qeimpo")
		RETURN
	ENDIF
*******************
	SELE QE
	SET ORDER TO TAG dt_mov
	SET NEAR ON
    SEEK STR(m.empresa,3)+DTOS(m.dt_inicio)
	SET NEAR OFF
	DO WHILE !EOF() AND m.empresa = qe.empresa AND m.dt_inicio = qe.data
		=REGLOCK(.T.)
	    =edithand('APAGA')
		SKIP
	ENDDO
	SET ORDER TO TAG movimento

*******************
*---->   (INICIALIZACAO DO CONTROLE DE STATUS IMPRESSAO)
*******************	
	SELE qeimpo
	DO RELINIC.PRG          && INICIA VAR P/ TERMOMETRO
	LFsegue = .t.
	LNregistro = RECNO()
    LNimpressao = RECCOUNT()
	LNimpressos = 0
	GO LNregistro
*******************
	GO TOP
	m.msg_acomp = "Importa Q.E          "
	SHOW GET m.msg_acomp
	m.contador = 0
	SHOW GET m.contador

	DO WHILE !EOF() AND !wp_flgfecha AND LFsegue
		SELE qeimpo
		wp_msg = "IMP. QTD. ESTOQUE [Emp.: "+STR(m.empresa,3)+ " ] "+;
									DTOC(m.dt_inicio)
		=UPtermo()
************
	*>>>>>>>>>>>>>>>>>     INICIO CONVERSAO P/ ORCAMENT ou OUTROPER
		m.empresa 		= 	m.empresa
		m.data 			=	m.dt_inicio
		m.codigo		=	qeimpo.codigo
		m.codigo 		=	LEFT(qeimpo.codigo,7)
		m.codigo		=	ALLTRIM(m.codigo)+UPCALCDIG(m.codigo)+space(3)
	   	SELECT grupo
	    SET ORDER TO  TAG codigo
	    SEEK m.codigo
		m.classifica 	=  " "
		IF FOUND()
			m.classifica 	=  grupo.classifica
		ENDIF			
		m.sld_loja		=  qeimpo.qtde
		m.vlr_loja		=  qeimpo.valor / 100
		sele itemmov
		LDtmp = m.data + 1
		SET NEAR ON
		SEEK STR(m.empresa,3)+m.codigo+DTOS(LDtmp)
		SET NEAR OFF
		SKIP -1
		IF BOF() OR m.codigo <> itemmov.codigo OR ;
			m.empresa <> itemmov.empresa

			SELE saldo
			SEEK STR(m.empresa,3)+STR(YEAR(m.data),4)+;
				 STR(MONTH(m.data),2)+m.classifica
			IF !FOUND()
			   m.sld_centro = 0
			   m.vlr_centro = 0
			ELSE
			   m.sld_centro = saldo.sld_ante
			   m.vlr_centro = saldo.vlr_ante
			ENDIF
		ELSE
		   m.sld_centro = itemmov.sld_estq
		   m.vlr_centro = itemmov.vlr_estq
		ENDIF				
		SELE qe
		=edithand('SAVE')

		SELE qeimpo
		SKIP
		UNLOCK ALL
	ENDDO
	=UP_fecha("qeimpo")
	DO RELFIM.PRG          && FIM VAR P/ TERMOMETRO

RETURN
***********************************************************************
PROCEDURE ULconvci
	SELE duplicat

	SELE ci
	SET ORDER TO TAG dt_mov

	wp_flgfecha = .F.
	IF ! NetUse("ciimpo",.t.)
		wp_flgfecha = .t.  && implica no fechamento da secao
	ENDIF
	IF !FILE(LScitmp) OR wp_flgfecha
		=UP_fecha("ciimpo")
		RETURN
	ENDIF
*>>>>>>>>>>>>>>>>>>>>>>>>>>  LIMPEZA DO ARQUIVO
	LStmp  = sys(5)+sys(2003)  		&&  UNIDADE E DIRETORIO CORRENTES
	SET DEFA TO &wp_dirdat
	SELE ciimpo
    COPY STRU TO tmp525 WITH CDX
    USE tmp525 EXCL
    COPY STRU TO ciimpo WITH CDX
	USE
	SET DEFA TO &LStmp
*---------------------------
	IF ! NetUse("ciimpo",.t.)
		wp_flgfecha = .t.  && implica no fechamento da secao
	ENDIF
	SELE ciimpo
	APPEND FROM &LScitmp TYPE SDF
	IF EOF()
		=UP_fecha("ciimpo")
		RETURN
	ENDIF
*******************
	SELE ci
	SET ORDER TO TAG dt_mov
	SET NEAR ON
    SEEK STR(m.empresa,3)+DTOS(m.dt_inicio)
	SET NEAR OFF
	m.msg_acomp = "Del.Ci. importados  "
	SHOW GET m.msg_acomp
	DO WHILE !EOF() AND m.empresa = ci.empresa AND m.dt_inicio = ci.data
		m.contador = ROUND(VAL(STRTRAN(DTOC(ci.data),".","")),0)
		SHOW GET m.contador
		=REGLOCK(.T.)
		=edithand('APAGA')
		SKIP
	ENDDO

*******************
*---->   (INICIALIZACAO DO CONTROLE DE STATUS IMPRESSAO)
*******************	
	SELE ciimpo
*******************
	GO TOP
	DO WHILE !EOF() AND !wp_flgfecha
		SELE ciimpo
		wp_msg = "IMP. SALDOS COBRANCA [Emp.: "+STR(m.empresa,3)+ " ] "+;
									DTOC(m.dt_inicio)
************
	*>>>>>>>>>>>>>>>>>     INICIO CONVERSAO P/ ORCAMENT ou OUTROPER
		m.empresa 		= 	m.empresa
		m.data 			=	m.dt_inicio

		m.db_loja		=  ciimpo.debito  / 100
		m.cr_loja		=  ciimpo.credito / 100
		m.sl_loja  		=  ciimpo.saldo   / 100

		store 0 to m.db_centro, m.cr_centro, m.sl_centro
		LDtmp = m.data
		*------------------------------------------------------------*
		=W_DEFPROC("DUPLICAT.SPR")
		m.db_centro = CRdb_Cobr((m.empresa), (m.data), (m.data))
			=W_DEFPROC("DUPLICAT.SPR")
		m.cr_centro = CRcd_Cobr((m.empresa), (m.data), (m.data))
			=W_DEFPROC("DUPLICAT.SPR")
		m.sl_centro   = CRsld_Cobr((m.empresa), (m.data), (m.data))
		*------------------------------------------------------------*
		SELE ci
		=edithand('SAVE')
		SELE ciimpo
		SKIP
		UNLOCK ALL
	ENDDO
	=UP_fecha("ciimpo")
RETURN

***********************************************************************
*-------------------->>>>>>>>>
PROCEDURE ULconvbord
		wp_flgfecha = .F.
		IF !FILE(LSbdtmp)
			RETURN
		ENDIF

		LNcontrol = FOPEN(LSbdtmp)	
		IF LNcontrol < 0 OR wp_flgfecha
			wp_flgfecha = .T.
			wp_msg = "Emp["+STR(m.empresa,3)+"]"+;
				         "BORDERO DE  "+LSbxtmp+" - "+;
						  DTOC(m.dt_inicio)+" Nao teve acesso para "+;
						  " processamento - Verifique"
			=UPbeeps(LFalerta,wp_msg)
			=FCLOSE(LNcontrol)
		   	RETURN
		ENDIF
		DO ULbrdimporta
	    =FCLOSE(LNcontrol)
RETURN

PROCEDURE ULbrdimporta      && IMPORTA ARQUIVO DE BORDERO DAS FILIAIS

	LNctrreg	= 0			&& TOTAL DE REGISTROS DE INSTRUCAO
	LNacmvlr	= 0			&& VALOR TOTAL DOS DOCUMENTOS
	LNacmpgt	= 0			&& VALOR TOTAL DOS PAGAMENTOS

	LStmp1 	=	FGETS(LNcontrol,100)
***	LNctrreg	= LNctrreg + 1
	SELE retornbc
	SET ORDER TO TAG aviso
 	IF wp_empresa <> INT(VAL(SUBS(LStmp1,1,2)))
***	  WAIT WINDOW "A [ EMP] nao conf informado no arq.=>"+SUBS(LStmp1,1,2)
 		RETURN
 	ENDIF		
 	m.cod_empres = wp_empresa

	LDTtmp			= SUBS(LStmp1,11,2)+"."+SUBS(LStmp1,13,2)+"."+;
 						SUBS(LStmp1,15,2)
	IF LDTtmp		= "29.02.00"
		LDTtmp	= {29.02.2000}
	ELSE
		LDTtmp	= CTOD(LDTtmp)
	ENDIF								
 	m.dtaviso   	=	UPValData(LDTtmp)  && bug 20000

	m.dtprocesso = m.dtaviso
	m.aviso 	 = INT(VAL((DTOS(m.dtaviso))))
	IF m.aviso  = 0
****       WAIT WINDOW "Este Arquivo esta vazio."
 		=FCLOSE(LNcontrol)
		RETURN
	ENDIF

	m.nome_emp	 = wp_nome_emp
	m.banco      = 992		  && CODIGO DO BANCO PARA bordero
	m.status 		= "AP"    && AGUARDANDO PROCESSAMENTO

	IF SEEK(STR(m.empresa,3)+STR(m.banco,3)+STR(m.aviso,8))
****    WAIT WINDOW "Este AVISO ja foi IMPORTADO. Nao Permite sobrepor."
 		=FCLOSE(LNcontrol)
		RETURN
	ENDIF
	=edithand('SAVE')

	=REGLOCK(.T.)

	SELE retornmv
	SET ORDER TO TAG lancamento
	m.msg_acomp = "Importa Borderos     "
	SHOW GET m.msg_acomp

	DO WHILE !FEOF(LNcontrol)
		IF EMPTY(ALLTRIM(LStmp1))
			LStmp1 	=	FGETS(LNcontrol,100)
			LOOP
		ENDIF					
		m.duplicata	= INT(VAL(SUBS(LStmp1,3,8)))
		m.contador = m.duplicata
		SHOW GET m.contador

		*     &&  CONVERTE OCORRENCIAS P/ OCORRENCIAS BRADESCO

        *** m.ocorrencia = 82  REDIRECIONA COBRANCA PARA OUTRO PORTADOR

        m.ocorrencia = 82
		m.motivos   = ""

		SELE duplicat
		SET ORDER TO TAG doc
		SEEK STR(m.empresa,3)+STR(m.duplicata,9)
		IF FOUND()
			m.vlr_dup	= duplicat.vlr_doc
		ELSE
			m.vlr_dup	= 0
		ENDIF
		m.vlr_pgto  = 0

		LNctrreg	= LNctrreg + 1
		LNacmvlr	= LNacmvlr + m.vlr_dup
		LNacmpgt	= LNacmpgt + m.vlr_pgto

		SELE retornmv
		IF SEEK(STR(m.empresa,3)+STR(m.banco,3)+STR(m.aviso,8)+;
		 		STR(m.duplicata,9)+STR(m.ocorrencia,2))
			LStmp1 	=	FGETS(LNcontrol,100)
			LOOP
		ENDIF

		m.num_no_bco= (SUBS(LStmp1,3,8))

		LDTtmp			= (SUBS(LStmp1,84,2)+"."+SUBS(LStmp1,86,2)+"."+;
						SUBS(LStmp1,88,2))

		IF LDTtmp		= "29.02.00"
			LDTtmp	= {29.02.2000}
		ELSE
			LDTtmp	= CTOD(LDTtmp)
		ENDIF								
	 	m.vencimento	=	UPValData(LDTtmp)  && bug 20000


		m.banco_cobr= INT(VAL(SUBS(LStmp1,17,3)))
		m.agenc_cobr= INT(VAL(SUBS(LStmp1,60,4)))
		m.dsp_cobr  = INT(VAL(SUBS(LStmp1,45,11)))/100
		m.out_desp  = 0
		m.juros     = 0
		m.iof       = 0
		m.abatimento= 0
		m.desconto  = 0
		m.vlr_pgto  = 0
		m.mora      = 0
		m.out_credt = 0
		m.form_pgto = 0
		m.trf_cart  = " "

		LDTtmp			= (SUBS(LStmp1,11,2)+"."+SUBS(LStmp1,13,2)+"."+;
						SUBS(LStmp1,15,2))

		IF LDTtmp		= "29.02.00"
			LDTtmp	= {29.02.2000}
		ELSE
			LDTtmp	= CTOD(LDTtmp)
		ENDIF								
	 	m.dtocorrenc	=	UPValData(LDTtmp)  && bug 20000


		=edithand('SAVE')
		LStmp1 	=	FGETS(LNcontrol,100)
	ENDDO
	SELE retornbc

	m.reg_total = LNctrreg
	m.reg_proces= 0
	m.reg_descar= 0
	m.tot_doc   = LNacmvlr
	m.tot_pgto  = LNacmpgt
    =edithand('REGRAVA')
	UNLOCK
	DO SCGCF504

RETURN


***********************************************************************
*-------------------->>>>>>>>>
PROCEDURE ULconvbaixa
		wp_flgfecha = .F.
		IF !FILE(LSbxtmp)
			RETURN
		ENDIF

		LNcontrol = FOPEN(LSbxtmp)	
		IF LNcontrol < 0 OR wp_flgfecha
			wp_flgfecha = .T.
			wp_msg = "Emp["+STR(m.empresa,3)+"]"+;
				         "BAIXAS DE  "+LSbxtmp+" - "+;
						  DTOC(m.dt_inicio)+" Nao teve acesso para "+;
						  " processamento - Verifique"
			=UPbeeps(LFalerta,wp_msg)
			=FCLOSE(LNcontrol)
		   	RETURN
		ENDIF
		DO ULbaiimporta
	    =FCLOSE(LNcontrol)
RETURN

PROCEDURE ULbaiimporta      && 991 = IMPORTA ARQUIVO DE BAIXAS DAS FILIAIS

	LNctrreg	= 0			&& TOTAL DE REGISTROS DE INSTRUCAO
	LNacmvlr	= 0			&& VALOR TOTAL DOS DOCUMENTOS
	LNacmpgt	= 0			&& VALOR TOTAL DOS PAGAMENTOS


	LStmp1 	=	FGETS(LNcontrol,104)
***	LNctrreg	= LNctrreg + 1

	SELE retornbc
	SET ORDER TO TAG aviso
 	m.cod_empres = wp_empresa

	LDTtmp			= (SUBS(LStmp1,9,2)+"."+SUBS(LStmp1,11,2)+"."+;
						SUBS(LStmp1,13,2))

	IF LDTtmp		= "29.02.00"
		LDTtmp	= {29.02.2000}
	ELSE
		LDTtmp	= CTOD(LDTtmp)
	ENDIF								
 	m.dtaviso	=	UPValData(LDTtmp)  && bug 20000


	m.aviso 	 = INT(VAL((DTOS(m.dtaviso))))
	m.dtprocesso = m.dtaviso
	IF m.aviso  = 0
****    WAIT WINDOW "Este Arquivo esta vazio."
 		=FCLOSE(LNcontrol)
		RETURN
	ENDIF

	m.nome_emp	 = wp_nome_emp
	m.banco      = 991		  && CODIGO DO BANCO PARA BAIXAS
	m.status 		= "AP"    && AGUARDANDO PROCESSAMENTO

	IF SEEK(STR(m.empresa,3)+STR(m.banco,3)+STR(m.aviso,8))
****    WAIT WINDOW "Este AVISO ja foi IMPORTADO. Nao Permite sobrepor."
 		=FCLOSE(LNcontrol)
		RETURN
	ENDIF
	=edithand('SAVE')
	=REGLOCK(.T.)

	SELE retornmv
	SET ORDER TO TAG lancamento

	m.msg_acomp = "Importa Baixas       "
	SHOW GET m.msg_acomp

	DO WHILE !FEOF(LNcontrol)
		IF EMPTY(ALLTRIM(LStmp1))
			LStmp1 	=	FGETS(LNcontrol,104)
			LOOP
		ENDIF					

		m.duplicata	= INT(VAL(SUBS(LStmp1,1,8)))
		m.contador = m.duplicata
		SHOW GET m.contador

		SELE duplicat
		SET ORDER TO TAG doc
		SEEK STR(m.empresa,3)+STR(m.duplicata,9)

		m.ocorrencia= INT(VAL(SUBS(LStmp1,75,1)))
		DO CASE       &&  CONVERTE OCORRENCIAS P/ OCORRENCIAS BRADESCO
			CASE m.ocorrencia = 1   OR m.ocorrencia = 2
				 IF duplicat.parc_pgto > 0
				     m.ocorrencia = 83  && LIQUIDACAO SALDO DUPLICATA
				 ELSE
				     m.ocorrencia = 06  && BAIXA  NORMAL
				 ENDIF
			CASE m.ocorrencia = 3
			     m.ocorrencia = 07      && BAIXA PARCIAL
			CASE m.ocorrencia = 4
			     m.ocorrencia = 80      && DEVOLUCAO
			CASE m.ocorrencia = 5
			     m.ocorrencia = 81      && INCOBRAVEL
		ENDCASE

		m.motivos   = ""

		SELE duplicat
		SET ORDER TO TAG doc
		SEEK STR(m.empresa,3)+STR(m.duplicata,9)
		IF FOUND()
			m.vlr_dup	= duplicat.vlr_doc
		ELSE
			m.vlr_dup	= INT(VAL(SUBS(LStmp1,15,13)))/100 && =VLR.PAGO
		ENDIF

		m.vlr_pgto  = INT(VAL(SUBS(LStmp1,15,13)))/100 + ;
					  INT(VAL(SUBS(LStmp1,34,11)))/100  && DOC + JUROS

		LNctrreg	= LNctrreg + 1
		LNacmvlr	= LNacmvlr + m.vlr_dup
		LNacmpgt	= LNacmpgt + m.vlr_pgto

		SELE retornmv
		IF SEEK(STR(m.empresa,3)+STR(m.banco,3)+STR(m.aviso,8)+;
		 		STR(m.duplicata,9)+STR(m.ocorrencia,2))
			LStmp1 	=	FGETS(LNcontrol,104)
			LOOP
		ENDIF

		m.num_no_bco= (SUBS(LStmp1,1,8))

		LDTtmp			= (SUBS(LStmp1,28,2)+"."+SUBS(LStmp1,30,2)+"."+;
						SUBS(LStmp1,32,2))

		IF LDTtmp		= "29.02.00"
			LDTtmp	= {29.02.2000}
		ELSE
			LDTtmp	= CTOD(LDTtmp)
		ENDIF								
	 	m.vencimento=	UPValData(LDTtmp)  && bug 20000




		m.banco_cobr= INT(VAL(SUBS(LStmp1,70,3)))
		m.agenc_cobr= 0
		m.dsp_cobr  = INT(VAL(SUBS(LStmp1,45,11)))/100
		m.out_desp  = 0
		m.juros     = INT(VAL(SUBS(LStmp1,34,11)))/100
		m.iof       = 0
		m.abatimento= 0
		m.desconto  = INT(VAL(SUBS(LStmp1,56,11)))/100
		m.mora      = 0
		m.out_credt = 0
		m.form_pgto = 0
		m.trf_cart  = " "

		LDTtmp			= (SUBS(LStmp1,9,2)+"."+SUBS(LStmp1,11,2)+"."+;
						SUBS(LStmp1,13,2))
		IF LDTtmp		= "29.02.00"
			LDTtmp	= {29.02.2000}
		ELSE
			LDTtmp	= CTOD(LDTtmp)
		ENDIF								
	 	m.dtocorrenc=	UPValData(LDTtmp)  && bug 20000

		=edithand('SAVE')
		LStmp1 	=	FGETS(LNcontrol,104)
	ENDDO
	SELE retornbc

	m.reg_total = LNctrreg
	m.reg_proces= 0
	m.reg_descar= 0
	m.tot_doc   = LNacmvlr
	m.tot_pgto  = LNacmpgt

    =edithand('REGRAVA')
	UNLOCK
	DO SCGCF504

RETURN


***********************************************************************
*-------------------->>>>>>>>>
PROCEDURE ULopecompra
	DO CASE
		CASE m.ch_produ = "1" AND m.ch_motiv =  "3" AND ;
			 m.ch_condi = "3"
		     m.motivo = 5  && COMPLEMENTO PRECO
		CASE m.ch_produ = "1"
			m.motivo = 1  && MERCADORIA P/ COMERCIALIZACAO
		CASE m.ch_produ = "5"
		    m.motivo = 2  && MATERIAL DE USO NO SERVICO
		CASE m.ch_produ = "6"
			m.motivo = 3  && MATERIAL DE CONSUMO
		CASE m.ch_produ = "2"
		    m.motivo = 4  && IMOBILIZADO
		CASE m.ch_produ = "9"
		    m.motivo = 6  && CONHECIMENTO
		OTHERWISE
			m.motivo = 7   && OUTROS
	ENDCASE	
RETURN

PROCEDURE ULope_etransf
			DO CASE
				CASE m.ch_produ = "1"
				     m.motivo = 1  && MERCADORIA P/ COMERCIALIZACAO
				CASE m.ch_produ = "5"
				     m.motivo = 2  && MATERIAL DE USO NO SERVICO
				CASE m.ch_produ = "6"
				     m.motivo = 3  && MATERIAL DE CONSUMO
				CASE m.ch_produ = "2"
				     m.motivo = 4  && IMOBILIZADO
				CASE m.ch_produ = "9"
				     m.motivo = 5  && CONHECIMENTO
				OTHERWISE
					m.motivo = 6   && OUTROS
			ENDCASE
RETURN
PROCEDURE ULope_eremessa
			DO CASE
				CASE m.ch_motiv = "5"
					m.motivo = 1  && CONSIGNACAO
				CASE m.ch_motiv = "6"
					m.motivo = 2  && DEMONSTRACAO
				CASE m.ch_motiv = "2"
				    m.motivo = 3  && RECLAMACAO
				OTHERWISE
						m.motivo = 4
			ENDCASE

RETURN
PROCEDURE ULope_edevol
			DO CASE
				CASE m.ch_produ = "1"
				     m.motivo = 1  && MERCADORIA
				CASE m.ch_produ = "5"
				     m.motivo = 2  && MATERIAL DE USO NO SERVICO
				CASE m.ch_produ = "6"
				     m.motivo = 3  && MATERIAL DE CONSUMO
				CASE m.ch_produ = "2"
					 m.motivo = 4  && IMOBILIZADO
				OTHERWISE
					m.motivo = 5
			ENDCASE
RETURN

***********************************************************************
***********************************************************************

PROCEDURE ULdescomp
	HIDE WINDOW scgc003
	ACTIVATE SCREEN
	m.empresa = m.empinicio
	LDdtant = m.dt_inicio
	DO WHILE m.empresa <= m.empfim
		SELECT empresa
		SET ORDER TO TAG empresa
		SEEK m.empresa
		IF !FOUND()
			m.empresa = m.empresa + 1
			LOOP
		ENDIF

		DO WHILE m.dt_inicio <= m.dt_fim
			IF LFcomp		&& ESTAO COMPACTADOS
				*<modelo> PKUNZIP -O N:MLddmmff.ZIP MV*.* EN*.* q:\tmp
				LSarqzip = m.drvorigem + "ML"+;
					   CHRTRAN(STR(DAY(m.dt_inicio),2)," ","0") + ;
					   CHRTRAN(STR(MONTH(m.dt_inicio),2)," ","0") + ;
					   CHRTRAN(STR(m.empresa,2)," ","0") + ;
					   ".ZIP"
				LSdrive = m.drive

*  EXEMPLO !PKUNZIP -O &LSarqzip MV*.* EN*.* B?*.* QE*.* CI*.*  &LSdrive

				IF LFentra
					!PKUNZIP -O &LSarqzip EN*.*  &LSdrive
				ENDIF
				IF LFsaida
				   !PKUNZIP -O &LSarqzip MV*.*  &LSdrive
				ENDIF
				IF LFbaixa
				   !PKUNZIP -O &LSarqzip BX*.*  &LSdrive
				ENDIF
				IF LFbordero
				   !PKUNZIP -O &LSarqzip BD*.*  &LSdrive
				ENDIF
				IF LFqe
				   !PKUNZIP -O &LSarqzip QE*.*  &LSdrive
				ENDIF
				IF LFci
				   !PKUNZIP -O &LSarqzip CI*.*  &LSdrive
				ENDIF

			ELSE
				LSdrive = m.drive
				LSarq = m.drvorigem + "MV"+;
					   CHRTRAN(STR(DAY(m.dt_inicio),2)," ","0") + ;
					   CHRTRAN(STR(MONTH(m.dt_inicio),2)," ","0") + ;
					   CHRTRAN(STR(m.empresa,2)," ","0") + ;
					   ".*"
				IF LFsaida
					!COPY &LSarq  &LSdrive
				ENDIF
			***************
				LSarq = m.drvorigem + "EN"+;
					   CHRTRAN(STR(DAY(m.dt_inicio),2)," ","0") + ;
					   CHRTRAN(STR(MONTH(m.dt_inicio),2)," ","0") + ;
					   CHRTRAN(STR(m.empresa,2)," ","0") + ;
					   ".*"
				IF LFentra
					!COPY &LSarq  &LSdrive
				ENDIF
			****************
				LSarq = m.drvorigem + "BX"+;
					   CHRTRAN(STR(DAY(m.dt_inicio),2)," ","0") + ;
					   CHRTRAN(STR(MONTH(m.dt_inicio),2)," ","0") + ;
					   CHRTRAN(STR(m.empresa,2)," ","0") + ;
					   ".*"
				IF LFbaixa
					!COPY &LSarq  &LSdrive
				ENDIF
			***************
				LSarq = m.drvorigem + "BD"+;
					   CHRTRAN(STR(DAY(m.dt_inicio),2)," ","0") + ;
					   CHRTRAN(STR(MONTH(m.dt_inicio),2)," ","0") + ;
					   CHRTRAN(STR(m.empresa,2)," ","0") + ;
					   ".*"
				IF LFbordero
					!COPY &LSarq  &LSdrive
				ENDIF
			****************
				LSarq = m.drvorigem + "QE"+;
					   CHRTRAN(STR(DAY(m.dt_inicio),2)," ","0") + ;
					   CHRTRAN(STR(MONTH(m.dt_inicio),2)," ","0") + ;
					   CHRTRAN(STR(m.empresa,2)," ","0") + ;
					   ".*"
				IF LFqe
					!COPY &LSarq  &LSdrive
				ENDIF
			*****************
				LSarq = m.drvorigem + "CI"+;
					   CHRTRAN(STR(DAY(m.dt_inicio),2)," ","0") + ;
					   CHRTRAN(STR(MONTH(m.dt_inicio),2)," ","0") + ;
					   CHRTRAN(STR(m.empresa,2)," ","0") + ;
					   ".*"
				IF LFci
					!COPY &LSarq  &LSdrive
				ENDIF
			ENDIF
			m.dt_inicio = m.dt_inicio + 1	
		ENDDO
		m.dt_inicio = LDdtant
		m.empresa   = m.empresa + 1	
	ENDDO
	=UPapaga()
    ACTIVATE WINDOW scgc003
	m.dt_inicio = LDdtant
	SHOW GET m.dt_inicio
		
RETURN
***********************************************************************
***********************************************************************
PROCEDURE ULimport
	LNemp_ant   = wp_empresa   && registra a empresa definida na operacao

	m.empresa = m.empinicio
	LDdtant = m.dt_inicio
	DO WHILE m.empresa <= m.empfim
*
*     altera temporariamente a definicao de empresa p/ uso em subrotinas
*
		WP_EMPRESA = m.empresa 		&& emula a empresa como sedo o definida
*
*
		SELECT empresa
		SET ORDER TO TAG empresa
		SEEK m.empresa
		IF !FOUND()
			m.empresa = m.empresa + 1
			LOOP
		ENDIF
		m.tab_cst   = empresa.tab_cst

		DO WHILE m.dt_inicio <= m.dt_fim
	    	m.drive = ALLTRIM(m.drive)
***** SAIDAS
			LSnfstmp = m.drive+"MV"+STR(DAY(m.dt_inicio),2)+;
					STR(MONTH(m.dt_inicio),2)+;
					STR(m.empresa,2)+".FTX"
			LSnfstmp = STRTRAN(LSnfstmp," ","0")

			LSitemtmp = m.drive+"IT"+STR(DAY(m.dt_inicio),2)+;
					STR(MONTH(m.dt_inicio),2)+;
					STR(m.empresa,2)+".FTX"
			LSitemtmp = STRTRAN(LSitemtmp," ","0")

			LScobrtmp = m.drive+"CB"+STR(DAY(m.dt_inicio),2)+;
					STR(MONTH(m.dt_inicio),2)+;
					STR(m.empresa,2)+".TXT"
			LScobrtmp = STRTRAN(LScobrtmp," ","0")

***** ENTRADAS

			LSnfetmp = m.drive+"MV"+STR(DAY(m.dt_inicio),2)+;
					STR(MONTH(m.dt_inicio),2)+;
					STR(m.empresa,2)+".ETX"
			LSnfetmp = STRTRAN(LSnfetmp," ","0")

			LSitemetmp = m.drive+"IT"+STR(DAY(m.dt_inicio),2)+;
					STR(MONTH(m.dt_inicio),2)+;
					STR(m.empresa,2)+".ETX"
			LSitemetmp = STRTRAN(LSitemetmp," ","0")
	
***** BAIXAS ( COMANDOS BANCARIOS)

			LSbxtmp = m.drive+"BX"+STR(DAY(m.dt_inicio),2)+;
					STR(MONTH(m.dt_inicio),2)+;
					STR(m.empresa,2)+".BAX"
			LSbxtmp = STRTRAN(LSbxtmp," ","0")

***** CORDEROS ( COMANDOS MUDANCA E REGISTRO BANCARIOS)

			LSbdtmp = m.drive+"BD"+STR(DAY(m.dt_inicio),2)+;
					STR(MONTH(m.dt_inicio),2)+;
					STR(m.empresa,2)+".BRD"
			LSbdtmp = STRTRAN(LSbdtmp," ","0")

***** QE
			LSqetmp = m.drive+"QE"+STR(DAY(m.dt_inicio),2)+;
					STR(MONTH(m.dt_inicio),2)+;
					STR(m.empresa,2)+".TXT"
			LSqetmp = STRTRAN(LSqetmp," ","0")

***** CI
			LScitmp = m.drive+"CI"+STR(DAY(m.dt_inicio),2)+;
					STR(MONTH(m.dt_inicio),2)+;
					STR(m.empresa,2)+".TXT"
			LScitmp = STRTRAN(LScitmp," ","0")

*********************************************************************
			IF LFentra
			 	wp_flgfecha = .F.
				wp_msg = "IMP. ENTRADAS [Emp.: "+STR(m.empresa,3)+ " ]"+;
										DTOC(m.dt_inicio)
				DO ULconventrada
				IF wp_flgfecha
					EXIT
				ENDIF
			ENDIF
*********************************************************************
			IF LFsaida
				wp_msg = "IMP. SAIDAS [Emp.: "+STR(m.empresa,3)+ " ]"+;
									DTOC(m.dt_inicio)
				DO ULconvsaida
				IF wp_flgfecha
					EXIT
				ENDIF
			ENDIF
*********************************************************************
			IF LFbordero
				wp_msg = "IMP. BORDEROS [Emp.: "+STR(m.empresa,3)+ " ]"+;
									DTOC(m.dt_inicio)
				DO ULconvbord
				IF wp_flgfecha
					EXIT
				ENDIF
			ENDIF	
			IF LFbaixa
				wp_msg = "IMP. BAIXAS [Emp.: "+STR(m.empresa,3)+ " ]"+;
									DTOC(m.dt_inicio)
				DO ULconvbaixa
				IF wp_flgfecha
					EXIT
				ENDIF
				DO SCGCF505.PRG		&& REGISTRA O FATURAMENTO
			ENDIF
*********************************************************************
			IF LFqe
				DO ULconvqe
				IF wp_flgfecha
					EXIT
				ENDIF
			ENDIF
*********************************************************************
			IF LFci
				DO ULconvci
				IF wp_flgfecha
					EXIT
				ENDIF
			ENDIF
*********************************************************************
*********************************************************************
			m.dt_inicio = m.dt_inicio + 1	
		ENDDO
		m.dt_inicio = LDdtant
		m.empresa   = m.empresa + 1	
		IF wp_flgfecha
			EXIT
		ENDIF
	ENDDO
	SHOW GET m.imp_btn DISABLE
	SHOW GET m.dt_inicio

	wp_empresa = LNemp_ant

RETURN
***********************************************************************

***********************************************************************
PROCEDURE ULconverte
	ACTIVATE SCREEN
	LSsaida  = wp_dirtmp+"SAIDA.TXT"			
	!LH btrun  > &LSsaida
	m.empresa = m.empinicio
	LDdtant = m.dt_inicio
	DO WHILE m.empresa <= m.empfim
		SELECT empresa
		SET ORDER TO TAG empresa
		SEEK m.empresa
		IF !FOUND()
			m.empresa = m.empresa + 1
			LOOP
		ENDIF
		A	= LEFT(m.drive,1)		             && drive
		B   = CHRTRAN(STR(m.empresa,2)," ","0")  && filial
		C   = CHRTRAN(STR(DAY(m.dt_inicio),2)+;
				STR(MONTH(m.dt_inicio),2)," ","0") && dia/ mes inicio
		D   = CHRTRAN(STR(DAY(m.dt_fim),2)," ","0") && dia final

		IF LFsaida
			!UINF "&A"13"&B"13"&C"13"&D"13" "13 > &LSsaida
			!\FPD26\CONVERTE\CONVNOTA.EXE  > &LSsaida
		ENDIF
		IF LFentra
			!UINF "&A"13"&B"13"&C"13"&D"13" "13 > &LSsaida
			!\FPD26\CONVERTE\CONVENTR.EXE  > &LSsaida
		ENDIF
		IF LFbordero
			!UINF "&A"13"&B"13"&C"13"&D"13" "13 > &LSsaida
			!\FPD26\CONVERTE\CONVBORD.EXE  > &LSsaida
		ENDIF	
		IF LFbaixa
			!UINF "&A"13"&B"13"&C"13"&D"13" "13 > &LSsaida
			!\FPD26\CONVERTE\CONVBAIX.EXE  > &LSsaida
		ENDIF
		IF LFqe
			!UINF "&A"13"&B"13"&C"13"&D"13" "13 > &LSsaida
			!\FPD26\CONVERTE\CONVQE.EXE  > &LSsaida
		ENDIF
		IF LFci
			!UINF "&A"13"&B"13"&C"13"&D"13" "13 > &LSsaida
			!\FPD26\CONVERTE\CONVCI.EXE  > &LSsaida
		ENDIF
		m.dt_inicio = LDdtant
		m.empresa   = m.empresa + 1	
	ENDDO
	=UPapaga()
    ACTIVATE WINDOW scgc003
	m.dt_inicio = LDdtant
	SHOW GET m.dt_inicio
RETURN




*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4CY0NCI83           m.drvorigem WHEN                   ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC003A,     Record Number:   82  ╨
*       ╨ Variable:            m.drvorigem                        ╨
*       ╨ Called By:           WHEN Clause                        ╨
*       ╨ Object Type:         Field                              ╨
*       ╨ Snippet Number:      1                                  ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _4cy0nci83     &&  m.drvorigem WHEN
#REGION 1
ON KEY LABEL ESCAPE	KEYBOARD "{END}"
IF LASTKEY() = 15
	KEYBOARD "{ESCAPE}"
ENDIF
RETURN(isediting)


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4CY0NCI84           m.drvorigem VALID                  ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC003A,     Record Number:   82  ╨
*       ╨ Variable:            m.drvorigem                        ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Field                              ╨
*       ╨ Snippet Number:      2                                  ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _4cy0nci84     &&  m.drvorigem VALID
#REGION 1
m.drvorigem = ALLTRIM(m.drvorigem)
*IF RIGHT(m.drvorigem,1) <> "\"
*    m.drvorigem = ALLTRIM(m.drvorigem)+"\"
*ENDIF
SHOW GET m.drvorigem
ON KEY LABEL ESCAPE KEYBOARD "{BACKTAB}"
RETURN (.T.)


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4CY0NCI85           m.drive WHEN                       ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC003A,     Record Number:   83  ╨
*       ╨ Variable:            m.drive                            ╨
*       ╨ Called By:           WHEN Clause                        ╨
*       ╨ Object Type:         Field                              ╨
*       ╨ Snippet Number:      3                                  ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _4cy0nci85     &&  m.drive WHEN
#REGION 1
RETURN(isediting)


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4CY0NCI8T           m.drive VALID                      ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC003A,     Record Number:   83  ╨
*       ╨ Variable:            m.drive                            ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Field                              ╨
*       ╨ Snippet Number:      4                                  ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _4cy0nci8t     &&  m.drive VALID
#REGION 1
m.drive = ALLTRIM(m.drive)
*IF RIGHT(m.drive,1) <> "\"
*    m.drive = ALLTRIM(m.drive)+"\"
*ENDIF
m.dt_fim = m.dt_inicio
SHOW GET m.dt_fim

ON KEY LABEL ESCAPE KEYBOARD "{BACKTAB}"
RETURN (.T.)


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4CY0NCI90           m.empinicio WHEN                   ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC003A,     Record Number:   84  ╨
*       ╨ Variable:            m.empinicio                        ╨
*       ╨ Called By:           WHEN Clause                        ╨
*       ╨ Object Type:         Field                              ╨
*       ╨ Snippet Number:      5                                  ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _4cy0nci90     &&  m.empinicio WHEN
#REGION 1
ON KEY LABEL ESCAPE KEYBOARD "{BACKTAB}"
RETURN(isediting)

*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4CY0NCI97           m.empinicio VALID                  ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC003A,     Record Number:   84  ╨
*       ╨ Variable:            m.empinicio                        ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Field                              ╨
*       ╨ Snippet Number:      6                                  ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _4cy0nci97     &&  m.empinicio VALID
#REGION 1
SELECT empresa
SET ORDER TO TAG empresa
IF LASTKEY() = 9
   ON KEY LABEL ESCAPE
   DO loc_dlog WITH .F.
   ON KEY LABEL ESCAPE KEYBOARD "{BACKTAB}"
   IF LASTKEY() = 27
		SELECT empresa
		RETURN .F.
	ENDIF
ELSE
	IF !SEEK(m.empinicio)
		SELECT empresa
		RETURN .F.
	ENDIF
ENDIF
m.empinicio   = empresa
m.nome_ini    = empresa.nome
SHOW GET m.empinicio
SHOW GET m.nome_ini
SELECT empresa
RETURN .T.


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4CY0NCI9F           m.empfim WHEN                      ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC003A,     Record Number:   86  ╨
*       ╨ Variable:            m.empfim                           ╨
*       ╨ Called By:           WHEN Clause                        ╨
*       ╨ Object Type:         Field                              ╨
*       ╨ Snippet Number:      7                                  ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _4cy0nci9f     &&  m.empfim WHEN
#REGION 1
ON KEY LABEL ESCAPE KEYBOARD "{BACKTAB}"
RETURN(isediting)

*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4CY0NCI9M           m.empfim VALID                     ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC003A,     Record Number:   86  ╨
*       ╨ Variable:            m.empfim                           ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Field                              ╨
*       ╨ Snippet Number:      8                                  ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _4cy0nci9m     &&  m.empfim VALID
#REGION 1
SELECT empresa
SET ORDER TO TAG empresa
IF LASTKEY() = 9
   ON KEY LABEL ESCAPE
   DO loc_dlog WITH .F.
   ON KEY LABEL ESCAPE KEYBOARD "{BACKTAB}"
   IF LASTKEY() = 27
		SELECT empresa
		RETURN .F.
	ENDIF
ELSE
	IF !SEEK(m.empfim)
		SELECT empresa
		RETURN .F.
	ENDIF
ENDIF
m.empfim   	 = empresa
m.nome_fim   = empresa.nome
SHOW GET m.empfim
SHOW GET m.nome_fim
SELECT empresa
RETURN .T.


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4CY0NCI9N           m.dt_inicio VALID                  ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC003A,     Record Number:   88  ╨
*       ╨ Variable:            m.dt_inicio                        ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Field                              ╨
*       ╨ Snippet Number:      9                                  ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _4cy0nci9n     &&  m.dt_inicio VALID
#REGION 1
m.dt_fim = m.dt_inicio
SHOW GET m.dt_fim
RETURN .T.

*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4CY0NCI9O           m.dt_fim WHEN                      ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC003A,     Record Number:   89  ╨
*       ╨ Variable:            m.dt_fim                           ╨
*       ╨ Called By:           WHEN Clause                        ╨
*       ╨ Object Type:         Field                              ╨
*       ╨ Snippet Number:      10                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _4cy0nci9o     &&  m.dt_fim WHEN
#REGION 1
IF isediting
	ON KEY LABEL ENTER
ENDIF	
RETURN(isediting)


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4CY0NCI9P           LFcomp WHEN                        ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC003A,     Record Number:   90  ╨
*       ╨ Variable:            LFcomp                             ╨
*       ╨ Called By:           WHEN Clause                        ╨
*       ╨ Object Type:         Check Box                          ╨
*       ╨ Snippet Number:      11                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _4cy0nci9p     &&  LFcomp WHEN
#REGION 1
IF isediting
	ON KEY LABEL ENTER KEYBOARD "{RIGHTARROW}"
ENDIF	
RETURN(isediting)


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4CY0NCIAB           LFalerta WHEN                      ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC003A,     Record Number:   91  ╨
*       ╨ Variable:            LFalerta                           ╨
*       ╨ Called By:           WHEN Clause                        ╨
*       ╨ Object Type:         Check Box                          ╨
*       ╨ Snippet Number:      12                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _4cy0nciab     &&  LFalerta WHEN
#REGION 1
IF isediting
	ON KEY LABEL ENTER KEYBOARD "{RIGHTARROW}"
ENDIF	
RETURN(isediting)


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4CY0NCIAI           LFentra WHEN                       ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC003A,     Record Number:   92  ╨
*       ╨ Variable:            LFentra                            ╨
*       ╨ Called By:           WHEN Clause                        ╨
*       ╨ Object Type:         Check Box                          ╨
*       ╨ Snippet Number:      13                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _4cy0nciai     &&  LFentra WHEN
#REGION 1
IF isediting
	ON KEY LABEL ENTER KEYBOARD "{RIGHTARROW}"
ENDIF	
RETURN(isediting)


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4CY0NCIAP           LFsaida WHEN                       ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC003A,     Record Number:   93  ╨
*       ╨ Variable:            LFsaida                            ╨
*       ╨ Called By:           WHEN Clause                        ╨
*       ╨ Object Type:         Check Box                          ╨
*       ╨ Snippet Number:      14                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _4cy0nciap     &&  LFsaida WHEN
#REGION 1
IF isediting
	ON KEY LABEL ENTER KEYBOARD "{RIGHTARROW}"
ENDIF	
RETURN(isediting)


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4CY0NCIAV           LFbaixa WHEN                       ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC003A,     Record Number:   94  ╨
*       ╨ Variable:            LFbaixa                            ╨
*       ╨ Called By:           WHEN Clause                        ╨
*       ╨ Object Type:         Check Box                          ╨
*       ╨ Snippet Number:      15                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _4cy0nciav     &&  LFbaixa WHEN
#REGION 1
IF isediting
	ON KEY LABEL ENTER KEYBOARD "{RIGHTARROW}"
ENDIF	
RETURN(isediting)


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4CY0NCIB2           LFbordero WHEN                     ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC003A,     Record Number:   95  ╨
*       ╨ Variable:            LFbordero                          ╨
*       ╨ Called By:           WHEN Clause                        ╨
*       ╨ Object Type:         Check Box                          ╨
*       ╨ Snippet Number:      16                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _4cy0ncib2     &&  LFbordero WHEN
#REGION 1
IF isediting
	ON KEY LABEL ENTER KEYBOARD "{RIGHTARROW}"
ENDIF	
RETURN(isediting)


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4CY0NCIB3           LFqe WHEN                          ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC003A,     Record Number:   96  ╨
*       ╨ Variable:            LFqe                               ╨
*       ╨ Called By:           WHEN Clause                        ╨
*       ╨ Object Type:         Check Box                          ╨
*       ╨ Snippet Number:      17                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _4cy0ncib3     &&  LFqe WHEN
#REGION 1
IF isediting
	ON KEY LABEL ENTER KEYBOARD "{RIGHTARROW}"
ENDIF	
RETURN(isediting)


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4CY0NCIB4           LFci WHEN                          ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC003A,     Record Number:   97  ╨
*       ╨ Variable:            LFci                               ╨
*       ╨ Called By:           WHEN Clause                        ╨
*       ╨ Object Type:         Check Box                          ╨
*       ╨ Snippet Number:      18                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _4cy0ncib4     &&  LFci WHEN
#REGION 1
IF isediting
	ON KEY LABEL ENTER KEYBOARD "{RIGHTARROW}"
ENDIF	
RETURN(isediting)


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4CY0NCIB5           m.edit_btn WHEN                    ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC003A,     Record Number:   98  ╨
*       ╨ Variable:            m.edit_btn                         ╨
*       ╨ Called By:           WHEN Clause                        ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      19                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _4cy0ncib5     &&  m.edit_btn WHEN
#REGION 1
	ON KEY LABEL ENTER
	

*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4CY0NCIB6           m.desc_btn VALID                   ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC003A,     Record Number:   99  ╨
*       ╨ Variable:            m.desc_btn                         ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      20                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _4cy0ncib6     &&  m.desc_btn VALID
#REGION 1
DO ULdescomp
=UPbeeps(LFalerta,"Processo Concluido. <ENTER>")
RETURN


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4CY0NCIBY           m.conv_btn VALID                   ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC003A,     Record Number:  100  ╨
*       ╨ Variable:            m.conv_btn                         ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      21                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _4cy0nciby     &&  m.conv_btn VALID
#REGION 1
DO  ULconverte
=UPbeeps(LFalerta,"Processo Concluido. <ENTER>")
RETURN


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4CY0NCIC4           m.imp_btn VALID                    ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC003A,     Record Number:  101  ╨
*       ╨ Variable:            m.imp_btn                          ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      22                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _4cy0ncic4     &&  m.imp_btn VALID
#REGION 1
DO ULimport
=UPbeeps(LFalerta,"Processo Concluido. <ENTER>")
RETURN


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4CY0NCICA           m.tot_btn VALID                    ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC003A,     Record Number:  102  ╨
*       ╨ Variable:            m.tot_btn                          ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      23                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _4cy0ncica     &&  m.tot_btn VALID
#REGION 1
DO ULdescomp
DO ULconverte
DO ULimport
=UPbeeps(LFalerta,"Processo Concluido. <ENTER>")
RETURN


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4CY0NCICG           m.canc_btn VALID                   ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC003A,     Record Number:  103  ╨
*       ╨ Variable:            m.canc_btn                         ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      24                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _4cy0ncicg     &&  m.canc_btn VALID
#REGION 1
CLEAR GETS
CLEAR READ
isediting = .f.
RETURN .T.

*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4CY0NCICO           m.ci_btn VALID                     ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC003A,     Record Number:  104  ╨
*       ╨ Variable:            m.ci_btn                           ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      25                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _4cy0ncico     &&  m.ci_btn VALID
#REGION 1
m.titulo = "Critica de Saldos Cobranca CENTRAL x LOJA apartir de "+DTOC(m.dt_inicio)+" a "+DTOC(m.dt_fim)

SELE ci
SET ORDER TO DT_MOV
SET NEAR ON
SEEK STR(m.empresa,3)+DTOS(m.dt_inicio)
SET NEAR OFF
IF EOF()
	WAIT WINDOW "Nao ha dados nesta data."
	RETURN
ENDIF	

************************>  GERANDO ARQTMP **********************
wl_arqtmp = ""
LNtmp     = 65		&& TABELA ASCII A = 65
IF !UPabretmp("ci")
	wp_flgfecha = .t.
ENDIF
IF wp_flgfecha
	RETURN
ENDIF
SET SAFET OFF
WAIT WINDOW "AGUARDE. Gerando Arq. Temporario." NOWAIT
LStmp = "&wp_dirtmp"+"&wl_arqtmp"
SELE ci
COPY TO &LStmp  FOR  m.empinicio <= ci.empresa AND ;
					 m.empfim    >= ci.empresa AND ;
					 ci.data >= m.dt_inicio AND ;
					 ci.data <= m.dt_fim
SELE 0
USE &LStmp  exclu
INDEX ON STR(EMPRESA,3)+DTOS(DATA)  TAG codigo ADDITIVE
SET ORDER TO TAG codigo
GO TOP
IF EOF()
	APPEND BLANK
ENDIF	

SELE &wl_arqtmp
GO TOP
*******************
*---->   (INICIALIZACAO DO CONTROLE DE STATUS IMPRESSAO)
*******************	
DO RELINIC.PRG          && INICIA VAR P/ TERMOMETRO
LFsegue = .t.
LNregistro = RECNO()
LNimpressao = 0
LNimpressao = RECCOUNT()
LNimpressos = 0
*******************
*---->   (COMPLETADO PREPARACAO DO CONTROLE DE STATUS IMPRESSAO)
*******************	
LSrel = "REL526"      && relatorio padrao
LSorienta = " FOR LFsegue "
DO UPimpressao    && COORDENA TRABALHO DE IMPRESSAO
************
DO RELFIM.PRG          && FIM VAR P/ TERMOMETRO
**************************>>> RESUMO POR CFO
*-----------------------------
SHOW GET m.imp_btn DISABLE
SELECT &wl_arqtmp
USE
SELE ci
CLEAR TYPEAHEAD
SHOW WINDOW SCGC003 TOP
RETURN


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4CY0NCICP           m.QE_btn VALID                     ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC003A,     Record Number:  107  ╨
*       ╨ Variable:            m.QE_btn                           ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      26                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _4cy0ncicp     &&  m.QE_btn VALID
#REGION 1
m.empresa = m.empinicio
DO WHILE m.empresa <= m.empfim AND wp_flgfecha = .F.
	SELE qe
	SET ORDER TO DT_MOV
	SET NEAR ON
	SEEK STR(m.empresa,3)+DTOS(m.dt_inicio)
	SET NEAR OFF
	IF EOF() OR m.empresa <> qe.empresa
		WAIT WINDOW "Nao ha dados nesta empresa "+STR(m.empresa,3)
		m.empresa = m.empresa + 1
		LOOP
	ENDIF

************************>  GERANDO ARQTMP **********************

	m.titulo = "Critica de Saldos CENTRAL x LOJA apartir de "+;
				DTOC(m.dt_inicio)+" Filial :  "+STR(m.empresa,3)
	wl_arqtmp = ""
	LNtmp     = 65		&& TABELA ASCII A = 65
	IF !UPabretmp("qe")
		wp_flgfecha = .t.
	ENDIF
	IF wp_flgfecha
		m.empresa = m.empresa + 1
		LOOP
	ENDIF
	SET SAFET OFF
	WAIT WINDOW "AGUARDE. Gerando Arq. Temporario." NOWAIT
	LStmp = "&wp_dirtmp"+"&wl_arqtmp"
	SELE qe
	COPY TO &LStmp FOR sld_loja <> sld_centro  ;
			   WHILE  m.empresa = empresa AND data <= m.dt_fim

	SELE 0
	USE &LStmp  exclu
	INDEX ON STR(EMPRESA,3)+CODIGO TAG codigo ADDITIVE
	SET ORDER TO TAG codigo
	GO TOP
	IF EOF()
		APPEND BLANK
	ENDIF	

	SELE &wl_arqtmp
	GO TOP
*******************
*---->   (INICIALIZACAO DO CONTROLE DE STATUS IMPRESSAO)
*******************	
	DO RELINIC.PRG          && INICIA VAR P/ TERMOMETRO
	LFsegue = .t.
	LNregistro = RECNO()
	LNimpressao = 0
	LNimpressao = RECCOUNT()
	LNimpressos = 0
*******************
*---->   (COMPLETADO PREPARACAO DO CONTROLE DE STATUS IMPRESSAO)
*******************	
	LSrel = "REL416"      && relatorio padrao
	LSorienta = " FOR LFsegue "
	DO UPimpressao    && COORDENA TRABALHO DE IMPRESSAO
************
	DO RELFIM.PRG          && FIM VAR P/ TERMOMETRO
**************************>>> RESUMO POR CFO
*-----------------------------
	SHOW GET m.imp_btn DISABLE
	SELECT &wl_arqtmp
	USE
	SELE qe
	m.empresa = m.empresa + 1
ENDDO
CLEAR TYPEAHEAD
SHOW WINDOW SCGC003 TOP
RETURN
