*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ 21/01/2016            SCGC606.SPR              15:11:36 ╨
*       ╨                                                         ╨
*       гддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╤
*       ╨                                                         ╨
*       ╨ Author's Name                                           ╨
*       ╨                                                         ╨
*       ╨ Copyright (c) 2016 Company Name                         ╨
*       ╨ Address                                                 ╨
*       ╨ City,     Zip                                           ╨
*       ╨                                                         ╨
*       ╨ Description:                                            ╨
*       ╨ This program was automatically generated by GENSCRN.    ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨          SCGC606/MS-DOS Setup Code - SECTION 1          ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*

#REGION 1
***************
*~ WIZARDSCREEN

*---------------------------------------------------------------------*
* ARQUIVOS UTILIZADOS :                                               *
*
* OBJETIVOS : CALCULO E LANCAMENTO DE COMISSOES PARA VENDEDOR
*	
*---------------------------------------------------------------------*
******>>>> INICIO CONTROLE AMBIENTAL

ON KEY LABEL ESCAPE

PRIVATE isediting,isadding,isreading
PRIVATE wp_record
PRIVATE isreadonly,is2table,wzalias
PRIVATE LS606areant
LS606areant	= ALLTRIM(ALIAS()) && PERMITE RETORNAR A AREA ANTER. A CHAMADA

m.wzalias	=	SELECT()
m.isediting	=	.F.
m.isadding	=	.F.
m.isreading =   .f.
m.is2table 	= 	.F.
wp_flgfecha = 	.F. 		&& defaut nao fechamento da secao
WP_RECORD 	= 	0
wp_ref_local =  .f.     && NAO POSSUI CONTROLE DE REFRESH LOCAL

LFcli606  	= 	.F.		&& .F. =>  DEVE SER FECHADA NA SAIDA
LFcbc606  	= 	.F.		&& .F. =>  DEVE SER FECHADA NA SAIDA
LFitc606  	= 	.F.		&& .F. =>  DEVE SER FECHADA NA SAIDA
LFfun606  	= 	.F.		&& .F. =>  DEVE SER FECHADA NA SAIDA
LFusr606  	= 	.F.		&& .F. =>  DEVE SER FECHADA NA SAIDA
LFctb606  	= 	.F.		&& .F. =>  DEVE SER FECHADA NA SAIDA
LFpcm606  	= 	.F.		&& .F. =>  DEVE SER FECHADA NA SAIDA
LFgrp606  	= 	.F.		&& .F. =>  DEVE SER FECHADA NA SAIDA
LFgrv606  	= 	.F.		&& .F. =>  DEVE SER FECHADA NA SAIDA
LFemp606  	= 	.F.		&& .F. =>  DEVE SER FECHADA NA SAIDA
LFitm606  	= 	.F.		&& .F. =>  DEVE SER FECHADA NA SAIDA
LFnfs606  	= 	.F.		&& .F. =>  DEVE SER FECHADA NA SAIDA

PRIVATE LFpreco
LFpreco  	= 	.F.		&& .F. =>  DEVE SER FECHADA NA SAIDA

******>>>> INICIO CONTROLE ARQUIVOS

*>> parametros repassados a btn_val

VLleitura = ""    && repassa chave de leitura p/ btn_val
VLlerfim  = ""    && repassa chave de leitura p/ btn_val ultimo + 1 REG)
VLcompara = ""    && repassa chave de comparacao p/ btn_val
VLchvlimi = ""    && repassa chave de leitura p/ btn_val

IF !USED("clientes")
	LFcbc606  	= .T.
	IF ! NetUse("clientes")
		wp_flgfecha = .t.  && implica no fechamento da secao
	ENDIF
ENDIF
IF !USED("cbcomiss")
	LFcbc606  	= .T.
	IF ! NetUse("cbcomiss")
		wp_flgfecha = .t.  && implica no fechamento da secao
	ENDIF
ENDIF
IF !USED("itcomiss")
	LFitc606  	= .T.
	IF ! NetUse("itcomiss")
		wp_flgfecha = .t.  && implica no fechamento da secao
	ENDIF
ENDIF
IF !USED("empresa")
	LFemp606  	= .T.
	IF ! NetUse("empresa")
		wp_flgfecha = .t.  && implica no fechamento da secao
	ENDIF
ENDIF
IF !USED("funcao")
	LFfun606  	= .T.
	IF ! NetUse("funcao")
		wp_flgfecha = .t.  && implica no fechamento da secao
	ENDIF
ENDIF
IF !USED("usuario")
	LFusr606  	= .T.
	IF ! NetUse("usuario")
		wp_flgfecha = .t.  && implica no fechamento da secao
	ENDIF
ENDIF
IF !USED("cadtab")
	LFctb606  	= .T.
	IF ! NetUse("cadtab")
		wp_flgfecha = .t.  && implica no fechamento da secao
	ENDIF
ENDIF
IF !USED("prod_cms")
	LFpcm606  	= .T.
	IF ! NetUse("prod_cms")
		wp_flgfecha = .t.  && implica no fechamento da secao
	ENDIF
ENDIF
IF !USED("grup_cms")
	LFgrp606  	= .T.
	IF ! NetUse("grup_cms")
		wp_flgfecha = .t.  && implica no fechamento da secao
	ENDIF
ENDIF
IF !USED("grup_ven")
	LFgrv606  	= .T.
	IF ! NetUse("grup_ven")
		wp_flgfecha = .t.  && implica no fechamento da secao
	ENDIF
ENDIF
IF !USED("itemmov")
	LFitm606  	= .T.
	IF ! NetUse("itemmov")
		wp_flgfecha = .t.  && implica no fechamento da secao
	ENDIF
ENDIF
IF !USED("preco")
	LFpreco  	= .T.
	IF ! NetUse("preco")
		wp_flgfecha = .t.  && implica no fechamento da secao
	ENDIF
ENDIF
IF !USED("nota")
	LFnfs606  	= .T.
	IF ! NetUse("nota")
		wp_flgfecha = .t.  && implica no fechamento da secao
	ENDIF
ENDIF
IF wp_flgfecha
	DO ULfecha
	RETURN
ENDIF


#REGION 0
REGIONAL m.currarea, m.talkstat, m.compstat

IF SET("TALK") = "ON"
	SET TALK OFF
	m.talkstat = "ON"
ELSE
	m.talkstat = "OFF"
ENDIF
m.compstat = SET("COMPATIBLE")
SET COMPATIBLE FOXPLUS

*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨                MS-DOS Window definitions                ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*

IF NOT WEXIST("scgc606") ;
	OR UPPER(WTITLE("SCGC606")) == "SCGC606.PJX" ;
	OR UPPER(WTITLE("SCGC606")) == "SCGC606.SCX" ;
	OR UPPER(WTITLE("SCGC606")) == "SCGC606.MNX" ;
	OR UPPER(WTITLE("SCGC606")) == "SCGC606.PRG" ;
	OR UPPER(WTITLE("SCGC606")) == "SCGC606.FRX" ;
	OR UPPER(WTITLE("SCGC606")) == "SCGC606.QPR"
	DEFINE WINDOW scgc606 ;
		FROM INT((SROW()-12)/2),INT((SCOL()-76)/2) ;
		TO INT((SROW()-12)/2)+11,INT((SCOL()-76)/2)+75 ;
		TITLE "[ Calculo e lancamento de Comissoes ]" ;
		FOOTER "[606]" ;
		NOFLOAT ;
		NOCLOSE ;
		SHADOW ;
		NOMINIMIZE ;
		NONE ;
		COLOR SCHEME 1
ENDIF


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨          SCGC606/MS-DOS Setup Code - SECTION 2          ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*

#REGION 1

******>>>> INICIO CONTROLE LOCAL




*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨              SCGC606/MS-DOS Screen Layout               ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*

#REGION 1
IF WVISIBLE("scgc606")
	ACTIVATE WINDOW scgc606 SAME
ELSE
	ACTIVATE WINDOW scgc606 NOSHOW
ENDIF
@ 1,6 TO 7,68 ;
	COLOR SCHEME 23
@ 7,7 TO 7,67 ;
	COLOR SCHEME 24
@ 7,68 SAY "ы" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 2,68 TO 6,68 ;
	COLOR SCHEME 24
@ 1,68 SAY "©" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 0,0 TO 11,75 ;
	COLOR SCHEME 23
@ 11,1 TO 11,74 ;
	COLOR SCHEME 24
@ 11,75 SAY "ы" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 1,75 TO 10,75 ;
	COLOR SCHEME 24
@ 0,75 SAY "©" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 8,6 TO 10,22 ;
	COLOR SCHEME 24
@ 10,7 TO 10,21 ;
	COLOR SCHEME 23
@ 9,22 SAY "Ё" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 23
@ 10,22 SAY "ы" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 23
@ 8,22 SAY "©" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 23
@ 8,29 TO 10,45 ;
	COLOR SCHEME 24
@ 10,30 TO 10,44 ;
	COLOR SCHEME 23
@ 9,45 SAY "Ё" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 23
@ 10,45 SAY "ы" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 23
@ 8,45 SAY "©" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 23
@ 8,52 TO 10,68 ;
	COLOR SCHEME 24
@ 10,53 TO 10,67 ;
	COLOR SCHEME 23
@ 9,68 SAY "Ё" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 23
@ 10,68 SAY "ы" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 23
@ 8,68 SAY "©" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 23
@ 0,19 SAY "[ Calculo e Lancamento de Comissoes ]" ;
	SIZE 1,37, 0
@ 5,49 SAY "a" ;
	SIZE 1,1, 0
@ 0,68 SAY "[606]" ;
	SIZE 1,5, 0
@ 2,14 TO 4,26 ;
	COLOR SCHEME 23
@ 4,15 TO 4,25 ;
	COLOR SCHEME 24
@ 4,26 SAY "ы" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 3,26 SAY "Ё" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 2,26 SAY "©" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 2,16 SAY "[Filial]" ;
	SIZE 1,8, 0
@ 4,34 TO 6,64 ;
	COLOR SCHEME 23
@ 6,35 TO 6,63 ;
	COLOR SCHEME 24
@ 6,64 SAY "ы" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 5,64 SAY "Ё" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 4,64 SAY "©" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 4,35 SAY "[ N.F. Emitidas no Periodo ]" ;
	SIZE 1,28, 0
@ 3,19 GET m.empbase ;
	SIZE 1,3 ;
	DEFAULT 0 ;
	PICTURE "999" ;
	WHEN isediting ;
	VALID _4jp0wkbzv() ;
	MESSAGE "<TAB> = Zoom  ;  <ESC> = Sai " ;
	ERROR "Codigo de Tabela Nao Confere."
@ 5,38 GET m.dt_inicio ;
	SIZE 1,10 ;
	DEFAULT {  /  /  } ;
	WHEN _4jp0wkc1r() ;
	VALID _4jp0wkc1s()
@ 5,52 GET m.dt_fim ;
	SIZE 1,10 ;
	DEFAULT {  /  /  } ;
	WHEN isediting ;
	VALID _4jp0wkc1t() ;
	MESSAGE "Data Final deve ser maior ou igual a Inicial"
@ 9,10 GET m.edit_btn ;
	PICTURE "@*HN \<Edita" ;
	SIZE 1,9,1 ;
	DEFAULT 1 ;
	VALID btn_val1('EDIT') ;
	MESSAGE 'Permite a alteracao de dados do registro corrente'
@ 1,57 GET m.antimp_btn ;
	PICTURE "@*HN \<antProcessa" ;
	SIZE 1,13,1 ;
	DEFAULT 1 ;
	VALID _4jp0wkc1u() ;
	DISABLE
@ 9,57 GET exit_btn ;
	PICTURE "@*HN \<Saida" ;
	SIZE 1,7,1 ;
	DEFAULT 1 ;
	VALID _4jp0wkc1v()
@ 9,32 GET m.imp_btn ;
	PICTURE "@*HN \<Processa" ;
	SIZE 1,10,1 ;
	DEFAULT 1 ;
	VALID _4jp0wkc39() ;
	DISABLE
@ 2,57 GET m.imp_btn ;
	PICTURE "@*HN antProcessa" ;
	SIZE 1,13,1 ;
	DEFAULT 1 ;
	VALID _4jp0wkc3a() ;
	DISABLE

IF NOT WVISIBLE("scgc606")
	ACTIVATE WINDOW scgc606
ENDIF


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨     MS-DOSREAD contains clauses from SCREEN scgc606     ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*

READ CYCLE ;
	NOLOCK

RELEASE WINDOW scgc606

#REGION 0
IF m.talkstat = "ON"
	SET TALK ON
ENDIF
IF m.compstat = "ON"
	SET COMPATIBLE ON
ENDIF


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨               SCGC606/MS-DOS Cleanup Code               ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*

#REGION 1
DO ULfecha
RETURN



*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨   SCGC606/MS-DOS Supporting Procedures and Functions    ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*

#REGION 1
PROCEDURE ULfecha
	IF LFcli606  		&& .t. =>  DEVE SER FECHADA NA SAIDA
		=UP_fecha("clientes")
	ENDIF
	IF LFemp606  		&& .t. =>  DEVE SER FECHADA NA SAIDA
		=UP_fecha("empresa")
	ENDIF
	IF LFfun606  		&& .t. =>  DEVE SER FECHADA NA SAIDA
		=UP_fecha("funcao")
	ENDIF
	IF LFusr606  		&& .t. =>  DEVE SER FECHADA NA SAIDA
		=UP_fecha("usuario")
	ENDIF
	IF LFctb606  		&& .t. =>  DEVE SER FECHADA NA SAIDA
		=UP_fecha("cadtab")
	ENDIF
	IF LFpcm606  		&& .t. =>  DEVE SER FECHADA NA SAIDA
		=UP_fecha("prod_cms")
	ENDIF
	IF LFgrp606  		&& .t. =>  DEVE SER FECHADA NA SAIDA
		=UP_fecha("grup_cms")
	ENDIF
	IF LFgrv606  		&& .t. =>  DEVE SER FECHADA NA SAIDA
		=UP_fecha("grup_ven")
	ENDIF
	IF LFcbc606  		&& .t. =>  DEVE SER FECHADA NA SAIDA
		=UP_fecha("cbcomiss")
	ENDIF
	IF LFitc606  		&& .t. =>  DEVE SER FECHADA NA SAIDA
		=UP_fecha("itcomiss")
	ENDIF
	IF LFitc606  		&& .t. =>  DEVE SER FECHADA NA SAIDA
		=UP_fecha("itcomiss")
	ENDIF
	IF LFitm606  		&& .t. =>  DEVE SER FECHADA NA SAIDA
		=UP_fecha("itemmov")
	ENDIF
	IF LFpreco  		&& .t. =>  DEVE SER FECHADA NA SAIDA
		=UP_fecha("preco")
	ENDIF
	IF LFnfs606  		&& .t. =>  DEVE SER FECHADA NA SAIDA
		=UP_fecha("nota")
	ENDIF
	wp_flgfecha = .F. 		&& defaut nao fechamento da secao
	IF !EMPTY(LS606areant)
		SELECT &LS606areant
	ENDIF
	ON KEY LABEL ESCAPE
	SET FORMAT TO
RETURN

PROCEDURE BTN_VAL1
	PARAMETER tecla, m.chv_ler, m.chv_compara, m.chv_brow
	LN_prxobj = _CUROBJ
	SHOW GET wp_empresa
	SHOW GET wp_nome_emp
    DO CASE
		CASE tecla = "EDIT" AND !isediting   && INICIA EDICAO
			SHOW GET edit_btn,1 PROMPT "\<Ok"
			SHOW GET m.imp_btn DISABLE
			isediting = .t.
			_CUROBJ = 1	
		    ON KEY LABEL ESCAPE KEYBOARD "{BACKTAB}"
			ON KEY LABEL END DO BTN_VAL1 WITH 'DELETE'
			m.codinicio  = " "
			m.descinicio = " "
			m.nivinicio  = 0
			m.codfim     = " "    && CODIGO FINAL INFORMADO
			m.descfim    = " "
			m.nivfim     = 0
		CASE tecla = "EDIT" AND isediting     && CONFIRMA EDICAO
			SHOW GET edit_btn,1 PROMPT "\<Edita"
			isediting = .f.
			_CUROBJ = 1	
			SHOW GET m.imp_btn ENABLE
		    ON KEY LABEL ESCAPE
			ON KEY LABEL END
		CASE tecla = "DELETE" AND isediting     && CANCELA EDICAO
			SHOW GET edit_btn,1 PROMPT "\<Edita"
			isediting = .f.
			_CUROBJ = 1	
			SHOW GET m.imp_btn DISABLE
		    ON KEY LABEL ESCAPE
			ON KEY LABEL END
	ENDCASE
RETURN





*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4JP0WKBZV           m.empbase VALID                    ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC606,     Record Number:   42   ╨
*       ╨ Variable:            m.empbase                          ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Field                              ╨
*       ╨ Snippet Number:      1                                  ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*

FUNCTION _4jp0wkbzv     &&  m.empbase VALID
#REGION 1
SELECT empresa
IF LASTKEY() = 9
   ON KEY LABEL ESCAPE
   DO loc_dlog WITH .T.
   m.empbase = empresa.empresa
   SHOW GET  m.empbase
   ON KEY LABEL ESCAPE DO BTN_VAL1
ELSE
	SET ORDER TO TAG empresa
	IF SEEK(m.empbase)
   	   m.empbase = empresa.empresa
	   SHOW GET  m.empbase
	ELSE
	   RETURN .F.
	ENDIF
ENDIF
RETURN .T.


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4JP0WKC1R           m.dt_inicio WHEN                   ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC606,     Record Number:   43   ╨
*       ╨ Variable:            m.dt_inicio                        ╨
*       ╨ Called By:           WHEN Clause                        ╨
*       ╨ Object Type:         Field                              ╨
*       ╨ Snippet Number:      2                                  ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _4jp0wkc1r     &&  m.dt_inicio WHEN
#REGION 1
IF isediting
	ON KEY LABEL ESCAPE	KEYBOARD "{END}"
ENDIF
RETURN(isediting)

*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4JP0WKC1S           m.dt_inicio VALID                  ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC606,     Record Number:   43   ╨
*       ╨ Variable:            m.dt_inicio                        ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Field                              ╨
*       ╨ Snippet Number:      3                                  ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _4jp0wkc1s     &&  m.dt_inicio VALID
#REGION 1
m.dt_fim = m.dt_inicio
SHOW GET m.dt_fim
ON KEY LABEL ESCAPE KEYBOARD "{BACKTAB}"
RETURN (.T.)


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4JP0WKC1T           m.dt_fim VALID                     ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC606,     Record Number:   44   ╨
*       ╨ Variable:            m.dt_fim                           ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Field                              ╨
*       ╨ Snippet Number:      4                                  ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _4jp0wkc1t     &&  m.dt_fim VALID
#REGION 1
RETURN(m.dt_fim >= m.dt_inicio)


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4JP0WKC1U           m.antimp_btn VALID                 ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC606,     Record Number:   46   ╨
*       ╨ Variable:            m.antimp_btn                       ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      5                                  ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _4jp0wkc1u     &&  m.antimp_btn VALID
#REGION 1
PRIVATE LNtabvgr, LSserievgr
	LNtabvgr    = 0
	LSserievgr	= ""
	SELE nota
	SET ORDER TO TAG data
	SET NEAR ON
	SEEK STR(m.empbase,3)+DTOS(m.dt_inicio)
	SET NEAR OFF
	IF EOF() OR nota.empresa <> m.empbase OR nota.data > m.dt_fim
 		WAIT WINDOW "Nao Foram encotrados dados para impessao."
		UNLOCK
 		RETURN
 	ENDIF		
*******************	
*******************
*---->   (INICIALIZACAO DO CONTROLE DE STATUS IMPRESSAO)
*******************	
	DO RELINIC.PRG          && INICIA VAR P/ TERMOMETRO
	wp_msg = "Processado Comissoes......."
	LFsegue = .t.
	LNregistro = RECNO()
	LNimpressao = 0
    COUNT   WHILE nota.empresa = m.empbase AND ;
    			  nota.data <= m.dt_fim TO LNimpressao
	LNimpressos = 0
	GO LNregistro
*******************
*---->   (COMPLETADO PREPARACAO DO CONTROLE DE STATUS IMPRESSAO)
*******************	
*******************

	SELECT empresa
	SET ORDER TO TAG empresa
	SEEK m.empbase

	SELECT  clientes
	SET ORDER TO TAG cliente

  	SELECT  cadtab
	SET ORDER TO TAG tabela
***	SEEK STR(m.tbbase,3)+m.sbase  && SUBST. POR LOCALISACAO DINAMICA NA DATA

	SELE prod_cms
	SET ORDER TO TAG tabela

	SELE funcao
	SET ORDER TO TAG nivel

	SELE grup_cms
	SET ORDER TO TAG grupo

	SELE usuario
	SET ORDER TO TAG usuario

	SELE grup_ven
	SET ORDER TO TAG grupo_vend

	SELE preco
	SET ORDER TO TAG tabela

	SELE itemmov
	SET ORDER TO TAG  itensnota

************************>
***------> pesquisa e elimina lancamentos anteriores
	SELE cbcomiss
	SET ORDER TO TAG data
	SET NEAR ON
	SEEK STR(m.empbase,3)+DTOS(m.dt_inicio)		
	SET NEAR OFF
	DO WHILE !EOF() AND ;
	    m.empbase   = cbcomiss.empresa AND ;
		m.dt_fim   >= cbcomiss.data
			SELE itcomiss
			SET ORDER TO TAG data
			SEEK STR(cbcomiss.empresa,3)+;
				 DTOS(cbcomiss.data)+;
				 STR(cbcomiss.vendedor,4)
			DO WHILE !EOF() AND ;
					cbcomiss.empresa   = itcomiss.empresa AND ;
					cbcomiss.data      = itcomiss.data    AND ;
					cbcomiss.vendedor  = itcomiss.vendedor
					=REGLOCK()
					DELETE
					SKIP
			ENDDO
			SELE cbcomiss
			=REGLOCK()
			DELETE
			SKIP
	ENDDO
************************>
	SELE nota
    DO WHILE !EOF() AND nota.empresa = m.empbase AND nota.data <= m.dt_fim ;
    		AND LFsegue
		wp_msg = "Processado NF."+STR(nota.nota,7)+ " em "+ ;
				DTOC(nota.data)
		=UPtermo()
		IF  nota.operacao <> 'S' OR ;
			nota.ch_opera <> "1" OR ;
			nota.tipo = "ENT"    OR ;
			nota.tipo = "CMP"    OR ;
		    nota.status  <> 1
				SKIP
				LOOP
		ENDIF

	
		
		SELE itemmov
		SET NEAR ON
		SEEK STR(m.empbase,3)+"S"+STR(nota.nota,7)
		SET NEAR OFF
		DO WHILE !EOF() AND m.empbase = itemmov.empresa  ;
						AND nota.nota    = itemmov.nota
						

			*--------------------------------------------------------*
			*   Pode ocorrer que um item de uma REQUISICAO (SCA) de
			* mesmo numero da nota se misture com os itens da nota
			* propriamente dita. A condi┤фo abaixo evita o tratamento
			* destes registros
			*--------------------------------------------------------*
			IF nota.tipo    <> itemmov.tipo
				SKIP
				LOOP
			ENDIF


			LNserv    = 1
			m.vinculo = 1 		    && INDICA O RESPONSAVEL PELA NOTA
			DO WHILE LNserv < 13    && INCLUI OS FIXOS
				LSserv = ALLTRIM(STR(LNserv,2))
				IF nota.serv_&LSserv = 0
					LNserv = LNserv + 1
					LOOP
				ENDIF
				m.servidor = nota.serv_&LSserv

****VERIFICA SE O CLIENTES ESTA VINCULADO A VENDEDOR INDEPENDENTE DO PEDIDO
***  se estiver vinculado a comissao e repassada para vendedor cadastrado
**** com cliente

				IF LNserv = 1 AND nota.favorecido <> 0
					SELE clientes
					SEEK  nota.favorecido
					IF FOUND() AND clientes.vendedor <> 0
						m.servidor = clientes.vendedor
					ENDIF
				ENDIF

***-------> buscar o nivel do usuario
				SELE usuario
				SEEK m.servidor
				IF !FOUND()			
					wp_msg = ;
						"Cadastre Usuario Codigo = "+STR(m.servidor,4)+;
						". NF "+STR(itemmov.nota,7)+ ".   <ENTER> "
					=UPbeeps(.F.,wp_msg)
					LNserv = LNserv + 1
					LOOP
				ELSE
					m.nivel = usuario.nivel_com
				ENDIF

**-------> MONTANDO DADOS PADROES NO LANCAMENTO DE COMISSAO

				m.empresa = itemmov.empresa
				m.data    = itemmov.data
				m.hora    = itemmov.hora
				m.tipo    = itemmov.tipo
				m.nota    = itemmov.nota
				m.ordem   = itemmov.ordem
				m.codigo  = itemmov.codigo
		
				IF itemmov.movestq = "S"
					m.qtde    = itemmov.qtde
				ELSE
					m.qtde    = 0
				ENDIF

				m.classifica = itemmov.classifica
				m.motivo    = 1		&& 1 => comissao normal sobre venda
				m.vendedor  = m.servidor
				m.descricao = itemmov.descricao
****
				*-------------------------------------------------------*
				=W_DEFPROC("PRECO.SPR")
				=PRtabvigor(itemmov.data,LNtabvgr,LSserievgr)
				*-------------------------------------------------------*
				SELE preco
				SET ORDER TO TAG tabela
				SEEK STR(empresa.emptab,3)+STR(LNtabvgr,3)+;
						LSserievgr+m.codigo
				IF !FOUND() OR EMPTY(alltrim(preco.clas_cms))
					wp_msg = 'Prod. nao Classificado na tab de comissao ' ;
							 +m.codigo+' NF.'+STR(m.nota,7)	
					=UPbeeps(.F.,wp_msg)
					m.clas_cms= ""
				ELSE
					m.clas_cms= preco.clas_cms
				ENDIF
				**********************************************************
				*  DIRECIONA TAB DE COMS CONFORME A DATA DE MOVIMENTO    *
				**********************************************************

				*----------------------------------------------------------*
				* 	Se o servidor receber comissao no produto em seguida
				* e verificado o DESCONTO MAXIMO  permitido em PROMOCAO OU
				* NORMAL
				*----------------------------------------------------------*

				SELE grup_ven
				SEEK STR(m.servidor,4)+m.clas_cms

				IF FOUND()				&& SERVIDOR RECEBE COMISSAO
					*---------------------------------------------------*
					*   Determina o valor autorizado ao servidor nesta
					* opercao (referencia para calculo de superavit)
					*---------------------------------------------------*
					LNminavista = itemmov.preco * itemmov.qtde
					m.desc_max  = 0
					m.vlr_auto  = 0
					*---------------------------------------------------*
					=W_DEFPROC("PRECO.SPR")
					=PRdesconto((itemmov.empresa),(itemmov.codigo),;
							(itemmov.data),(nota.natu_cli),m.desc_max,0)
					*---------------------------------------------------*
					m.vlr_auto  = LNminavista - ;
							  (m.desc_max * LNminavista) / 100
					*---------------------------------------------------*
					*---------------------------------------------------*
					*   Determina a comissao paga ao servidor neste grupo
					* podendo ser uma comissao especifica para o nivel
					* do servidor ou comissao padrao (NIVEL = 0)
					*---------------------------------------------------*
					SELE prod_cms
					SEEK STR(m.empbase,3)+STR(LNtabvgr,3)+;
						 LSserievgr +grup_ven.grupo + STR(m.nivel,2)
					IF !FOUND()
						SEEK STR(m.empbase,3)+STR(LNtabvgr,3)+;
							LSserievgr + grup_ven.grupo + STR(0,2)
					ENDIF			
					IF !FOUND()			
						wp_msg = "Falta Tabela de Comissao para USR: " + ;
								 STR(m.servidor,4)+" no produto "+;
							     grup_ven.grupo+' NF.'+STR(m.nota,7)	
						=UPbeeps(.F.,wp_msg)
						LNserv = LNserv + 1
						LOOP
					ENDIF
			**------> BASE DA COMISSAO NORMAL

					LNminavista = itemmov.preco * itemmov.qtde
					IF prod_cms.com_supera = 0 AND m.vinculo <> 1
						m.vlr_auto  = 0
						m.desc_max  = 0
					ENDIF

					m.comissao  = prod_cms.comissao

				ELSE 	&& NAO PREVE COMISSAO NO ITEM

					m.vlr_auto = itemmov.preco * itemmov.qtde
					m.desc_max  = 0
					m.comissao  = 0
				ENDIF
				**
				m.valor     = itemmov.vlrvenda  && vlr base da comissao
				m.desconto  = itemmov.desconto
				m.tabela    = LNtabvgr
				m.serie     = LSserievgr
***************************************************************************
*******
*******  Registra a comissao ou o valor sem comissao para o responsavel
*******  de vinculo 1 para constar o faturamento
*******				IF (m.valor <> 0 AND m.comissao <> 0) ;
*******					OR 	m.vinculo = 1 && REGISTRAR MESMO P/ CONSTAR. FAT
***************************************************************************
*******
*******			Registra quando :
*******				VINCULO = 1	=>	Indepedente de Receber Comissao de Forma
*******								a constar no faturamento
*******				FOUND("GRUP_VEN")	=> Mesmo com a comissao = 0 o reg.
*******								indicara todos servicos e vandas realiza
*******								com o usuario
***************************************************************************
				IF m.vinculo = 1 OR FOUND("GRUP_VEN")
					SELE itcomiss
					SET ORDER TO TAG movimento
					SEEK STR(m.empbase,3)+STR(m.vendedor,4)+;
						 DTOS(m.data)+m.codigo+m.hora+m.tipo+;
						 STR(m.nota,7)+STR(m.ordem,2)+STR(m.motivo,1)
					IF FOUND()
				    	=REGLOCK()
			  			GATHER  MEMVAR MEMO
				    ELSE
						=edithand('SAVE')
				    ENDIF
				ENDIF

*************  >>>>>> CALCULO DE COMISSAO DE SUPERAVIT <<<<<<
*********
*---- CONDICAO ALTERADA PARA GERAR A BASE DE SUPERAVIT PARA VINCULO 1
*	  SE HOUVER VALOR DE SUPERAVIT E MESMO QUE
*     NAO ESTEJA PREVISTA COMISSAO DE SUPERAVIT
*				IF m.valor <> 0	 AND m.comissao <> 0 ;
*					AND prod_cms.com_supera > 0
********************************************************************						

				IF m.vinculo = 1 OR ;
				   (m.valor <> 0 AND m.comissao <> 0 ;
					AND prod_cms.com_supera > 0)

					***---> RETIRANDO ENCARGOS EMBUTIDOS NO VLR.VENDA
					IF itemmov.prazomedio = 0   && A VISTA
						LNvlravista = itemmov.vlrvenda
						LNminavista = itemmov.preco * itemmov.qtde
					ELSE						&& A PRAZO	

						m.taxa = ROUND((empresa.juromes / 30) * ;
								 itemmov.prazomedio,2)
						LNvlravista = itemmov.vlrvenda ;
									/(1+(m.taxa / 100))
						LNminavista = itemmov.preco * itemmov.qtde
					ENDIF

					***---> APLICANDO O DESC. AUTO NO VALOR REAL

					LNminavista = LNminavista - ;
							(m.desc_max * LNminavista) / 100

					***---> APURANDO O SUPERAVIT

					LNsuperavit = LNvlravista - LNminavista

					**-------> GRAVANDO COMISSAO SUPERAVIT

					IF LNsuperavit > 0
						m.motivo    = 2	&& 2 => comissao super  sobre venda
						m.valor     = LNsuperavit  && valor base da comissao
						m.comissao  = prod_cms.com_supera

						SELE itcomiss
						SET ORDER TO TAG movimento
						SEEK STR(m.empbase,3)+STR(m.vendedor,4)+;
							 DTOS(m.data)+m.codigo+m.hora+m.tipo+;
							 STR(m.nota,7)+STR(m.ordem,2)+STR(m.motivo,1)
						IF FOUND()
					    	=REGLOCK()
		  					GATHER  MEMVAR MEMO
			    		ELSE
							=edithand('SAVE')
				    	ENDIF
					ENDIF
				ENDIF             && fim verif. se tem comissao

				LNserv = LNserv + 1
				m.vinculo = 2		&& INDICA QUE O RESPONSAVEL JA FOI REG.
			ENDDO
			SELE itemmov
			SKIP
		ENDDO
		SELE nota
		SKIP
	ENDDO
************
	DO RELFIM.PRG          && FIM VAR P/ TERMOMETRO
	WAIT WINDOW "Aguarde. Gerando Capas dos Lancamentos " NOWAIT
***---> gerando a capa de lancamento de comissoes
	SELE cbcomiss
	SET ORDER TO TAG vendedor

	SELE itcomiss
	SET ORDER TO TAG data
	SET NEAR ON
	SEEK STR(m.empbase,3)+DTOS(m.dt_inicio)
	SET NEAR OFF

	LNtotal = 0	&& valor da comissao no dia
	LQemp   = itcomiss.empresa
	LQdata  = itcomiss.data
	LQvend  = itcomiss.vendedor
	DO WHILE !EOF() AND ;
			  LQemp = itcomiss.empresa AND m.dt_fim >= itcomiss.data
		wp_msg = " Gerando Capas dos Lancamentos "+DTOS(LQdata)+;
				" Vend: "+STR(LQvend,4)
	    WAIT WINDOW wp_msg NOWAIT
		LNtotal = LNtotal + (itcomiss.valor * itcomiss.comissao) / 100
		SKIP
		IF 	LQdata  <> itcomiss.data OR LQvend  <> itcomiss.vendedor ;
			OR LQemp <> itcomiss.empresa
			m.empresa  = LQemp
			m.vendedor = LQvend
			m.data     = LQdata
			m.valor    = LNtotal
			SELE cbcomiss
			SEEK STR(m.empresa,3)+STR(m.vendedor,4)+DTOS(m.data)
			IF FOUND()
		    	=REGLOCK()
  				GATHER  MEMVAR MEMO
	    	ELSE
				=edithand('SAVE')
		    ENDIF
			SELE itcomiss
			LQdata  = itcomiss.data
			LQvend  = itcomiss.vendedor
			LNtotal = 0	&& valor da comissao no dia
		ENDIF
	ENDDO
**************************>>> RESUMO POR CFO
*-----------------------------
	SET RELATION TO
	SHOW GET m.imp_btn DISABLE



*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4JP0WKC1V           exit_btn VALID                     ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC606,     Record Number:   47   ╨
*       ╨ Variable:            exit_btn                           ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      6                                  ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _4jp0wkc1v     &&  exit_btn VALID
#REGION 1
CLEAR READ
CLEAR GETS


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4JP0WKC39           m.imp_btn VALID                    ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC606,     Record Number:   48   ╨
*       ╨ Variable:            m.imp_btn                          ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      7                                  ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _4jp0wkc39     &&  m.imp_btn VALID
#REGION 1
PRIVATE LNtabvgr, LSserievgr


   PRIVATE LNprcCusto    && Preco de Custo como  base para superavite
   PRIVATE LNprcTabela   && Preco de Tabela como  base para superavite

   PRIVATE LNminavista   &&    Aplica-se o desconto maximo no preco
                         && de tabela para obter o menor valor autoririzado.
                         && Obs: Nao se aplica o desconto quando a valor
                         && se origina no custo m┌dio e nфo na tab. de preco
   PRIVATE LNvlravista   &&    Indica o valor de face da Venda a vista ou o
                         && o valor de face da nota com deflacionamento
                         && caso seja venda a prazo

   PRIVATE LStpOrigemPreco && Indica qual origem do preco para calculo
                         && 1╕ Origem = "TABELA PRECO"
                         && 2╕ Origem = "CUSTO MEDIO"


	LNprcCusto  = 0
	LNprcTabela = 0

	LNtabvgr    = 0
	LSserievgr	= ""
	SELE nota
	SET ORDER TO TAG data
	SET NEAR ON
	SEEK STR(m.empbase,3)+DTOS(m.dt_inicio)
	SET NEAR OFF
	IF EOF() OR nota.empresa <> m.empbase OR nota.data > m.dt_fim
 		WAIT WINDOW "Nao Foram encotrados dados para impessao."
		UNLOCK
 		RETURN
 	ENDIF		
*******************	
*******************
*---->   (INICIALIZACAO DO CONTROLE DE STATUS IMPRESSAO)
*******************	
	DO RELINIC.PRG          && INICIA VAR P/ TERMOMETRO
	wp_msg = "Processado Comissoes......."
	LFsegue = .t.
	LNregistro = RECNO()
	LNimpressao = 0
    COUNT   WHILE nota.empresa = m.empbase AND ;
    			  nota.data <= m.dt_fim TO LNimpressao
	LNimpressos = 0
	GO LNregistro
*******************
*---->   (COMPLETADO PREPARACAO DO CONTROLE DE STATUS IMPRESSAO)
*******************	
*******************

	SELECT empresa
	SET ORDER TO TAG empresa
	SEEK m.empbase

	SELECT  clientes
	SET ORDER TO TAG cliente

  	SELECT  cadtab
	SET ORDER TO TAG tabela
***	SEEK STR(m.tbbase,3)+m.sbase  && SUBST. POR LOCALISACAO DINAMICA NA DATA

	SELE prod_cms
	SET ORDER TO TAG tabela

	SELE funcao
	SET ORDER TO TAG nivel

	SELE grup_cms
	SET ORDER TO TAG grupo

	SELE usuario
	SET ORDER TO TAG usuario

	SELE grup_ven
	SET ORDER TO TAG grupo_vend

	SELE preco
	SET ORDER TO TAG tabela

	SELE itemmov
	SET ORDER TO TAG  itensnota

************************>
***------> pesquisa e elimina lancamentos anteriores
	SELE cbcomiss
	SET ORDER TO TAG data
	SET NEAR ON
	SEEK STR(m.empbase,3)+DTOS(m.dt_inicio)		
	SET NEAR OFF
	DO WHILE !EOF() AND ;
	    m.empbase   = cbcomiss.empresa AND ;
		m.dt_fim   >= cbcomiss.data
			SELE itcomiss
			SET ORDER TO TAG data
			SEEK STR(cbcomiss.empresa,3)+;
				 DTOS(cbcomiss.data)+;
				 STR(cbcomiss.vendedor,4)
			DO WHILE !EOF() AND ;
					cbcomiss.empresa   = itcomiss.empresa AND ;
					cbcomiss.data      = itcomiss.data    AND ;
					cbcomiss.vendedor  = itcomiss.vendedor
					=REGLOCK()
					DELETE
					SKIP
			ENDDO
			SELE cbcomiss
			=REGLOCK()
			DELETE
			SKIP
	ENDDO
************************>
	SELE nota
    DO WHILE !EOF() AND nota.empresa = m.empbase AND nota.data <= m.dt_fim ;
    		AND LFsegue
		wp_msg = "Processado NF."+STR(nota.nota,7)+ " em "+ ;
				DTOC(nota.data)
		=UPtermo()

		IF  nota.operacao <> 'S' OR ;
			nota.ch_opera <> "1" OR ;
			nota.tipo = "ENT"    OR ;
			nota.tipo = "CMP"    OR ;
		    nota.status  <> 1
				SKIP
				LOOP
		ENDIF

	
		
		SELE itemmov
		SET NEAR ON
		SEEK STR(m.empbase,3)+"S"+STR(nota.nota,7)
		SET NEAR OFF
		DO WHILE !EOF() AND m.empbase = itemmov.empresa  ;
						AND nota.nota    = itemmov.nota
						

			*--------------------------------------------------------*
			*   Pode ocorrer que um item de uma REQUISICAO (SCA) de
			* mesmo numero da nota se misture com os itens da nota
			* propriamente dita. A condi┤фo abaixo evita o tratamento
			* destes registros
			*--------------------------------------------------------*
			IF nota.tipo    <> itemmov.tipo
				SKIP
				LOOP
			ENDIF


			LNserv    = 1
			m.vinculo = 1 		    && INDICA O RESPONSAVEL PELA NOTA
			DO WHILE LNserv < 13    && INCLUI OS FIXOS
				LSserv = ALLTRIM(STR(LNserv,2))
				IF nota.serv_&LSserv = 0
					LNserv = LNserv + 1
					LOOP
				ENDIF
				m.servidor = nota.serv_&LSserv

****VERIFICA SE O CLIENTES ESTA VINCULADO A VENDEDOR INDEPENDENTE DO PEDIDO
***  se estiver vinculado a comissao e repassada para vendedor cadastrado
**** com cliente

				IF LNserv = 1 AND nota.favorecido <> 0
					SELE clientes
					SEEK  nota.favorecido
					IF FOUND() AND clientes.vendedor <> 0
						m.servidor = clientes.vendedor
					ENDIF
				ENDIF

***-------> buscar o nivel do usuario
				SELE usuario
				SEEK m.servidor
				IF !FOUND()			
					wp_msg = ;
						"Cadastre Usuario Codigo = "+STR(m.servidor,4)+;
						". NF "+STR(itemmov.nota,7)+ ".   <ENTER> "
					=UPbeeps(.F.,wp_msg)
					LNserv = LNserv + 1
					LOOP
				ELSE
					m.nivel = usuario.nivel_com
				ENDIF

**-------> MONTANDO DADOS PADROES NO LANCAMENTO DE COMISSAO

				m.empresa = itemmov.empresa
				m.data    = itemmov.data
				m.hora    = itemmov.hora
				m.tipo    = itemmov.tipo
				m.nota    = itemmov.nota
				m.ordem   = itemmov.ordem
				m.codigo  = itemmov.codigo
		
				IF itemmov.movestq = "S"
					m.qtde    = itemmov.qtde
				ELSE
					m.qtde    = 0
				ENDIF

				m.classifica = itemmov.classifica
				m.motivo    = 1		&& 1 => comissao normal sobre venda
				m.vendedor  = m.servidor
				m.descricao = itemmov.descricao
****
			    ENDIF
				*-------------------------------------------------------*
				=W_DEFPROC("PRECO.SPR")
				=PRtabvigor(itemmov.data,LNtabvgr,LSserievgr)
				*-------------------------------------------------------*
				SELE preco
				SET ORDER TO TAG tabela
				SEEK STR(empresa.emptab,3)+STR(LNtabvgr,3)+;
						LSserievgr+m.codigo
				IF !FOUND() OR EMPTY(alltrim(preco.clas_cms))
					wp_msg = 'Prod. nao Classificado na tab de comissao ' ;
							 +m.codigo+' NF.'+STR(m.nota,7)	
					=UPbeeps(.F.,wp_msg)
					m.clas_cms= ""
				ELSE
					m.clas_cms= preco.clas_cms
				ENDIF
				**********************************************************
				*  DIRECIONA TAB DE COMS CONFORME A DATA DE MOVIMENTO    *
				**********************************************************



				*---------------------------------------------------*
				* REGRA ATE 15/04/2006
				*       1) Determinar Preco de custo e preco de tabela
				*     em casos como PECAS E ACESSORIOS exceto para
				*     PROTETORES e AMORTECEDORES
				*       2) Determinar Preco de custo e preco de tabela
				*     em casos como	 FILTROS E LUBRIFICANTES
				*---------------------------------------------------*
				* REGRA APOS 15/04/2006
				*       1) Determinar Preco de custo e preco de tabela
				*     em casos como PECAS E ACESSORIOS exceto para
				*     PROTETORES e AMORTECEDORES
				*       2) Determinar Preco de custo e preco de tabela
				*     em casos como	 FILTROS E LUBRIFICANTES
				*---------------------------------------------------*

				LNprcCusto  = 0
				LNprcTabela = 0


				DO CASE
					CASE itemmov.data <= {15.04.2006}
						IF ( LEFT(itemmov.classifica,2) = "04"    AND ;
						     LEFT(itemmov.classifica,5) <> "04042" AND ;
					    	 LEFT(itemmov.classifica,5) <> "04044") ;
						   OR ;
						    (LEFT(itemmov.classifica,5) = "05054")
							IF itemmov.sld_estq = 0
							   LNprcCusto = itemmov.vlr_estq * itemmov.qtde
							ELSE
							   LNprcCusto = ;
							    (itemmov.vlr_estq / itemmov.sld_estq) * ;
						    	 itemmov.qtde
							ENDIF
							LNprcCusto = LNprcCusto / 0.75  && 25% margem
						ENDIF
					OTHERWISE
						IF ( LEFT(itemmov.classifica,2) = "04"    AND ;
						     LEFT(itemmov.classifica,5) <> "04042") ;
						   OR ;
						    (LEFT(itemmov.classifica,5) = "05054")
							IF itemmov.sld_estq = 0
							   LNprcCusto = itemmov.vlr_estq * itemmov.qtde
							ELSE
							   LNprcCusto = ;
							    (itemmov.vlr_estq / itemmov.sld_estq) * ;
						    	 itemmov.qtde
							ENDIF
							LNprcCusto = LNprcCusto / 0.75  && 25% margem
						ENDIF
				ENDCAS

				LNprcTabela = itemmov.preco * itemmov.qtde
				*---------------------------------------------------*
				*---------------------------------------------------*


				*---------------------------------------------------*
				*   -Determina o valor autorizado ao servidor nesta
				* opercao (referencia para calculo de superavit)
				*---------------------------------------------------*
				*   -Determina a origem do preco (tabela ou custo)
				*---------------------------------------------------*
				m.desc_max  = 0
				m.vlr_auto  = 0
				*---------------------------------------------------*
				=W_DEFPROC("PRECO.SPR")
				=PRdesconto((itemmov.empresa),(itemmov.codigo),;
						(itemmov.data),(nota.natu_cli),m.desc_max,0)
				*---------------------------------------------------*
				DO CASE
					CASE itemmov.data <= {15.04.2006}
						IF ( LEFT(itemmov.classifica,2) = "04"    AND ;
						     LEFT(itemmov.classifica,5) <> "04042" AND ;
						     LEFT(itemmov.classifica,5) <> "04044") ;
						   OR ;
						    (LEFT(itemmov.classifica,5) = "05054")
                    		*------------------------------------------*
		                    *     Se (m.vlr_auto) > que (valor custo+margem)
	    	                * entao prevalesce (m.vlr_auto)
    	    	            *------------------------------------------*
							m.vlr_auto  = LNprcTabela - ;
								  (m.desc_max * LNprcTabela) / 100
							IF m.vlr_auto < LNprcCusto
								m.vlr_auto  = LNprcCusto
   								LStpOrigemPreco = "CUSTO MEDIO"
							ELSE
	   							LStpOrigemPreco = "TABELA PRECO"
							ENDIF
						ELSE
							LStpOrigemPreco = "TABELA PRECO"
							m.vlr_auto  = LNprcTabela - ;
								  (m.desc_max * LNprcTabela) / 100
						ENDIF
					OTHERWISE
						IF ( LEFT(itemmov.classifica,2) = "04"    AND ;
						     LEFT(itemmov.classifica,5) <> "04042" ) ;
						   OR ;
						    (LEFT(itemmov.classifica,5) = "05054")
                    		*------------------------------------------*
		                    *     Se (m.vlr_auto) > que (valor custo+margem)
	    	                * entao prevalesce (m.vlr_auto)
    	    	            *------------------------------------------*
							m.vlr_auto  = LNprcTabela - ;
								  (m.desc_max * LNprcTabela) / 100
							IF m.vlr_auto < LNprcCusto
								m.vlr_auto  = LNprcCusto
   								LStpOrigemPreco = "CUSTO MEDIO"
							ELSE
	   							LStpOrigemPreco = "TABELA PRECO"
							ENDIF
						ELSE
							LStpOrigemPreco = "TABELA PRECO"
							m.vlr_auto  = LNprcTabela - ;
								  (m.desc_max * LNprcTabela) / 100
						ENDIF
				ENDCASE
				*---------------------------------------------------*
				*---------------------------------------------------*


				*----------------------------------------------------------*
				* 	Se o servidor receber comissao no produto em seguida
				* e verificado o DESCONTO MAXIMO  permitido em PROMOCAO OU
				* NORMAL
				*----------------------------------------------------------*
				*---------------------------------------------------*
				*   Determina a comissao paga ao servidor neste grupo
				* podendo ser uma comissao especifica para o nivel
				* do servidor ou comissao padrao (NIVEL = 0)
				*---------------------------------------------------*
				SELE grup_ven
				SEEK STR(m.servidor,4)+m.clas_cms
				IF FOUND()				&& SERVIDOR RECEBE COMISSAO
					SELE prod_cms
					SEEK STR(m.empbase,3)+STR(LNtabvgr,3)+;
						 LSserievgr +grup_ven.grupo + STR(m.nivel,2)
					IF !FOUND()
						SEEK STR(m.empbase,3)+STR(LNtabvgr,3)+;
							LSserievgr + grup_ven.grupo + STR(0,2)
					ENDIF			
					IF !FOUND()			
						wp_msg = "Falta Tabela de Comissao para USR: " + ;
								 STR(m.servidor,4)+" no produto "+;
							     grup_ven.grupo+' NF.'+STR(m.nota,7)	
						=UPbeeps(.F.,wp_msg)
						LNserv = LNserv + 1
						LOOP
					ENDIF
					* ver se tratar═ comissao de superavite
					IF prod_cms.com_supera = 0 AND m.vinculo <> 1
						m.vlr_auto  = 0
						m.desc_max  = 0
					ENDIF

					m.comissao  = prod_cms.comissao
				ELSE 	
					&& NAO PREVE COMISSAO NO ITEM
					m.desc_max  = 0
					m.comissao  = 0
				ENDIF
				**
				m.valor     = itemmov.vlrvenda  && vlr base da comissao
				m.desconto  = itemmov.desconto
				m.tabela    = LNtabvgr
				m.serie     = LSserievgr

				*-----------------------------------------------*
				***---> RETIRANDO ENCARGOS EMBUTIDOS NO VLR.VENDA
				*-----------------------------------------------*

				DO CASE
					CASE itemmov.data >= {16.01.2016}

						LNvlravista = itemmov.vlrvenda


					CASE itemmov.data <= {15.04.2006}
						IF itemmov.prazomedio = 0   && A VISTA
							LNvlravista = itemmov.vlrvenda
						ELSE		&& A PRAZO	
							m.taxa = ROUND((empresa.juromes / 30) * ;
							 itemmov.prazomedio,2)

							LNvlravista = itemmov.vlrvenda ;
								/(1+(m.taxa / 100))
						ENDIF
					OTHERWISE
					
						*=>  nao deflacionar qdo prazo medio < 46dias
						IF itemmov.prazomedio < 46   && A VISTA
							LNvlravista = itemmov.vlrvenda
						ELSE		&& A PRAZO	
							m.taxa = ROUND((empresa.juromes / 30) * ;
							 itemmov.prazomedio,2)
								LNvlravista = itemmov.vlrvenda ;
								/(1+(m.taxa / 100))
						ENDIF
				ENDCASE

				m.vlr_avista = LNvlravista

***************************************************************************
*******
*******  Registra a comissao ou o valor sem comissao para o responsavel
*******  de vinculo 1 para constar o faturamento
*******				IF (m.valor <> 0 AND m.comissao <> 0) ;
*******					OR 	m.vinculo = 1 && REGISTRAR MESMO P/ CONSTAR. FAT
***************************************************************************
*******
*******			Registra quando :
*******				VINCULO = 1	=>	Indepedente de Receber Comissao de Forma
*******								a constar no faturamento
*******				FOUND("GRUP_VEN")	=> Mesmo com a comissao = 0 o reg.
*******								indicara todos servicos e vandas realiza
*******								com o usuario
***************************************************************************
				IF m.vinculo = 1 OR FOUND("GRUP_VEN")
					SELE itcomiss
					SET ORDER TO TAG movimento
					SEEK STR(m.empbase,3)+STR(m.vendedor,4)+;
						 DTOS(m.data)+m.codigo+m.hora+m.tipo+;
						 STR(m.nota,7)+STR(m.ordem,2)+STR(m.motivo,1)
					IF FOUND()
				    	=REGLOCK()
			  			GATHER  MEMVAR MEMO
				    ELSE
						=edithand('SAVE')
				    ENDIF
				ENDIF

*************  >>>>>> CALCULO DE COMISSAO DE SUPERAVIT <<<<<<
*********
*---- CONDICAO ALTERADA PARA GERAR A BASE DE SUPERAVIT PARA VINCULO 1
*	  SE HOUVER VALOR DE SUPERAVIT E MESMO QUE
*     NAO ESTEJA PREVISTA COMISSAO DE SUPERAVIT
*				IF m.valor <> 0	 AND m.comissao <> 0 ;
*					AND prod_cms.com_supera > 0
********************************************************************						

				IF m.vinculo = 1 OR ;
				   (m.valor <> 0 AND m.comissao <> 0 ;
					AND prod_cms.com_supera > 0)


					*-----------------------------------------------*
					***---> APLICANDO O DESC. AUTO NO VALOR REAL
					*-----------------------------------------------*
					*    Se o a base for o custo => nao aplicar
					* descontos
					*-----------------------------------------------*

					IF LStpOrigemPreco = "TABELA PRECO"
						LNminavista = LNprcTabela - ;
								(m.desc_max * LNprcTabela) / 100
					ELSE
						LNminavista = LNprcCusto
					ENDIF

					*-----------> APURANDO O SUPERAVIT <------------*

					LNsuperavit = LNvlravista - LNminavista

					*-------> GRAVANDO COMISSAO SUPERAVIT <---------*

					IF LNsuperavit > 0
						m.motivo    = 2	&& 2 => comissao super  sobre venda
						m.valor     = LNsuperavit  && valor base da comissao
						m.comissao  = prod_cms.com_supera
                        m.TpOrigPreco = LStpOrigemPreco

						IF LStpOrigemPreco = "TABELA PRECO"
							m.preco = LNprcTabela
						ELSE
							m.preco = LNprcCusto
						ENDIF

						m.vlr_avista = LNvlravista

						SELE itcomiss
						SET ORDER TO TAG movimento
						SEEK STR(m.empbase,3)+STR(m.vendedor,4)+;
							 DTOS(m.data)+m.codigo+m.hora+m.tipo+;
							 STR(m.nota,7)+STR(m.ordem,2)+STR(m.motivo,1)
						IF FOUND()
					    	=REGLOCK()
		  					GATHER  MEMVAR MEMO
			    		ELSE
							=edithand('SAVE')
				    	ENDIF
					ENDIF
				ENDIF             && fim verif. se tem comissao

				LNserv = LNserv + 1
				m.vinculo = 2		&& INDICA QUE O RESPONSAVEL JA FOI REG.
			ENDDO
			SELE itemmov
			SKIP
		ENDDO
		SELE nota
		SKIP
	ENDDO
************
	DO RELFIM.PRG          && FIM VAR P/ TERMOMETRO
	WAIT WINDOW "Aguarde. Gerando Capas dos Lancamentos " NOWAIT
***---> gerando a capa de lancamento de comissoes
	SELE cbcomiss
	SET ORDER TO TAG vendedor

	SELE itcomiss
	SET ORDER TO TAG data
	SET NEAR ON
	SEEK STR(m.empbase,3)+DTOS(m.dt_inicio)
	SET NEAR OFF

	LNtotal = 0	&& valor da comissao no dia
	LQemp   = itcomiss.empresa
	LQdata  = itcomiss.data
	LQvend  = itcomiss.vendedor
	DO WHILE !EOF() AND ;
			  LQemp = itcomiss.empresa AND m.dt_fim >= itcomiss.data
		wp_msg = " Gerando Capas dos Lancamentos "+DTOS(LQdata)+;
				" Vend: "+STR(LQvend,4)
	    WAIT WINDOW wp_msg NOWAIT
		LNtotal = LNtotal + (itcomiss.valor * itcomiss.comissao) / 100
		SKIP
		IF 	LQdata  <> itcomiss.data OR LQvend  <> itcomiss.vendedor ;
			OR LQemp <> itcomiss.empresa
			m.empresa  = LQemp
			m.vendedor = LQvend
			m.data     = LQdata
			m.valor    = LNtotal
			SELE cbcomiss
			SEEK STR(m.empresa,3)+STR(m.vendedor,4)+DTOS(m.data)
			IF FOUND()
		    	=REGLOCK()
  				GATHER  MEMVAR MEMO
	    	ELSE
				=edithand('SAVE')
		    ENDIF
			SELE itcomiss
			LQdata  = itcomiss.data
			LQvend  = itcomiss.vendedor
			LNtotal = 0	&& valor da comissao no dia
		ENDIF
	ENDDO
**************************>>> RESUMO POR CFO
*-----------------------------
	SET RELATION TO
	SHOW GET m.imp_btn DISABLE

RETURN

*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4JP0WKC3A           m.imp_btn VALID                    ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC606,     Record Number:   49   ╨
*       ╨ Variable:            m.imp_btn                          ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      8                                  ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _4jp0wkc3a     &&  m.imp_btn VALID
#REGION 1
PRIVATE LNtabvgr, LSserievgr
PRIVATE LNprcCusto    && Preco de Custo como  base para superavite
PRIVATE LNprcTabela   && Preco de Tabela como  base para superavite


	LNprcCusto  = 0
	LNprcTabela = 0

	LNtabvgr    = 0
	LSserievgr	= ""
	SELE nota
	SET ORDER TO TAG data
	SET NEAR ON
	SEEK STR(m.empbase,3)+DTOS(m.dt_inicio)
	SET NEAR OFF
	IF EOF() OR nota.empresa <> m.empbase OR nota.data > m.dt_fim
 		WAIT WINDOW "Nao Foram encotrados dados para impessao."
		UNLOCK
 		RETURN
 	ENDIF		
*******************	
*******************
*---->   (INICIALIZACAO DO CONTROLE DE STATUS IMPRESSAO)
*******************	
	DO RELINIC.PRG          && INICIA VAR P/ TERMOMETRO
	wp_msg = "Processado Comissoes......."
	LFsegue = .t.
	LNregistro = RECNO()
	LNimpressao = 0
    COUNT   WHILE nota.empresa = m.empbase AND ;
    			  nota.data <= m.dt_fim TO LNimpressao
	LNimpressos = 0
	GO LNregistro
*******************
*---->   (COMPLETADO PREPARACAO DO CONTROLE DE STATUS IMPRESSAO)
*******************	
*******************

	SELECT empresa
	SET ORDER TO TAG empresa
	SEEK m.empbase

	SELECT  clientes
	SET ORDER TO TAG cliente

  	SELECT  cadtab
	SET ORDER TO TAG tabela
***	SEEK STR(m.tbbase,3)+m.sbase  && SUBST. POR LOCALISACAO DINAMICA NA DATA

	SELE prod_cms
	SET ORDER TO TAG tabela

	SELE funcao
	SET ORDER TO TAG nivel

	SELE grup_cms
	SET ORDER TO TAG grupo

	SELE usuario
	SET ORDER TO TAG usuario

	SELE grup_ven
	SET ORDER TO TAG grupo_vend

	SELE preco
	SET ORDER TO TAG tabela

	SELE itemmov
	SET ORDER TO TAG  itensnota

************************>
***------> pesquisa e elimina lancamentos anteriores
	SELE cbcomiss
	SET ORDER TO TAG data
	SET NEAR ON
	SEEK STR(m.empbase,3)+DTOS(m.dt_inicio)		
	SET NEAR OFF
	DO WHILE !EOF() AND ;
	    m.empbase   = cbcomiss.empresa AND ;
		m.dt_fim   >= cbcomiss.data
			SELE itcomiss
			SET ORDER TO TAG data
			SEEK STR(cbcomiss.empresa,3)+;
				 DTOS(cbcomiss.data)+;
				 STR(cbcomiss.vendedor,4)
			DO WHILE !EOF() AND ;
					cbcomiss.empresa   = itcomiss.empresa AND ;
					cbcomiss.data      = itcomiss.data    AND ;
					cbcomiss.vendedor  = itcomiss.vendedor
					=REGLOCK()
					DELETE
					SKIP
			ENDDO
			SELE cbcomiss
			=REGLOCK()
			DELETE
			SKIP
	ENDDO
************************>
	SELE nota
    DO WHILE !EOF() AND nota.empresa = m.empbase AND nota.data <= m.dt_fim ;
    		AND LFsegue
		wp_msg = "Processado NF."+STR(nota.nota,7)+ " em "+ ;
				DTOC(nota.data)
		=UPtermo()
		IF  nota.operacao <> 'S' OR ;
			nota.ch_opera <> "1" OR ;
			nota.tipo = "ENT"    OR ;
			nota.tipo = "CMP"    OR ;
		    nota.status  <> 1
				SKIP
				LOOP
		ENDIF

	
		
		SELE itemmov
		SET NEAR ON
		SEEK STR(m.empbase,3)+"S"+STR(nota.nota,7)
		SET NEAR OFF
		DO WHILE !EOF() AND m.empbase = itemmov.empresa  ;
						AND nota.nota    = itemmov.nota
						

			*--------------------------------------------------------*
			*   Pode ocorrer que um item de uma REQUISICAO (SCA) de
			* mesmo numero da nota se misture com os itens da nota
			* propriamente dita. A condi┤фo abaixo evita o tratamento
			* destes registros
			*--------------------------------------------------------*
			IF nota.tipo    <> itemmov.tipo
				SKIP
				LOOP
			ENDIF


			LNserv    = 1
			m.vinculo = 1 		    && INDICA O RESPONSAVEL PELA NOTA
			DO WHILE LNserv < 13    && INCLUI OS FIXOS
				LSserv = ALLTRIM(STR(LNserv,2))
				IF nota.serv_&LSserv = 0
					LNserv = LNserv + 1
					LOOP
				ENDIF
				m.servidor = nota.serv_&LSserv

****VERIFICA SE O CLIENTES ESTA VINCULADO A VENDEDOR INDEPENDENTE DO PEDIDO
***  se estiver vinculado a comissao e repassada para vendedor cadastrado
**** com cliente

				IF LNserv = 1 AND nota.favorecido <> 0
					SELE clientes
					SEEK  nota.favorecido
					IF FOUND() AND clientes.vendedor <> 0
						m.servidor = clientes.vendedor
					ENDIF
				ENDIF

***-------> buscar o nivel do usuario
				SELE usuario
				SEEK m.servidor
				IF !FOUND()			
					wp_msg = ;
						"Cadastre Usuario Codigo = "+STR(m.servidor,4)+;
						". NF "+STR(itemmov.nota,7)+ ".   <ENTER> "
					=UPbeeps(.F.,wp_msg)
					LNserv = LNserv + 1
					LOOP
				ELSE
					m.nivel = usuario.nivel_com
				ENDIF

**-------> MONTANDO DADOS PADROES NO LANCAMENTO DE COMISSAO

				m.empresa = itemmov.empresa
				m.data    = itemmov.data
				m.hora    = itemmov.hora
				m.tipo    = itemmov.tipo
				m.nota    = itemmov.nota
				m.ordem   = itemmov.ordem
				m.codigo  = itemmov.codigo
		
				IF itemmov.movestq = "S"
					m.qtde    = itemmov.qtde
				ELSE
					m.qtde    = 0
				ENDIF

				m.classifica = itemmov.classifica
				m.motivo    = 1		&& 1 => comissao normal sobre venda
				m.vendedor  = m.servidor
				m.descricao = itemmov.descricao
****
				*-------------------------------------------------------*
				=W_DEFPROC("PRECO.SPR")
				=PRtabvigor(itemmov.data,LNtabvgr,LSserievgr)
				*-------------------------------------------------------*
				SELE preco
				SET ORDER TO TAG tabela
				SEEK STR(empresa.emptab,3)+STR(LNtabvgr,3)+;
						LSserievgr+m.codigo
				IF !FOUND() OR EMPTY(alltrim(preco.clas_cms))
					wp_msg = 'Prod. nao Classificado na tab de comissao ' ;
							 +m.codigo+' NF.'+STR(m.nota,7)	
					=UPbeeps(.F.,wp_msg)
					m.clas_cms= ""
				ELSE
					m.clas_cms= preco.clas_cms
				ENDIF
				**********************************************************
				*  DIRECIONA TAB DE COMS CONFORME A DATA DE MOVIMENTO    *
				**********************************************************

				*---------------------------------------------------*
				*   Determina o valor autorizado ao servidor nesta
				* opercao (referencia para calculo de superavit)
				*---------------------------------------------------*

				*---------------------------------------------------*
				* Calcular vlr a vista pelo custo medio para PECAS E
				* ACESSORIOS exceto para PROTETORES e AMORTECEDORES
				*---------------------------------------------------*

				LNprcCusto  = 0
				LNprcTabela = 0


				IF LEFT(itemmov.classifica,2) = "04"        AND ;
				   LEFT(itemmov.classifica,5) <> "04042"	AND ;
				   LEFT(itemmov.classifica,5) <> "04044"	
					LNprcCusto = itemmov.preco * itemmov.qtde
					IF itemmov.sld_estq = 0
					   LNprcCusto = itemmov.vlr_estq * itemmov.qtde
					ELSE
					   LNprcCusto = ;
					    (itemmov.vlr_estq / itemmov.sld_estq) * itemmov.qtde
					ENDIF
					LNprcCusto = LNprcCusto / 0.75  && 25% margem
				ENDIF
				

				LNprcTabela = itemmov.preco * itemmov.qtde


				m.desc_max  = 0
				m.vlr_auto  = 0
				*---------------------------------------------------*
				=W_DEFPROC("PRECO.SPR")
				=PRdesconto((itemmov.empresa),(itemmov.codigo),;
						(itemmov.data),(nota.natu_cli),m.desc_max,0)
				*---------------------------------------------------*
				IF LEFT(itemmov.classifica,2) = "04"        AND ;
				   LEFT(itemmov.classifica,5) <> "04042"	AND ;
				   LEFT(itemmov.classifica,5) <> "04044"	
                    *-------------------------------------------------*
                    *     Se (m.vlr_auto) > que (valor custo+margem)
                    * entao prevalesce (m.vlr_auto)
                    *-------------------------------------------------*
					m.vlr_auto  = LNprcTabela - ;
						  (m.desc_max * LNprcTabela) / 100
					IF m.vlr_auto < LNprcCusto
						m.vlr_auto  = LNprcCusto
						LNminavista = LNprcCusto
					ELSE
						LNminavista = LNprcTabela
					ENDIF

				ELSE
					LNminavista = LNprcTabela
					m.vlr_auto  = LNminavista - ;
						  (m.desc_max * LNminavista) / 100
				ENDIF
				*---------------------------------------------------*

				*----------------------------------------------------------*
				* 	Se o servidor receber comissao no produto em seguida
				* e verificado o DESCONTO MAXIMO  permitido em PROMOCAO OU
				* NORMAL
				*----------------------------------------------------------*
				*---------------------------------------------------*
				*   Determina a comissao paga ao servidor neste grupo
				* podendo ser uma comissao especifica para o nivel
				* do servidor ou comissao padrao (NIVEL = 0)
				*---------------------------------------------------*
				SELE grup_ven
				SEEK STR(m.servidor,4)+m.clas_cms
				IF FOUND()				&& SERVIDOR RECEBE COMISSAO
					SELE prod_cms
					SEEK STR(m.empbase,3)+STR(LNtabvgr,3)+;
						 LSserievgr +grup_ven.grupo + STR(m.nivel,2)
					IF !FOUND()
						SEEK STR(m.empbase,3)+STR(LNtabvgr,3)+;
							LSserievgr + grup_ven.grupo + STR(0,2)
					ENDIF			
					IF !FOUND()			
						wp_msg = "Falta Tabela de Comissao para USR: " + ;
								 STR(m.servidor,4)+" no produto "+;
							     grup_ven.grupo+' NF.'+STR(m.nota,7)	
						=UPbeeps(.F.,wp_msg)
						LNserv = LNserv + 1
						LOOP
					ENDIF
					* ver se tratar═ comissao de superavite
					IF prod_cms.com_supera = 0 AND m.vinculo <> 1
						m.vlr_auto  = 0
						m.desc_max  = 0
					ENDIF

					m.comissao  = prod_cms.comissao
				ELSE 	
					&& NAO PREVE COMISSAO NO ITEM
					m.desc_max  = 0
					m.comissao  = 0
				ENDIF
				**
				m.valor     = itemmov.vlrvenda  && vlr base da comissao
				m.desconto  = itemmov.desconto
				m.tabela    = LNtabvgr
				m.serie     = LSserievgr
***************************************************************************
*******
*******  Registra a comissao ou o valor sem comissao para o responsavel
*******  de vinculo 1 para constar o faturamento
*******				IF (m.valor <> 0 AND m.comissao <> 0) ;
*******					OR 	m.vinculo = 1 && REGISTRAR MESMO P/ CONSTAR. FAT
***************************************************************************
*******
*******			Registra quando :
*******				VINCULO = 1	=>	Indepedente de Receber Comissao de Forma
*******								a constar no faturamento
*******				FOUND("GRUP_VEN")	=> Mesmo com a comissao = 0 o reg.
*******								indicara todos servicos e vandas realiza
*******								com o usuario
***************************************************************************
				IF m.vinculo = 1 OR FOUND("GRUP_VEN")
					SELE itcomiss
					SET ORDER TO TAG movimento
					SEEK STR(m.empbase,3)+STR(m.vendedor,4)+;
						 DTOS(m.data)+m.codigo+m.hora+m.tipo+;
						 STR(m.nota,7)+STR(m.ordem,2)+STR(m.motivo,1)
					IF FOUND()
				    	=REGLOCK()
			  			GATHER  MEMVAR MEMO
				    ELSE
						=edithand('SAVE')
				    ENDIF
				ENDIF

*************  >>>>>> CALCULO DE COMISSAO DE SUPERAVIT <<<<<<
*********
*---- CONDICAO ALTERADA PARA GERAR A BASE DE SUPERAVIT PARA VINCULO 1
*	  SE HOUVER VALOR DE SUPERAVIT E MESMO QUE
*     NAO ESTEJA PREVISTA COMISSAO DE SUPERAVIT
*				IF m.valor <> 0	 AND m.comissao <> 0 ;
*					AND prod_cms.com_supera > 0
********************************************************************						

				IF m.vinculo = 1 OR ;
				   (m.valor <> 0 AND m.comissao <> 0 ;
					AND prod_cms.com_supera > 0)

					***---> RETIRANDO ENCARGOS EMBUTIDOS NO VLR.VENDA
					IF itemmov.prazomedio = 0   && A VISTA
						LNvlravista = itemmov.vlrvenda
					ELSE						&& A PRAZO	

						m.taxa = ROUND((empresa.juromes / 30) * ;
								 itemmov.prazomedio,2)
						LNvlravista = itemmov.vlrvenda ;
									/(1+(m.taxa / 100))
					ENDIF

					***---> APLICANDO O DESC. AUTO NO VALOR REAL

				    IF LEFT(itemmov.classifica,2) = "04"        AND ;
				   		LEFT(itemmov.classifica,5) <> "04042"	AND ;
				   		LEFT(itemmov.classifica,5) <> "04044"	
						*-----------------------------------------------*
						*    Se o a base for o custo => nao aplicar
						* descontos
						*-----------------------------------------------*
						IF LNminavista = LNprcTabela
							LNminavista = LNminavista - ;
								(m.desc_max * LNminavista) / 100
						ELSE				
							LNminavista = LNminavista
						ENDIF
					ELSE
						LNminavista = LNminavista - ;
							(m.desc_max * LNminavista) / 100
					ENDIF
					***---> APURANDO O SUPERAVIT

					LNsuperavit = LNvlravista - LNminavista

					**-------> GRAVANDO COMISSAO SUPERAVIT

					IF LNsuperavit > 0
						m.motivo    = 2	&& 2 => comissao super  sobre venda
						m.valor     = LNsuperavit  && valor base da comissao
						m.comissao  = prod_cms.com_supera

						SELE itcomiss
						SET ORDER TO TAG movimento
						SEEK STR(m.empbase,3)+STR(m.vendedor,4)+;
							 DTOS(m.data)+m.codigo+m.hora+m.tipo+;
							 STR(m.nota,7)+STR(m.ordem,2)+STR(m.motivo,1)
						IF FOUND()
					    	=REGLOCK()
		  					GATHER  MEMVAR MEMO
			    		ELSE
							=edithand('SAVE')
				    	ENDIF
					ENDIF
				ENDIF             && fim verif. se tem comissao

				LNserv = LNserv + 1
				m.vinculo = 2		&& INDICA QUE O RESPONSAVEL JA FOI REG.
			ENDDO
			SELE itemmov
			SKIP
		ENDDO
		SELE nota
		SKIP
	ENDDO
************
	DO RELFIM.PRG          && FIM VAR P/ TERMOMETRO
	WAIT WINDOW "Aguarde. Gerando Capas dos Lancamentos " NOWAIT
***---> gerando a capa de lancamento de comissoes
	SELE cbcomiss
	SET ORDER TO TAG vendedor

	SELE itcomiss
	SET ORDER TO TAG data
	SET NEAR ON
	SEEK STR(m.empbase,3)+DTOS(m.dt_inicio)
	SET NEAR OFF

	LNtotal = 0	&& valor da comissao no dia
	LQemp   = itcomiss.empresa
	LQdata  = itcomiss.data
	LQvend  = itcomiss.vendedor
	DO WHILE !EOF() AND ;
			  LQemp = itcomiss.empresa AND m.dt_fim >= itcomiss.data
		wp_msg = " Gerando Capas dos Lancamentos "+DTOS(LQdata)+;
				" Vend: "+STR(LQvend,4)
	    WAIT WINDOW wp_msg NOWAIT
		LNtotal = LNtotal + (itcomiss.valor * itcomiss.comissao) / 100
		SKIP
		IF 	LQdata  <> itcomiss.data OR LQvend  <> itcomiss.vendedor ;
			OR LQemp <> itcomiss.empresa
			m.empresa  = LQemp
			m.vendedor = LQvend
			m.data     = LQdata
			m.valor    = LNtotal
			SELE cbcomiss
			SEEK STR(m.empresa,3)+STR(m.vendedor,4)+DTOS(m.data)
			IF FOUND()
		    	=REGLOCK()
  				GATHER  MEMVAR MEMO
	    	ELSE
				=edithand('SAVE')
		    ENDIF
			SELE itcomiss
			LQdata  = itcomiss.data
			LQvend  = itcomiss.vendedor
			LNtotal = 0	&& valor da comissao no dia
		ENDIF
	ENDDO
**************************>>> RESUMO POR CFO
*-----------------------------
	SET RELATION TO
	SHOW GET m.imp_btn DISABLE

