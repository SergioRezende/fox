*       ЦДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДД·
*       є                                                         є
*       є 03/19/09             SES1100.SPR               14:47:54 є
*       є                                                         є
*       ЗДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДД¶
*       є                                                         є
*       є Author's Name                                           є
*       є                                                         є
*       є Copyright (c) 2009 Company Name                         є
*       є Address                                                 є
*       є City,     Zip                                           є
*       є                                                         є
*       є Description:                                            є
*       є This program was automatically generated by GENSCRN.    є
*       є                                                         є
*       УДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДЅ


#REGION 0
REGIONAL m.currarea, m.talkstat, m.compstat

IF SET("TALK") = "ON"
	SET TALK OFF
	m.talkstat = "ON"
ELSE
	m.talkstat = "OFF"
ENDIF
m.compstat = SET("COMPATIBLE")
SET COMPATIBLE FOXPLUS

*       ЦДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДД·
*       є                                                         є
*       є                MS-DOS Window definitions                є
*       є                                                         є
*       УДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДЅ
*

IF NOT WEXIST("ses1100") ;
	OR UPPER(WTITLE("SES1100")) == "SES1100.PJX" ;
	OR UPPER(WTITLE("SES1100")) == "SES1100.SCX" ;
	OR UPPER(WTITLE("SES1100")) == "SES1100.MNX" ;
	OR UPPER(WTITLE("SES1100")) == "SES1100.PRG" ;
	OR UPPER(WTITLE("SES1100")) == "SES1100.FRX" ;
	OR UPPER(WTITLE("SES1100")) == "SES1100.QPR"
	DEFINE WINDOW ses1100 ;
		FROM INT((SROW()-14)/2),INT((SCOL()-78)/2) ;
		TO INT((SROW()-14)/2)+13,INT((SCOL()-78)/2)+77 ;
		TITLE "[ Parametros para Relatorios de Envolvendo Estoque ]" ;
		FLOAT ;
		NOCLOSE ;
		SHADOW ;
		NOMINIMIZE ;
		NONE ;
		COLOR SCHEME 1
ENDIF


*       ЦДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДД·
*       є                                                         є
*       є          SES1100/MS-DOS Setup Code - SECTION 2          є
*       є                                                         є
*       УДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДЅ
*

#REGION 1
* 					[ INICIO CONTROLE AMBIENTAL ]				*
CLEAR TYPEAHEAD
PUSH KEY CLEAR		&& desabilita teclas de atalho def. anteriormente
ON KEY LABEL F1		DO HLP2000.SPR WITH  POPUP(),PROMPT(),PROGRAM(),;
							WONTOP(),VARREAD()
ON KEY LABEL END DO ULencerra
*---------------------------------------------------------------*

PRIVATE isediting
isediting = .t.
LFcheq_A	=	.f.
LFcheq_B	=	.f.
LFcheq_C	=	.f.

*       ЦДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДД·
*       є                                                         є
*       є              SES1100/MS-DOS Screen Layout               є
*       є                                                         є
*       УДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДЅ
*

#REGION 1
IF WVISIBLE("ses1100")
	ACTIVATE WINDOW ses1100 SAME
ELSE
	ACTIVATE WINDOW ses1100 NOSHOW
ENDIF
@ 0,0 TO 13,77 ;
	COLOR SCHEME 23
@ 13,1 TO 13,76 ;
	COLOR SCHEME 24
@ 13,77 SAY "Щ" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 1,77 TO 12,77 ;
	COLOR SCHEME 24
@ 0,77 SAY "ї" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 0,25 SAY "[ Relatorios Estoque ]" ;
	SIZE 1,22, 0
@ 13,68 SAY "[ses1100]" ;
	SIZE 1,9, 0 ;
	COLOR SCHEME 24
@ 2,7 GET LFcheq_A ;
	PICTURE "@*C \<A- Extrato Analitico de Movimentacao" ;
	SIZE 1,40 ;
	DEFAULT 0 ;
	WHEN isediting
@ 3,7 GET LFcheq_B ;
	PICTURE "@*C \<B- Extrato Analitico em Janela" ;
	SIZE 1,34 ;
	DEFAULT 0 ;
	WHEN isediting
@ 4,7 GET LFcheq_C ;
	PICTURE "@*C \<C- Extrato Sintetico de Movimentacao" ;
	SIZE 1,40 ;
	DEFAULT 0 ;
	WHEN isediting
@ 13,19 GET m.imp_btn ;
	PICTURE "@*HN \<Processar" ;
	SIZE 1,11,1 ;
	DEFAULT 1 ;
	WHEN isediting ;
	VALID _2lx0vpv9i()
@ 13,46 GET m.canc_btn ;
	PICTURE "@*HN \<Saida" ;
	SIZE 1,7,1 ;
	DEFAULT 1 ;
	WHEN isediting ;
	VALID _2lx0vpv9q()

IF NOT WVISIBLE("ses1100")
	ACTIVATE WINDOW ses1100
ENDIF

READ CYCLE ;
	ACTIVATE READACT() ;
	DEACTIVATE READDEAC()

RELEASE WINDOW ses1100

#REGION 0
IF m.talkstat = "ON"
	SET TALK ON
ENDIF
IF m.compstat = "ON"
	SET COMPATIBLE ON
ENDIF


*       ЦДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДД·
*       є                                                         є
*       є               SES1100/MS-DOS Cleanup Code               є
*       є                                                         є
*       УДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДЅ
*

#REGION 1
POP KEY 			&& reabilita teclas de atalho def. anteriormente
RETURN

*******************************************************************



*       ЦДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДД·
*       є                                                         є
*       є   SES1100/MS-DOS Supporting Procedures and Functions    є
*       є                                                         є
*       УДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДЅ
*

#REGION 1
PROCEDURE ULencerra
	CLEAR GETS
	CLEAR READ
	isediting = .f.
RETURN

PROCEDURE ESextrmovimentacao
	*------------------------------------------------------------*
	* CLASSIFICACAO:  [*****]   MODULO INDEPENDENTE				 *
	*------------------------------------------------------------*
	* OBJETIVO....: Imprimir extrato de produtos
	*------------------------------------------------------------*
	* COMENTARIO..: Este modulo processa informacoes sob a forma
	*       de extrato de produto para estoque subs-
	*------------------------------------------------------------*
	* OBS........ :
	*------------------------------------------------------------*
	* TABELAS....:
	*------------------------------------------------------------*
	* PARAMETROS..:
	*		LSrelatorio....: Nome do Formulario  de Relatorio
	*		LNemp..........: Empresa de referencia da movimentacao
	*		LDdtini........: Data Inicial para  extrato
	*		LDdtfim........: Data Final para  extrato
	*		LSkeyinicio....: Chave  do Registro de Produto inicial
	*		LSkeyfinal.....: Chave  do Registro de Produto final
	*		LSordem........: Ordenacao a ser dada aos Produtos
	*		LSfiltro.......: Condicao para processar registro grupo
	*		LFVerBrowse....: .t. = Visualisar em Browse
	*------------------------------------------------------------*
	* RETORNO.....:
	*------------------------------------------------------------*
	PARAMETERS 	LSrelatorio,LNemp,LDdtini,LDdtfim,LStag,LSkeyinicio,;
				LSkeyfinal,LSfiltro,LFVerBrowse
	=W_DEFPROC("rotinas.prg")
	*------------------------------------------------------------*
	PRIVATE LFgrupo,LFsaldo,LFitemmov,LFnota,LFnotaent,LSalias
	PRIVATE LSfornece
	PRIVATE LSarqtmp,LSaliastmp
	PRIVATE LFinterrompe			&& Interrupcao de processos

	LSalias			= ALIAS()
	LFgrupo 		= NetArq("grupo")
	LFsaldo			= NetArq("saldo")
	LFitemmov		= NetArq("itemmov")
	LFnota			= NetArq("nota")
	LFnotaent		= NetArq("notaent")
	LFfornece		= NetArq("fornece")

	IF (LFgrupo+LFsaldo+LFitemmov+LFnota+LFnotaent+LFfornece) > 100000 ;
										&& HOUVE FALHA DE ABERTURA
		=UP_fecha("grupo" ,LFgrupo)
		=UP_fecha("saldo" ,LFsaldo)
		=UP_fecha("itemmov" ,LFitemmov)
		=UP_fecha("nota" ,LFnota)
		=UP_fecha("notaent" ,LFnotaent)
		=UP_fecha("fornece" ,LFfornece)
		SELE &LSalias
		RETURN(1)
	ENDIF
	SELE grupo
	SET ORDER TO TAG &LStag
	SET NEAR ON
	SEEK LSkeyinicio
	SET NEAR OFF
	IF EOF() OR ULvlrchave(KEY()) > LSkeyfinal
		WAIT WINDOW "Nao Existem Dados Com Parametros Informados. <ENTER> "
		=UP_fecha("grupo" ,LFgrupo)
		=UP_fecha("saldo" ,LFsaldo)
		=UP_fecha("itemmov" ,LFitemmov)
		=UP_fecha("nota" ,LFnota)
		=UP_fecha("notaent" ,LFnotaent)
		=UP_fecha("fornece" ,LFfornece)
		SELE &LSalias
		RETURN(2)
	ENDIF

	DO RELINIC.PRG          && INICIA VAR P/ TERMOMETRO
	LNregistro 	= RECNO()
	*------------------------------------------------------------*
	*  INICIA GERACAO DE ARQUIVO TEMPORARIO
	*------------------------------------------------------------*
	LSarqtmp 	= "" 			&& EX: C:\TMP\TMP0001
	LSaliastmp 	= "TMP" 		&&     TMP001
	LSaliastmp = UPopentmp(wp_dirtmp,LSarqtmp,LSaliastmp,1)
	IF EMPTY(LSaliastmp)
		DO RELFIM.PRG          && FIM VAR P/ TERMOMETRO
		=UP_fecha("grupo" ,LFgrupo)
		=UP_fecha("saldo" ,LFsaldo)
		=UP_fecha("itemmov" ,LFitemmov)
		=UP_fecha("nota" ,LFnota)
		=UP_fecha("notaent" ,LFnotaent)
		=UP_fecha("fornece" ,LFfornece)
		SELE &LSalias
		RETURN(3)
 	ENDIF		
	SELE itemmov
	COPY STRU TO &LSarqtmp
	SELE 0
	USE &LSarqtmp	ALIAS Aliastmp	EXCLUSIVE	&& ALIAS FIXO P/ RELATORIO
	INDEX ON classifica TAG classifica
	
	WAIT WINDOW ;
		"AGUARDE. Gerando Arq. Temporario.<TECLADO> = Interrompe " NOWAIT
	SET SAFET OFF

	SELE itemmov
	SELE grupo
 	LFinterrompe =  .F.
 	DO WHILE !EOF() AND  !UPinterrompe(LFinterrompe) ;
 					AND  ULvlrchave(KEY()) <= LSkeyfinal
		SELE itemmov
		SET ORDER TO TAG movimento
		SET NEAR ON
		SEEK STR(LNemp,3)+grupo.codigo+DTOS(LDdtini)
		SET NEAR OFF
		DO WHILE !EOF() AND !UPinterrompe(LFinterrompe) ;
						AND itemmov.empresa	=	LNemp	;
						AND itemmov.codigo	=	grupo.codigo ;
						AND itemmov.data 	<= 	LDdtfim
			LSmsg = transf(grupo.codigo,masc_codi)+" - "+STR(RECNO(),6)
			WAIT WINDOW LSmsg+;
				" - AGUARDE... "+;
				"Use <TECLADO> = Interromper " NOWAIT
			*-------------------------------------------------------*
			SCATTER MEMVAR
			SELE Aliastmp
			=edithand('SAVE')
			SELE itemmov
			SKIP
		ENDDO
		SELE grupo
		SKIP
	ENDDO
	KEYBOARD CHR(4)		&& APAGANDO MENSSAGEM
	=INKEY(0)
	CLEAR TYPEAHEAD

	SELE Aliastmp
	IF  EOF() AND BOF() OR LFinterrompe
		DO RELFIM.PRG          && FIM VAR P/ TERMOMETRO
		=UP_fecha("Aliastmp"	,2)
		=UP_fecha("grupo" 		,LFgrupo)
		=UP_fecha("saldo" 		,LFsaldo)
		=UP_fecha("itemmov" 	,LFitemmov)
		=UP_fecha("nota" 		,LFnota)
		=UP_fecha("notaent" 	,LFnotaent)
		=UP_fecha("fornece" ,LFfornece)
		SELE &LSalias
		RETURN(0)
	ENDIF
	*------------------------------------------------------------*
	*   (INICIALIZACAO DO CONTROLE DE STATUS IMPRESSAO)
	*------------------------------------------------------------*
	SELE grupo
	LFsegue 	= .t.
	GO LNregistro
    COUNT TO LNimpressao &LSfiltro ;
    		WHILE !UPinterrompe(LFinterrompe) ;
    			  AND ULvlrchave(KEY()) <= LSkeyfinal
	LNimpressos = 0
	GO LNregistro
	*------------------------------------------------------------*
	*   (COMPLETADO PREPARACAO DO CONTROLE DE STATUS IMPRESSAO)
	*------------------------------------------------------------*
	LFsegue  	= .T.
	wp_arqname 	= ""

    LSrel 		= LSrelatorio  && RES1100 ou RES1100A
	SELE fornece
	SET ORDER TO TAG codigo
	SELE nota
	SET ORDER TO TAG nota
	SELE notaent
	SET ORDER TO TAG nota

	SELE Aliastmp
	SET RELATION   TO STR(EMPRESA,3)+STR(NOTA,7) INTO nota ADDITIVE
	SET RELATION   TO STR(EMPRESA,3)+STR(CODFORN,5)+;
				STR(NOTA,6)+SERIE+LEFT(TIPO,1) INTO notaent ADDITIVE

	SELE grupo
	SET RELATION 	TO  codforn	   INTO fornece	
	SET RELATION 	TO  classifica INTO Aliastmp ADDITIVE
	SET SKIP 		TO	Aliastmp
	*------------------------------------------------------------*
	IF  !LFinterrompe		&& NAO HOUVE INTERRUPCAO
		IF LFVerBrowse
			DO ULbrwExtrato WITH LSkeyinicio,LSkeyfinal,LSfiltro
		ENDIF
		IF LSrel <> "SO BROWSE"		&& FOI SOLICITADO RELATORIO
			IF EMPTY("LSfiltro")
				LSfiltro  = " FOR ULtem_mov(GRUPO.CLASSIFICA) "
			ELSE
				LSfiltro  = LSfiltro +" AND ULtem_mov(GRUPO.CLASSIFICA) "
			ENDIF
			LSorienta 	= ;
			" &LSfiltro WHILE ULvlrchave(KEY()) <= LSkeyfinal AND LFsegue "
			DO UPimpressao
		ENDIF
	ENDIF
	*------------------------------------------------------------*
	DO RELFIM.PRG          && FIM VAR P/ TERMOMETRO
	=UP_fecha("Aliastmp"	,2)
	=UP_fecha("grupo" 		,LFgrupo)
	=UP_fecha("saldo" 		,LFsaldo)
	=UP_fecha("itemmov" 	,LFitemmov)
	=UP_fecha("nota" 		,LFnota)
	=UP_fecha("notaent" 	,LFnotaent)
	=UP_fecha("fornece" ,LFfornece)
	SELE &LSalias
	*------------------------------------------------------------*
    SET PRINTER TO SET('PRINTER',1)
	SET RELATION TO
	SET POINT TO
	SET SEPARATOR  TO
RETURN(0)


FUNCTION ULvlrchave			&& RETORNAR O VALOR EQUIVALENTE A CHAVE
	PARAMETERS LSchave		&& KEY() COMPOSICAO DA CHAVE
RETURN( &LSchave )			&& VALOR DA CHAVE

FUNCTION ULtem_mov
	*------------------------------------------------------------*
	* CLASSIFICACAO:  []   MODULO ANEXO                      	 *
	*------------------------------------------------------------*
	* OBJETIVO....: Informa se produto tem Saldo ou movimento
	*------------------------------------------------------------*
	* COMENTARIO..: Caso o Produto nao tenha MOVIMENTO retorna .f.
	*				Permitindo a nao impressao do mesmo
	*------------------------------------------------------------*
	* OBS........ :
	*------------------------------------------------------------*
	* TABELAS....:
	*------------------------------------------------------------*
	* PARAMETROS..:
	*			LNclassifca....: Produto que se quer ver movimento
	*------------------------------------------------------------*
	* RETORNO.....:  .T. => TEM MOVIMENTO
	*                .F. => SEM MOVIMENTO
	*------------------------------------------------------------*
	PARAMETERS LSclassifica

	PRIVATE LSarea,LNreg,LStag
	LSarea	=	ALIAS()
	SELE Aliastmp
	IF EOF()			&& FINAL DO ARQ.
		SELE &LSarea
		RETURN(.F.)	
	ENDIF
	LStag	=	TAG()
	LNreg	= 	RECNO()
	SET ORDER TO TAG classifica	
	SET NEAR ON
	SEEK LSclassifica
	SET NEAR OFF
	IF  LSclassifica <>	Aliastmp.classifica
		SET ORDER TO  TAG &LStag	
		GO LNreg
		SELE &LSarea
		RETURN(.F.)	
	ENDIF
	SET ORDER TO  TAG &LStag	
	GO LNreg
	SELE &LSarea
RETURN(.T.)	


FUNCTION ULultvenda
	*------------------------------------------------------------*
	* CLASSIFICACAO:  []   MODULO ANEXO A SES1100, RES1100		 *
	*------------------------------------------------------------*
	* OBJETIVO....: Retornar valor da ULT VENDA
	*------------------------------------------------------------*
	* COMENTARIO..:
	*------------------------------------------------------------*
	* OBS........ :
	*------------------------------------------------------------*
	* TABELAS....:
	*------------------------------------------------------------*
	* PARAMETROS..:
	*		LNemp..........: Empresa da Pesquisa de movimento
	*		LDdtref........: Data referencia p/ ver ultima venda
	*		LNcodigo.......: Produto
	*		LNclassifca....: Produto que se quer a
	*						 Ultima Venda (QTDO EXISTE MOV ANTERIOR
	*						 1a Venda(QTDO NAO EXISTE MOV ANTERIOR)
	*		LNvlrVenda.....: Referencia para valor unitario da Ultima
	*						Venda
	*		LNvlr_ultent...: Algumas operacoes o valor a operar
	*						deve ser o valor referente a ultima
	*						venda. (QNDO NAO EXISTE MOVIMENTO ANTERIOR)
	*						Como esta operacao pode ser
	*						a 1a depois do saldo inicial, o valor
	*						da 1a venda e atribuido ao valor da
	*						ultima venda
	*------------------------------------------------------------*
	* RETORNO.....:   LNvlrultvenda
	*------------------------------------------------------------*
	PARAMETERS LSemp,LDdtref, LScodigo, LSclassifica,;
					 LNvlrultvenda

	PRIVATE LSarea,LNreg
	LNvlrultvenda	= 	0
	LSarea	=	ALIAS()

	SELE itemmov
	IF EOF()			&& FINAL DO ARQ.
		SELE &LSarea
		RETURN(LNvlrentrada)	
	ENDIF
	SET ORDER TO TAG movimento
	SET NEAR ON
	SEEK STR(LSemp,3)+LScodigo+DTOS(LDdtref)
	SET NEAR OFF
	SKIP -1
	DO WHILE !BOF() AND LSclassifica = 	itemmov.classifica
		IF LEFT(itemmov.operacao,1) = "S" ;
			AND itemmov.ch_opera $ "1" ;
			LNvlrultvenda = (itemmov.vlrvenda+itemmov.vlripi)/itemmov.qtde
			EXIT
		ENDIF
		SKIP -1
	ENDDO
	IF LNvlrultvenda > 0
		SELE &LSarea
		RETURN(LNvlrultvenda)	
	ENDIF
	**********************************************
	* COMO NAO ACHOU MOVIMENTO ANTERIOR
	* CONSIDERAR  A 1a VENDA DO PERIODO
	**********************************************
	SELE Aliastmp
	IF EOF()			&& FINAL DO ARQ.
		SELE &LSarea
		RETURN(LNvlrultvenda)	
	ENDIF
	LNreg	= 	RECNO()
	SET NEAR ON
	SEEK LSclassifica
	SET NEAR OFF
	DO WHILE !EOF() AND LSclassifica = 	Aliastmp.classifica
		IF LEFT(Aliastmp.operacao,1) = "S" ;
			AND Aliastmp.ch_opera $ "1" ;
			LNvlrultvenda =;
				 (Aliastmp.vlrvenda+Aliastmp.vlripi)/Aliastmp.qtde
			EXIT
		ENDIF
		SKIP
	ENDDO
	GO LNreg
	SELE &LSarea
RETURN(LNvlrultvenda)	



FUNCTION ULvlroperar
	*------------------------------------------------------------*
	* CLASSIFICACAO:  []   MODULO ANEXO A SES1100,RES1100		 *
	*------------------------------------------------------------*
	* OBJETIVO....: Retornar valores para operacao em relatorio
	*------------------------------------------------------------*
	* COMENTARIO..:
	*
	*------------------------------------------------------------*
	* OBS........ :
	*
	*
	*------------------------------------------------------------*
	* TABELAS....:
	*------------------------------------------------------------*
	* PARAMETROS..:
	*		LNemp.........: Empresa
	*		LDdtini.......: Data inicial do Periodo
	*		LSchamada.....: Qual o Ponto do Relatorio que Chamou
	*		LSvolta.......: Retorna qual deve ser a proxima CHAMADA
	*		LNSinal.......: -1 => Saida ; +1 => Entrada
	*		LNSaldoStoq...: Saldo de Estoque  no cal-
	*		LNVlr_Ipi.....: Valor Calculado para IPI
	*		LNAcm_Ipi.....: Valor Acumulado de Ipi no produto
	*		LNVlrUltVnda..:	Valor Na Ultima Venda
	*		LNCustoMedio..: Custo Medio
	*		LNQtde_Ope....: Qtde envolvida
	*		LNVlrOperado..: Valor na operacao [ em saidas por
	*					transferencia esse valor sera o da ultima
	*					venda
	*		LNAliq_Ipi....: Aliquota de Ipi
	*------------------------------------------------------------*
	* RETORNO.....:  POR REFERENCIA
	*------------------------------------------------------------*
	PARAMETERS	LNemp,LDdtini,LSchamada,LSvolta,LNSinal,LNSaldoStoq,;
				LNVlr_Ipi,LNAcm_Ipi,LNVlrUltVnda,LNCustoMedio,LNQtde_Ope,;
				LNVlrOperado,LNAliq_Ipi

		DO CASE
			CASE LSchamada = "ENCERRA CODIGO" && FORCA ENTRAR NA 1A
											  && CHAMDA DA LINHA DETALHE
				LSvolta = "QUEBRA CODIGO"   && PARA INICIALIZAR CODIGO
				LNAliq_Ipi	= 0

			CASE LSchamada = "QUEBRA CODIGO"
				*-----
				* Ativando Rotinas p/ Receber Ult Venda
				*-----
				=ULultvenda(LNemp,LDdtini,Aliastmp.codigo,;
							Aliastmp.classifica,LNVlrUltVnda)
				*-----
				* Capturar Saldo Inicial do Produto
				*-----
				=W_DEFPROC("SES00000.prg")+;
						ESsaldo(LNemp,grupo.codigo,grupo.classifica,;
								LDdtini-1,LNSaldoStoq,0)
				LSvolta 	= "LINHA DETALHE" 	&& PROXIMA CHAMADA
				LNAcm_Ipi  	= 0

			CASE LSchamada = "LINHA DETALHE"
				*-------------------------------------------------------*
				* DETERMINAR A ALIQUOTA DE IPI
				*  MOV. NAO REGISTRAVA ALIQUOTA ATE ??/??/?
				*-------------------------------------------------------*
				IF Aliastmp.aliq_ipi > 0	&& INFORMADA NO MOVIMENTO
					LNAliq_Ipi	  = Aliastmp.aliq_ipi
				ENDIF

				IF Aliastmp.vlripi > 0	AND LNAliq_Ipi <> Aliastmp.aliq_ipi
									&& CALC.PELO VLR DO IPI
					LNAliq_Ipi = INT(Aliastmp.vlripi*100/Aliastmp.vlrvenda)
				ENDIF

				IF LNAliq_Ipi = 0		&& ULT. CASO ALIQ. = 0 PEGA DO GRUPO
					LNAliq_Ipi	= Grupo.aliq_ipi
				ENDIF
		
				*-----------------------------------------------------*
				DO CASE
					CASE  LEFT(Aliastmp.operacao,1) = "S"		&& SAIDAS

						LNSaldoStoq    = LNSaldoStoq - Aliastmp.qtde
						LNQtde_Ope	   = Aliastmp.qtde * (-1)
						LNSinal		   = -1

						LNVlrOperado   = Aliastmp.vlrvenda+ Aliastmp.vlripi

						IF 	Aliastmp.ch_opera = "1"
							LNVlrUltVnda = LNVlrOperado / Aliastmp.qtde
							LNVlr_Ipi	 = LNVlrOperado *	LNAliq_Ipi/100
							LNAcm_Ipi    = LNAcm_Ipi - LNVlr_Ipi
						ENDIF
						IF 	Aliastmp.ch_opera = "2"
							*---------------------------------------*
							*  Caso o Peneu Tenha so Mov de Compra
							* e saidas por transf o (LNVlrUltVnda = 0)
							* entao assume o dobro do vlr da transf
							*--------------------------------------*
							IF  LNVlrUltVnda = 0
								LNVlrUltVnda = ;
									2 * (Aliastmp.vlrvenda / Aliastmp.qtde)
							ENDIF
							LNVlrOperado   =  LNVlrUltVnda * Aliastmp.qtde
							LNVlr_Ipi	   = LNVlrOperado * LNAliq_Ipi/100
							LNAcm_Ipi      = LNAcm_Ipi - LNVlr_Ipi
						ENDIF
					CASE  LEFT(Aliastmp.operacao,1) = "E"		&& ENTRADAS
						LNSaldoStoq    = LNSaldoStoq + Aliastmp.qtde
						LNQtde_Ope	   = Aliastmp.qtde * (1)
						LNSinal		   = 1
						LNVlrOperado   = Aliastmp.vlrvenda+ Aliastmp.vlripi			
						IF 	Aliastmp.ch_opera = "1"
							LNVlr_Ipi	=  LNVlrOperado * LNAliq_Ipi/100
							LNAcm_Ipi   =  LNAcm_Ipi + LNVlr_Ipi
						ENDIF
					CASE  LEFT(Aliastmp.operacao,1) = "R"		&& RESERVAS
						LNVlrOperado   = 0
						LNQtde_Ope	   = Aliastmp.qtde * (-1)
						LNSinal		   = -1
						LNVlr_Ipi		=  0
			ENDCASE
			LNCustoMedio =  0
			IF Aliastmp.sld_estq > 0
				LNCustoMedio =  Aliastmp.vlr_estq / Aliastmp.sld_estq
			ENDIF
		ENDCASE
	RETURN("")



PROCEDURE ULbrwExtrato
PARAMETERS LSkeyinicio,LSkeyfinal,LSfiltro

		DEFINE WINDOW wzlocate ;
			FROM INT((SROW()-9)/2),INT((SCOL()-77)/2) ;
			TO INT((SROW()-9)/2)+14,INT((SCOL()-77)/2)+76 ;
			TITLE "REGISTROS" ;
			FLOAT ;
	        GROW;
			CLOSE ;
			SHADOW ;
			MINIMIZE ;
	        ZOOM;
			SYSTEM ;
			COLOR SCHEME 10

		SET SYSMENU ON
		PUSH MENU _MSYSMENU
		SET SYSMENU TO _MWINDOW, _MWI_ZOOM,_MWI_MOVE, _MEDIT, _MED_FIND, ;
						_MED_FINDA
		HIDE MENU _MSYSMENU
		ON KEY LABEL F10    KEYBOARD "{CTRL-F10}"
		ON KEY LABEL "PGDN"
		ON KEY LABEL ESCAPE

		BROWSE  FIELDS ;
				GRUPO.DESCRICAO     :H="Descricao" :20 :R,;
				Aliastmp.DATA		:H="DATA" :R,;
				Aliastmp.HORA		:H="HORA"  :R,;
				Aliastmp.NOTA		:H="DOC" :R,;
				Aliastmp.OPERACAO 	:H="OPER" :R,;
				Aliastmp.TIPO	 	:H="TIP" :R,;
				FIELD1=ULdefSinQtd(Aliastmp.OPERACAO,Aliastmp.QTDE) ;
							    	:H="QTDE"	:P="@r ####9" :R,;
				Aliastmp.SLD_ESTQ  	:H="SALDO"	:P="@r ####9" :R,;
				Aliastmp.VLRVENDA	:H="R$.UNI"	:P="@r #,##9.99" :R, ;
				FIELD2=ULDefDest(Aliastmp.favorecido) :H="O/D"  :R,;
				GRUPO.CODIGO :P=MASC_CODI :R;
				&LSfiltro;
				KEY '&LSkeyinicio', '&LSkeyfinal' ;
				TITLE "[ MOVIMENTACAO DO PRODUTO ]";
				COLOR SCHEME 10 ;
				  NODELETE NOAPPEND NORMAL  NOEDIT;
				  &wp_timeout  WINDOW wzlocate
		POP MENU _MSYSMENU
		SET SYSMENU OFF
		_CUROBJ = 9
		RELEASE WINDOW wzlocate
RETURN

FUNCTION ULDefDest
	PARAMETERS LNfavorecido
RETURN(UPdadosemp(LNfavorecido,"SIGLA",.F.,"CGC"))
		
FUNCTION ULdefSinQtd	
*------------------------------------------------------------------*
*		Objetivo de Avalias a Operacao e Indicar o Sinal que QTDE
*  ASSUME + OU -
*------------------------------------------------------------------*		
PARAMETERS	LSoperacao,LNqtde
	PRIVATE LNQtRetorno
	DO CASE
		CASE LEFT(LSoperacao,1) = "S" 	&& OPERACAO DE SAIDA
			LNQtRetorno	= LNqtde * (-1)
		OTHERWISE
			LNQtRetorno	= LNqtde * (1)
	ENDCASE
RETURN(LNQtRetorno)


*       ЦДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДД·
*       є                                                         є
*       є _2LX0VPV9I           m.imp_btn VALID                    є
*       є                                                         є
*       є Function Origin:                                        є
*       є                                                         є
*       є From Platform:       MS-DOS                             є
*       є From Screen:         SES1100,     Record Number:   12   є
*       є Variable:            m.imp_btn                          є
*       є Called By:           VALID Clause                       є
*       є Object Type:         Push Button                        є
*       є Snippet Number:      1                                  є
*       є                                                         є
*       УДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДЅ
*
	*---------------------------------------------------------------*
	*	DEFINICOES DE USO ESPECIFICO DESTE PROGRAMA
	*---------------------------------------------------------------*
FUNCTION _2lx0vpv9i     &&  m.imp_btn VALID
#REGION 1
	PRIVATE LNempresa
	PRIVATE LStag
	PRIVATE LSkeyinicio,LSkeyfinal,LScontroles,LNpagina,LFmtvretorno
	PRIVATE LDdtinicio,LDdtfim
	
	*---------------------------------------------------------------*
	LNempresa 	 = wp_empresa
	LSkeyinicio  = ""
	LSkeyfinal   = ""    && CLASSIFIC. DE ENCERRA ALTERACAO
	LScontroles  = "     "  && CONTEM OS CODIGOS DE CONTROLE DE PRODUTO QUE
						&& DEVEM SER IMPRESSOS
	LNpagina	=  1
	LFmtvretorno=  "ABORTANDO"
	
	LStag 		=  "CLASSIFICA"
	LDdtinicio	=  	{}
	LDdtfim		=	{}

	do SCT1101.SPX WITH	LNempresa,LStag,LSkeyinicio,LSkeyfinal,;
			LDdtinicio,LDdtfim,LScontroles,LNpagina,LFmtvretorno

	IF LFmtvretorno = "NORMAL"
		WAIT WINDOW "Processo em Andamento...." NOWAIT
		IF LFcheq_A
			do ESextrmovimentacao ;
			 	WITH "RES1100",;
	 			LNempresa,LDdtinicio,LDdtfim,;
	 			LStag,LSkeyinicio,LSkeyfinal ,;
	 			" FOR grupo.cdg_tipo = 4 AND " +;
	 			" STR(grupo.tp_control,1) $ '&LScontroles'",LFcheq_B
		ENDIF
		IF LFcheq_C
			do ESextrmovimentacao ;
			 	WITH "RES1100A",;
	 			LNempresa,LDdtinicio,LDdtfim,;
	 			LStag,LSkeyinicio,LSkeyfinal ,;
	 			" FOR grupo.cdg_tipo = 4 AND " +;
	 			" STR(grupo.tp_control,1) $ '&LScontroles'",LFcheq_B
		ENDIF
		IF LFcheq_B AND !LFcheq_A AND !LFcheq_C
			do ESextrmovimentacao ;
			 	WITH "SO BROWSE",;
	 			LNempresa,LDdtinicio,LDdtfim,;
	 			LStag,LSkeyinicio,LSkeyfinal ,;
	 			" FOR grupo.cdg_tipo = 4 AND " +;
	 			" STR(grupo.tp_control,1) $ '&LScontroles'",LFcheq_B
		ENDIF
	ELSE
		WAIT WINDOW "Processo Cancelado...." NOWAIT
	ENDIF
	CLEAR TYPEAHEAD
	SHOW WINDOWS SES1100 TOP
RETURN


*       ЦДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДД·
*       є                                                         є
*       є _2LX0VPV9Q           m.canc_btn VALID                   є
*       є                                                         є
*       є Function Origin:                                        є
*       є                                                         є
*       є From Platform:       MS-DOS                             є
*       є From Screen:         SES1100,     Record Number:   13   є
*       є Variable:            m.canc_btn                         є
*       є Called By:           VALID Clause                       є
*       є Object Type:         Push Button                        є
*       є Snippet Number:      2                                  є
*       є                                                         є
*       УДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДЅ
*
FUNCTION _2lx0vpv9q     &&  m.canc_btn VALID
#REGION 1
DO ULencerra