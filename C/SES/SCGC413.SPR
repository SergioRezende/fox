*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ 03/19/09             SCGC413.SPR               14:46:36 ╨
*       ╨                                                         ╨
*       гддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╤
*       ╨                                                         ╨
*       ╨ Author's Name                                           ╨
*       ╨                                                         ╨
*       ╨ Copyright (c) 2009 Company Name                         ╨
*       ╨ Address                                                 ╨
*       ╨ City,     Zip                                           ╨
*       ╨                                                         ╨
*       ╨ Description:                                            ╨
*       ╨ This program was automatically generated by GENSCRN.    ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨          SCGC413/MS-DOS Setup Code - SECTION 1          ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*

#REGION 1

*~ WIZARDSCREEN
#DEFINE C_DBFEMPTY		'Database is empty, add a record?'
#DEFINE C_DELREC		'Apagar Registro Selecionado ?'
#DEFINE C_ENDFILE		'Final do Arquivo.'
#DEFINE C_CANCTRF		'Confirma o Cancelamento da Devolucao ? '
#DEFINE C_APROTRF		'Confirma o Aprovacao da Devolucao ? '
*---------------------------------------------------------------------*
* ARQUIVOS UTILIZADOS :                                               *
*              - EMPRESA
*              - ITEMMOV
*              - ITMANEXO
*              - SALDO
* OBJETIVOS : CHECAGEM MOVIMENTO E ESTOQUE
*	
*---------------------------------------------------------------------*
******>>>> INICIO CONTROLE AMBIENTAL
ON KEY LABEL ESCAPE
PRIVATE isediting,isadding,isreading
PRIVATE wp_record
PRIVATE isreadonly,is2table,wzalias
PRIVATE LS413areant
LS413areant	= ALLTRIM(ALIAS()) && PERMITE RETORNAR A AREA ANTER. A CHAMADA

m.wzalias	=	SELECT()
m.isediting	=	.F.
m.isadding	=	.F.
m.isreading =  	.F.
m.is2table 	= 	.F.
wp_flgfecha = 	.F. 		&& defaut nao fechamento da secao
WP_RECORD 	= 	0
wp_ref_local =  .T.     &&  POSSUI CONTROLE DE REFRESH LOCAL


grupo_ini	= 0
subgrp_ini	= 0
classe_ini	= 0
item_ini	= 0	
codinicio	= ""
descinicio	= ""
clasinicio	= ""

grupo_fim	= 0
subgrp_fim	= 0
classe_fim	= 0
item_fim	= 0	
codfim		= ""
descfim		= ""
clasfim		= ""

LFemp413	= 	.F.		&& .F. =>  DEVE SER FECHADA NA SAIDA
LFsld413	= 	.F.		&& .F. =>  DEVE SER FECHADA NA SAIDA
LFite413	= 	.F.		&& .F. =>  DEVE SER FECHADA NA SAIDA
LFgru413	= 	.F.		&& .F. =>  DEVE SER FECHADA NA SAIDA
LFmvx413	= 	.F.		&& .F. =>  ITMANEXO	DEVE SER FECHADA NA SAIDA

********>>>>>> INTERESE LOCAL
wl_cota     = .f.
iscancela   = .f.
isitens     = .f.     && indica se houve edicao doas itens durante ed. orca.

******>>>> INICIO CONTROLE ARQUIVOS

*>> parametros repassados a btn_val


VLleitura = "" && OPERACOES DE REMESSA
                         * repassa chave de leitura p/ btn_val
VLlerfim  = ""  && 1o REG. DE OPERACOES DE REQUISICAO
           * repassa chave de leitura p/ btn_val (POSICAO FINAL + 1 REG)
VLcompara = ""
                         * repassa chave de comparacao p/ btn_val
VLchvlimi = ""  && otimiza browse
*******************************************************
IF !USED("empresa")
	LFemp413	= .T.
	IF ! NetUse("empresa")
		wp_flgfecha = .t.  && implica no fechamento da secao
	ENDIF
ENDIF
IF !USED("itemmov")
	LFite413	= .T.
	IF ! NetUse("itemmov")
		wp_flgfecha = .t.  && implica no fechamento da secao
	ENDIF
ENDIF
IF !USED("itmanexo")
	LFmvx413	= .T.
	IF ! NetUse("itmanexo")
		wp_flgfecha = .t.  && implica no fechamento da secao
	ENDIF
ENDIF
IF !USED("grupo")
	LFgru413	= .T.
	IF ! NetUse("grupo")
		wp_flgfecha = .t.  && implica no fechamento da secao
	ENDIF
ENDIF
IF !USED("saldo")
	LFsld413	= .T.
	IF ! NetUse("saldo")
		wp_flgfecha = .t.  && implica no fechamento da secao
	ENDIF
ENDIF

IF wp_flgfecha
	DO ULfecha 		&& FECHA ARQUIVOS ABERTOS
	RETURN
ENDIF


#REGION 0
REGIONAL m.currarea, m.talkstat, m.compstat

IF SET("TALK") = "ON"
	SET TALK OFF
	m.talkstat = "ON"
ELSE
	m.talkstat = "OFF"
ENDIF
m.compstat = SET("COMPATIBLE")
SET COMPATIBLE FOXPLUS

*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨                MS-DOS Window definitions                ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*

IF NOT WEXIST("scgc413") ;
	OR UPPER(WTITLE("SCGC413")) == "SCGC413.PJX" ;
	OR UPPER(WTITLE("SCGC413")) == "SCGC413.SCX" ;
	OR UPPER(WTITLE("SCGC413")) == "SCGC413.MNX" ;
	OR UPPER(WTITLE("SCGC413")) == "SCGC413.PRG" ;
	OR UPPER(WTITLE("SCGC413")) == "SCGC413.FRX" ;
	OR UPPER(WTITLE("SCGC413")) == "SCGC413.QPR"
	DEFINE WINDOW scgc413 ;
		FROM INT((SROW()-14)/2),INT((SCOL()-70)/2) ;
		TO INT((SROW()-14)/2)+13,INT((SCOL()-70)/2)+69 ;
		TITLE "[ CHECAGEM DE SALDOS ESTOQUE ]" ;
		FOOTER "[ 413 ]" ;
		FLOAT ;
		NOCLOSE ;
		SHADOW ;
		NOMINIMIZE ;
		NONE ;
		COLOR SCHEME 1
ENDIF


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨          SCGC413/MS-DOS Setup Code - SECTION 2          ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*

#REGION 1
******>>>> INICIO CONTROLE LOCAL


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨              SCGC413/MS-DOS Screen Layout               ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*

#REGION 1
IF WVISIBLE("scgc413")
	ACTIVATE WINDOW scgc413 SAME
ELSE
	ACTIVATE WINDOW scgc413 NOSHOW
ENDIF
@ 2,16 SAY "-" ;
	SIZE 1,1, 0
@ 2,5 SAY "Filial.:" ;
	SIZE 1,8, 0
@ 4,5 SAY "GRUPO" ;
	SIZE 1,5, 0
@ 4,12 SAY "SUBGRUPO" ;
	SIZE 1,8, 0
@ 4,21 SAY "CLASSE" ;
	SIZE 1,6, 0
@ 4,29 SAY "ITEM" ;
	SIZE 1,4, 0
@ 6,4 SAY "ate" ;
	SIZE 1,3, 0
@ 2,35 SAY "Checar apartir de" ;
	SIZE 1,17, 0
@ 0,0 TO 13,69 ;
	COLOR SCHEME 23
@ 0,17 SAY "[ Checagem de Saldos dos Produtos ]" ;
	SIZE 1,35, 0
@ 0,63 SAY "[413]" ;
	SIZE 1,5, 0
@ 1,3 TO 9,65 ;
	COLOR SCHEME 23
@ 9,4 TO 9,64 ;
	COLOR SCHEME 24
@ 9,65 SAY "ы" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 2,65 TO 8,65 ;
	COLOR SCHEME 24
@ 1,65 SAY "©" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 10,1 TO 12,68 ;
	COLOR SCHEME 24
@ 12,2 TO 12,67 ;
	COLOR SCHEME 23
@ 12,68 SAY "ы" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 23
@ 11,68 SAY "Ё" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 23
@ 10,68 SAY "©" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 23
@ 13,1 TO 13,68 ;
	COLOR SCHEME 24
@ 13,69 SAY "ы" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 1,69 TO 12,69 ;
	COLOR SCHEME 24
@ 0,69 SAY "©" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 2,13 GET m.empresa ;
	SIZE 1,3 ;
	DEFAULT " " ;
	PICTURE "999" ;
	WHEN _2lx0vo6vo() ;
	VALID _2lx0vo6xd()
@ 2,17 GET m.nome_emp ;
	SIZE 1,16 ;
	DEFAULT " " ;
	PICTURE "@!K" ;
	WHEN _2lx0vo6xe()
@ 2,53 GET m.dt_inicio ;
	SIZE 1,10 ;
	DEFAULT {  /  /  } ;
	WHEN isediting
@ 4,37 GET m.codinicio ;
	SIZE 1,16 ;
	DEFAULT " " ;
	PICTURE "&masc_codi" ;
	WHEN _2lx0vo6xf() ;
	VALID _2lx0vo6xg() ;
	ERROR wp_msg
@ 5,7 GET m.grupo_ini ;
	SIZE 1,4 ;
	DEFAULT 0 ;
	PICTURE "@K 9999 " ;
	WHEN isediting or isreading ;
	VALID _2lx0vo6y4() ;
	ERROR wp_msg
@ 5,13 GET m.subgrp_ini ;
	SIZE 1,4 ;
	DEFAULT 0 ;
	PICTURE "@K 9999 " ;
	WHEN isediting or isreading ;
	VALID _2lx0vo6y9() ;
	ERROR wp_msg
@ 5,22 GET m.classe_ini ;
	SIZE 1,4 ;
	DEFAULT 0 ;
	PICTURE "@K 9999 " ;
	WHEN isediting or isreading ;
	VALID _2lx0vo6yd() ;
	ERROR wp_msg
@ 5,29 GET m.item_ini ;
	SIZE 1,6 ;
	DEFAULT 0 ;
	PICTURE "@K 9999-9 " ;
	WHEN isediting or isreading ;
	VALID _2lx0vo6yi() ;
	ERROR wp_msg
@ 5,38 GET m.descinicio ;
	SIZE 1,26 ;
	DEFAULT " " ;
	PICTURE "@!" ;
	WHEN .f.
@ 7,37 GET m.codfim ;
	SIZE 1,16 ;
	DEFAULT " " ;
	PICTURE "&masc_codi" ;
	WHEN _2lx0vo6yo() ;
	VALID _2lx0vo6yr() ;
	ERROR wp_msg
@ 8,7 GET m.grupo_fim ;
	SIZE 1,4 ;
	DEFAULT 0 ;
	PICTURE "@K 9999 " ;
	WHEN isediting or isreading ;
	VALID _2lx0vo70e() ;
	ERROR wp_msg
@ 8,13 GET m.subgrp_fim ;
	SIZE 1,4 ;
	DEFAULT 0 ;
	PICTURE "@K 9999 " ;
	WHEN isediting or isreading ;
	VALID _2lx0vo70j() ;
	ERROR wp_msg
@ 8,22 GET m.classe_fim ;
	SIZE 1,4 ;
	DEFAULT 0 ;
	PICTURE "@K 9999 " ;
	WHEN isediting or isreading ;
	VALID _2lx0vo70k() ;
	ERROR wp_msg
@ 8,29 GET m.item_fim ;
	SIZE 1,6 ;
	DEFAULT 0 ;
	PICTURE "@K 9999-9 " ;
	WHEN isediting or isreading ;
	VALID _2lx0vo70l() ;
	ERROR wp_msg
@ 8,38 GET m.descfim ;
	SIZE 1,26 ;
	DEFAULT " " ;
	PICTURE "@!" ;
	WHEN .f.
@ 11,3 GET m.edit_btn ;
	PICTURE "@*HN \<Edita" ;
	SIZE 1,9,1 ;
	DEFAULT 1 ;
	VALID btn_val1('EDIT') ;
	MESSAGE 'Permite a alteracao de dados do registro corrente'
@ 11,14 GET m.imp_btn ;
	PICTURE "@*HN \<Verif. Saldo X Movim." ;
	SIZE 1,23,1 ;
	DEFAULT 1 ;
	VALID _2lx0vo70m() ;
	DISABLE
@ 11,39 GET m.cor_btn ;
	PICTURE "@*HN \<Verif. Duplicidade" ;
	SIZE 1,20,1 ;
	DEFAULT 1 ;
	VALID _2lx0vo716() ;
	DISABLE
@ 11,60 GET m.canc_btn ;
	PICTURE "@*HT \<Saida" ;
	SIZE 1,7,1 ;
	DEFAULT 1 ;
	VALID _2lx0vo71c()

IF NOT WVISIBLE("scgc413")
	ACTIVATE WINDOW scgc413
ENDIF


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨     MS-DOSREAD contains clauses from SCREEN scgc413     ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*

READ CYCLE ;
	ACTIVATE READACT() ;
	DEACTIVATE READDEAC() ;
	NOLOCK

RELEASE WINDOW scgc413

#REGION 0
IF m.talkstat = "ON"
	SET TALK ON
ENDIF
IF m.compstat = "ON"
	SET COMPATIBLE ON
ENDIF


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨               SCGC413/MS-DOS Cleanup Code               ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*

#REGION 1
DO ULfecha 		&& FECHA ARQUIVOS ABERTOS
RETURN

*********************************
*    P R O C E D I M E N T O S  *
*********************************


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨   SCGC413/MS-DOS Supporting Procedures and Functions    ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*

#REGION 1
PROCEDURE ULfecha
	IF LFemp413		&& .t. =>  DEVE SER FECHADA NA SAIDA
		=UP_fecha("empresa")
	ENDIF
	IF LFite413		&& .t. =>  DEVE SER FECHADA NA SAIDA
		=UP_fecha("itemmov")
	ENDIF
	IF LFmvx413		&& .t. =>  DEVE SER FECHADA NA SAIDA
		=UP_fecha("itmanexo")
	ENDIF
	IF LFsld413		&& .t. =>  DEVE SER FECHADA NA SAIDA
		=UP_fecha("saldo")
	ENDIF
	IF LFgru413		&& .t. =>  DEVE SER FECHADA NA SAIDA
		=UP_fecha("grupo")
	ENDIF
	wp_flgfecha = .F. 		&& defaut nao fechamento da secao
	IF !EMPTY(LS413areant)
		SELECT &LS413areant
	ENDIF
	ON KEY LABEL ESCAPE
	SET FORMAT TO
	ON KEY LABEL CTRL-I
RETURN
*-------------->


PROCEDURE BTN_VAL1
	PARAMETER tecla, m.chv_ler, m.chv_compara, m.chv_brow
	LN_prxobj = _CUROBJ
	SHOW GET wp_empresa
	SHOW GET wp_nome_emp
    DO CASE
		CASE tecla = "EDIT" AND !isediting   && INICIA EDICAO
			SHOW GET edit_btn,1 PROMPT "\<Ok"
			SHOW GET m.imp_btn DISABLE
			SHOW GET m.cor_btn DISABLE
			isediting = .t.
			_CUROBJ = 1	
		    ON KEY LABEL ESCAPE KEYBOARD "{BACKTAB}"
			ON KEY LABEL END DO BTN_VAL1 WITH 'DELETE'
		CASE tecla = "EDIT" AND isediting     && CONFIRMA EDICAO
			SHOW GET edit_btn,1 PROMPT "\<Edita"
			isediting = .f.
			_CUROBJ = 1	
			SHOW GET m.imp_btn ENABLE
			SHOW GET m.cor_btn ENABLE
		    ON KEY LABEL ESCAPE
			ON KEY LABEL END
		CASE tecla = "DELETE" AND isediting     && CANCELA EDICAO
			SHOW GET edit_btn,1 PROMPT "\<Edita"
			isediting = .f.
			_CUROBJ = 1	
			SHOW GET m.imp_btn DISABLE
			SHOW GET m.cor_btn DISABLE
		    ON KEY LABEL ESCAPE
			ON KEY LABEL END
	ENDCASE
RETURN


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _2LX0VO6VO           m.empresa WHEN                     ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC413,     Record Number:   27   ╨
*       ╨ Variable:            m.empresa                          ╨
*       ╨ Called By:           WHEN Clause                        ╨
*       ╨ Object Type:         Field                              ╨
*       ╨ Snippet Number:      1                                  ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _2lx0vo6vo     &&  m.empresa WHEN
#REGION 1
ON KEY LABEL ESCAPE	KEYBOARD "{END}"
IF LASTKEY() = 15 AND !(isediting)
	KEYBOARD "{ESCAPE}"
ENDIF
RETURN(isediting)

*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _2LX0VO6XD           m.empresa VALID                    ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC413,     Record Number:   27   ╨
*       ╨ Variable:            m.empresa                          ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Field                              ╨
*       ╨ Snippet Number:      2                                  ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _2lx0vo6xd     &&  m.empresa VALID
#REGION 1
SELECT empresa
SET ORDER TO TAG empresa
IF LASTKEY() = 9
   ON KEY LABEL ESCAPE
   DO loc_dlog WITH .F.
   ON KEY LABEL ESCAPE DO BTN_VAL WITH 'DELETE'
   IF LASTKEY() = 27
		SELECT empresa
		RETURN .F.
	ENDIF
ELSE
	IF !SEEK(m.empresa)
		SELECT empresa
		RETURN .F.
	ENDIF
ENDIF
m.empresa   = empresa
m.nome_emp  = empresa.nome
SHOW GET m.empresa
SHOW GET m.nome_emp
SELECT empresa
RETURN .T.


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _2LX0VO6XE           m.nome_emp WHEN                    ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC413,     Record Number:   28   ╨
*       ╨ Variable:            m.nome_emp                         ╨
*       ╨ Called By:           WHEN Clause                        ╨
*       ╨ Object Type:         Field                              ╨
*       ╨ Snippet Number:      3                                  ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _2lx0vo6xe     &&  m.nome_emp WHEN
#REGION 1
ON KEY LABEL ESCAPE KEYBOARD "{BACKTAB}"
RETURN(.f.)


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _2LX0VO6XF           m.codinicio WHEN                   ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC413,     Record Number:   30   ╨
*       ╨ Variable:            m.codinicio                        ╨
*       ╨ Called By:           WHEN Clause                        ╨
*       ╨ Object Type:         Field                              ╨
*       ╨ Snippet Number:      4                                  ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _2lx0vo6xf     &&  m.codinicio WHEN
#REGION 1
ON KEY LABEL ENTER
ON KEY LABEL ESCAPE KEYBOARD "{BACKTAB}"
RETURN(isediting or isreading)

*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _2LX0VO6XG           m.codinicio VALID                  ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC413,     Record Number:   30   ╨
*       ╨ Variable:            m.codinicio                        ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Field                              ╨
*       ╨ Snippet Number:      5                                  ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _2lx0vo6xg     &&  m.codinicio VALID
#REGION 1
IF EMPTY(m.codinicio) AND LASTKEY() <> 9
	m.clasinicio  = " "
	m.descinicio  =   "PRIMEIRO"
	SHOW GET  m.descinicio
	RETURN(.T.)
ENDIF
SELE grupo
SET ORDER TO TAG codigo
SET NEAR ON
SEEK ALLTRIM(m.codinicio)
SET NEAR OFF
*----------------------------------------------------------*
SELECT grupo
ON KEY LABEL ESCAPE
IF LASTKEY() = 9
	SET ORDER TO TAG classifica
	ON KEY LABEL ESCAPE
	DO loc_dlog WITH .T.
	ON KEY LABEL ESCAPE KEYBOARD "{BACKTAB}"
	IF LASTKEY() = 27
		RETURN .F.
	ENDIF
ENDIF
m.codinicio  = grupo.codigo
m.clasinicio = grupo.classifica
m.descinicio = grupo.descricao
*******
LSlencod  	= INT(VAL(vclass(1)))
m.grupo_ini = INT(VAL(SUBS(m.clasinicio,1, LSlencod)))

LSlencod   	 = INT(VAL(vclass(2))) - INT(VAL(vclass(1)))
m.subgrp_ini = INT(VAL(SUBS(m.clasinicio,INT(VAL(vclass(1)))+1, LSlencod)))

LSlencod   	 = INT(VAL(vclass(3))) - INT(VAL(vclass(2)))
m.classe_ini = INT(VAL(SUBS(m.clasinicio,INT(VAL(vclass(2)))+1, LSlencod)))

LSlencod   	 = INT(VAL(vclass(4))) - INT(VAL(vclass(3)))
m.item_ini 	 = INT(VAL(SUBS(m.clasinicio,INT(VAL(vclass(3)))+1, LSlencod)))
*******
SHOW GET  m.grupo_ini
SHOW GET  m.subgrp_ini
SHOW GET  m.classe_ini
SHOW GET  m.item_ini
SHOW GET  m.codinicio
SHOW GET  m.descinicio
RETURN .t.


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _2LX0VO6Y4           m.grupo_ini VALID                  ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC413,     Record Number:   31   ╨
*       ╨ Variable:            m.grupo_ini                        ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Field                              ╨
*       ╨ Snippet Number:      6                                  ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _2lx0vo6y4     &&  m.grupo_ini VALID
#REGION 1
PRIVATE  LSemptmp, LSlencod		
	LSchv_tmp	= ""	&& chave temporaria para busca
	LSlencod  = 0		&& numero de digitos que compoe o grupo
*----------------------------------------------------------*
IF EMPTY(m.grupo_ini) AND LASTKEY() <> 9
	m.clasinicio  = " "
	m.descinicio  =   "PRIMEIRO"
	SHOW GET  m.clasinicio
	SHOW GET  m.descinicio
	RETURN(.T.)
ENDIF
*----------------------------------------------------------*
*	converte codigo numerico do sub-grupo em parte da string CLASSIFICA
*   conforme orientacao da mascara fornecida no parametro
*   e decodificada no vetor VCLASS
*----------------------------------------------------------*
LSlencod   		= INT(VAL(vclass(1)))
m.clasinicio	= CHRTRAN(STR(m.grupo_ini,LSlencod)," ","0")
m.clasinicio    = ALLTRIM(m.clasinicio)
*----------------------------------------------------------*

SELE grupo
SET ORDER TO TAG grupos
SET NEAR ON
SEEK m.clasinicio
SET NEAR OFF
*----------------------------------------------------------*
SELECT grupo
ON KEY LABEL ESCAPE
IF LASTKEY() = 9
	ON KEY LABEL ESCAPE
	DO loc_dlog WITH .T., "grupo.cdg_tipo = 1"
	ON KEY LABEL ESCAPE KEYBOARD "{BACKTAB}"
	IF LASTKEY() = 27
		RETURN .F.
	ENDIF
ENDIF
m.codinicio  = grupo.codigo
m.clasinicio = grupo.classifica
m.descinicio = grupo.descricao
m.grupo_ini = INT(VAL(SUBS(m.clasinicio,1, LSlencod)))
SHOW GET  m.grupo_ini
SHOW GET  m.clasinicio
SHOW GET  m.descinicio
RETURN .t.


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _2LX0VO6Y9           m.subgrp_ini VALID                 ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC413,     Record Number:   32   ╨
*       ╨ Variable:            m.subgrp_ini                       ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Field                              ╨
*       ╨ Snippet Number:      7                                  ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _2lx0vo6y9     &&  m.subgrp_ini VALID
#REGION 1
PRIVATE LSemptmp, LSlencod
	LSvinculo	= ""	&& fixa os itens do browse ao nivel anterior
	LSlenvinc 	= 0		&& inf.a pate do cod.que deve estar no vinculo
	LSemptmp	= ""	&& informa empresa p/ associar prod.especificos
	LSlencod  	= 0		&& numero de digitos que compoe o grupo
*----------------------------------------------------------*
IF EMPTY(m.subgrp_ini) AND LASTKEY() <> 9
	RETURN(.T.)
ENDIF
*----------------------------------------------------------*
*	converte codigo numerico do sub-grupo em parte da string CLASSIFICA
*   conforme orientacao da mascara fornecida no parametro
*   e decodificada no vetor VCLASS
*----------------------------------------------------------*
LSlencod   		= INT(VAL(vclass(1)))
m.clasinicio	= CHRTRAN(STR(m.grupo_ini,LSlencod)," ","0")
LSvinculo		= ALLTRIM(m.clasinicio)
LSlenvinc  		= INT(VAL(vclass(1)))

*----->>>
LSlencod   		= INT(VAL(vclass(2))) - INT(VAL(vclass(1)))
m.clasinicio	= m.clasinicio + CHRTRAN(STR(m.subgrp_ini,LSlencod)," ","0")
m.clasinicio	= ALLTRIM(m.clasinicio)
*----------------------------------------------------------*

SELE grupo
SET ORDER TO TAG subgrupos
LSemptmp =  STRTRAN(STR(m.empresa,3),' ','0')
SET NEAR ON
SEEK m.clasinicio
SET NEAR OFF
*----------------------------------------------------------*
SELECT grupo
ON KEY LABEL ESCAPE
IF LASTKEY() = 9
	ON KEY LABEL ESCAPE
	DO loc_dlog WITH .T.,;
		 " LEFT(grupo.classifica, LSlenvinc) = '&LSvinculo' " + ;
		 " AND grupo.cdg_tipo = 2"
	ON KEY LABEL ESCAPE KEYBOARD "{BACKTAB}"
	IF LASTKEY() = 27
		RETURN .F.
	ENDIF
ENDIF
m.codinicio  = grupo.codigo
m.clasinicio = grupo.classifica
m.descinicio = grupo.descricao
m.subgrp_ini = INT(VAL(SUBS(m.clasinicio,INT(VAL(vclass(1)))+1, LSlencod)))
SHOW GET  m.subgrp_ini
SHOW GET  m.clasinicio
SHOW GET  m.descinicio

RETURN .t.


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _2LX0VO6YD           m.classe_ini VALID                 ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC413,     Record Number:   33   ╨
*       ╨ Variable:            m.classe_ini                       ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Field                              ╨
*       ╨ Snippet Number:      8                                  ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _2lx0vo6yd     &&  m.classe_ini VALID
#REGION 1
PRIVATE LSemptmp, LSlencod
	LSvinculo	= ""	&& fixa os itens do browse ao nivel anterior
	LSlenvinc 	= 0		&& inf.a pate do cod.que deve estar no vinculo
	LSemptmp	= ""	&& informa empresa p/ associar prod.especificos
	LSlencod  	= 0		&& numero de digitos que compoe o grupo
*----------------------------------------------------------*
IF EMPTY(m.classe_ini) AND LASTKEY() <> 9
	RETURN(.T.)
ENDIF
*----------------------------------------------------------*
*	converte codigo numerico do sub-grupo em parte da string CLASSIFICA
*   conforme orientacao da mascara fornecida no parametro
*   e decodificada no vetor VCLASS
*----------------------------------------------------------*
LSlencod   		= INT(VAL(vclass(1)))
m.clasinicio	= CHRTRAN(STR(m.grupo_ini,LSlencod)," ","0")
*----->>>
LSlencod   		= INT(VAL(vclass(2))) - INT(VAL(vclass(1)))
m.clasinicio	= m.clasinicio + CHRTRAN(STR(m.subgrp_ini,LSlencod)," ","0")
m.clasinicio	= ALLTRIM(m.clasinicio)
LSvinculo		= ALLTRIM(m.clasinicio)
LSlenvinc  		= INT(VAL(vclass(2)))
*----->>>
LSlencod   		= INT(VAL(vclass(3))) - INT(VAL(vclass(2)))
m.clasinicio	= m.clasinicio + CHRTRAN(STR(m.classe_ini,LSlencod)," ","0")
m.clasinicio	= ALLTRIM(m.clasinicio)
*----------------------------------------------------------*

SELE grupo
SET ORDER TO TAG classes
LSemptmp =  STRTRAN(STR(m.empresa,3),' ','0')
SET NEAR ON
SEEK m.clasinicio
SET NEAR OFF
*----------------------------------------------------------*
SELECT grupo
ON KEY LABEL ESCAPE
IF LASTKEY() = 9
	ON KEY LABEL ESCAPE
	DO loc_dlog WITH .T.,;
		 " LEFT(grupo.classifica, LSlenvinc) = '&LSvinculo' " + ;
		 " AND grupo.cdg_tipo = 3"
	ON KEY LABEL ESCAPE KEYBOARD "{BACKTAB}"
	IF LASTKEY() = 27
		RETURN .F.
	ENDIF
ENDIF
m.codinicio  = grupo.codigo
m.clasinicio = grupo.classifica
m.descinicio = grupo.descricao
m.classe_ini = INT(VAL(SUBS(m.clasinicio,INT(VAL(vclass(2)))+1, LSlencod)))
SHOW GET  m.classe_ini

SHOW GET  m.clasinicio
SHOW GET  m.descinicio
RETURN .t.


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _2LX0VO6YI           m.item_ini VALID                   ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC413,     Record Number:   34   ╨
*       ╨ Variable:            m.item_ini                         ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Field                              ╨
*       ╨ Snippet Number:      9                                  ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _2lx0vo6yi     &&  m.item_ini VALID
#REGION 1
PRIVATE LSemptmp, LSlencod
	LSvinculo	= ""	&& fixa os itens do browse ao nivel anterior
	LSlenvinc 	= 0		&& inf.a pate do cod.que deve estar no vinculo
	LSemptmp	= ""	&& informa empresa p/ associar prod.especificos
	LSlencod  	= 0		&& numero de digitos que compoe o grupo
*----------------------------------------------------------*
IF EMPTY(m.item_ini) AND LASTKEY() <> 9
	RETURN(.T.)
ENDIF
*----------------------------------------------------------*
*	converte codigo numerico do sub-grupo em parte da string CLASSIFICA
*   conforme orientacao da mascara fornecida no parametro
*   e decodificada no vetor VCLASS
*----------------------------------------------------------*
LSlencod   		= INT(VAL(vclass(1)))
m.clasinicio	= CHRTRAN(STR(m.grupo_ini,LSlencod)," ","0")
*----->>>
LSlencod   		= INT(VAL(vclass(2))) - INT(VAL(vclass(1)))
m.clasinicio	= m.clasinicio + CHRTRAN(STR(m.subgrp_ini,LSlencod)," ","0")
m.clasinicio	= ALLTRIM(m.clasinicio)
*----->>>
LSlencod   		= INT(VAL(vclass(3))) - INT(VAL(vclass(2)))
m.clasinicio	= m.clasinicio + CHRTRAN(STR(m.classe_ini,LSlencod)," ","0")
m.clasinicio	= ALLTRIM(m.clasinicio)
LSvinculo		= ALLTRIM(m.clasinicio)
LSlenvinc  		= INT(VAL(vclass(3)))
*----->>>
LSlencod   		= INT(VAL(vclass(4))) - INT(VAL(vclass(3)))
m.clasinicio	= m.clasinicio + CHRTRAN(STR(m.item_ini,LSlencod)," ","0")
m.clasinicio	= ALLTRIM(m.clasinicio)
*----------------------------------------------------------*

SELE grupo
SET ORDER TO TAG classifica
LSemptmp =  STRTRAN(STR(m.empresa,3),' ','0')
SET NEAR ON
SEEK m.clasinicio
SET NEAR OFF
*----------------------------------------------------------*
SELECT grupo
ON KEY LABEL ESCAPE
IF LASTKEY() = 9
	ON KEY LABEL ESCAPE
	DO loc_dlog WITH .T.,;
		 " (('&LSemptmp' $ grupo.empresas)  AND " + ;
         " ('&LSemptmp' $ grupo.tab_preco ) AND "+ ;
		 " LEFT(grupo.classifica, LSlenvinc) = '&LSvinculo') " + ;
		 " AND grupo.cdg_tipo = 4"
	ON KEY LABEL ESCAPE KEYBOARD "{BACKTAB}"
	IF LASTKEY() = 27
		RETURN .F.
	ENDIF
ENDIF
m.codinicio  = grupo.codigo
m.clasinicio = grupo.classifica
m.descinicio = grupo.descricao
m.item_ini = INT(VAL(SUBS(m.clasinicio,INT(VAL(vclass(3)))+1, LSlencod)))
SHOW GET  m.item_ini
SHOW GET  m.clasinicio
SHOW GET  m.descinicio
RETURN .t.


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _2LX0VO6YO           m.codfim WHEN                      ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC413,     Record Number:   36   ╨
*       ╨ Variable:            m.codfim                           ╨
*       ╨ Called By:           WHEN Clause                        ╨
*       ╨ Object Type:         Field                              ╨
*       ╨ Snippet Number:      10                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _2lx0vo6yo     &&  m.codfim WHEN
#REGION 1
ON KEY LABEL ENTER
ON KEY LABEL ESCAPE KEYBOARD "{BACKTAB}"
RETURN(isediting or isreading)

*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _2LX0VO6YR           m.codfim VALID                     ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC413,     Record Number:   36   ╨
*       ╨ Variable:            m.codfim                           ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Field                              ╨
*       ╨ Snippet Number:      11                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _2lx0vo6yr     &&  m.codfim VALID
#REGION 1
IF EMPTY(m.codfim) AND LASTKEY() <> 9
	m.clasfim 	= 	REPL("9",15)
	m.descfim   =   "ULTIMO"
	SHOW GET  m.descfim
	RETURN(.T.)
ENDIF
SELE grupo
SET ORDER TO TAG codigo
SET NEAR ON
SEEK ALLTRIM(m.codfim)
SET NEAR OFF
*----------------------------------------------------------*
SELECT grupo
ON KEY LABEL ESCAPE
IF LASTKEY() = 9
	SET ORDER TO TAG classifica
	ON KEY LABEL ESCAPE
	DO loc_dlog WITH .T.
	ON KEY LABEL ESCAPE KEYBOARD "{BACKTAB}"
	IF LASTKEY() = 27
		RETURN .F.
	ENDIF
ENDIF
m.codfim  = grupo.codigo
m.clasfim = grupo.classifica
m.descfim = grupo.descricao
*******
LSlencod  	= INT(VAL(vclass(1)))
m.grupo_fim = INT(VAL(SUBS(m.clasfim,1, LSlencod)))

LSlencod   	 = INT(VAL(vclass(2))) - INT(VAL(vclass(1)))
m.subgrp_fim = INT(VAL(SUBS(m.clasfim,INT(VAL(vclass(1)))+1, LSlencod)))

LSlencod   	 = INT(VAL(vclass(3))) - INT(VAL(vclass(2)))
m.classe_fim = INT(VAL(SUBS(m.clasfim,INT(VAL(vclass(2)))+1, LSlencod)))

LSlencod   	 = INT(VAL(vclass(4))) - INT(VAL(vclass(3)))
m.item_fim 	 = INT(VAL(SUBS(m.clasfim,INT(VAL(vclass(3)))+1, LSlencod)))
*******
SHOW GET  m.grupo_fim
SHOW GET  m.subgrp_fim
SHOW GET  m.classe_fim
SHOW GET  m.item_fim
SHOW GET  m.codfim
SHOW GET  m.descfim
RETURN .t.


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _2LX0VO70E           m.grupo_fim VALID                  ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC413,     Record Number:   37   ╨
*       ╨ Variable:            m.grupo_fim                        ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Field                              ╨
*       ╨ Snippet Number:      12                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _2lx0vo70e     &&  m.grupo_fim VALID
#REGION 1
PRIVATE  LSemptmp, LSlencod		
	LSchv_tmp	= ""	&& chave temporaria para busca
	LSemptmp	= ""	&& informa empresa p/ associar prod.especificos
	LSlencod  = 0		&& numero de digitos que compoe o grupo
*----------------------------------------------------------*
IF EMPTY(m.grupo_fim) AND LASTKEY() <> 9
	m.clasfim 	= 	REPL("9",15)
	m.descfim   =   "ULTIMO"
	SHOW GET  m.descfim
	RETURN(.T.)
ENDIF
*----------------------------------------------------------*
*	converte codigo numerico do sub-grupo em parte da string CLASSIFICA
*   conforme orientacao da mascara fornecida no parametro
*   e decodificada no vetor VCLASS
*----------------------------------------------------------*
LSlencod   		= INT(VAL(vclass(1)))
m.clasfim	= CHRTRAN(STR(m.grupo_fim,LSlencod)," ","0")
m.clasfim    = ALLTRIM(m.clasfim)
*----------------------------------------------------------*

SELE grupo
SET ORDER TO TAG grupos
LSemptmp =  STRTRAN(STR(m.empresa,3),' ','0')
SET NEAR ON
SEEK m.clasfim
SET NEAR OFF
*----------------------------------------------------------*
SELECT grupo
ON KEY LABEL ESCAPE
IF LASTKEY() = 9
	ON KEY LABEL ESCAPE
	DO loc_dlog WITH .T., "grupo.cdg_tipo = 1"
	ON KEY LABEL ESCAPE KEYBOARD "{BACKTAB}"
	IF LASTKEY() = 27
		RETURN .F.
	ENDIF
ENDIF
m.codfim  = grupo.codigo
m.clasfim = grupo.classifica
m.descfim = grupo.descricao
m.grupo_fim = INT(VAL(SUBS(m.clasfim,1, LSlencod)))
SHOW GET  m.grupo_ini
SHOW GET  m.clasfim
SHOW GET  m.descfim
RETURN .t.


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _2LX0VO70J           m.subgrp_fim VALID                 ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC413,     Record Number:   38   ╨
*       ╨ Variable:            m.subgrp_fim                       ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Field                              ╨
*       ╨ Snippet Number:      13                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _2lx0vo70j     &&  m.subgrp_fim VALID
#REGION 1
PRIVATE LSemptmp, LSlencod
	LSvinculo	= ""	&& fixa os itens do browse ao nivel anterior
	LSlenvinc 	= 0		&& inf.a pate do cod.que deve estar no vinculo
	LSemptmp	= ""	&& informa empresa p/ associar prod.especificos
	LSlencod  	= 0		&& numero de digitos que compoe o grupo
*----------------------------------------------------------*
IF EMPTY(m.subgrp_fim) AND LASTKEY() <> 9
	RETURN(.T.)
ENDIF
*----------------------------------------------------------*
*	converte codigo numerico do sub-grupo em parte da string CLASSIFICA
*   conforme orientacao da mascara fornecida no parametro
*   e decodificada no vetor VCLASS
*----------------------------------------------------------*
LSlencod   		= INT(VAL(vclass(1)))
m.clasfim	= CHRTRAN(STR(m.grupo_fim,LSlencod)," ","0")
LSvinculo		= ALLTRIM(m.clasfim)
LSlenvinc  		= INT(VAL(vclass(1)))

*----->>>
LSlencod   		= INT(VAL(vclass(2))) - INT(VAL(vclass(1)))
m.clasfim	= m.clasfim + CHRTRAN(STR(m.subgrp_fim,LSlencod)," ","0")
m.clasfim	= ALLTRIM(m.clasfim)
*----------------------------------------------------------*

SELE grupo
SET ORDER TO TAG subgrupos
LSemptmp =  STRTRAN(STR(m.empresa,3),' ','0')
SET NEAR ON
SEEK m.clasfim
SET NEAR OFF
*----------------------------------------------------------*
SELECT grupo
ON KEY LABEL ESCAPE
IF LASTKEY() = 9
	ON KEY LABEL ESCAPE
	DO loc_dlog WITH .T.,;
		 " LEFT(grupo.classifica, LSlenvinc) = '&LSvinculo' " + ;
		 " AND grupo.cdg_tipo = 2"
	ON KEY LABEL ESCAPE KEYBOARD "{BACKTAB}"
	IF LASTKEY() = 27
		RETURN .F.
	ENDIF
ENDIF
m.codfim  = grupo.codigo
m.clasfim = grupo.classifica
m.descfim = grupo.descricao
m.subgrp_fim = INT(VAL(SUBS(m.clasfim,INT(VAL(vclass(1)))+1, LSlencod)))
SHOW GET  m.subgrp_fim
SHOW GET  m.clasfim
SHOW GET  m.descfim
RETURN .t.


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _2LX0VO70K           m.classe_fim VALID                 ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC413,     Record Number:   39   ╨
*       ╨ Variable:            m.classe_fim                       ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Field                              ╨
*       ╨ Snippet Number:      14                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _2lx0vo70k     &&  m.classe_fim VALID
#REGION 1
PRIVATE LSemptmp, LSlencod
	LSvinculo	= ""	&& fixa os itens do browse ao nivel anterior
	LSlenvinc 	= 0		&& inf.a pate do cod.que deve estar no vinculo
	LSemptmp	= ""	&& informa empresa p/ associar prod.especificos
	LSlencod  	= 0		&& numero de digitos que compoe o grupo
*----------------------------------------------------------*
IF EMPTY(m.classe_fim) AND LASTKEY() <> 9
	RETURN(.T.)
ENDIF
*----------------------------------------------------------*
*	converte codigo numerico do sub-grupo em parte da string CLASSIFICA
*   conforme orientacao da mascara fornecida no parametro
*   e decodificada no vetor VCLASS
*----------------------------------------------------------*
LSlencod   		= INT(VAL(vclass(1)))
m.clasfim	= CHRTRAN(STR(m.grupo_fim,LSlencod)," ","0")
*----->>>
LSlencod   		= INT(VAL(vclass(2))) - INT(VAL(vclass(1)))
m.clasfim		= m.clasfim + CHRTRAN(STR(m.subgrp_fim,LSlencod)," ","0")
m.clasfim		= ALLTRIM(m.clasfim)
LSvinculo		= ALLTRIM(m.clasfim)
LSlenvinc  		= INT(VAL(vclass(2)))
*----->>>
LSlencod   		= INT(VAL(vclass(3))) - INT(VAL(vclass(2)))
m.clasfim	= m.clasfim + CHRTRAN(STR(m.classe_fim,LSlencod)," ","0")
m.clasfim	= ALLTRIM(m.clasfim)
*----------------------------------------------------------*

SELE grupo
SET ORDER TO TAG classes
LSemptmp =  STRTRAN(STR(m.empresa,3),' ','0')
SET NEAR ON
SEEK m.clasfim
SET NEAR OFF
*----------------------------------------------------------*
SELECT grupo
ON KEY LABEL ESCAPE
IF LASTKEY() = 9
	ON KEY LABEL ESCAPE
	DO loc_dlog WITH .T.,;
		 " LEFT(grupo.classifica, LSlenvinc) = '&LSvinculo' " + ;
		 " AND grupo.cdg_tipo = 3"
	ON KEY LABEL ESCAPE KEYBOARD "{BACKTAB}"
	IF LASTKEY() = 27
		RETURN .F.
	ENDIF
ENDIF
m.codfim  = grupo.codigo
m.clasfim = grupo.classifica
m.descfim = grupo.descricao
m.classe_fim = INT(VAL(SUBS(m.clasfim,INT(VAL(vclass(2)))+1, LSlencod)))
SHOW GET  m.classe_fim
SHOW GET  m.clasfim
SHOW GET  m.descfim
RETURN .t.


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _2LX0VO70L           m.item_fim VALID                   ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC413,     Record Number:   40   ╨
*       ╨ Variable:            m.item_fim                         ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Field                              ╨
*       ╨ Snippet Number:      15                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _2lx0vo70l     &&  m.item_fim VALID
#REGION 1
PRIVATE LSemptmp, LSlencod
	LSvinculo	= ""	&& fixa os itens do browse ao nivel anterior
	LSlenvinc 	= 0		&& inf.a pate do cod.que deve estar no vinculo
	LSemptmp	= ""	&& informa empresa p/ associar prod.especificos
	LSlencod  	= 0		&& numero de digitos que compoe o grupo
*----------------------------------------------------------*
IF EMPTY(m.item_fim) AND LASTKEY() <> 9
	RETURN(.T.)
ENDIF
*----------------------------------------------------------*
*	converte codigo numerico do sub-grupo em parte da string CLASSIFICA
*   conforme orientacao da mascara fornecida no parametro
*   e decodificada no vetor VCLASS
*----------------------------------------------------------*
LSlencod   		= INT(VAL(vclass(1)))
m.clasfim	= CHRTRAN(STR(m.grupo_fim,LSlencod)," ","0")
*----->>>
LSlencod   		= INT(VAL(vclass(2))) - INT(VAL(vclass(1)))
m.clasfim	= m.clasfim + CHRTRAN(STR(m.subgrp_fim,LSlencod)," ","0")
m.clasfim	= ALLTRIM(m.clasfim)
*----->>>
LSlencod   		= INT(VAL(vclass(3))) - INT(VAL(vclass(2)))
m.clasfim	= m.clasfim + CHRTRAN(STR(m.classe_fim,LSlencod)," ","0")
m.clasfim	= ALLTRIM(m.clasfim)
LSvinculo		= ALLTRIM(m.clasfim)
LSlenvinc  		= INT(VAL(vclass(3)))
*----->>>
LSlencod   		= INT(VAL(vclass(4))) - INT(VAL(vclass(3)))
m.clasfim	= m.clasfim + CHRTRAN(STR(m.item_fim,LSlencod)," ","0")
m.clasfim	= ALLTRIM(m.clasfim)
*----------------------------------------------------------*

SELE grupo
SET ORDER TO TAG classifica
LSemptmp =  STRTRAN(STR(m.empresa,3),' ','0')
SET NEAR ON
SEEK m.clasfim
SET NEAR OFF
*----------------------------------------------------------*
SELECT grupo
ON KEY LABEL ESCAPE
IF LASTKEY() = 9
	ON KEY LABEL ESCAPE
	DO loc_dlog WITH .T.,;
		 " (('&LSemptmp' $ grupo.empresas)  AND " + ;
         " ('&LSemptmp' $ grupo.tab_preco ) AND "+ ;
		 " LEFT(grupo.classifica, LSlenvinc) = '&LSvinculo') " + ;
		 " AND grupo.cdg_tipo = 4"
	ON KEY LABEL ESCAPE KEYBOARD "{BACKTAB}"
	IF LASTKEY() = 27
		RETURN .F.
	ENDIF
ENDIF
m.codfim  = grupo.codigo
m.clasfim = grupo.classifica
m.descfim = grupo.descricao
m.item_fim = INT(VAL(SUBS(m.clasfim,INT(VAL(vclass(3)))+1, LSlencod)))
SHOW GET  m.item_fim
SHOW GET  m.clasfim
SHOW GET  m.descfim
RETURN .t.


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _2LX0VO70M           m.imp_btn VALID                    ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC413,     Record Number:   43   ╨
*       ╨ Variable:            m.imp_btn                          ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      16                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
*****************************  ACERTANDO SALDO  ************
FUNCTION _2lx0vo70m     &&  m.imp_btn VALID
#REGION 1
WAIT WINDOW "*>>>>>>>>>>>>>>>   AJUSTANDO SALDOS >>>>>" NOWAIT


SELE saldo
SET ORDER TO TAG emp_mes
SET NEAR ON
SEEK STR(m.empresa,3)+STR(YEAR(m.dt_inicio),4)+;
	 STR(MONTH(m.dt_inicio),2)+m.clasinicio
SET NEAR OFF
*******************
*---->   (INICIALIZACAO DO CONTROLE DE STATUS IMPRESSAO)
*******************	
DO RELINIC.PRG          && INICIA VAR P/ TERMOMETRO

LFsegue = .t.
LNregistro = RECNO()
COUNT  	WHILE saldo.empresa  = m.empresa AND ;
				YEAR(saldo.dtabert) 	= YEAR(m.dt_inicio)  AND ;
                    MONTH(saldo.dtabert)  	= MONTH(m.dt_inicio) AND;
					saldo.classifica <= m.clasfim TO   LNimpressao
LNimpressos = 0
GO LNregistro
*******************
SELE itemmov
SET ORDER TO TAG movimento
SELE saldo
LNemp = m.empresa
SCATTER MEMVAR MEMO BLANK
m.empresa = LNemp

DO WHILE !EOF() AND saldo.empresa  = m.empresa AND ;
					YEAR(saldo.dtabert) 	= YEAR(m.dt_inicio)  AND ;
                    MONTH(saldo.dtabert)  	= MONTH(m.dt_inicio) AND ;
					saldo.classifica <= m.clasfim ;
                    AND LFsegue
	=UPtermo()
	m.codigo     = saldo.codigo
	m.classifica = saldo.classifica
	SELE itemmov
	SET NEAR ON

	LDtmp = m.dt_inicio - DAY(m.dt_inicio) + 1 && INICIO DO MES

	SEEK STR(m.empresa,3)+m.codigo+DTOS(LDtmp)
	SET NEAR OFF
	SELE SALDO
	=REGLOCK()
	DO UPatu_cmd WITH .T. && VERIFICACAO (.T. => APENAS CONSULTA)
****
	IF	m.sld_atu  <> saldo.sld_atu
        DO OBJ_MENS.SPR WITH ;
			"Produto : "+ m.codigo +;
		 	" Saldo Apurado = "+TRANSFORM(m.sld_atu,"@RT 99,999")+;
			" Saldo Registrado = "+TRANSFORM(saldo.sld_atu,"@RT 99,999")
	ENDIF
	IF	m.reserva  <> saldo.reserva
        DO OBJ_MENS.SPR WITH ;
			"Produto : "+ m.codigo +;
		 	" Reserva Apurada = "+TRANSFORM(m.reserva,"@RT 99,999")+;
			" Reserva Registrada = "+TRANSFORM(saldo.reserva,"@RT 99,999")
	ENDIF
	IF	m.sld_ante <> saldo.sld_ante
        DO OBJ_MENS.SPR WITH ;
			"Produto : "+ m.codigo +;
		 	" Sld.Ant Apurado = "+TRANSFORM(m.sld_ante,"@RT 99,999")+;
			" Sld.Ant Registrada = "+TRANSFORM(saldo.sld_ante,"@RT 99,999")
	ENDIF
	IF	m.qtd_compra <> saldo.qtd_compra
        DO OBJ_MENS.SPR WITH ;
			"Produto : "+ m.codigo +;
		 	" Compra Apurado = "+TRANSFORM(m.qtd_compra,"@RT 99,999")+;
			" Compra Registrada = "+TRANSFORM(saldo.qtd_compra,"@RT 99,999")
	ENDIF
	IF	m.qtd_venda <> saldo.qtd_venda
        DO OBJ_MENS.SPR WITH ;
			"Produto : "+ m.codigo +;
		 	" Venda  Apurado = "+TRANSFORM(m.qtd_venda,"@RT 99,999")+;
			" Venda  Registrada = "+TRANSFORM(saldo.qtd_venda,"@RT 99,999")
	ENDIF
	IF	m.qtd_e_tran <> saldo.qtd_e_tran
        DO OBJ_MENS.SPR WITH ;
			"Produto : "+ m.codigo +;
		 	" Ent.Trans Apurado = "+TRANSFORM(m.qtd_e_tran,"@RT 99,999")+;
		" Ent.Trans Registrada = "+TRANSFORM(saldo.qtd_e_tran,"@RT 99,999")
	ENDIF
	IF	m.qtd_e_outr <> saldo.qtd_e_outr
        DO OBJ_MENS.SPR WITH ;
			"Produto : "+ m.codigo +;
			" Ent.Outr  Apurado = "+TRANSFORM(m.qtd_e_outr,"@RT 99,999")+;
		" Ent.Outr  Registrada = "+TRANSFORM(saldo.qtd_e_outr,"@RT 99,999")
	ENDIF
	IF	m.qtd_s_tran <> saldo.qtd_s_tran
        DO OBJ_MENS.SPR WITH ;
			"Produto : "+ m.codigo +;
		 	" Sai.Trans Apurado = "+TRANSFORM(m.qtd_s_tran,"@RT 99,999")+;
		" Sai.Trans Registrada = "+TRANSFORM(saldo.qtd_s_tran,"@RT 99,999")
	ENDIF
	IF	m.qtd_s_outr <> saldo.qtd_s_outr
        DO OBJ_MENS.SPR WITH ;
			"Produto : "+ m.codigo +;
		 	" Sai.Outr  Apurado = "+TRANSFORM(m.qtd_s_outr,"@RT 99,999")+;
		" Sai.Outr  Registrada = "+TRANSFORM(saldo.qtd_s_outr,"@RT 99,999")
	ENDIF
****
	SELE SALDO
	SKIP
ENDDO
*****
DO RELFIM.PRG          && FIM VAR P/ TERMOMETRO

SHOW WINDOW SCGC413 TOP

*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _2LX0VO716           m.cor_btn VALID                    ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC413,     Record Number:   44   ╨
*       ╨ Variable:            m.cor_btn                          ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      17                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _2lx0vo716     &&  m.cor_btn VALID
#REGION 1
 LN_ctr  = 0	  && CONTADOR DE CORRECOES REALIZADAS

SELE grupo
SET ORDER TO TAG classifica
SET NEAR ON
SEEK m.clasinicio
SET NEAR OFF
*******************
*---->   (INICIALIZACAO DO CONTROLE DE STATUS IMPRESSAO)
*******************	
DO RELINIC.PRG          && INICIA VAR P/ TERMOMETRO

LFsegue = .t.
LNregistro = RECNO()

COUNT  	WHILE grupo.classifica <= m.clasfim TO   LNimpressao

LNimpressos = 0
GO LNregistro
*******************
*******************
SELE itemmov
SET ORDER TO TAG movimento

SELE saldo

DO WHILE !EOF() AND saldo.empresa  = m.empresa AND ;
					YEAR(saldo.dtabert) 	= YEAR(m.dt_inicio)  AND ;
                    MONTH(saldo.dtabert)  	= MONTH(m.dt_inicio) AND ;
					saldo.classifica <= m.clasfim ;
                    AND LFsegue

	=UPtermo()

	*******************
	SELE saldo
	SET	ORDER TO TAG emp_mes
	SET NEAR ON
	SEEK STR(m.empresa,3)+STR(YEAR(m.dt_inicio),4)+;
		 STR(MONTH(m.dt_inicio),2)+grupo.classifica
		SET NEAR OFF
	*******************
	m.codigo     = grupo.codigo
	m.classifica = grupo.classifica

	SELE itemmov
	SET NEAR ON

	LDtmp = m.dt_inicio - DAY(m.dt_inicio) + 1 && INICIO DO MES

	SEEK STR(m.empresa,3)+m.codigo+DTOS(LDtmp)
	SET NEAR OFF
	LN_rgant = RECNO()
	DO WHILE !EOF() AND saldo.empresa = itemmov.empresa  ;
					AND saldo.codigo  = itemmov.codigo
		SCATTER MEMVAR
		SKIP
		DO WHILE !EOF() AND ;
			  m.empresa = itemmov.empresa AND ;
			   m.codigo  = itemmov.codigo  AND ;
		   	   m.data    = itemmov.data    AND ;
		   	   m.hora    = itemmov.hora    AND ;
			   m.tipo    = itemmov.tipo    AND ;
			   m.nota    = itemmov.nota    AND ;
			   m.ordem   = itemmov.ordem
		       DO OBJ_MENS.SPR WITH ;
			  " Duplicidade Mov.: Produto : "+ m.codigo +;
		 	  " Data : "+DTOC(m.data)+;
		 	  " Nota : "+STR(m.nota,6)+;
		 	  " Tipo : "+m.tipo
		   		LN_ctr = LN_ctr + 1
		   		WAIT WINDOW "Correcao em "+STR(LN_ctr,5)+" registros" NOWAIT
			   SKIP
		ENDDO
	ENDDO
	GO LN_rgant
	SET ORDER TO TAG movimento
	SELE SALDO
	SKIP
ENDDO
*****
WAIT WINDOW "OK ! " NOWAIT
DO RELFIM.PRG          && FIM VAR P/ TERMOMETRO
SHOW GET m.cor_btn DISABLE
SHOW WINDOWS SCGC413 TOP

*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _2LX0VO71C           m.canc_btn VALID                   ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC413,     Record Number:   45   ╨
*       ╨ Variable:            m.canc_btn                         ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      18                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _2lx0vo71c     &&  m.canc_btn VALID
#REGION 1
CLEAR GETS
CLEAR READ
isediting = .f.
RETURN .T.