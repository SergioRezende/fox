*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º 03/19/09             SCGC411.SPR               14:46:21 º
*       º                                                         º
*       ÇÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¶
*       º                                                         º
*       º Author's Name                                           º
*       º                                                         º
*       º Copyright (c) 2009 Company Name                         º
*       º Address                                                 º
*       º City,     Zip                                           º
*       º                                                         º
*       º Description:                                            º
*       º This program was automatically generated by GENSCRN.    º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½


*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º          SCGC411/MS-DOS Setup Code - SECTION 1          º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*

#REGION 1
*---------------------------------------------------------------*
* OPERA ARQUIVOS :
*			GRUPO
*		    SALDO
*			NOTA    => P/ PEGAR OS DIAS DE ATUALIZACAO DAS LOJAS
* OBJETIVO:	IMPRIMIR FISICO FINANCEIRO
*	
*---------------------------------------------------------------*

******>>>> INICIO CONTROLE AMBIENTAL

ON KEY LABEL ESCAPE

PRIVATE isediting,isadding,isreading
PRIVATE wp_record
PRIVATE isreadonly,is2table,wzalias
PRIVATE LS411areant
LS411areant = ALLTRIM(ALIAS()) && PERMITE RETORNAR A AREA ANTER. A CHAMADA

m.wzalias	=	SELECT()
m.isediting	=	.F.
m.isadding	=	.F.
m.isreading=	.F.
m.is2table 	= 	.F.
wp_flgfecha = 	.F. 		&& defaut nao fechamento da secao
WP_RECORD 	= 	0
wp_ref_local =  .f.     && NAO POSSUI CONTROLE DE REFRESH LOCAL

LFpordem     = .F.		&& AUTORIZA OU NAO A IMPRESSAO DA ORDEM NO RELAT.
LFpconsta	 = .F. 		&& CONTROLA OS ITENS QUE SERAM IMPRESSOS
						&& SO A TABELA OU TODOS PROD. DO CADASTRO

LScontroles  = "     "  && CONTEM OS CODIGOS DE CONTROLE DE PRODUTO QUE
						&& DEVEM SER IMPRESSOS

m.codinicio  = " "
m.clasinicio = " "
m.descinicio = " "
m.codfim     = " "    	&& CODIGO FINAL INFORMADO
m.clasfim    = " "    	&& CLASSIFIC. DE ENCERRA ALTERACAO
m.descfim    = " "
m.itemmov	 = "N"    	&&  IMPRIMIR ITENS NAO MOVIMENTADOS
LFtab411	= 	.F.		&& .F. =>  DEVE SER FECHADA NA SAIDA
LFgrp411	= 	.F.		&& .F. =>  DEVE SER FECHADA NA SAIDA
LFsld411	= 	.F.		&& .F. =>  DEVE SER FECHADA NA SAIDA
LFemp411	= 	.F.		&& .F. =>  DEVE SER FECHADA NA SAIDA
LFnfs411	= 	.F.		&& .F. =>  DEVE SER FECHADA NA SAIDA
LFitm411	= 	.F.		&& .F. =>  DEVE SER FECHADA NA SAIDA

LFnfirestone = .F.
m.tp_rel	=  1
m.rel1		= .f.
m.rel2		= .f.
******>>>> INICIO CONTROLE ARQUIVOS
IF !USED("nota")
	LFnfs411  	= .T.
	IF ! NetUse("nota")
		wp_flgfecha = .t.  && implica no fechamento da secao
	ENDIF
ENDIF
IF !USED("tab001")
	LFtab411  	= .T.
	IF ! NetUse("tab001")
		wp_flgfecha = .t.  && implica no fechamento da secao
	ENDIF
ENDIF
IF !USED("empresa")
	LFemp411	= .T.
	IF ! NetUse("empresa")
		wp_flgfecha = .t.  && implica no fechamento da secao
	ENDIF
ENDIF
IF !USED("grupo")
	LFgrp411	= .T.
	IF ! NetUse("grupo")
		wp_flgfecha = .t.  && implica no fechamento da secao
	ENDIF
ENDIF
IF !USED("itemmov")
	LFitm411	= .T.
	IF ! NetUse("itemmov")
		wp_flgfecha = .t.  && implica no fechamento da secao
	ENDIF
ENDIF
IF !USED("saldo")
	LFsld411	= .T.
	IF ! NetUse("saldo")
		wp_flgfecha = .t.  && implica no fechamento da secao
	ENDIF
ENDIF
IF wp_flgfecha
	DO ULfecha
	RETURN
ENDIF


#REGION 0
REGIONAL m.currarea, m.talkstat, m.compstat

IF SET("TALK") = "ON"
	SET TALK OFF
	m.talkstat = "ON"
ELSE
	m.talkstat = "OFF"
ENDIF
m.compstat = SET("COMPATIBLE")
SET COMPATIBLE FOXPLUS

*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º                MS-DOS Window definitions                º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*

IF NOT WEXIST("scgc411") ;
	OR UPPER(WTITLE("SCGC411")) == "SCGC411.PJX" ;
	OR UPPER(WTITLE("SCGC411")) == "SCGC411.SCX" ;
	OR UPPER(WTITLE("SCGC411")) == "SCGC411.MNX" ;
	OR UPPER(WTITLE("SCGC411")) == "SCGC411.PRG" ;
	OR UPPER(WTITLE("SCGC411")) == "SCGC411.FRX" ;
	OR UPPER(WTITLE("SCGC411")) == "SCGC411.QPR"
	DEFINE WINDOW scgc411 ;
		FROM INT((SROW()-20)/2),INT((SCOL()-78)/2) ;
		TO INT((SROW()-20)/2)+19,INT((SCOL()-78)/2)+77 ;
		TITLE "[ FISICO - FINANCEIRO ]" ;
		FOOTER "[ 411 ]" ;
		FLOAT ;
		NOCLOSE ;
		SHADOW ;
		NOMINIMIZE ;
		NONE ;
		COLOR SCHEME 1
ENDIF


*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º          SCGC411/MS-DOS Setup Code - SECTION 2          º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*

#REGION 1

******>>>> INICIO CONTROLE LOCAL

DO CASE
	CASE !wp_flgfecha
		*-------------------------> criado pelo wizard
		m.wzalias=SELECT()
		m.isreadonly=IIF(ISREAD(),.T.,.F.)
ENDCASE



*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º              SCGC411/MS-DOS Screen Layout               º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*

#REGION 1
IF WVISIBLE("scgc411")
	ACTIVATE WINDOW scgc411 SAME
ELSE
	ACTIVATE WINDOW scgc411 NOSHOW
ENDIF
@ 0,0 TO 19,77 ;
	COLOR SCHEME 23
@ 4,25 TO 7,75 ;
	COLOR SCHEME 23
@ 7,26 TO 7,74 ;
	COLOR SCHEME 24
@ 4,75 SAY "¿" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 5,75 TO 6,75 ;
	COLOR SCHEME 24
@ 7,75 SAY "Ù" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 4,41 SAY "[Intervalo Produtos]" ;
	SIZE 1,20, 0
@ 2,16 SAY "-" ;
	SIZE 1,1, 0
@ 1,10 TO 3,38 ;
	COLOR SCHEME 23
@ 3,11 TO 3,37 ;
	COLOR SCHEME 24
@ 3,38 SAY "Ù" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 2,38 SAY "³" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 1,38 SAY "¿" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 1,11 SAY "[Filial]" ;
	SIZE 1,8, 0
@ 1,51 TO 3,64 ;
	COLOR SCHEME 23
@ 3,52 TO 3,63 ;
	COLOR SCHEME 24
@ 3,64 SAY "Ù" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 2,64 SAY "³" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 1,64 SAY "¿" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 1,52 SAY "[Data Ref]" ;
	SIZE 1,10, 0
@ 19,1 TO 19,76 ;
	COLOR SCHEME 24
@ 19,77 SAY "Ù" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 1,77 TO 18,77 ;
	COLOR SCHEME 24
@ 0,77 SAY "¿" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 9,43 TO 11,75 ;
	COLOR SCHEME 23
@ 11,44 TO 11,74 ;
	COLOR SCHEME 24
@ 11,75 SAY "Ù" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 10,75 SAY "³" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 9,75 SAY "¿" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 16,3 TO 18,19 ;
	COLOR SCHEME 24
@ 18,4 TO 18,18 ;
	COLOR SCHEME 23
@ 17,19 SAY "³" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 23
@ 18,19 SAY "Ù" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 23
@ 16,19 SAY "¿" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 23
@ 16,30 TO 18,46 ;
	COLOR SCHEME 24
@ 18,31 TO 18,45 ;
	COLOR SCHEME 23
@ 17,46 SAY "³" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 23
@ 18,46 SAY "Ù" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 23
@ 16,46 SAY "¿" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 23
@ 16,58 TO 18,74 ;
	COLOR SCHEME 24
@ 18,59 TO 18,73 ;
	COLOR SCHEME 23
@ 17,74 SAY "³" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 23
@ 18,74 SAY "Ù" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 23
@ 16,74 SAY "¿" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 23
@ 0,23 SAY "[ Fisico Financeiro / Saldos ]" ;
	SIZE 1,30, 0
@ 0,69 SAY "[411]" ;
	SIZE 1,5, 0
@ 4,2 TO 7,24 ;
	COLOR SCHEME 23
@ 7,3 TO 7,23 ;
	COLOR SCHEME 24
@ 7,24 SAY "Ù" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 5,24 TO 6,24 ;
	COLOR SCHEME 24
@ 4,24 SAY "¿" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 4,6 SAY "[ Ordenar por ]" ;
	SIZE 1,15, 0
@ 9,44 SAY "[ Tipos de Controle de Prod. ]" ;
	SIZE 1,30, 0
@ 11,46 SAY "<TAB>-> Opcoes" ;
	SIZE 1,14, 0
@ 2,13 GET m.empresa ;
	SIZE 1,3 ;
	DEFAULT " " ;
	PICTURE "999" ;
	WHEN _2lx0vnvg9() ;
	VALID _2lx0vnvgd()
@ 2,17 GET m.nome_emp ;
	SIZE 1,20 ;
	DEFAULT " " ;
	PICTURE "@!K" ;
	WHEN _2lx0vnvgg()
@ 2,53 GET m.dt_ref ;
	SIZE 1,10 ;
	DEFAULT {  /  /  } ;
	WHEN _2lx0vnvgj()
@ 5,3 GET m.flordem ;
	PICTURE "@*RVN Ordem de Tabela  ;Classificacao" ;
	SIZE 1,21,0 ;
	DEFAULT 1 ;
	WHEN _2lx0vnvgm()
@ 5,26 GET m.codinicio ;
	SIZE 1,16 ;
	DEFAULT " " ;
	PICTURE "&masc_codi" ;
	WHEN _2lx0vnvgp() ;
	VALID _2lx0vnvgr() ;
	ERROR wp_msg
@ 5,50 GET m.codfim ;
	SIZE 1,16 ;
	DEFAULT " " ;
	PICTURE "&masc_codi" ;
	WHEN _2lx0vnvgw() ;
	VALID _2lx0vnvgy() ;
	ERROR wp_msg
@ 6,27 GET m.descinicio ;
	SIZE 1,22 ;
	DEFAULT " " ;
	PICTURE "@!" ;
	WHEN .f.
@ 6,51 GET m.descfim ;
	SIZE 1,24 ;
	DEFAULT " " ;
	PICTURE "@!" ;
	WHEN .f.
@ 8,1 GET m.tp_rel ;
	PICTURE "@*RVN Fis/Fin So de Itens Movimentados;Fis/Fin Independente de Movim.;Saldos das Lojas - Inclusive Zerados;Saldos das Lojas - Exceto Zerados" ;
	SIZE 1,40,0 ;
	DEFAULT 1 ;
	WHEN _2lx0vnvh2()
@ 10,53 GET LScontroles ;
	SIZE 1,10 ;
	DEFAULT " " ;
	WHEN _2lx0vnvh5() ;
	VALID _2lx0vnvh8()
@ 12,6 GET LFpordem ;
	PICTURE "@*C Imp. Numero de Ordem do Produto Para Ajudar Acerto do Relatorio" ;
	SIZE 1,67 ;
	DEFAULT 0 ;
	WHEN _2lx0vnvhc()
@ 13,6 GET LFpconsta ;
	PICTURE "@*C Imp. Somente Prod. que Constam na Tab.de Precos OU Tenham Saldo" ;
	SIZE 1,67 ;
	DEFAULT 0 ;
	WHEN _2lx0vnvhe()
@ 14,6 GET LFnfirestone ;
	PICTURE "@*C Selecionar so Produtos nao Firestone" ;
	SIZE 1,40 ;
	DEFAULT 0 ;
	WHEN _2lx0vnvhh()
@ 17,7 GET m.edit_btn ;
	PICTURE "@*HN \<Edita" ;
	SIZE 1,9,1 ;
	DEFAULT 1 ;
	WHEN _2lx0vnvhk() ;
	VALID btn_val1('EDIT') ;
	MESSAGE 'Permite a alteracao de dados do registro corrente'
@ 17,34 GET m.imp_btn ;
	PICTURE "@*HN \<Imprime" ;
	SIZE 1,9,1 ;
	DEFAULT 1 ;
	VALID _2lx0vnvhl() ;
	DISABLE
@ 17,62 GET m.canc_btn ;
	PICTURE "@*HN \<Saida" ;
	SIZE 1,9,1 ;
	DEFAULT 1 ;
	VALID _2lx0vnvhq()

IF NOT WVISIBLE("scgc411")
	ACTIVATE WINDOW scgc411
ENDIF

READ CYCLE ;
	ACTIVATE READACT() ;
	DEACTIVATE READDEAC()

RELEASE WINDOW scgc411

#REGION 0
IF m.talkstat = "ON"
	SET TALK ON
ENDIF
IF m.compstat = "ON"
	SET COMPATIBLE ON
ENDIF


*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º               SCGC411/MS-DOS Cleanup Code               º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*

#REGION 1
DO ULfecha
RETURN



*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º   SCGC411/MS-DOS Supporting Procedures and Functions    º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*

#REGION 1
PROCEDURE ULfecha
	IF LFnfs411  		&& .t. =>  DEVE SER FECHADA NA SAIDA
		=UP_fecha("nota")
	ENDIF
	IF LFtab411  		&& .t. =>  DEVE SER FECHADA NA SAIDA
		=UP_fecha("tab001")
	ENDIF
	IF LFemp411  		&& .t. =>  DEVE SER FECHADA NA SAIDA
		=UP_fecha("empresa")
	ENDIF
	IF LFgrp411  		&& .t. =>  DEVE SER FECHADA NA SAIDA
		=UP_fecha("grupo")
	ENDIF
	IF LFitm411  		&& .t. =>  DEVE SER FECHADA NA SAIDA
		=UP_fecha("itemmov")
	ENDIF
	IF LFsld411  		&& .t. =>  DEVE SER FECHADA NA SAIDA
		=UP_fecha("saldo")
	ENDIF

	wp_flgfecha = .F. 		&& defaut nao fechamento da secao
	IF !EMPTY(LS411areant)
		SELECT &LS411areant
	ENDIF
	ON KEY LABEL ESCAPE
	SET FORMAT TO
RETURN
PROCEDURE BTN_VAL1
	PARAMETER tecla, m.chv_ler, m.chv_compara, m.chv_brow
	LN_prxobj = _CUROBJ
    DO CASE
		CASE tecla = "EDIT" AND !isediting   && INICIA EDICAO
			m.dt_ref = date()
			SHOW GET edit_btn,1 PROMPT "\<Ok"
			SHOW GET m.imp_btn DISABLE
			isediting = .t.
			_CUROBJ = 1	
		    ON KEY LABEL ESCAPE KEYBOARD "{BACKTAB}"
			ON KEY LABEL END DO BTN_VAL1 WITH 'DELETE'
		CASE tecla = "EDIT" AND isediting     && CONFIRMA EDICAO
			SHOW GET edit_btn,1 PROMPT "\<Edita"
			isediting = .f.
			_CUROBJ = 1	
			SHOW GET m.imp_btn ENABLE
		    ON KEY LABEL ESCAPE
			ON KEY LABEL END
		CASE tecla = "DELETE" AND isediting     && CANCELA EDICAO
			SHOW GET edit_btn,1 PROMPT "\<Edita"
			isediting = .f.
			_CUROBJ = 1	
			SHOW GET m.imp_btn DISABLE
		    ON KEY LABEL ESCAPE
			ON KEY LABEL END
	ENDCASE
RETURN
************************************************************************
PROCEDURE ULimprel1		&& FISICO/FINANCEIRO
	SELE GRUPO
	SET ORDER TO TAG classifica
	SET NEAR ON
	SEEK  m.clasinicio
	SET NEAR OFF
*******************
*---->   (INICIALIZACAO DO CONTROLE DE STATUS IMPRESSAO)
*******************	
	DO RELINIC.PRG          && INICIA VAR P/ TERMOMETRO

	LFsegue = .t.
	LNregistro = RECNO()
    SET ORDER TO TAG classifica
    wl_tmp =  STRTRAN(STR(wp_empresa,3),' ','0')

	DO CASE
		CASE m.flordem = 1
			SET ORDER TO TAG ordem
		CASE m.flordem = 2
			SET ORDER TO TAG classifica
	ENDCASE			

	IF LFpconsta	&& SO PRODUTOS QUE CONSTAM NA TABELA
	    COUNT FOR (wl_tmp $ grupo.empresas OR wl_tmp $ grupo.tab_preco) ;
	    		AND STR(grupo.tp_control,1) $ LScontroles ;
			    WHILE  grupo.classifica <> m.clasfim TO LNimpressao
	ELSE			&& INDEPENDENTE DE CONSTAR NA TABELA
	    COUNT FOR STR(grupo.tp_control,1) $ LScontroles ;
			    WHILE  grupo.classifica <> m.clasfim TO LNimpressao
	ENDIF

	LNimpressos = 0
	GO LNregistro
*******************
*---->   (COMPLETADO PREPARACAO DO CONTROLE DE STATUS IMPRESSAO)
*******************	
	SELE SALDO
	SET ORDER TO TAG  EMP_MES

	SELE GRUPO
	SET RELATION TO  STR(m.empresa,3)+STR(YEAR(m.dt_ref),4)+;
		  STR(MONTH(m.dt_ref),2)+classifica  INTO saldo ADDITIVE
 	
**************************>>> REGISTRO DE SAIDAS
	m.titulo = "MES/ANO "+ ;
				 wp_meses(month(m.dt_ref))+"/"+STR(YEAR(m.dt_ref),4)
	LSorienta  = " "          && fornece as condicoe de impressao
    LSrel = "REL411"      && relatorio padrao p/ impressoras ex: epson

	IF m.tp_rel = 1    && IMPRIME SO MOVIMENTADOS
	 IF LFpconsta	&& SO PRODUTOS QUE CONSTAM NA TABELA
       LSorienta =  ;
         " FOR (wl_tmp $ grupo.empresas OR wl_tmp $ grupo.tab_preco)" + ;
         " AND (saldo.qtd_compra+saldo.qtd_venda+saldo.qtd_s_tran   " + ;
         " + saldo.qtd_s_outr+saldo.qtd_e_tran+saldo.qtd_e_outr <> 0)" + ;
         " AND STR(grupo.tp_control,1) $ LScontroles   " + ;
         " WHILE grupo.classifica <> m.clasfim AND LFsegue "
	 ELSE			&& INDEPENDENTE DE CONSTAR NA TABELA
       LSorienta =  ;
         " FOR (saldo.qtd_compra+saldo.qtd_venda+saldo.qtd_s_tran   " + ;
         " + saldo.qtd_s_outr+saldo.qtd_e_tran+saldo.qtd_e_outr <> 0)" + ;
         " AND STR(grupo.tp_control,1) $ LScontroles   " + ;
         " WHILE grupo.classifica <> m.clasfim AND LFsegue "
	 ENDIF
	ELSE
	 IF LFpconsta	&& SO PRODUTOS QUE CONSTAM NA TABELA
	    LSorienta = ;
         " FOR (wl_tmp $ grupo.empresas OR wl_tmp $ grupo.tab_preco)" + ;
         " AND (saldo.qtd_compra+saldo.qtd_venda+saldo.qtd_s_tran   " + ;
         " +saldo.qtd_s_outr+saldo.qtd_e_tran+saldo.qtd_e_outr  "     + ;
         " +saldo.sld_ante+saldo.sld_atu <> 0) " + ;
         " AND STR(grupo.tp_control,1) $ LScontroles   " + ;
         " WHILE grupo.classifica <> m.clasfim AND LFsegue "
	 ELSE			&& INDEPENDENTE DE CONSTAR NA TAB.
	    LSorienta = ;
         " FOR (saldo.qtd_compra+saldo.qtd_venda+saldo.qtd_s_tran   " + ;
         " +saldo.qtd_s_outr+saldo.qtd_e_tran+saldo.qtd_e_outr  "     + ;
         " +saldo.sld_ante+saldo.sld_atu <> 0) " + ;
         " AND STR(grupo.tp_control,1) $ LScontroles   " + ;
         " WHILE grupo.classifica <> m.clasfim AND LFsegue "
	 ENDIF

	ENDIF
    DO UPimpressao    && COORDENA TRABALHO DE IMPRESSAO
***********
	DO RELFIM.PRG          && FIM VAR P/ TERMOMETRO
*-----------------------------
RETURN

PROCEDURE ULimprel2		&& SALDOS DE FILIAIS
	
	PRIVATE LNdgyn, LNdsia, LNdw3, LNdbgs, LNdipg, LNdcgb, LNarg, LNdidl
	PRIVATE LNdidp
	
	**************************************************************
	* INFORMA OS DIAS EM QUE ESTAO ATUALIZADOS OS SALDOS		  *
	**************************************************************
	SELE nota
	SET ORDER TO TAG DATA
	SET NEAR ON
	*********************  DATA DA GYN (1)
	SEEK STR(2,3)
	SKIP -1
	DO WHILE !BOF() AND nota.status = 2 AND nota.empresa = 1 ;
		AND	MONTH(nota.data) > MONTH(m.dt_ref)
		SKIP -1
	ENDDO
	IF BOF() OR nota.empresa <> 1	
		LNdgyn = 99
	ELSE
		LNdgyn = DAY(nota.data)
	ENDIF
	*********************  DATA DA SIA (2)
	SEEK STR(3,3)
	SKIP -1
	DO WHILE !BOF() AND nota.status = 2 AND nota.empresa = 2 ;
		AND	MONTH(nota.data) > MONTH(m.dt_ref)
		SKIP -1
	ENDDO
	IF BOF() OR nota.empresa <> 2
		LNdsia = 99
	ELSE
		LNdsia = DAY(nota.data)
	ENDIF
	*********************  DATA DA W3  (3)
	SEEK STR(4,3)
	SKIP -1
	DO WHILE !BOF() AND nota.status = 2 AND nota.empresa = 3 ;
		AND	MONTH(nota.data) > MONTH(m.dt_ref)
		SKIP -1
	ENDDO
	IF BOF() OR nota.empresa <> 3
		LNdw3  = 99
	ELSE
		LNdw3  = DAY(nota.data)
	ENDIF
	*********************  DATA DA BGS (4)
	SEEK STR(5,3)
	SKIP -1
	DO WHILE !BOF() AND nota.status = 2 AND nota.empresa = 4 ;
		AND	MONTH(nota.data) > MONTH(m.dt_ref)
		SKIP -1
	ENDDO
	IF BOF() OR nota.empresa <> 4
		LNdbgs = 99
	ELSE
		LNdbgs = DAY(nota.data)
	ENDIF
	*********************  DATA DA IPG (5)
	SEEK STR(6,3)
	SKIP -1
	DO WHILE !BOF() AND nota.status = 2 AND nota.empresa = 5 ;
		AND	MONTH(nota.data) > MONTH(m.dt_ref)
		SKIP -1
	ENDDO
	IF BOF() OR nota.empresa <> 5
		LNdipg = 99
	ELSE
		LNdipg = DAY(nota.data)
	ENDIF
	*********************  DATA DA CGB (6)
	SEEK STR(7,3)
	SKIP -1
	DO WHILE !BOF() AND nota.status = 2 AND nota.empresa = 6 ;
		AND	MONTH(nota.data) > MONTH(m.dt_ref)
		SKIP -1
	ENDDO
	IF BOF() OR nota.empresa <> 6
		LNdcgb = 99
	ELSE
		LNdcgb = DAY(nota.data)
	ENDIF
	*********************  DATA DA ARG (8)
	SEEK STR(9,3)
	SKIP -1
	DO WHILE !BOF() AND nota.status = 2 AND nota.empresa = 8 ;
		AND	MONTH(nota.data) > MONTH(m.dt_ref)
		SKIP -1
	ENDDO
	IF BOF() OR nota.empresa <> 8
		LNdarg = 99
	ELSE
		LNdarg = DAY(nota.data)
	ENDIF
	*********************  DATA DA IDP (9)
	SEEK STR(10,3)
	SKIP -1
	DO WHILE !BOF() AND nota.status = 2 AND nota.empresa = 9 ;
		AND	MONTH(nota.data) > MONTH(m.dt_ref)
		SKIP -1
	ENDDO
	IF BOF() OR nota.empresa <> 9
		LNdidp = 99
	ELSE
		LNdidp = DAY(nota.data)
	ENDIF
	*********************  DATA DA IDL (10)
	SEEK STR(11,3)
	SKIP -1
	DO WHILE !BOF() AND nota.status = 2 AND nota.empresa = 10 ;
		AND	MONTH(nota.data) > MONTH(m.dt_ref)
		SKIP -1
	ENDDO
	IF BOF() OR nota.empresa <> 10
		LNdidl = 99
	ELSE
		LNdidl = DAY(nota.data)
	ENDIF

	**************************************************************
	SET NEAR OFF

	SELE GRUPO
	SET ORDER TO TAG classifica
	SET NEAR ON
	SEEK  m.clasinicio
	SET NEAR OFF
*******************
*---->   (INICIALIZACAO DO CONTROLE DE STATUS IMPRESSAO)
*******************	
	DO RELINIC.PRG          && INICIA VAR P/ TERMOMETRO

	LFsegue = .t.
	LNregistro = RECNO()
	DO CASE
		CASE m.flordem = 1
			SET ORDER TO TAG ordem
		CASE m.flordem = 2
			SET ORDER TO TAG classifica
	ENDCASE			

	IF LFpconsta	&& SO PRODUTOS QUE CONSTAM NA TABELA
	    COUNT FOR 	(STR(grupo.tp_control,1) $ LScontroles ;
	    			AND grupo.cdg_tipo  = 4  ;
			        AND !EMPTY(grupo.tab_preco)) ;
				    WHILE  grupo.classifica <> m.clasfim TO LNimpressao
	ELSE			&& INDEPENDENTE DE CONSTAR NA TABELA
	    COUNT FOR 	(STR(grupo.tp_control,1) $ LScontroles ;
	    			AND grupo.cdg_tipo  = 4) ;
				    WHILE  grupo.classifica <> m.clasfim TO LNimpressao
	ENDIF
	LNimpressos = 0
	GO LNregistro
	*******************
	*---->   (COMPLETADO PREPARACAO DO CONTROLE DE STATUS IMPRESSAO)
	*******************	
	SET RELATION TO
	**************************>>> REGISTRO DE SAIDAS
	m.titulo = "MES/ANO "+ ;
				 wp_meses(month(m.dt_ref))+"/"+STR(YEAR(m.dt_ref),4)
	LSorienta  = " "          && fornece as condicoe de impressao

	if m.tp_rel = 3		&& INCLUSIVE ITENS COM SALDO = 0
	    LSrel = "REL411A"      && relatorio padrao p/ impressoras ex: epson
	ELSE				&& MENOS ITENS COM SALDO = 0
	    LSrel = "REL411B"      && relatorio padrao p/ impressoras ex: epson
	ENDIF

	IF LFnfirestone
		IF LFpconsta	&& SO PRODUTOS QUE CONSTAM NA TABELA
			LSorienta = ;
			    " FOR (STR(grupo.tp_control,1) $ LScontroles "+ ;
		    	"   AND grupo.cdg_tipo = 4 "+;
				"   AND !EMPTY(grupo.tab_preco)) "+ ;
				"   AND grupo.codforn <> 1 " +;
			    "   WHILE grupo.classifica <> m.clasfim AND LFsegue "
		ELSE			&& INDEPENDENTE DA TABELA
			LSorienta = ;
			    " FOR (STR(grupo.tp_control,1) $ LScontroles "+ ;
		    	"   AND grupo.cdg_tipo = 4 )"+;
				"   AND grupo.codforn <> 1 " +;
			    "   WHILE grupo.classifica <> m.clasfim AND LFsegue "
		ENDIF
	ELSE
		IF LFpconsta	&& SO PRODUTOS QUE CONSTAM NA TABELA
			LSorienta = ;
			    " FOR (STR(grupo.tp_control,1) $ LScontroles "+ ;
		    	"   AND grupo.cdg_tipo = 4 "+;
				"   AND !EMPTY(grupo.tab_preco)) "+ ;
			    "   WHILE grupo.classifica <> m.clasfim AND LFsegue "
		ELSE			&& INDEPENDENTE DA TABELA
			LSorienta = ;
			    " FOR (STR(grupo.tp_control,1) $ LScontroles "+ ;
		    	"   AND grupo.cdg_tipo = 4 )"+;
			    "   WHILE grupo.classifica <> m.clasfim AND LFsegue "
		ENDIF
	ENDIF
    DO UPimpressao    && COORDENA TRABALHO DE IMPRESSAO
	***********
	***********
	DO RELFIM.PRG          && FIM VAR P/ TERMOMETRO
	*-----------------------------
RETURN



*****>>>>>>>>>>--------------------------
FUNCTION ULlesaldo  && RETORNA O SALDO DO PROD. NA filial
PARAMETERS LNemp, LSclas
	LSalias = ALIAS()

	SELE SALDO
	LNrgtmp = RECNO()
	LNret   = 0
	SEEK STR(LNemp,3)+STR(YEAR(m.dt_ref),4)+STR(MONTH(m.dt_ref),2)+LSclas
	IF FOUND()
		LNret = saldo.sld_atu
	ENDIF
	GO LNrgtmp

	SELE &LSalias
	
RETURN(LNret)
**********************************************************
FUNCTION ULultcust
PARAMETER LNemp,LScod,LDdt
	PRIVATE LNcusto,LSarqant,LDposiciona


	LDposiciona = LDdt - DAY(LDdt) + 1
	LDposiciona = GOMONTH(LDposiciona,1)
	LSarqant = ALIAS()

	SELE itemmov
	SET ORDER TO  TAG movimento
	SET NEAR ON
	SEEK STR(LNemp,3)+LScod+DTOS(LDposiciona)
	SET NEAR OFF
	SKIP -1
	
	IF !BOF() AND  itemmov.empresa = LNemp AND ;
			 	   itemmov.codigo  = LScod	
		IF itemmov.sld_estq = 0
			LNcusto = itemmov.vlr_estq
		ELSE
			LNcusto = itemmov.vlr_estq / itemmov.sld_estq
		ENDIF
	ELSE
		LNcusto = 0
	ENDIF
			 	
	SELE &LSarqant
RETURN(LNcusto)


*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _2LX0VNVG9           m.empresa WHEN                     º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         SCGC411,     Record Number:   56   º
*       º Variable:            m.empresa                          º
*       º Called By:           WHEN Clause                        º
*       º Object Type:         Field                              º
*       º Snippet Number:      1                                  º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*
FUNCTION _2lx0vnvg9     &&  m.empresa WHEN
#REGION 1
ON KEY LABEL ESCAPE	KEYBOARD "{END}"
IF LASTKEY() = 15 AND !(isediting)
	KEYBOARD "{ESCAPE}"
ENDIF
RETURN(isediting)

*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _2LX0VNVGD           m.empresa VALID                    º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         SCGC411,     Record Number:   56   º
*       º Variable:            m.empresa                          º
*       º Called By:           VALID Clause                       º
*       º Object Type:         Field                              º
*       º Snippet Number:      2                                  º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*
FUNCTION _2lx0vnvgd     &&  m.empresa VALID
#REGION 1
SELECT empresa
SET ORDER TO TAG empresa
IF LASTKEY() = 9
   ON KEY LABEL ESCAPE
   DO loc_dlog WITH .F.
   ON KEY LABEL ESCAPE DO BTN_VAL WITH 'DELETE'
   IF LASTKEY() = 27
		SELECT empresa
		RETURN .F.
	ENDIF
ELSE
	IF !SEEK(m.empresa)
		SELECT empresa
		RETURN .F.
	ENDIF
ENDIF
m.empresa   = empresa
m.nome_emp  = empresa.nome
SHOW GET m.empresa
SHOW GET m.nome_emp
SELECT empresa
RETURN .T.


*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _2LX0VNVGG           m.nome_emp WHEN                    º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         SCGC411,     Record Number:   57   º
*       º Variable:            m.nome_emp                         º
*       º Called By:           WHEN Clause                        º
*       º Object Type:         Field                              º
*       º Snippet Number:      3                                  º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*
FUNCTION _2lx0vnvgg     &&  m.nome_emp WHEN
#REGION 1
ON KEY LABEL ESCAPE KEYBOARD "{BACKTAB}"
RETURN(.f.)


*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _2LX0VNVGJ           m.dt_ref WHEN                      º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         SCGC411,     Record Number:   58   º
*       º Variable:            m.dt_ref                           º
*       º Called By:           WHEN Clause                        º
*       º Object Type:         Field                              º
*       º Snippet Number:      4                                  º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*
FUNCTION _2lx0vnvgj     &&  m.dt_ref WHEN
#REGION 1
ON KEY LABEL ESCAPE	KEYBOARD "{END}"
IF LASTKEY() = 15 AND !(isediting)
	KEYBOARD "{ESCAPE}"
ENDIF
ON KEY LABEL ENTER
RETURN(isediting)

*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _2LX0VNVGM           m.flordem WHEN                     º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         SCGC411,     Record Number:   59   º
*       º Variable:            m.flordem                          º
*       º Called By:           WHEN Clause                        º
*       º Object Type:         Radio Button                       º
*       º Snippet Number:      5                                  º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*
FUNCTION _2lx0vnvgm     &&  m.flordem WHEN
#REGION 1
ON KEY LABEL ESCAPE	KEYBOARD "{END}"
IF LASTKEY() = 15
	KEYBOARD "{ESCAPE}"
ENDIF
ON KEY LABEL ENTER  KEYBOARD "{RIGHTARROW}"
RETURN(isediting)

*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _2LX0VNVGP           m.codinicio WHEN                   º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         SCGC411,     Record Number:   60   º
*       º Variable:            m.codinicio                        º
*       º Called By:           WHEN Clause                        º
*       º Object Type:         Field                              º
*       º Snippet Number:      6                                  º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*
FUNCTION _2lx0vnvgp     &&  m.codinicio WHEN
#REGION 1
ON KEY LABEL ENTER
ON KEY LABEL ESCAPE KEYBOARD "{BACKTAB}"
RETURN(isediting or isreading)

*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _2LX0VNVGR           m.codinicio VALID                  º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         SCGC411,     Record Number:   60   º
*       º Variable:            m.codinicio                        º
*       º Called By:           VALID Clause                       º
*       º Object Type:         Field                              º
*       º Snippet Number:      7                                  º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*
FUNCTION _2lx0vnvgr     &&  m.codinicio VALID
#REGION 1
SELE grupo

IF EMPTY(m.codinicio) AND LASTKEY() <> 9
	DO CASE
		CASE m.flordem = 1
			SET ORDER TO TAG ordem
		CASE m.flordem = 2
			SET ORDER TO TAG classifica
	ENDCASE			
	GO TOP
	m.clasinicio  = grupo.CLASSIFICA
	m.descinicio  =   "PRIMEIRO"
	SHOW GET  m.descinicio
	RETURN(.T.)
ENDIF
SELE grupo
SET ORDER TO TAG codigo
SET NEAR ON
SEEK ALLTRIM(m.codinicio)
SET NEAR OFF
*----------------------------------------------------------*
SELECT grupo
ON KEY LABEL ESCAPE
IF LASTKEY() = 9
	DO CASE
		CASE m.flordem = 1
			SET ORDER TO TAG ordem
		CASE m.flordem = 2
			SET ORDER TO TAG classifica
	ENDCASE			
	ON KEY LABEL ESCAPE
	DO loc_dlog WITH .T.
	ON KEY LABEL ESCAPE KEYBOARD "{BACKTAB}"
	IF LASTKEY() = 27
		RETURN .F.
	ENDIF
ENDIF
m.codinicio  = grupo.codigo
m.clasinicio = grupo.classifica
m.descinicio = grupo.descricao
*******
SHOW GET  m.descinicio
RETURN .t.


*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _2LX0VNVGW           m.codfim WHEN                      º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         SCGC411,     Record Number:   61   º
*       º Variable:            m.codfim                           º
*       º Called By:           WHEN Clause                        º
*       º Object Type:         Field                              º
*       º Snippet Number:      8                                  º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*
FUNCTION _2lx0vnvgw     &&  m.codfim WHEN
#REGION 1
ON KEY LABEL ENTER
ON KEY LABEL ESCAPE KEYBOARD "{BACKTAB}"
RETURN(isediting or isreading)

*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _2LX0VNVGY           m.codfim VALID                     º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         SCGC411,     Record Number:   61   º
*       º Variable:            m.codfim                           º
*       º Called By:           VALID Clause                       º
*       º Object Type:         Field                              º
*       º Snippet Number:      9                                  º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*
FUNCTION _2lx0vnvgy     &&  m.codfim VALID
#REGION 1
SELE grupo
IF EMPTY(m.codfim) AND LASTKEY() <> 9
	DO CASE
		CASE m.flordem = 1
			SET ORDER TO TAG ordem
		CASE m.flordem = 2
			SET ORDER TO TAG classifica
	ENDCASE			
	GO BOTT
	m.clasfim 	= 	alltrim(grupo.classifica)+REPL("9",15)
	m.descfim   =   "ULTIMO"
	SHOW GET  m.descfim
	RETURN(.T.)
ENDIF
SELE grupo
SET ORDER TO TAG codigo
SET NEAR ON
SEEK ALLTRIM(m.codfim)
SET NEAR OFF
*----------------------------------------------------------*
SELECT grupo
ON KEY LABEL ESCAPE
IF LASTKEY() = 9
	DO CASE
		CASE m.flordem = 1
			SET ORDER TO TAG ordem
		CASE m.flordem = 2
			SET ORDER TO TAG classifica
	ENDCASE			
	ON KEY LABEL ESCAPE
	DO loc_dlog WITH .T.
	ON KEY LABEL ESCAPE KEYBOARD "{BACKTAB}"
	IF LASTKEY() = 27
		RETURN .F.
	ENDIF
ENDIF
m.codfim  = grupo.codigo
m.clasfim = grupo.classifica
m.descfim = grupo.descricao
*******
*******
SHOW GET  m.descfim
RETURN .t.


*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _2LX0VNVH2           m.tp_rel WHEN                      º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         SCGC411,     Record Number:   64   º
*       º Variable:            m.tp_rel                           º
*       º Called By:           WHEN Clause                        º
*       º Object Type:         Radio Button                       º
*       º Snippet Number:      10                                 º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*
FUNCTION _2lx0vnvh2     &&  m.tp_rel WHEN
#REGION 1
IF isediting
	ON KEY LABEL ENTER KEYBOARD "{RIGHTARROW}"
ENDIF	
RETURN(isediting)


*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _2LX0VNVH5           LScontroles WHEN                   º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         SCGC411,     Record Number:   65   º
*       º Variable:            LScontroles                        º
*       º Called By:           WHEN Clause                        º
*       º Object Type:         Field                              º
*       º Snippet Number:      11                                 º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*
FUNCTION _2lx0vnvh5     &&  LScontroles WHEN
#REGION 1
ON KEY LABEL ENTER
ON KEY LABEL ESCAPE KEYBOARD "{BACKTAB}"
RETURN(isediting)


*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _2LX0VNVH8           LScontroles VALID                  º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         SCGC411,     Record Number:   65   º
*       º Variable:            LScontroles                        º
*       º Called By:           VALID Clause                       º
*       º Object Type:         Field                              º
*       º Snippet Number:      12                                 º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*
FUNCTION _2lx0vnvh8     &&  LScontroles VALID
#REGION 1
IF LASTKEY() = 13 OR LASTKEY() = 27 OR LASTKEY() = 15
	RETURN(.T.)
ENDIF
SELECT tab001
IF LASTKEY() = 9
   ON KEY LABEL ESCAPE
   DO loc_dlog WITH .T., "tab001.tabela = 'TPC'"
   ON KEY LABEL ESCAPE KEYBOARD "{BACKTAB}"
   SELECT grupo
   IF LASTKEY() = 27
      RETURN .F.
   ENDIF
   LScontroles = ALLTRIM(LScontroles)+(tab001.codigo)+"/"
   SHOW GET m.LScontroles
ENDIF
SELECT grupo
KEYBOARD CHR(13)
RETURN(-1)


*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _2LX0VNVHC           LFpordem WHEN                      º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         SCGC411,     Record Number:   66   º
*       º Variable:            LFpordem                           º
*       º Called By:           WHEN Clause                        º
*       º Object Type:         Check Box                          º
*       º Snippet Number:      13                                 º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*
FUNCTION _2lx0vnvhc     &&  LFpordem WHEN
#REGION 1
ON KEY LABEL ENTER  KEYBOARD "{RIGHTARROW}"
RETURN(isediting)

*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _2LX0VNVHE           LFpconsta WHEN                     º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         SCGC411,     Record Number:   67   º
*       º Variable:            LFpconsta                          º
*       º Called By:           WHEN Clause                        º
*       º Object Type:         Check Box                          º
*       º Snippet Number:      14                                 º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*
FUNCTION _2lx0vnvhe     &&  LFpconsta WHEN
#REGION 1
ON KEY LABEL ENTER  KEYBOARD "{RIGHTARROW}"
RETURN(isediting)

*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _2LX0VNVHH           LFnfirestone WHEN                  º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         SCGC411,     Record Number:   68   º
*       º Variable:            LFnfirestone                       º
*       º Called By:           WHEN Clause                        º
*       º Object Type:         Check Box                          º
*       º Snippet Number:      15                                 º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*
FUNCTION _2lx0vnvhh     &&  LFnfirestone WHEN
#REGION 1
ON KEY LABEL ENTER  KEYBOARD "{RIGHTARROW}"
RETURN(isediting)

*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _2LX0VNVHK           m.edit_btn WHEN                    º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         SCGC411,     Record Number:   69   º
*       º Variable:            m.edit_btn                         º
*       º Called By:           WHEN Clause                        º
*       º Object Type:         Push Button                        º
*       º Snippet Number:      16                                 º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*
FUNCTION _2lx0vnvhk     &&  m.edit_btn WHEN
#REGION 1
ON KEY LABEL ENTER
ON KEY LABEL ESCAPE KEYBOARD "{BACKTAB}"
RETURN(.T.)

*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _2LX0VNVHL           m.imp_btn VALID                    º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         SCGC411,     Record Number:   70   º
*       º Variable:            m.imp_btn                          º
*       º Called By:           VALID Clause                       º
*       º Object Type:         Push Button                        º
*       º Snippet Number:      17                                 º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*
FUNCTION _2lx0vnvhl     &&  m.imp_btn VALID
#REGION 1
	SELE EMPRESA
	SET ORDER TO TAG empresa
	SEEK m.empresa
	SELE GRUPO
	SET ORDER TO TAG classifica
	SELE SALDO
	SET ORDER TO  TAG emp_mes
	SELE GRUPO
	SET ORDER TO TAG classifica
	SET NEAR ON
	SEEK  m.clasinicio
	SET NEAR OFF
	IF EOF()
		WAIT WINDOW 'NAO EXISTEM DADOS  PARA PROCESSO.'
		SHOW GET m.imp_btn DISABLE
		RETURN
	ENDIF
	if m.tp_rel < 3
	   DO ULimprel1    && FISICO/FINANCEIRO
	ELSE
	   DO ULimprel2    && RELACAO DE ESTOQUE FILIAIS
	ENDIF
***********
    SET PRINTER TO SET('PRINTER',1)
	SET RELATION TO
	SET POINT TO
	SET SEPARATOR  TO

	SHOW WINDOW SCGC411 TOP
	SHOW GET m.imp_btn DISABLE

RETURN


*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _2LX0VNVHQ           m.canc_btn VALID                   º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         SCGC411,     Record Number:   71   º
*       º Variable:            m.canc_btn                         º
*       º Called By:           VALID Clause                       º
*       º Object Type:         Push Button                        º
*       º Snippet Number:      18                                 º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*
FUNCTION _2lx0vnvhq     &&  m.canc_btn VALID
#REGION 1
CLEAR GETS
CLEAR READ
isediting = .f.
RETURN .T.