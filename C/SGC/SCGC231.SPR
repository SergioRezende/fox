*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ 03/19/09             SCGC231.SPR               14:50:01 ╨
*       ╨                                                         ╨
*       гддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╤
*       ╨                                                         ╨
*       ╨ Author's Name                                           ╨
*       ╨                                                         ╨
*       ╨ Copyright (c) 2009 Company Name                         ╨
*       ╨ Address                                                 ╨
*       ╨ City,     Zip                                           ╨
*       ╨                                                         ╨
*       ╨ Description:                                            ╨
*       ╨ This program was automatically generated by GENSCRN.    ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨          SCGC231/MS-DOS Setup Code - SECTION 1          ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*

#REGION 1

*~ WIZARDSCREEN
#DEFINE C_DBFEMPTY		'Database is empty, add a record?'
#DEFINE C_DELREC		'Apagar Registro Selecionado ?'
#DEFINE C_ENDFILE		'Final do Arquivo.'
#DEFINE C_CANCTRF		'Confirma o Cancelamento da Devolucao ? '
#DEFINE C_APROTRF		'Confirma o Aprovacao da Devolucao ? '
*---------------------------------------------------------------------*
* ARQUIVOS UTILIZADOS :                                               *
*              - EMPRESA
*              - ITEMMOV
*              - SALDO
* OBJETIVOS : COMPARAR OS SALDOS APURADOS NA FILIAL COM SALDOS AP CENTRAL
*	
*---------------------------------------------------------------------*
******>>>> INICIO CONTROLE AMBIENTAL
ON KEY LABEL ESCAPE
PRIVATE isediting,isadding,isreading
PRIVATE wp_record
PRIVATE isreadonly,is2table,wzalias
PRIVATE LS231areant
LS231areant	= ALLTRIM(ALIAS()) && PERMITE RETORNAR A AREA ANTER. A CHAMADA

m.wzalias	=	SELECT()
m.isediting	=	.F.
m.isadding	=	.F.
m.isreading =  	.F.
m.is2table 	= 	.F.
wp_flgfecha = 	.F. 		&& defaut nao fechamento da secao
WP_RECORD 	= 	0
wp_ref_local =  .T.     &&  POSSUI CONTROLE DE REFRESH LOCAL

LFmarca     =   .F.
LFsaida     =   .F.
LFnatureza	=	.F.

LFcli231	= 	.F.		&& .F. =>  DEVE SER FECHADA NA SAIDA
LF001231	= 	.F.		&& .F. =>  DEVE SER FECHADA NA SAIDA
LFemp231	= 	.F.		&& .F. =>  DEVE SER FECHADA NA SAIDA
LFite231	= 	.F.		&& .F. =>  DEVE SER FECHADA NA SAIDA
LFsld231 	= 	.F.		&& .F. =>  DEVE SER FECHADA NA SAIDA
LFgru231 	= 	.F.		&& .F. =>  DEVE SER FECHADA NA SAIDA

********>>>>>> INTERESE LOCAL
wl_cota     = .f.
iscancela   = .f.
isitens     = .f.     && indica se houve edicao doas itens durante ed. orca.

m.grupo_I1  = 0
m.grupo_F1  = 0
m.codI1     = " "
m.clasI1    = " "
m.codF1     = " "    && CODIGO FINAL INFORMADO
m.clasF1    = " "    && CLASSIFIC. DE ENCERRA ALTERACAO

m.grupo_I2  = 0
m.grupo_F2  = 0
m.codI2     = " "
m.clasI2    = " "
m.codF2     = " "    && CODIGO FINAL INFORMADO
m.clasF2    = " "    && CLASSIFIC. DE ENCERRA ALTERACAO

m.grupo_I3  = 0
m.grupo_F3  = 0
m.codI3     = " "
m.clasI3    = " "
m.codF3     = " "    && CODIGO FINAL INFORMADO
m.clasF3    = " "    && CLASSIFIC. DE ENCERRA ALTERACAO

m.grupo_I4  = 0
m.grupo_F4  = 0
m.codI4     = " "
m.clasI4    = " "
m.codF4     = " "    && CODIGO FINAL INFORMADO
m.clasF4    = " "    && CLASSIFIC. DE ENCERRA ALTERACAO

m.grupo_I5  = 0
m.grupo_F5  = 0
m.codI5     = " "
m.clasI5    = " "
m.codF5     = " "    && CODIGO FINAL INFORMADO
m.clasF5    = " "    && CLASSIFIC. DE ENCERRA ALTERACAO

wl_arqtmp    = ""   && alias para arq. temporario

******>>>> INICIO CONTROLE ARQUIVOS

*>> parametros repassados a btn_val


VLleitura = "" && OPERACOES DE REMESSA
                         * repassa chave de leitura p/ btn_val
VLlerfim  = ""  && 1o REG. DE OPERACOES DE REQUISICAO
           * repassa chave de leitura p/ btn_val (POSICAO FINAL + 1 REG)
VLcompara = ""
                         * repassa chave de comparacao p/ btn_val
VLchvlimi = ""  && otimiza browse
*******************************************************
IF !USED("clientes")
	LFcli231	= .T.
	IF ! NetUse("clientes")
		wp_flgfecha = .t.  && implica no fechamento da secao
	ENDIF
ENDIF
IF !USED("tab001")
	LF001231	= .T.
	IF ! NetUse("tab001")
		wp_flgfecha = .t.  && implica no fechamento da secao
	ENDIF
ENDIF
IF !USED("empresa")
	LFemp231	= .T.
	IF ! NetUse("empresa")
		wp_flgfecha = .t.  && implica no fechamento da secao
	ENDIF
ENDIF
IF !USED("grupo")
	LFgru231	= .T.
	IF ! NetUse("grupo")
		wp_flgfecha = .t.  && implica no fechamento da secao
	ENDIF
ENDIF
IF !USED("saldo")
	LFsld231	= .T.
	IF ! NetUse("saldo")
		wp_flgfecha = .t.  && implica no fechamento da secao
	ENDIF
ENDIF
IF !USED("itemmov")
	LFite231	= .T.
	IF ! NetUse("itemmov")
		wp_flgfecha = .t.  && implica no fechamento da secao
	ENDIF
ENDIF
IF wp_flgfecha
	DO ULfecha 		&& FECHA ARQUIVOS ABERTOS
	RETURN
ENDIF


#REGION 0
REGIONAL m.currarea, m.talkstat, m.compstat

IF SET("TALK") = "ON"
	SET TALK OFF
	m.talkstat = "ON"
ELSE
	m.talkstat = "OFF"
ENDIF
m.compstat = SET("COMPATIBLE")
SET COMPATIBLE FOXPLUS

*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨                MS-DOS Window definitions                ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*

IF NOT WEXIST("scgc231") ;
	OR UPPER(WTITLE("SCGC231")) == "SCGC231.PJX" ;
	OR UPPER(WTITLE("SCGC231")) == "SCGC231.SCX" ;
	OR UPPER(WTITLE("SCGC231")) == "SCGC231.MNX" ;
	OR UPPER(WTITLE("SCGC231")) == "SCGC231.PRG" ;
	OR UPPER(WTITLE("SCGC231")) == "SCGC231.FRX" ;
	OR UPPER(WTITLE("SCGC231")) == "SCGC231.QPR"
	DEFINE WINDOW scgc231 ;
		FROM INT((SROW()-21)/2),INT((SCOL()-72)/2) ;
		TO INT((SROW()-21)/2)+20,INT((SCOL()-72)/2)+71 ;
		TITLE "[ Entradas e Saidas em Peso Borracha ]" ;
		FOOTER "[ 231 ]" ;
		FLOAT ;
		NOCLOSE ;
		SHADOW ;
		NOMINIMIZE ;
		NONE ;
		COLOR SCHEME 1
ENDIF


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨          SCGC231/MS-DOS Setup Code - SECTION 2          ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*

#REGION 1
******>>>> INICIO CONTROLE LOCAL


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨              SCGC231/MS-DOS Screen Layout               ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*

#REGION 1
IF WVISIBLE("scgc231")
	ACTIVATE WINDOW scgc231 SAME
ELSE
	ACTIVATE WINDOW scgc231 NOSHOW
ENDIF
@ 2,5 SAY "1o" ;
	SIZE 1,2, 0
@ 3,5 SAY "2o" ;
	SIZE 1,2, 0
@ 4,5 SAY "3o" ;
	SIZE 1,2, 0
@ 5,5 SAY "4o" ;
	SIZE 1,2, 0
@ 6,5 SAY "5o" ;
	SIZE 1,2, 0
@ 1,2 TO 7,63 ;
	COLOR SCHEME 23
@ 7,3 TO 7,62 ;
	COLOR SCHEME 24
@ 7,63 SAY "ы" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 2,63 TO 6,63 ;
	COLOR SCHEME 24
@ 1,63 SAY "©" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 0,0 TO 20,71 ;
	COLOR SCHEME 23
@ 0,13 SAY "[ Resumo das Entradas e Saida em Peso ]" ;
	SIZE 1,39, 0
@ 1,29 SAY "[Codigo Inicial]" ;
	SIZE 1,16, 0
@ 1,48 SAY "[Codigo Final]" ;
	SIZE 1,14, 0
@ 8,24 TO 10,43 ;
	COLOR SCHEME 23
@ 10,25 TO 10,42 ;
	COLOR SCHEME 24
@ 10,43 SAY "ы" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 9,43 SAY "Ё" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 8,43 SAY "©" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 8,25 SAY "[M┬s de Referecia]" ;
	SIZE 1,18, 0
@ 11,2 TO 13,67 ;
	COLOR SCHEME 23
@ 13,3 TO 13,66 ;
	COLOR SCHEME 24
@ 13,67 SAY "ы" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 11,67 SAY "©" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 12,67 SAY "Ё" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 11,3 SAY "[Opcoes de Relatorio]" ;
	SIZE 1,21, 0
@ 14,4 TO 16,65 ;
	COLOR SCHEME 23
@ 16,5 TO 16,64 ;
	COLOR SCHEME 24
@ 16,65 SAY "ы" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 15,65 SAY "Ё" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 14,65 SAY "©" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 14,26 SAY "Titulo de Relatorio" ;
	SIZE 1,19, 0
@ 17,5 TO 19,21 ;
	COLOR SCHEME 24
@ 19,6 TO 19,20 ;
	COLOR SCHEME 23
@ 18,21 SAY "Ё" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 23
@ 19,21 SAY "ы" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 23
@ 17,21 SAY "©" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 23
@ 17,28 TO 19,44 ;
	COLOR SCHEME 24
@ 19,29 TO 19,43 ;
	COLOR SCHEME 23
@ 18,44 SAY "Ё" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 23
@ 19,44 SAY "ы" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 23
@ 17,44 SAY "©" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 23
@ 17,50 TO 19,66 ;
	COLOR SCHEME 24
@ 19,51 TO 19,65 ;
	COLOR SCHEME 23
@ 18,66 SAY "Ё" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 23
@ 19,66 SAY "ы" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 23
@ 17,66 SAY "©" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 23
@ 20,1 TO 20,70 ;
	COLOR SCHEME 24
@ 20,71 SAY "ы" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 1,71 TO 19,71 ;
	COLOR SCHEME 24
@ 0,65 SAY "©" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 0,59 SAY "[231]" ;
	SIZE 1,5, 0
@ 2,9 GET m.desc1 ;
	SIZE 1,19 ;
	DEFAULT " " ;
	WHEN _2lx0vsl6f()
@ 2,32 GET m.grupo_I1 ;
	SIZE 1,2 ;
	DEFAULT 0 ;
	WHEN isediting or isreading ;
	VALID _2lx0vsl6i() ;
	ERROR wp_msg
@ 2,39 GET m.subgrp_I1 ;
	SIZE 1,3 ;
	DEFAULT 0 ;
	WHEN isediting or isreading ;
	VALID _2lx0vsl6j() ;
	ERROR wp_msg
@ 2,50 GET m.grupo_F1 ;
	SIZE 1,2 ;
	DEFAULT 0 ;
	WHEN isediting or isreading ;
	VALID _2lx0vsl6k() ;
	ERROR wp_msg
@ 2,56 GET m.subgrp_F1 ;
	SIZE 1,3 ;
	DEFAULT 0 ;
	WHEN isediting or isreading ;
	VALID _2lx0vsl6l() ;
	ERROR wp_msg
@ 3,9 GET m.desc2 ;
	SIZE 1,19 ;
	DEFAULT " " ;
	WHEN _2lx0vsl70()
@ 3,32 GET m.grupo_I2 ;
	SIZE 1,2 ;
	DEFAULT 0 ;
	WHEN isediting or isreading ;
	VALID _2lx0vsl74() ;
	ERROR wp_msg
@ 3,39 GET m.subgrp_I2 ;
	SIZE 1,3 ;
	DEFAULT 0 ;
	WHEN isediting or isreading ;
	VALID _2lx0vsl78() ;
	ERROR wp_msg
@ 3,50 GET m.grupo_F2 ;
	SIZE 1,2 ;
	DEFAULT 0 ;
	WHEN isediting or isreading ;
	VALID _2lx0vsl7c() ;
	ERROR wp_msg
@ 3,56 GET m.subgrp_F2 ;
	SIZE 1,3 ;
	DEFAULT 0 ;
	WHEN isediting or isreading ;
	VALID _2lx0vsl7h() ;
	ERROR wp_msg
@ 4,9 GET m.desc3 ;
	SIZE 1,19 ;
	DEFAULT " " ;
	WHEN _2lx0vsl7m()
@ 4,32 GET m.grupo_I3 ;
	SIZE 1,2 ;
	DEFAULT 0 ;
	WHEN isediting or isreading ;
	VALID _2lx0vsl7p() ;
	ERROR wp_msg
@ 4,39 GET m.subgrp_I3 ;
	SIZE 1,3 ;
	DEFAULT 0 ;
	WHEN isediting or isreading ;
	VALID _2lx0vsl7t() ;
	ERROR wp_msg
@ 4,50 GET m.grupo_F3 ;
	SIZE 1,2 ;
	DEFAULT 0 ;
	WHEN isediting or isreading ;
	VALID _2lx0vsl7y() ;
	ERROR wp_msg
@ 4,56 GET m.subgrp_F3 ;
	SIZE 1,3 ;
	DEFAULT 0 ;
	WHEN isediting or isreading ;
	VALID _2lx0vsl82() ;
	ERROR wp_msg
@ 5,9 GET m.desc4 ;
	SIZE 1,19 ;
	DEFAULT " " ;
	WHEN _2lx0vsl83()
@ 5,32 GET m.grupo_I4 ;
	SIZE 1,2 ;
	DEFAULT 0 ;
	WHEN isediting or isreading ;
	VALID _2lx0vsl84() ;
	ERROR wp_msg
@ 5,39 GET m.subgrp_I4 ;
	SIZE 1,3 ;
	DEFAULT 0 ;
	WHEN isediting or isreading ;
	VALID _2lx0vsl85() ;
	ERROR wp_msg
@ 5,50 GET m.grupo_F4 ;
	SIZE 1,2 ;
	DEFAULT 0 ;
	WHEN isediting or isreading ;
	VALID _2lx0vsl8j() ;
	ERROR wp_msg
@ 5,56 GET m.subgrp_F4 ;
	SIZE 1,3 ;
	DEFAULT 0 ;
	WHEN isediting or isreading ;
	VALID _2lx0vsl8n() ;
	ERROR wp_msg
@ 6,9 GET m.desc5 ;
	SIZE 1,19 ;
	DEFAULT " " ;
	WHEN _2lx0vsl8s()
@ 6,32 GET m.grupo_I5 ;
	SIZE 1,2 ;
	DEFAULT 0 ;
	WHEN isediting or isreading ;
	VALID _2lx0vsl8v() ;
	ERROR wp_msg
@ 6,39 GET m.subgrp_I5 ;
	SIZE 1,3 ;
	DEFAULT 0 ;
	WHEN isediting or isreading ;
	VALID _2lx0vsl8z() ;
	ERROR wp_msg
@ 6,50 GET m.grupo_F5 ;
	SIZE 1,2 ;
	DEFAULT 0 ;
	WHEN isediting or isreading ;
	VALID _2lx0vsl94() ;
	ERROR wp_msg
@ 6,56 GET m.subgrp_F5 ;
	SIZE 1,3 ;
	DEFAULT 0 ;
	WHEN isediting or isreading ;
	VALID _2lx0vsl99() ;
	ERROR wp_msg
@ 9,31 GET mes_A ;
	SIZE 1,5 ;
	DEFAULT " " ;
	PICTURE "99.99" ;
	WHEN _2lx0vsl9f()
@ 12,3 GET LFsaida ;
	PICTURE "@*C Entradas e Saidas" ;
	SIZE 1,21 ;
	DEFAULT 0 ;
	WHEN _2lx0vsl9h()
@ 12,28 GET LFmarca ;
	PICTURE "@*C Por Marca" ;
	SIZE 1,13 ;
	DEFAULT 0 ;
	WHEN _2lx0vsl9l()
@ 12,45 GET LFnatureza ;
	PICTURE "@*C Por Natureza Vlr." ;
	SIZE 1,21 ;
	DEFAULT 0 ;
	WHEN _2lx0vsl9m()
@ 15,6 GET m.titulo ;
	SIZE 1,58 ;
	DEFAULT " " ;
	WHEN _2lx0vsl9n()
@ 18,8 GET m.edit_btn ;
	PICTURE "@*HN \<Edita" ;
	SIZE 1,9,1 ;
	DEFAULT 1 ;
	VALID btn_val1('EDIT') ;
	MESSAGE 'Permite a alteracao de dados do registro corrente'
@ 18,31 GET m.imp_btn ;
	PICTURE "@*HN \<Imprimir" ;
	SIZE 1,10,1 ;
	DEFAULT 1 ;
	VALID _2lx0vsl9o() ;
	DISABLE
@ 18,55 GET m.canc_btn ;
	PICTURE "@*HT \<Saida" ;
	SIZE 1,7,1 ;
	DEFAULT 1 ;
	VALID _2lx0vsl9p()

IF NOT WVISIBLE("scgc231")
	ACTIVATE WINDOW scgc231
ENDIF


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨     MS-DOSREAD contains clauses from SCREEN scgc231     ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*

READ CYCLE ;
	ACTIVATE READACT() ;
	DEACTIVATE READDEAC() ;
	NOLOCK

RELEASE WINDOW scgc231

#REGION 0
IF m.talkstat = "ON"
	SET TALK ON
ENDIF
IF m.compstat = "ON"
	SET COMPATIBLE ON
ENDIF


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨               SCGC231/MS-DOS Cleanup Code               ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*

#REGION 1
DO ULfecha 		&& FECHA ARQUIVOS ABERTOS
RETURN

*********************************
*    P R O C E D I M E N T O S  *
*********************************


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨   SCGC231/MS-DOS Supporting Procedures and Functions    ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*

#REGION 1
PROCEDURE ULfecha
	IF LFcli231		&& .t. =>  DEVE SER FECHADA NA SAIDA
		=UP_fecha("clientes")
	ENDIF
	IF LF001231		&& .t. =>  DEVE SER FECHADA NA SAIDA
		=UP_fecha("TAB001")
	ENDIF
	IF LFemp231		&& .t. =>  DEVE SER FECHADA NA SAIDA
		=UP_fecha("empresa")
	ENDIF
	IF LFgru231		&& .t. =>  DEVE SER FECHADA NA SAIDA
		=UP_fecha("grupo")
	ENDIF
	IF LFsld231		&& .t. =>  DEVE SER FECHADA NA SAIDA
		=UP_fecha("saldo")
	ENDIF
	IF LFite231		&& .t. =>  DEVE SER FECHADA NA SAIDA
		=UP_fecha("itemmov")
	ENDIF
	wp_flgfecha = .F. 		&& defaut nao fechamento da secao
	IF !EMPTY(LS231areant)
		SELECT &LS231areant
	ENDIF
	ON KEY LABEL ESCAPE
	SET FORMAT TO
	ON KEY LABEL CTRL-I
RETURN
*-------------->

PROCEDURE BTN_VAL1
	PARAMETER tecla, m.chv_ler, m.chv_compara, m.chv_brow
	LN_prxobj = _CUROBJ
	ON KEY LABEL ENTER
    DO CASE
		CASE tecla = "EDIT" AND !isediting   && INICIA EDICAO
		*************** SALVA COMO PARAMETROS PARA PROXIMO RELATO *****
			ON ERROR TMP=""   && EVITA MENS. DE ERRO QDO ARQ.NAO EXISTIR
			RESTORE FROM  tempD ADDITIVE
			RESTORE FROM  tempG ADDITIVE
			RESTORE FROM  tempS ADDITIVE
			RESTORE FROM  tempC ADDITIVE
			RESTORE FROM  tempL ADDITIVE
			ON ERROR
		****************************************************************
			SHOW GETS
			SHOW GET edit_btn,1 PROMPT "\<Ok"
			SHOW GET m.imp_btn DISABLE
			isediting = .t.
			_CUROBJ = 1	
		    ON KEY LABEL ESCAPE KEYBOARD "{BACKTAB}"
			ON KEY LABEL END DO BTN_VAL1 WITH 'DELETE'
		CASE tecla = "EDIT" AND isediting     && CONFIRMA EDICAO
		*************** SALVA COMO PARAMETROS PARA PROXIMO RELATO *****
			SAVE TO tempD ALL LIKE desc?
			SAVE TO tempG ALL LIKE grupo_??
			SAVE TO tempS ALL LIKE subgrp_??
			SAVE TO tempC ALL LIKE cod??
			SAVE TO tempL ALL LIKE clas??
		****************************************************************
			SHOW GET edit_btn,1 PROMPT "\<Edita"
			isediting = .f.
			_CUROBJ = 1	
			SHOW GET m.imp_btn ENABLE
		    ON KEY LABEL ESCAPE
			ON KEY LABEL END
		CASE tecla = "DELETE" AND isediting     && CANCELA EDICAO
			SHOW GET edit_btn,1 PROMPT "\<Edita"
			isediting = .f.
			_CUROBJ = 1	
			SHOW GET m.imp_btn DISABLE
		    ON KEY LABEL ESCAPE
			ON KEY LABEL END
	ENDCASE
RETURN


FUNCTION ULlecodigo  && RETORNA O NOME DO CODIGO INFORMADO GRUPO//SUBGRUPO
PARAMETERS LScdg
	LSalias = ALIAS()

	SELE GRUPO
	LNrgtmp = RECNO()
	SEEK LScdg
	LSnome = grupo.descricao
	GO LNrgtmp
	
	SELE &LSalias
RETURN(LSnome)


		

*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _2LX0VSL6F           m.desc1 WHEN                       ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC231,     Record Number:   54   ╨
*       ╨ Variable:            m.desc1                            ╨
*       ╨ Called By:           WHEN Clause                        ╨
*       ╨ Object Type:         Field                              ╨
*       ╨ Snippet Number:      1                                  ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _2lx0vsl6f     &&  m.desc1 WHEN
#REGION 1
ON KEY LABEL ESCAPE	KEYBOARD "{END}"
IF LASTKEY() = 15 AND !(isediting)
	KEYBOARD "{ESCAPE}"
ENDIF
RETURN(isediting)


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _2LX0VSL6I           m.grupo_I1 VALID                   ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC231,     Record Number:   55   ╨
*       ╨ Variable:            m.grupo_I1                         ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Field                              ╨
*       ╨ Snippet Number:      2                                  ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _2lx0vsl6i     &&  m.grupo_I1 VALID
#REGION 1
PRIVATE  LSemptmp, LSlencod		
	LSchv_tmp	= ""	&& chave temporaria para busca
	LSlencod  = 0		&& numero de digitos que compoe o grupo
*----------------------------------------------------------*
IF EMPTY(m.grupo_I1) AND LASTKEY() <> 9
	m.clasI1  = " "
	RETURN(.T.)
ENDIF
*----------------------------------------------------------*
*	converte codigo numerico do sub-grupo em parte da string CLASSIFICA
*   conforme orientacao da mascara fornecida no parametro
*   e decodificada no vetor VCLASS
*----------------------------------------------------------*
LSlencod   		= INT(VAL(vclass(1)))
m.clasI1		= CHRTRAN(STR(m.grupo_I1,LSlencod)," ","0")
m.clasI1	    = ALLTRIM(m.clasI1)
*----------------------------------------------------------*

SELE grupo
SET ORDER TO TAG grupos
SET NEAR ON
SEEK m.clasI1
SET NEAR OFF
*----------------------------------------------------------*
SELECT grupo
ON KEY LABEL ESCAPE
IF LASTKEY() = 9
	ON KEY LABEL ESCAPE
	DO loc_dlog WITH .T., "grupo.cdg_tipo = 1"
	ON KEY LABEL ESCAPE KEYBOARD "{BACKTAB}"
	IF LASTKEY() = 27
		RETURN .F.
	ENDIF
ENDIF
m.codI1  = grupo.codigo
m.clasI1 = grupo.classifica
m.grupo_I1 = INT(VAL(SUBS(m.clasI1,1, LSlencod)))
SHOW GET  m.grupo_I1
RETURN .t.


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _2LX0VSL6J           m.subgrp_I1 VALID                  ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC231,     Record Number:   56   ╨
*       ╨ Variable:            m.subgrp_I1                        ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Field                              ╨
*       ╨ Snippet Number:      3                                  ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _2lx0vsl6j     &&  m.subgrp_I1 VALID
#REGION 1
PRIVATE LSemptmp, LSlencod
	LSvinculo	= ""	&& fixa os itens do browse ao nivel anterior
	LSlenvinc 	= 0		&& inf.a pate do cod.que deve estar no vinculo
	LSemptmp	= ""	&& informa empresa p/ associar prod.especificos
	LSlencod  	= 0		&& numero de digitos que compoe o grupo
*----------------------------------------------------------*
IF EMPTY(m.subgrp_I1) AND LASTKEY() <> 9
	RETURN(.T.)
ENDIF
*----------------------------------------------------------*
*	converte codigo numerico do sub-grupo em parte da string CLASSIFICA
*   conforme orientacao da mascara fornecida no parametro
*   e decodificada no vetor VCLASS
*----------------------------------------------------------*
LSlencod   		= INT(VAL(vclass(1)))
m.clasI1		= CHRTRAN(STR(m.grupo_I1,LSlencod)," ","0")
LSvinculo		= ALLTRIM(m.clasI1)
LSlenvinc  		= INT(VAL(vclass(1)))

*----->>>
LSlencod   		= INT(VAL(vclass(2))) - INT(VAL(vclass(1)))
m.clasI1		= m.clasI1 + CHRTRAN(STR(m.subgrp_I1,LSlencod)," ","0")
m.clasI1		= ALLTRIM(m.clasI1)
*----------------------------------------------------------*

SELE grupo
SET ORDER TO TAG subgrupos
LSemptmp =  STRTRAN(STR(m.empresa,3),' ','0')
SET NEAR ON
SEEK m.clasI1
SET NEAR OFF
*----------------------------------------------------------*
SELECT grupo
ON KEY LABEL ESCAPE
IF LASTKEY() = 9
	ON KEY LABEL ESCAPE
	DO loc_dlog WITH .T.,;
		 " LEFT(grupo.classifica, LSlenvinc) = '&LSvinculo' " + ;
		 " AND grupo.cdg_tipo = 2"
	ON KEY LABEL ESCAPE KEYBOARD "{BACKTAB}"
	IF LASTKEY() = 27
		RETURN .F.
	ENDIF
ENDIF
m.codI1 	 = grupo.codigo
m.clasI1 	 = grupo.classifica
m.subgrp_I1 = INT(VAL(SUBS(m.clasI1,INT(VAL(vclass(1)))+1, LSlencod)))
SHOW GET  m.subgrp_I1

RETURN .t.


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _2LX0VSL6K           m.grupo_F1 VALID                   ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC231,     Record Number:   57   ╨
*       ╨ Variable:            m.grupo_F1                         ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Field                              ╨
*       ╨ Snippet Number:      4                                  ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _2lx0vsl6k     &&  m.grupo_F1 VALID
#REGION 1
PRIVATE  LSemptmp, LSlencod		
	LSchv_tmp	= ""	&& chave temporaria para busca
	LSemptmp	= ""	&& informa empresa p/ associar prod.especificos
	LSlencod  = 0		&& numero de digitos que compoe o grupo
*----------------------------------------------------------*
IF EMPTY(m.grupo_F1) AND LASTKEY() <> 9
	m.clasF1 	= 	""
	RETURN(.T.)
ENDIF
*----------------------------------------------------------*
*	converte codigo numerico do sub-grupo em parte da string CLASSIFICA
*   conforme orientacao da mascara fornecida no parametro
*   e decodificada no vetor VCLASS
*----------------------------------------------------------*
LSlencod   		= INT(VAL(vclass(1)))
m.clasF1		= CHRTRAN(STR(m.grupo_F1,LSlencod)," ","0")
m.clasF1    	= ALLTRIM(m.clasF1)
*----------------------------------------------------------*

SELE grupo
SET ORDER TO TAG grupos
LSemptmp =  STRTRAN(STR(m.empresa,3),' ','0')
SET NEAR ON
SEEK m.clasF1
SET NEAR OFF
*----------------------------------------------------------*
SELECT grupo
ON KEY LABEL ESCAPE
IF LASTKEY() = 9
	ON KEY LABEL ESCAPE
	DO loc_dlog WITH .T., "grupo.cdg_tipo = 1"
	ON KEY LABEL ESCAPE KEYBOARD "{BACKTAB}"
	IF LASTKEY() = 27
		RETURN .F.
	ENDIF
ENDIF
m.codF1  = grupo.codigo
m.clasF1 = grupo.classifica
m.grupo_F1 = INT(VAL(SUBS(m.clasF1,1, LSlencod)))
SHOW GET  m.grupo_F1
RETURN .t.


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _2LX0VSL6L           m.subgrp_F1 VALID                  ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC231,     Record Number:   58   ╨
*       ╨ Variable:            m.subgrp_F1                        ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Field                              ╨
*       ╨ Snippet Number:      5                                  ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _2lx0vsl6l     &&  m.subgrp_F1 VALID
#REGION 1
PRIVATE LSemptmp, LSlencod
	LSvinculo	= ""	&& fixa os itens do browse ao nivel anterior
	LSlenvinc 	= 0		&& inf.a pate do cod.que deve estar no vinculo
	LSemptmp	= ""	&& informa empresa p/ associar prod.especificos
	LSlencod  	= 0		&& numero de digitos que compoe o grupo
*----------------------------------------------------------*
IF EMPTY(m.subgrp_F1) AND LASTKEY() <> 9
	RETURN(.T.)
ENDIF
*----------------------------------------------------------*
*	converte codigo numerico do sub-grupo em parte da string CLASSIFICA
*   conforme orientacao da mascara fornecida no parametro
*   e decodificada no vetor VCLASS
*----------------------------------------------------------*
LSlencod   		= INT(VAL(vclass(1)))
m.clasF1	= CHRTRAN(STR(m.grupo_F1,LSlencod)," ","0")
LSvinculo		= ALLTRIM(m.clasF1)
LSlenvinc  		= INT(VAL(vclass(1)))

*----->>>
LSlencod   		= INT(VAL(vclass(2))) - INT(VAL(vclass(1)))
m.clasF1	= m.clasF1 + CHRTRAN(STR(m.subgrp_F1,LSlencod)," ","0")
m.clasF1	= ALLTRIM(m.clasF1)
*----------------------------------------------------------*

SELE grupo
SET ORDER TO TAG subgrupos
LSemptmp =  STRTRAN(STR(m.empresa,3),' ','0')
SET NEAR ON
SEEK m.clasF1
SET NEAR OFF
*----------------------------------------------------------*
SELECT grupo
ON KEY LABEL ESCAPE
IF LASTKEY() = 9
	ON KEY LABEL ESCAPE
	DO loc_dlog WITH .T.,;
		 " LEFT(grupo.classifica, LSlenvinc) = '&LSvinculo' " + ;
		 " AND grupo.cdg_tipo = 2"
	ON KEY LABEL ESCAPE KEYBOARD "{BACKTAB}"
	IF LASTKEY() = 27
		RETURN .F.
	ENDIF
ENDIF
m.codF1  = grupo.codigo
m.clasF1 = grupo.classifica
m.subgrp_F1 = INT(VAL(SUBS(m.clasF1,INT(VAL(vclass(1)))+1, LSlencod)))
SHOW GET  m.subgrp_F1
RETURN .t.


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _2LX0VSL70           m.desc2 WHEN                       ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC231,     Record Number:   59   ╨
*       ╨ Variable:            m.desc2                            ╨
*       ╨ Called By:           WHEN Clause                        ╨
*       ╨ Object Type:         Field                              ╨
*       ╨ Snippet Number:      6                                  ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _2lx0vsl70     &&  m.desc2 WHEN
#REGION 1
ON KEY LABEL ESCAPE	KEYBOARD "{END}"
IF LASTKEY() = 15 AND !(isediting)
	KEYBOARD "{ESCAPE}"
ENDIF
RETURN(isediting)


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _2LX0VSL74           m.grupo_I2 VALID                   ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC231,     Record Number:   60   ╨
*       ╨ Variable:            m.grupo_I2                         ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Field                              ╨
*       ╨ Snippet Number:      7                                  ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _2lx0vsl74     &&  m.grupo_I2 VALID
#REGION 1
PRIVATE  LSemptmp, LSlencod		
	LSchv_tmp	= ""	&& chave temporaria para busca
	LSlencod  = 0		&& numero de digitos que compoe o grupo
*----------------------------------------------------------*
IF EMPTY(m.grupo_I2) AND LASTKEY() <> 9
	m.clasI2  = " "
	RETURN(.T.)
ENDIF
*----------------------------------------------------------*
*	converte codigo numerico do sub-grupo em parte da string CLASSIFICA
*   conforme orientacao da mascara fornecida no parametro
*   e decodificada no vetor VCLASS
*----------------------------------------------------------*
LSlencod   		= INT(VAL(vclass(1)))
m.clasI2		= CHRTRAN(STR(m.grupo_I2,LSlencod)," ","0")
m.clasI2	    = ALLTRIM(m.clasI2)
*----------------------------------------------------------*

SELE grupo
SET ORDER TO TAG grupos
SET NEAR ON
SEEK m.clasI2
SET NEAR OFF
*----------------------------------------------------------*
SELECT grupo
ON KEY LABEL ESCAPE
IF LASTKEY() = 9
	ON KEY LABEL ESCAPE
	DO loc_dlog WITH .T., "grupo.cdg_tipo = 1"
	ON KEY LABEL ESCAPE KEYBOARD "{BACKTAB}"
	IF LASTKEY() = 27
		RETURN .F.
	ENDIF
ENDIF
m.codI2  = grupo.codigo
m.clasI2 = grupo.classifica
m.grupo_I2 = INT(VAL(SUBS(m.clasI2,1, LSlencod)))
SHOW GET  m.grupo_I2
RETURN .t.


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _2LX0VSL78           m.subgrp_I2 VALID                  ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC231,     Record Number:   61   ╨
*       ╨ Variable:            m.subgrp_I2                        ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Field                              ╨
*       ╨ Snippet Number:      8                                  ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _2lx0vsl78     &&  m.subgrp_I2 VALID
#REGION 1
PRIVATE LSemptmp, LSlencod
	LSvinculo	= ""	&& fixa os itens do browse ao nivel anterior
	LSlenvinc 	= 0		&& inf.a pate do cod.que deve estar no vinculo
	LSemptmp	= ""	&& informa empresa p/ associar prod.especificos
	LSlencod  	= 0		&& numero de digitos que compoe o grupo
*----------------------------------------------------------*
IF EMPTY(m.subgrp_I2) AND LASTKEY() <> 9
	RETURN(.T.)
ENDIF
*----------------------------------------------------------*
*	converte codigo numerico do sub-grupo em parte da string CLASSIFICA
*   conforme orientacao da mascara fornecida no parametro
*   e decodificada no vetor VCLASS
*----------------------------------------------------------*
LSlencod   		= INT(VAL(vclass(1)))
m.clasI2		= CHRTRAN(STR(m.grupo_I2,LSlencod)," ","0")
LSvinculo		= ALLTRIM(m.clasI2)
LSlenvinc  		= INT(VAL(vclass(1)))

*----->>>
LSlencod   		= INT(VAL(vclass(2))) - INT(VAL(vclass(1)))
m.clasI2		= m.clasI2 + CHRTRAN(STR(m.subgrp_I2,LSlencod)," ","0")
m.clasI2		= ALLTRIM(m.clasI2)
*----------------------------------------------------------*

SELE grupo
SET ORDER TO TAG subgrupos
LSemptmp =  STRTRAN(STR(m.empresa,3),' ','0')
SET NEAR ON
SEEK m.clasI2
SET NEAR OFF
*----------------------------------------------------------*
SELECT grupo
ON KEY LABEL ESCAPE
IF LASTKEY() = 9
	ON KEY LABEL ESCAPE
	DO loc_dlog WITH .T.,;
		 " LEFT(grupo.classifica, LSlenvinc) = '&LSvinculo' " + ;
		 " AND grupo.cdg_tipo = 2"
	ON KEY LABEL ESCAPE KEYBOARD "{BACKTAB}"
	IF LASTKEY() = 27
		RETURN .F.
	ENDIF
ENDIF
m.codI2 	 = grupo.codigo
m.clasI2 	 = grupo.classifica
m.subgrp_I2 = INT(VAL(SUBS(m.clasI2,INT(VAL(vclass(1)))+1, LSlencod)))
SHOW GET  m.subgrp_I2

RETURN .t.


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _2LX0VSL7C           m.grupo_F2 VALID                   ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC231,     Record Number:   62   ╨
*       ╨ Variable:            m.grupo_F2                         ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Field                              ╨
*       ╨ Snippet Number:      9                                  ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _2lx0vsl7c     &&  m.grupo_F2 VALID
#REGION 1
PRIVATE  LSemptmp, LSlencod		
	LSchv_tmp	= ""	&& chave temporaria para busca
	LSemptmp	= ""	&& informa empresa p/ associar prod.especificos
	LSlencod  = 0		&& numero de digitos que compoe o grupo
*----------------------------------------------------------*
IF EMPTY(m.grupo_F2) AND LASTKEY() <> 9
	m.clasF2 	= ""
	RETURN(.T.)
ENDIF
*----------------------------------------------------------*
*	converte codigo numerico do sub-grupo em parte da string CLASSIFICA
*   conforme orientacao da mascara fornecida no parametro
*   e decodificada no vetor VCLASS
*----------------------------------------------------------*
LSlencod   		= INT(VAL(vclass(1)))
m.clasF2		= CHRTRAN(STR(m.grupo_F2,LSlencod)," ","0")
m.clasF2    	= ALLTRIM(m.clasF2)
*----------------------------------------------------------*

SELE grupo
SET ORDER TO TAG grupos
LSemptmp =  STRTRAN(STR(m.empresa,3),' ','0')
SET NEAR ON
SEEK m.clasF2
SET NEAR OFF
*----------------------------------------------------------*
SELECT grupo
ON KEY LABEL ESCAPE
IF LASTKEY() = 9
	ON KEY LABEL ESCAPE
	DO loc_dlog WITH .T., "grupo.cdg_tipo = 1"
	ON KEY LABEL ESCAPE KEYBOARD "{BACKTAB}"
	IF LASTKEY() = 27
		RETURN .F.
	ENDIF
ENDIF
m.codF2  = grupo.codigo
m.clasF2 = grupo.classifica
m.grupo_F2 = INT(VAL(SUBS(m.clasF2,1, LSlencod)))
SHOW GET  m.grupo_F2
RETURN .t.


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _2LX0VSL7H           m.subgrp_F2 VALID                  ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC231,     Record Number:   63   ╨
*       ╨ Variable:            m.subgrp_F2                        ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Field                              ╨
*       ╨ Snippet Number:      10                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _2lx0vsl7h     &&  m.subgrp_F2 VALID
#REGION 1
PRIVATE LSemptmp, LSlencod
	LSvinculo	= ""	&& fixa os itens do browse ao nivel anterior
	LSlenvinc 	= 0		&& inf.a pate do cod.que deve estar no vinculo
	LSemptmp	= ""	&& informa empresa p/ associar prod.especificos
	LSlencod  	= 0		&& numero de digitos que compoe o grupo
*----------------------------------------------------------*
IF EMPTY(m.subgrp_F2) AND LASTKEY() <> 9
	RETURN(.T.)
ENDIF
*----------------------------------------------------------*
*	converte codigo numerico do sub-grupo em parte da string CLASSIFICA
*   conforme orientacao da mascara fornecida no parametro
*   e decodificada no vetor VCLASS
*----------------------------------------------------------*
LSlencod   		= INT(VAL(vclass(1)))
m.clasF2	= CHRTRAN(STR(m.grupo_F2,LSlencod)," ","0")
LSvinculo		= ALLTRIM(m.clasF2)
LSlenvinc  		= INT(VAL(vclass(1)))

*----->>>
LSlencod   		= INT(VAL(vclass(2))) - INT(VAL(vclass(1)))
m.clasF2	= m.clasF2 + CHRTRAN(STR(m.subgrp_F2,LSlencod)," ","0")
m.clasF2	= ALLTRIM(m.clasF2)
*----------------------------------------------------------*

SELE grupo
SET ORDER TO TAG subgrupos
LSemptmp =  STRTRAN(STR(m.empresa,3),' ','0')
SET NEAR ON
SEEK m.clasF2
SET NEAR OFF
*----------------------------------------------------------*
SELECT grupo
ON KEY LABEL ESCAPE
IF LASTKEY() = 9
	ON KEY LABEL ESCAPE
	DO loc_dlog WITH .T.,;
		 " LEFT(grupo.classifica, LSlenvinc) = '&LSvinculo' " + ;
		 " AND grupo.cdg_tipo = 2"
	ON KEY LABEL ESCAPE KEYBOARD "{BACKTAB}"
	IF LASTKEY() = 27
		RETURN .F.
	ENDIF
ENDIF
m.codF2  = grupo.codigo
m.clasF2 = grupo.classifica
m.subgrp_F2 = INT(VAL(SUBS(m.clasF2,INT(VAL(vclass(1)))+1, LSlencod)))
SHOW GET  m.subgrp_F2
RETURN .t.


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _2LX0VSL7M           m.desc3 WHEN                       ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC231,     Record Number:   64   ╨
*       ╨ Variable:            m.desc3                            ╨
*       ╨ Called By:           WHEN Clause                        ╨
*       ╨ Object Type:         Field                              ╨
*       ╨ Snippet Number:      11                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _2lx0vsl7m     &&  m.desc3 WHEN
#REGION 1
ON KEY LABEL ESCAPE	KEYBOARD "{END}"
IF LASTKEY() = 15 AND !(isediting)
	KEYBOARD "{ESCAPE}"
ENDIF
RETURN(isediting)


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _2LX0VSL7P           m.grupo_I3 VALID                   ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC231,     Record Number:   65   ╨
*       ╨ Variable:            m.grupo_I3                         ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Field                              ╨
*       ╨ Snippet Number:      12                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _2lx0vsl7p     &&  m.grupo_I3 VALID
#REGION 1
PRIVATE  LSemptmp, LSlencod		
	LSchv_tmp	= ""	&& chave temporaria para busca
	LSlencod  = 0		&& numero de digitos que compoe o grupo
*----------------------------------------------------------*
IF EMPTY(m.grupo_I3) AND LASTKEY() <> 9
	m.clasI3  = " "
	RETURN(.T.)
ENDIF
*----------------------------------------------------------*
*	converte codigo numerico do sub-grupo em parte da string CLASSIFICA
*   conforme orientacao da mascara fornecida no parametro
*   e decodificada no vetor VCLASS
*----------------------------------------------------------*
LSlencod   		= INT(VAL(vclass(1)))
m.clasI3		= CHRTRAN(STR(m.grupo_I3,LSlencod)," ","0")
m.clasI3	    = ALLTRIM(m.clasI3)
*----------------------------------------------------------*

SELE grupo
SET ORDER TO TAG grupos
SET NEAR ON
SEEK m.clasI3
SET NEAR OFF
*----------------------------------------------------------*
SELECT grupo
ON KEY LABEL ESCAPE
IF LASTKEY() = 9
	ON KEY LABEL ESCAPE
	DO loc_dlog WITH .T., "grupo.cdg_tipo = 1"
	ON KEY LABEL ESCAPE KEYBOARD "{BACKTAB}"
	IF LASTKEY() = 27
		RETURN .F.
	ENDIF
ENDIF
m.codI3  = grupo.codigo
m.clasI3 = grupo.classifica
m.grupo_I3 = INT(VAL(SUBS(m.clasI3,1, LSlencod)))
SHOW GET  m.grupo_I3
RETURN .t.


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _2LX0VSL7T           m.subgrp_I3 VALID                  ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC231,     Record Number:   66   ╨
*       ╨ Variable:            m.subgrp_I3                        ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Field                              ╨
*       ╨ Snippet Number:      13                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _2lx0vsl7t     &&  m.subgrp_I3 VALID
#REGION 1
PRIVATE LSemptmp, LSlencod
	LSvinculo	= ""	&& fixa os itens do browse ao nivel anterior
	LSlenvinc 	= 0		&& inf.a pate do cod.que deve estar no vinculo
	LSemptmp	= ""	&& informa empresa p/ associar prod.especificos
	LSlencod  	= 0		&& numero de digitos que compoe o grupo
*----------------------------------------------------------*
IF EMPTY(m.subgrp_I3) AND LASTKEY() <> 9
	RETURN(.T.)
ENDIF
*----------------------------------------------------------*
*	converte codigo numerico do sub-grupo em parte da string CLASSIFICA
*   conforme orientacao da mascara fornecida no parametro
*   e decodificada no vetor VCLASS
*----------------------------------------------------------*
LSlencod   		= INT(VAL(vclass(1)))
m.clasI3		= CHRTRAN(STR(m.grupo_I3,LSlencod)," ","0")
LSvinculo		= ALLTRIM(m.clasI3)
LSlenvinc  		= INT(VAL(vclass(1)))

*----->>>
LSlencod   		= INT(VAL(vclass(2))) - INT(VAL(vclass(1)))
m.clasI3		= m.clasI3 + CHRTRAN(STR(m.subgrp_I3,LSlencod)," ","0")
m.clasI3		= ALLTRIM(m.clasI3)
*----------------------------------------------------------*

SELE grupo
SET ORDER TO TAG subgrupos
LSemptmp =  STRTRAN(STR(m.empresa,3),' ','0')
SET NEAR ON
SEEK m.clasI3
SET NEAR OFF
*----------------------------------------------------------*
SELECT grupo
ON KEY LABEL ESCAPE
IF LASTKEY() = 9
	ON KEY LABEL ESCAPE
	DO loc_dlog WITH .T.,;
		 " LEFT(grupo.classifica, LSlenvinc) = '&LSvinculo' " + ;
		 " AND grupo.cdg_tipo = 2"
	ON KEY LABEL ESCAPE KEYBOARD "{BACKTAB}"
	IF LASTKEY() = 27
		RETURN .F.
	ENDIF
ENDIF
m.codI3 	 = grupo.codigo
m.clasI3 	 = grupo.classifica
m.subgrp_I3 = INT(VAL(SUBS(m.clasI3,INT(VAL(vclass(1)))+1, LSlencod)))
SHOW GET  m.subgrp_I3

RETURN .t.


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _2LX0VSL7Y           m.grupo_F3 VALID                   ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC231,     Record Number:   67   ╨
*       ╨ Variable:            m.grupo_F3                         ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Field                              ╨
*       ╨ Snippet Number:      14                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _2lx0vsl7y     &&  m.grupo_F3 VALID
#REGION 1
PRIVATE  LSemptmp, LSlencod		
	LSchv_tmp	= ""	&& chave temporaria para busca
	LSemptmp	= ""	&& informa empresa p/ associar prod.especificos
	LSlencod  = 0		&& numero de digitos que compoe o grupo
*----------------------------------------------------------*
IF EMPTY(m.grupo_F3) AND LASTKEY() <> 9
	m.clasF3 	= 	""
	RETURN(.T.)
ENDIF
*----------------------------------------------------------*
*	converte codigo numerico do sub-grupo em parte da string CLASSIFICA
*   conforme orientacao da mascara fornecida no parametro
*   e decodificada no vetor VCLASS
*----------------------------------------------------------*
LSlencod   		= INT(VAL(vclass(1)))
m.clasF3		= CHRTRAN(STR(m.grupo_F3,LSlencod)," ","0")
m.clasF3    	= ALLTRIM(m.clasF3)
*----------------------------------------------------------*

SELE grupo
SET ORDER TO TAG grupos
LSemptmp =  STRTRAN(STR(m.empresa,3),' ','0')
SET NEAR ON
SEEK m.clasF3
SET NEAR OFF
*----------------------------------------------------------*
SELECT grupo
ON KEY LABEL ESCAPE
IF LASTKEY() = 9
	ON KEY LABEL ESCAPE
	DO loc_dlog WITH .T., "grupo.cdg_tipo = 1"
	ON KEY LABEL ESCAPE KEYBOARD "{BACKTAB}"
	IF LASTKEY() = 27
		RETURN .F.
	ENDIF
ENDIF
m.codF3  = grupo.codigo
m.clasF3 = grupo.classifica
m.grupo_F3 = INT(VAL(SUBS(m.clasF3,1, LSlencod)))
SHOW GET  m.grupo_F3
RETURN .t.


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _2LX0VSL82           m.subgrp_F3 VALID                  ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC231,     Record Number:   68   ╨
*       ╨ Variable:            m.subgrp_F3                        ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Field                              ╨
*       ╨ Snippet Number:      15                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _2lx0vsl82     &&  m.subgrp_F3 VALID
#REGION 1
PRIVATE LSemptmp, LSlencod
	LSvinculo	= ""	&& fixa os itens do browse ao nivel anterior
	LSlenvinc 	= 0		&& inf.a pate do cod.que deve estar no vinculo
	LSemptmp	= ""	&& informa empresa p/ associar prod.especificos
	LSlencod  	= 0		&& numero de digitos que compoe o grupo
*----------------------------------------------------------*
IF EMPTY(m.subgrp_F3) AND LASTKEY() <> 9
	RETURN(.T.)
ENDIF
*----------------------------------------------------------*
*	converte codigo numerico do sub-grupo em parte da string CLASSIFICA
*   conforme orientacao da mascara fornecida no parametro
*   e decodificada no vetor VCLASS
*----------------------------------------------------------*
LSlencod   		= INT(VAL(vclass(1)))
m.clasF3	= CHRTRAN(STR(m.grupo_F3,LSlencod)," ","0")
LSvinculo		= ALLTRIM(m.clasF3)
LSlenvinc  		= INT(VAL(vclass(1)))

*----->>>
LSlencod   		= INT(VAL(vclass(2))) - INT(VAL(vclass(1)))
m.clasF3	= m.clasF3 + CHRTRAN(STR(m.subgrp_F3,LSlencod)," ","0")
m.clasF3	= ALLTRIM(m.clasF3)
*----------------------------------------------------------*

SELE grupo
SET ORDER TO TAG subgrupos
LSemptmp =  STRTRAN(STR(m.empresa,3),' ','0')
SET NEAR ON
SEEK m.clasF3
SET NEAR OFF
*----------------------------------------------------------*
SELECT grupo
ON KEY LABEL ESCAPE
IF LASTKEY() = 9
	ON KEY LABEL ESCAPE
	DO loc_dlog WITH .T.,;
		 " LEFT(grupo.classifica, LSlenvinc) = '&LSvinculo' " + ;
		 " AND grupo.cdg_tipo = 2"
	ON KEY LABEL ESCAPE KEYBOARD "{BACKTAB}"
	IF LASTKEY() = 27
		RETURN .F.
	ENDIF
ENDIF
m.codF3  = grupo.codigo
m.clasF3 = grupo.classifica
m.subgrp_F3 = INT(VAL(SUBS(m.clasF3,INT(VAL(vclass(1)))+1, LSlencod)))
SHOW GET  m.subgrp_F3
RETURN .t.


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _2LX0VSL83           m.desc4 WHEN                       ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC231,     Record Number:   69   ╨
*       ╨ Variable:            m.desc4                            ╨
*       ╨ Called By:           WHEN Clause                        ╨
*       ╨ Object Type:         Field                              ╨
*       ╨ Snippet Number:      16                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _2lx0vsl83     &&  m.desc4 WHEN
#REGION 1
ON KEY LABEL ESCAPE	KEYBOARD "{END}"
IF LASTKEY() = 15 AND !(isediting)
	KEYBOARD "{ESCAPE}"
ENDIF
RETURN(isediting)


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _2LX0VSL84           m.grupo_I4 VALID                   ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC231,     Record Number:   70   ╨
*       ╨ Variable:            m.grupo_I4                         ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Field                              ╨
*       ╨ Snippet Number:      17                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _2lx0vsl84     &&  m.grupo_I4 VALID
#REGION 1
PRIVATE  LSemptmp, LSlencod		
	LSchv_tmp	= ""	&& chave temporaria para busca
	LSlencod  = 0		&& numero de digitos que compoe o grupo
*----------------------------------------------------------*
IF EMPTY(m.grupo_I4) AND LASTKEY() <> 9
	m.clasI4  = " "
	RETURN(.T.)
ENDIF
*----------------------------------------------------------*
*	converte codigo numerico do sub-grupo em parte da string CLASSIFICA
*   conforme orientacao da mascara fornecida no parametro
*   e decodificada no vetor VCLASS
*----------------------------------------------------------*
LSlencod   		= INT(VAL(vclass(1)))
m.clasI4		= CHRTRAN(STR(m.grupo_I4,LSlencod)," ","0")
m.clasI4	    = ALLTRIM(m.clasI4)
*----------------------------------------------------------*

SELE grupo
SET ORDER TO TAG grupos
SET NEAR ON
SEEK m.clasI4
SET NEAR OFF
*----------------------------------------------------------*
SELECT grupo
ON KEY LABEL ESCAPE
IF LASTKEY() = 9
	ON KEY LABEL ESCAPE
	DO loc_dlog WITH .T., "grupo.cdg_tipo = 1"
	ON KEY LABEL ESCAPE KEYBOARD "{BACKTAB}"
	IF LASTKEY() = 27
		RETURN .F.
	ENDIF
ENDIF
m.codI4  = grupo.codigo
m.clasI4 = grupo.classifica
m.grupo_I4 = INT(VAL(SUBS(m.clasI4,1, LSlencod)))
SHOW GET  m.grupo_I4
RETURN .t.


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _2LX0VSL85           m.subgrp_I4 VALID                  ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC231,     Record Number:   71   ╨
*       ╨ Variable:            m.subgrp_I4                        ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Field                              ╨
*       ╨ Snippet Number:      18                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _2lx0vsl85     &&  m.subgrp_I4 VALID
#REGION 1
PRIVATE LSemptmp, LSlencod
	LSvinculo	= ""	&& fixa os itens do browse ao nivel anterior
	LSlenvinc 	= 0		&& inf.a pate do cod.que deve estar no vinculo
	LSemptmp	= ""	&& informa empresa p/ associar prod.especificos
	LSlencod  	= 0		&& numero de digitos que compoe o grupo
*----------------------------------------------------------*
IF EMPTY(m.subgrp_I4) AND LASTKEY() <> 9
	RETURN(.T.)
ENDIF
*----------------------------------------------------------*
*	converte codigo numerico do sub-grupo em parte da string CLASSIFICA
*   conforme orientacao da mascara fornecida no parametro
*   e decodificada no vetor VCLASS
*----------------------------------------------------------*
LSlencod   		= INT(VAL(vclass(1)))
m.clasI4		= CHRTRAN(STR(m.grupo_I4,LSlencod)," ","0")
LSvinculo		= ALLTRIM(m.clasI4)
LSlenvinc  		= INT(VAL(vclass(1)))

*----->>>
LSlencod   		= INT(VAL(vclass(2))) - INT(VAL(vclass(1)))
m.clasI4		= m.clasI4 + CHRTRAN(STR(m.subgrp_I4,LSlencod)," ","0")
m.clasI4		= ALLTRIM(m.clasI4)
*----------------------------------------------------------*

SELE grupo
SET ORDER TO TAG subgrupos
LSemptmp =  STRTRAN(STR(m.empresa,3),' ','0')
SET NEAR ON
SEEK m.clasI4
SET NEAR OFF
*----------------------------------------------------------*
SELECT grupo
ON KEY LABEL ESCAPE
IF LASTKEY() = 9
	ON KEY LABEL ESCAPE
	DO loc_dlog WITH .T.,;
		 " LEFT(grupo.classifica, LSlenvinc) = '&LSvinculo' " + ;
		 " AND grupo.cdg_tipo = 2"
	ON KEY LABEL ESCAPE KEYBOARD "{BACKTAB}"
	IF LASTKEY() = 27
		RETURN .F.
	ENDIF
ENDIF
m.codI4 	 = grupo.codigo
m.clasI4 	 = grupo.classifica
m.subgrp_I4 = INT(VAL(SUBS(m.clasI4,INT(VAL(vclass(1)))+1, LSlencod)))
SHOW GET  m.subgrp_I4

RETURN .t.


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _2LX0VSL8J           m.grupo_F4 VALID                   ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC231,     Record Number:   72   ╨
*       ╨ Variable:            m.grupo_F4                         ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Field                              ╨
*       ╨ Snippet Number:      19                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _2lx0vsl8j     &&  m.grupo_F4 VALID
#REGION 1
PRIVATE  LSemptmp, LSlencod		
	LSchv_tmp	= ""	&& chave temporaria para busca
	LSemptmp	= ""	&& informa empresa p/ associar prod.especificos
	LSlencod  = 0		&& numero de digitos que compoe o grupo
*----------------------------------------------------------*
IF EMPTY(m.grupo_F4) AND LASTKEY() <> 9
	m.clasF4 	= 	""
	RETURN(.T.)
ENDIF
*----------------------------------------------------------*
*	converte codigo numerico do sub-grupo em parte da string CLASSIFICA
*   conforme orientacao da mascara fornecida no parametro
*   e decodificada no vetor VCLASS
*----------------------------------------------------------*
LSlencod   		= INT(VAL(vclass(1)))
m.clasF4		= CHRTRAN(STR(m.grupo_F4,LSlencod)," ","0")
m.clasF4    	= ALLTRIM(m.clasF4)
*----------------------------------------------------------*

SELE grupo
SET ORDER TO TAG grupos
LSemptmp =  STRTRAN(STR(m.empresa,3),' ','0')
SET NEAR ON
SEEK m.clasF4
SET NEAR OFF
*----------------------------------------------------------*
SELECT grupo
ON KEY LABEL ESCAPE
IF LASTKEY() = 9
	ON KEY LABEL ESCAPE
	DO loc_dlog WITH .T., "grupo.cdg_tipo = 1"
	ON KEY LABEL ESCAPE KEYBOARD "{BACKTAB}"
	IF LASTKEY() = 27
		RETURN .F.
	ENDIF
ENDIF
m.codF4  = grupo.codigo
m.clasF4 = grupo.classifica
m.grupo_F4 = INT(VAL(SUBS(m.clasF4,1, LSlencod)))
SHOW GET  m.grupo_F4
RETURN .t.


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _2LX0VSL8N           m.subgrp_F4 VALID                  ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC231,     Record Number:   73   ╨
*       ╨ Variable:            m.subgrp_F4                        ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Field                              ╨
*       ╨ Snippet Number:      20                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _2lx0vsl8n     &&  m.subgrp_F4 VALID
#REGION 1
PRIVATE LSemptmp, LSlencod
	LSvinculo	= ""	&& fixa os itens do browse ao nivel anterior
	LSlenvinc 	= 0		&& inf.a pate do cod.que deve estar no vinculo
	LSemptmp	= ""	&& informa empresa p/ associar prod.especificos
	LSlencod  	= 0		&& numero de digitos que compoe o grupo
*----------------------------------------------------------*
IF EMPTY(m.subgrp_F4) AND LASTKEY() <> 9
	RETURN(.T.)
ENDIF
*----------------------------------------------------------*
*	converte codigo numerico do sub-grupo em parte da string CLASSIFICA
*   conforme orientacao da mascara fornecida no parametro
*   e decodificada no vetor VCLASS
*----------------------------------------------------------*
LSlencod   		= INT(VAL(vclass(1)))
m.clasF4	= CHRTRAN(STR(m.grupo_F4,LSlencod)," ","0")
LSvinculo		= ALLTRIM(m.clasF4)
LSlenvinc  		= INT(VAL(vclass(1)))

*----->>>
LSlencod   		= INT(VAL(vclass(2))) - INT(VAL(vclass(1)))
m.clasF4	= m.clasF4 + CHRTRAN(STR(m.subgrp_F4,LSlencod)," ","0")
m.clasF4	= ALLTRIM(m.clasF4)
*----------------------------------------------------------*

SELE grupo
SET ORDER TO TAG subgrupos
LSemptmp =  STRTRAN(STR(m.empresa,3),' ','0')
SET NEAR ON
SEEK m.clasF4
SET NEAR OFF
*----------------------------------------------------------*
SELECT grupo
ON KEY LABEL ESCAPE
IF LASTKEY() = 9
	ON KEY LABEL ESCAPE
	DO loc_dlog WITH .T.,;
		 " LEFT(grupo.classifica, LSlenvinc) = '&LSvinculo' " + ;
		 " AND grupo.cdg_tipo = 2"
	ON KEY LABEL ESCAPE KEYBOARD "{BACKTAB}"
	IF LASTKEY() = 27
		RETURN .F.
	ENDIF
ENDIF
m.codF4  = grupo.codigo
m.clasF4 = grupo.classifica
m.subgrp_F4 = INT(VAL(SUBS(m.clasF4,INT(VAL(vclass(1)))+1, LSlencod)))
SHOW GET  m.subgrp_F4
RETURN .t.


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _2LX0VSL8S           m.desc5 WHEN                       ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC231,     Record Number:   74   ╨
*       ╨ Variable:            m.desc5                            ╨
*       ╨ Called By:           WHEN Clause                        ╨
*       ╨ Object Type:         Field                              ╨
*       ╨ Snippet Number:      21                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _2lx0vsl8s     &&  m.desc5 WHEN
#REGION 1
ON KEY LABEL ESCAPE	KEYBOARD "{END}"
IF LASTKEY() = 15 AND !(isediting)
	KEYBOARD "{ESCAPE}"
ENDIF
RETURN(isediting)


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _2LX0VSL8V           m.grupo_I5 VALID                   ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC231,     Record Number:   75   ╨
*       ╨ Variable:            m.grupo_I5                         ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Field                              ╨
*       ╨ Snippet Number:      22                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _2lx0vsl8v     &&  m.grupo_I5 VALID
#REGION 1
PRIVATE  LSemptmp, LSlencod		
	LSchv_tmp	= ""	&& chave temporaria para busca
	LSlencod  = 0		&& numero de digitos que compoe o grupo
*----------------------------------------------------------*
IF EMPTY(m.grupo_I5) AND LASTKEY() <> 9
	m.clasI5  = " "
	RETURN(.T.)
ENDIF
*----------------------------------------------------------*
*	converte codigo numerico do sub-grupo em parte da string CLASSIFICA
*   conforme orientacao da mascara fornecida no parametro
*   e decodificada no vetor VCLASS
*----------------------------------------------------------*
LSlencod   		= INT(VAL(vclass(1)))
m.clasI5		= CHRTRAN(STR(m.grupo_I5,LSlencod)," ","0")
m.clasI5	    = ALLTRIM(m.clasI5)
*----------------------------------------------------------*

SELE grupo
SET ORDER TO TAG grupos
SET NEAR ON
SEEK m.clasI5
SET NEAR OFF
*----------------------------------------------------------*
SELECT grupo
ON KEY LABEL ESCAPE
IF LASTKEY() = 9
	ON KEY LABEL ESCAPE
	DO loc_dlog WITH .T., "grupo.cdg_tipo = 1"
	ON KEY LABEL ESCAPE KEYBOARD "{BACKTAB}"
	IF LASTKEY() = 27
		RETURN .F.
	ENDIF
ENDIF
m.codI5  = grupo.codigo
m.clasI5 = grupo.classifica
m.grupo_I5 = INT(VAL(SUBS(m.clasI5,1, LSlencod)))
SHOW GET  m.grupo_I5
RETURN .t.


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _2LX0VSL8Z           m.subgrp_I5 VALID                  ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC231,     Record Number:   76   ╨
*       ╨ Variable:            m.subgrp_I5                        ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Field                              ╨
*       ╨ Snippet Number:      23                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _2lx0vsl8z     &&  m.subgrp_I5 VALID
#REGION 1
PRIVATE LSemptmp, LSlencod
	LSvinculo	= ""	&& fixa os itens do browse ao nivel anterior
	LSlenvinc 	= 0		&& inf.a pate do cod.que deve estar no vinculo
	LSemptmp	= ""	&& informa empresa p/ associar prod.especificos
	LSlencod  	= 0		&& numero de digitos que compoe o grupo
*----------------------------------------------------------*
IF EMPTY(m.subgrp_I5) AND LASTKEY() <> 9
	RETURN(.T.)
ENDIF
*----------------------------------------------------------*
*	converte codigo numerico do sub-grupo em parte da string CLASSIFICA
*   conforme orientacao da mascara fornecida no parametro
*   e decodificada no vetor VCLASS
*----------------------------------------------------------*
LSlencod   		= INT(VAL(vclass(1)))
m.clasI5		= CHRTRAN(STR(m.grupo_I5,LSlencod)," ","0")
LSvinculo		= ALLTRIM(m.clasI5)
LSlenvinc  		= INT(VAL(vclass(1)))

*----->>>
LSlencod   		= INT(VAL(vclass(2))) - INT(VAL(vclass(1)))
m.clasI5		= m.clasI5 + CHRTRAN(STR(m.subgrp_I5,LSlencod)," ","0")
m.clasI5		= ALLTRIM(m.clasI5)
*----------------------------------------------------------*

SELE grupo
SET ORDER TO TAG subgrupos
LSemptmp =  STRTRAN(STR(m.empresa,3),' ','0')
SET NEAR ON
SEEK m.clasI5
SET NEAR OFF
*----------------------------------------------------------*
SELECT grupo
ON KEY LABEL ESCAPE
IF LASTKEY() = 9
	ON KEY LABEL ESCAPE
	DO loc_dlog WITH .T.,;
		 " LEFT(grupo.classifica, LSlenvinc) = '&LSvinculo' " + ;
		 " AND grupo.cdg_tipo = 2"
	ON KEY LABEL ESCAPE KEYBOARD "{BACKTAB}"
	IF LASTKEY() = 27
		RETURN .F.
	ENDIF
ENDIF
m.codI5 	 = grupo.codigo
m.clasI5 	 = grupo.classifica
m.subgrp_I5 = INT(VAL(SUBS(m.clasI5,INT(VAL(vclass(1)))+1, LSlencod)))
SHOW GET  m.subgrp_I5

RETURN .t.


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _2LX0VSL94           m.grupo_F5 VALID                   ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC231,     Record Number:   77   ╨
*       ╨ Variable:            m.grupo_F5                         ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Field                              ╨
*       ╨ Snippet Number:      24                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _2lx0vsl94     &&  m.grupo_F5 VALID
#REGION 1
PRIVATE  LSemptmp, LSlencod		
	LSchv_tmp	= ""	&& chave temporaria para busca
	LSemptmp	= ""	&& informa empresa p/ associar prod.especificos
	LSlencod  = 0		&& numero de digitos que compoe o grupo
*----------------------------------------------------------*
IF EMPTY(m.grupo_F5) AND LASTKEY() <> 9
	m.clasF5 	= 	""
	RETURN(.T.)
ENDIF
*----------------------------------------------------------*
*	converte codigo numerico do sub-grupo em parte da string CLASSIFICA
*   conforme orientacao da mascara fornecida no parametro
*   e decodificada no vetor VCLASS
*----------------------------------------------------------*
LSlencod   		= INT(VAL(vclass(1)))
m.clasF5		= CHRTRAN(STR(m.grupo_F5,LSlencod)," ","0")
m.clasF5    	= ALLTRIM(m.clasF5)
*----------------------------------------------------------*

SELE grupo
SET ORDER TO TAG grupos
LSemptmp =  STRTRAN(STR(m.empresa,3),' ','0')
SET NEAR ON
SEEK m.clasF5
SET NEAR OFF
*----------------------------------------------------------*
SELECT grupo
ON KEY LABEL ESCAPE
IF LASTKEY() = 9
	ON KEY LABEL ESCAPE
	DO loc_dlog WITH .T., "grupo.cdg_tipo = 1"
	ON KEY LABEL ESCAPE KEYBOARD "{BACKTAB}"
	IF LASTKEY() = 27
		RETURN .F.
	ENDIF
ENDIF
m.codF5  = grupo.codigo
m.clasF5 = grupo.classifica
m.grupo_F5 = INT(VAL(SUBS(m.clasF5,1, LSlencod)))
SHOW GET  m.grupo_F5
RETURN .t.


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _2LX0VSL99           m.subgrp_F5 VALID                  ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC231,     Record Number:   78   ╨
*       ╨ Variable:            m.subgrp_F5                        ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Field                              ╨
*       ╨ Snippet Number:      25                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _2lx0vsl99     &&  m.subgrp_F5 VALID
#REGION 1
PRIVATE LSemptmp, LSlencod
	LSvinculo	= ""	&& fixa os itens do browse ao nivel anterior
	LSlenvinc 	= 0		&& inf.a pate do cod.que deve estar no vinculo
	LSemptmp	= ""	&& informa empresa p/ associar prod.especificos
	LSlencod  	= 0		&& numero de digitos que compoe o grupo
*----------------------------------------------------------*
IF EMPTY(m.subgrp_F5) AND LASTKEY() <> 9
	RETURN(.T.)
ENDIF
*----------------------------------------------------------*
*	converte codigo numerico do sub-grupo em parte da string CLASSIFICA
*   conforme orientacao da mascara fornecida no parametro
*   e decodificada no vetor VCLASS
*----------------------------------------------------------*
LSlencod   		= INT(VAL(vclass(1)))
m.clasF5	= CHRTRAN(STR(m.grupo_F5,LSlencod)," ","0")
LSvinculo		= ALLTRIM(m.clasF5)
LSlenvinc  		= INT(VAL(vclass(1)))

*----->>>
LSlencod   		= INT(VAL(vclass(2))) - INT(VAL(vclass(1)))
m.clasF5	= m.clasF5 + CHRTRAN(STR(m.subgrp_F5,LSlencod)," ","0")
m.clasF5	= ALLTRIM(m.clasF5)
*----------------------------------------------------------*

SELE grupo
SET ORDER TO TAG subgrupos
LSemptmp =  STRTRAN(STR(m.empresa,3),' ','0')
SET NEAR ON
SEEK m.clasF5
SET NEAR OFF
*----------------------------------------------------------*
SELECT grupo
ON KEY LABEL ESCAPE
IF LASTKEY() = 9
	ON KEY LABEL ESCAPE
	DO loc_dlog WITH .T.,;
		 " LEFT(grupo.classifica, LSlenvinc) = '&LSvinculo' " + ;
		 " AND grupo.cdg_tipo = 2"
	ON KEY LABEL ESCAPE KEYBOARD "{BACKTAB}"
	IF LASTKEY() = 27
		RETURN .F.
	ENDIF
ENDIF
m.codF5  = grupo.codigo
m.clasF5 = grupo.classifica
m.subgrp_F5 = INT(VAL(SUBS(m.clasF5,INT(VAL(vclass(1)))+1, LSlencod)))
SHOW GET  m.subgrp_F5
RETURN .t.


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _2LX0VSL9F           mes_A WHEN                         ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC231,     Record Number:   79   ╨
*       ╨ Variable:            mes_A                              ╨
*       ╨ Called By:           WHEN Clause                        ╨
*       ╨ Object Type:         Field                              ╨
*       ╨ Snippet Number:      26                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _2lx0vsl9f     &&  mes_A WHEN
#REGION 1
ON KEY LABEL ENTER
RETURN(isediting)

*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _2LX0VSL9H           LFsaida WHEN                       ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC231,     Record Number:   80   ╨
*       ╨ Variable:            LFsaida                            ╨
*       ╨ Called By:           WHEN Clause                        ╨
*       ╨ Object Type:         Check Box                          ╨
*       ╨ Snippet Number:      27                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _2lx0vsl9h     &&  LFsaida WHEN
#REGION 1
IF isediting
	ON KEY LABEL ENTER KEYBOARD "{RIGHTARROW}"
ENDIF	
RETURN(isediting)


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _2LX0VSL9L           LFmarca WHEN                       ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC231,     Record Number:   81   ╨
*       ╨ Variable:            LFmarca                            ╨
*       ╨ Called By:           WHEN Clause                        ╨
*       ╨ Object Type:         Check Box                          ╨
*       ╨ Snippet Number:      28                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _2lx0vsl9l     &&  LFmarca WHEN
#REGION 1
IF isediting
	ON KEY LABEL ENTER KEYBOARD "{RIGHTARROW}"
ENDIF	
RETURN(isediting)


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _2LX0VSL9M           LFnatureza WHEN                    ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC231,     Record Number:   82   ╨
*       ╨ Variable:            LFnatureza                         ╨
*       ╨ Called By:           WHEN Clause                        ╨
*       ╨ Object Type:         Check Box                          ╨
*       ╨ Snippet Number:      29                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _2lx0vsl9m     &&  LFnatureza WHEN
#REGION 1
IF isediting
	ON KEY LABEL ENTER KEYBOARD "{RIGHTARROW}"
ENDIF	
RETURN(isediting)


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _2LX0VSL9N           m.titulo WHEN                      ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC231,     Record Number:   83   ╨
*       ╨ Variable:            m.titulo                           ╨
*       ╨ Called By:           WHEN Clause                        ╨
*       ╨ Object Type:         Field                              ╨
*       ╨ Snippet Number:      30                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _2lx0vsl9n     &&  m.titulo WHEN
#REGION 1
ON KEY LABEL ENTER
IF !isediting
	RETURN .F.
ENDIF
m.titulo = " Movimento de Entrada e Saida em Peso  "
RETURN .T.

*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _2LX0VSL9O           m.imp_btn VALID                    ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC231,     Record Number:   85   ╨
*       ╨ Variable:            m.imp_btn                          ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      31                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _2lx0vsl9o     &&  m.imp_btn VALID
#REGION 1
    LSmes   = CTOD("01."+mes_A)
 	***************
	wl_arqtmp = ""
	LNtmp     = 65		&& TABELA ASCII A = 65
	IF !UPabretmp("dpl")
		SHOW GET m.imp_btn DISABLE
		RETURN
	ENDIF
	**************
	LStmp = "&wp_dirtmp"+"&wl_arqtmp"

	SELECT tab001
	SET ORDER TO TAG codigo
	SELE EMPRESA
	SET ORDER TO TAG empresa
	SEEK m.empresa
	SELE GRUPO
	SET ORDER TO TAG classifica
	SELE CLIENTES
	SET ORDER TO TAG cliente

	IF	!LFnatureza
		SELE saldo
		SET ORDER TO TAG dtabert
		GO TOP
		SET NEAR ON
		SEEK DTOS(LSmes)
		SET NEAR OFF
		WAIT WINDOW "AGUARDE. Gerando Arq. Temporario..." NOWAIT
		COPY TO &LStmp WHILE MONTH(saldo.dtabert) = MONTH(LSmes)  AND ;
				              YEAR(saldo.dtabert) = YEAR(LSmes)
		KEYBOARD CHR(13)
		SELE 0
		USE "&wp_dirtmp"+"&wl_arqtmp" exclu
    	INDEX ON STR(EMPRESA,3) + CLASSIFICA  TAG tmpind ADDITIVE
		SET ORDER TO TAG tmpind
	ELSE
		SELE itemmov
		SET ORDER TO TAG dt_mov
		SET RELATION TO FAVORECIDO INTO CLIENTES

		GO TOP
		WAIT WINDOW "AGUARDE. Gerando Arq. Temporario..." NOWAIT
		COPY TO &LStmp FIELDS empresa, favorecido,;
							  classifica,;
							  qtde,;
							  vlrvenda,;
							  clientes.natureza;
						   FOR MONTH(itemmov.data) = MONTH(LSmes)  AND ;
				           YEAR(itemmov.data) = YEAR(LSmes) AND ;
						   itemmov.ch_opera = '1' AND ;
						   LEFT(itemmov.operacao,1) = 'S'

		KEYBOARD CHR(13)
		SELE 0
		USE "&wp_dirtmp"+"&wl_arqtmp" exclu
    	INDEX ON STR(natureza,1) + ;
    			 STR(EMPRESA,3) + CLASSIFICA  TAG tmpind ADDITIVE
		SET ORDER TO TAG tmpind
		SET RELATION TO FAVORECIDO INTO CLIENTES
		SET RELATION TO 'NTZ'+STR(natureza,1) INTO TAB001

	ENDIF

	SELE  &wl_arqtmp
	GO TOP
	IF  EOF()
		SET RELATION TO
		USE
		WAIT WINDOW "Nao ha dados nos criterios solicitados. <ENTER>"
		SHOW GET m.imp_btn DISABLE

		RETURN
	ENDIF	

*******************
*---->   (INICIALIZACAO DO CONTROLE DE STATUS IMPRESSAO)
*******************	
	SET RELATION TO classifica  INTO grupo ADDITIVE
	SET RELATION TO empresa		INTO empresa ADDITIVE
*******************	

	DO RELINIC.PRG          && INICIA VAR P/ TERMOMETRO
	LFsegue = .t.
	LNregistro = RECNO()
    LNimpressao = RECCOUNT()
	LNantimp = LNimpressao 	&& PARA TRATAR SEGUNDA IMPRESSAO

	LNimpressos = 0
	GO LNregistro
*******************
*---->   (COMPLETADO PREPARACAO DO CONTROLE DE STATUS IMPRESSAO)
*******************	
**************************>>> REGISTRO DE SAIDAS
	LSorienta = " WHILE LFsegue "
	wp_arqname = ""

	IF	!LFnatureza
		IF LFsaida
		    LSrel = "REL231"  && relatorio padrao p/ impressoras ex: epson
			DO UPimpressao    && COORDENA TRABALHO DE IMPRESSAO
		ENDIF
		LNimpressao = LNantimp   	&& PARA TRATAR SEGUNDA IMPRESSAO
		LNimpressos = 0
		GO LNregistro
		IF LFmarca
		    LSrel = "REL231A"   && relatorio padrao p/ impressoras ex: epson
			DO UPimpressao    && COORDENA TRABALHO DE IMPRESSAO
		ENDIF
	ELSE
	    LSrel = "REL231B"   && relatorio padrao p/ impressoras ex: epson
		DO UPimpressao    && COORDENA TRABALHO DE IMPRESSAO
	ENDIF
***********
	DO RELFIM.PRG          && FIM VAR P/ TERMOMETRO
*-----------------------------
    SET PRINTER TO SET('PRINTER',1)
	SET RELATION TO
	SET POINT TO
	SET SEPARATOR  TO
	SELE  &wl_arqtmp
	USE

	SHOW WINDOW SCGC231 TOP
	SHOW GET m.imp_btn DISABLE

RETURN


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _2LX0VSL9P           m.canc_btn VALID                   ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC231,     Record Number:   86   ╨
*       ╨ Variable:            m.canc_btn                         ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      32                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _2lx0vsl9p     &&  m.canc_btn VALID
#REGION 1
CLEAR GETS
CLEAR READ
isediting = .f.
RETURN .T.