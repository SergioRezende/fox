


	SET TALK ON
	SET ESCAPE ON
	CLOSE DATA
*	DO VNC_CEP01
*	DO VNC_CEP02
*	DO  ULENDERECO

	SET STEP ON
 	CORRIGE = "CLIENC"
	X = .T.
	DO WHILE X = .T.



		*------------
		*IF 	CORRIGE = ""
		* 	CORRIGE = "NF"
		*ELSE
		* 	IF CORRIGE = "NF"
		*		CORRIGE = "CLIENTES"
		*	ELSE
		*		IF CORRIGE = "CLIENTES"
		*			CORRIGE = "CLIENC"
		*		ELSE
		*			IF CORRIGE = "CLIENC"
		*				CORRIGE = "FORNECE"
		*			ELSE
		*				IF CORRIGE = "FORNECE"
		*					 X = .F.
		*					 LOOP
		*				ENDIF
		*			ENDIF
		*		ENDIF
		*	ENDI
		*ENDIF

		CORRIGE = "NF"
		X= .F.
		*------------
		DO UlCEPVALIDO WITH CORRIGE       && CORRIGE NOTAS COM CEP VALIDO

		DO UlMUNIVALIDO  WITH CORRIGE     && CORRIGE NOTAS COM CEP INVALIDO MAS COM
	                 && MUNICIPIO VALIDO 
		DO UlCEPENCONTRADOS  WITH CORRIGE && CORRIGE NOTAS COM CEP INVALIDO, COM
	                 && MUNICIPIO INVALIDO MAS QUE FORAM IDENTIFICADOS
	ENDDO

RETURN
PROCEDURE VNC_CEP01
	*------------------------------------------------------*
	* A TABELA CEP.DBF DEVE CONTER OS IDs DE MUNIICIPIO E 
	* ESTADO PARA FAZER IDENTIFICACAO DIRETA SEM BUSCAR O 
	* VINCULO ATRAVES DE TABELA INTERMEDIARIA
	*------------------------------------------------------*
	* LIGAR :
	*		CEP.DBF    ==(BAIR_ID) ==> BAIRROS.DBF
	*
	* TRANSFERIR DADOS
	*
	*      CEP.MUNI_ID <<============= BAIRROS.MUNI_ID
	*------------------------------------------------------*
	SELE 0
	USE  X:\SCGC\CEP\BAIRROS.DBF ALIAS BAI
	SET ORDER TO TAG BAIR_ID

	SELE 0
	USE  X:\SCGC\CEP\CEP.DBF ALIAS CEP
	SET ORDER TO TAG ENDE_CEP
	SET RELATION TO BAIR_ID INTO BAI
	
	REPLACE ALL CEP.MUNI_ID WITH BAI.MUNI_ID

	SELE BAI
	USE
	SELE CEP
	USE
RETURN


PROCEDURE VNC_CEP02

	*------------------------------------------------------*
	* A TABELA CEP.DBF DEVE CONTER OS IDs DE MUNIICIPIO E 
	* ESTADO PARA FAZER IDENTIFICACAO DIRETA SEM BUSCAR O 
	* VINCULO ATRAVES DE TABELA INTERMEDIARIA
	*------------------------------------------------------*
	* LIGAR :
	*		CEP.DBF    ==(MUNI_ID) ==> MUNICPIO.DBF
	*
	* TRANSFERIR DADOS
	*
	*      CEP.ESTA_ID <<============= MUNICPIO.ESTA_ID
	*------------------------------------------------------*
	SELE 0
	USE  X:\SCGC\CEP\MUNICPIO.DBF ALIAS MUN
	SET ORDER TO TAG MUNI_ID

	SELE 0
	USE  X:\SCGC\CEP\CEP.DBF ALIAS CEP
	SET ORDER TO TAG ENDE_CEP
	SET RELATION TO MUNI_ID INTO MUN
	
	REPLACE ALL CEP.ESTA_ID WITH MUN.ESTA_ID

	SELE MUN
	USE
	SELE CEP
	USE

RETURN

PROCEDURE ULENDERECO
	*------------------------------------------------------*
	SELE 0
	USE  x:\SCGC\CENTRAL\NOTA ALIAS NF
	REPLACE ALL ENDERECO WITH "N/INFORMADO" FOR EMPTY(ENDERECO)

	USE  X:\SCGC\COMUM\FORNECE ALIAS NF
	REPLACE ALL ENDERECO WITH "N/INFORMADO" FOR EMPTY(ENDERECO)

	USE  x:\SCGC\CENTRAL\CLIENTES ALIAS NF
	REPLACE ALL ENDERECO WITH "N/INFORMADO" FOR EMPTY(ENDERECO)

	USE  x:\SCGC\CENTRAL\CLIENC ALIAS NF
	REPLACE ALL ENDERECO WITH "N/INFORMADO" FOR EMPTY(ENDERECO)
	
	USE 
RETURN

PROCEDURE ULCEPVALIDO
PARAMETERS PrmArq
	*------------------------------------------------------*
	* A TABELA NOTA.DBF DEVE SER CORRIGIDA ATRIBUINDO-SE
	*  NOME DE BAIRRO , UF e MUNICIPIO QUANDO O CEP
	* INFORMADO NA NOTA ESTIVER CORRETO (VALIDO)
	*------------------------------------------------------*
	* LIGAR :
	*		NOTA.DBF   =====(CEP) ====>CEP.DBF
	*			CEP.DBF    ==(BAIR_ID) ==> BAIRROS.DBF	*
	*			CEP.DBF    ==(MUNI_ID) ==> MUNICPIO.DBF	*
	*			CEP.DBF    ==(ESTA_ID) ==> ESTADOS.DBF	*
	*
	* TRANSFERIR DADOS
	*
	*      NOTA.CIDADE <<============= MUNICPIO.MUNICIPIO
	*      NOTA.UF     <<============= MUNICPIO.UF
	*------------------------------------------------------*
	SELE 0
	USE  X:\SCGC\CEP\MUNICPIO.DBF ALIAS MUN
	SET ORDER TO TAG MUNI_ID

	SELE 0
	USE  X:\SCGC\CEP\CEP.DBF ALIAS CEP
	SET ORDER TO TAG ENDE_CEP
	SET RELATION TO MUNI_ID INTO MUN

	DO CASE
		CASE PrmArq = "NF"
			SELE 0
			USE  x:\SCGC\CENTRAL\NOTA ALIAS NF
			SET ORDER TO TAG NOTA
			SET RELATION TO  CEP  INTO CEP 
			SET FILTER TO DATA >= {01.02.2007}

		CASE PrmArq = "FORNECE"
			SELE 0
			USE  X:\SCGC\COMUM\FORNECE ALIAS NF
			SET ORDER TO TAG NOME
			SET RELATION TO  CEP  INTO CEP 
		CASE PrmArq = "CLIENTES"
			SELE 0
			USE  x:\SCGC\CENTRAL\CLIENTES ALIAS NF
			SET ORDER TO TAG NOME
			SET RELATION TO  INT(VAL(CEP))  INTO CEP ADDITIVE
		CASE PrmArq = "CLIENC"
			SELE 0
			USE  x:\SCGC\CENTRAL\CLIENC ALIAS NF
			SET ORDER TO TAG CLIENTE
			SET RELATION TO  INT(VAL(CEP))  INTO CEP ADDITIVE
	ENDCASE		

	ON ERROR
	ON KEY
	SET ESCAPE ON
	GO TOP
	DO WHILE !EOF()
    	 IF !EMPTY(CEP.ENDE_CEP)   && O CEP E VALIDO
	            IF MUN.MUNI_CEP > 0
					DO CASE
						CASE PrmArq = "NF"
						    IF NF.UF <>  MUN.UF
						       SKIP
						       LOOP
						    ENDIF

						    REPLACE NF.CIDADE WITH MUN.MUNICIPIO
						    REPLACE NF.UF WITH  MUN.UF
						CASE PrmArq = "FORNECE"
						    REPLACE NF.CIDADE WITH  MUN.MUNICIPIO
						    REPLACE NF.ESTADO WITH  MUN.UF
						CASE PrmArq $ "CLIENTES/CLIENC"
						    REPLACE NF.CIDADE WITH  MUN.MUNICIPIO
						    REPLACE NF.ESTADO WITH  MUN.UF
					ENDCASE		
	    	    ENDIF
				REPLACE NF.MUNI_IBGE WITH MUN.MUNI_IBGE
	     ENDIF
		 SKIP
	ENDDO
	SELE NF
	USE
	SELE MUN
	USE
	SELE CEP
	USE

RETURN

PROCEDURE ULMUNIVALIDO
PARAMETERS PrmArq
	*------------------------------------------------------*
	* A TABELA NOTA.DBF DEVE SER CORRIGIDA ATRIBUINDO-SE
	*  NOME DE BAIRRO , UF e MUNICIPIO QUANDO O CEP
	* INFORMADO NA NOTA ESTIVER CORRETO (VALIDO)
	*------------------------------------------------------*
	* LIGAR :
	*		NOTA.DBF   =====(CEP) ====>CEP.DBF
	*		NOTA.DBF   ==(UF+CIDADE) ====>MUNICPIO.DBF
	*
	* TRANSFERIR DADOS SE EMPTY(CEP.END_CEP)
	*
	*      NOTA.CIDADE <<============= MUNICPIO.MUNICIPIO
	*      NOTA.UF     <<============= MUNICPIO.UF
	*------------------------------------------------------*
	SELE 0
	USE  X:\SCGC\CEP\MUNICPIO.DBF ALIAS MUN
	SET ORDER TO TAG UF_CIDADE

	SELE 0
	USE  X:\SCGC\CEP\CEP.DBF ALIAS CEP
	SET ORDER TO TAG ENDE_CEP

	DO CASE
		CASE PrmArq = "NF"
			SELE 0
			USE  x:\SCGC\CENTRAL\NOTA ALIAS NF
			SET ORDER TO TAG NOTA
			SET RELATION TO  CEP  INTO CEP 
			SET RELATION TO UF+LEFT(ALLTRIM(CIDADE),30) INTO MUN ADDITIVE
			SET FILTER TO DATA >= {01.02.2007}

		CASE PrmArq = "FORNECE"
			SELE 0
			USE  X:\SCGC\COMUM\FORNECE ALIAS NF
			SET ORDER TO TAG NOME
			SET RELATION TO  CEP  INTO CEP 
			SET RELATION TO ESTADO+LEFT(ALLTRIM(CIDADE),30) INTO MUN ADDITIVE
		CASE PrmArq = "CLIENTES"
			SELE 0
			USE  x:\SCGC\CENTRAL\CLIENTES ALIAS NF
			SET ORDER TO TAG NOME
			SET RELATION TO  INT(VAL(CEP))  INTO CEP 
			SET RELATION TO ESTADO+LEFT(ALLTRIM(CIDADE),30) INTO MUN ADDITIVE
		CASE PrmArq = "CLIENC"
			SELE 0
			USE  x:\SCGC\CENTRAL\CLIENC ALIAS NF
			SET ORDER TO TAG CLIENTE
			SET RELATION TO  INT(VAL(CEP))  INTO CEP 
			SET RELATION TO ESTADO+LEFT(ALLTRIM(CIDADE),30) INTO MUN ADDITIVE
	ENDCASE		



	ON ERROR
	ON KEY
	SET ESCAPE ON
	GO TOP
	DO WHILE !EOF()
    	 IF EMPTY(CEP.ENDE_CEP)   && O CEP E INVALIDO
	            IF MUN.MUNI_CEP > 0  && MUNICIPIO E VALIDO
					DO CASE
						CASE PrmArq = "NF"
						    IF NF.UF <>  MUN.UF
						       SKIP
						       LOOP
						    ENDIF
						    REPLACE NF.CEP 		WITH MUN.MUNI_CEP
						    REPLACE NF.CIDADE 	WITH MUN.MUNICIPIO
						    REPLACE NF.UF 		WITH MUN.UF
						CASE PrmArq = "FORNECE"
						    REPLACE NF.CEP 			WITH MUN.MUNI_CEP
						    REPLACE NF.CIDADE WITH  MUN.MUNICIPIO
						    REPLACE NF.ESTADO WITH  MUN.UF
						CASE PrmArq $ "CLIENTES/CLIENC"
			                REPLACE NF.CEP WITH STR(MUN.MUNI_CEP,8)
						    REPLACE NF.CIDADE WITH  MUN.MUNICIPIO
						    REPLACE NF.ESTADO WITH  MUN.UF
					ENDCASE		
					REPLACE NF.MUNI_IBGE WITH MUN.MUNI_IBGE
	    	    ENDIF
	     ENDIF
		 SKIP
	ENDDO
	SELE NF
	USE
	SELE MUN
	USE
	SELE CEP
	USE

RETURN


PROCEDURE ULCEPENCONTRADOS 
PARAMETERS PrmArq
	*------------------------------------------------------*
	*	 QUANDO O CEP E O MUNICIPIO INFOMADOS NA NF ESTAO 
	* INCORRETOS E FEITO UM LEVANTAMENTO PARA IDENTIFICA-LOS
	* E PERMITIR QUE SEJAM CORRIGIDOS
	*------------------------------------------------------*
	* LIGAR :
	*		NOTA.DBF   =====(CEP) ====>CEP.DBF
	*		NOTA.DBF   ==(UF+CIDADE) ====>MUNICPIO.DBF
	*		NOTA.DBF   ==(UF+CIDADE) ====>CEP_ENC3.DBF
	*
	* TRANSFERIR DADOS SE  EMPTY(CEP.END_CEP) 
	*                    E EMPTY(MUNICPIO.MUNI_CEP) 
	*
	*      NOTA.CEP    <<============= CEP_ENC3.CEP
	*      NOTA.CIDADE <<============= CEP_ENC3.CIDADE_OK
	*      NOTA.UF     <<============= CEP_ENC3.UF_OK
	*------------------------------------------------------*
	SELE 0
	USE  X:\SCGC\CEP\MUNICPIO.DBF ALIAS MUN
	SET ORDER TO TAG UF_CIDADE

	SELE 0
	USE  X:\SCGC\CEP\CEP_ENC3.DBF ALIAS ENC
	SET ORDER TO TAG UF_CIDADE

	SELE 0
	USE  X:\SCGC\CEP\CEP.DBF ALIAS CEP
	SET ORDER TO TAG ENDE_CEP




	DO CASE
		CASE PrmArq = "NF"
			SELE 0
			USE  x:\SCGC\CENTRAL\NOTA ALIAS NF
			SET ORDER TO TAG NOTA
			SET RELATION TO  CEP  INTO CEP 
			SET RELATION TO UF+LEFT(ALLTRIM(CIDADE),30) INTO MUN ADDITIVE
			SET RELATION TO UF+LEFT(ALLTRIM(CIDADE),30) INTO ENC ADDITIVE
			SET FILTER TO DATA >= {01.02.2007}

		CASE PrmArq = "FORNECE"
			SELE 0
			USE  X:\SCGC\COMUM\FORNECE ALIAS NF
			SET ORDER TO TAG NOME
			SET RELATION TO  CEP  INTO CEP 
			SET RELATION TO ESTADO+LEFT(ALLTRIM(CIDADE),30) INTO MUN ADDITIVE
			SET RELATION TO ESTADO+LEFT(ALLTRIM(CIDADE),30) INTO ENC ADDITIVE
		CASE PrmArq = "CLIENTES"
			SELE 0
			USE  x:\SCGC\CENTRAL\CLIENTES ALIAS NF
			SET ORDER TO TAG NOME
			SET RELATION TO  INT(VAL(CEP))  INTO CEP 
			SET RELATION TO ESTADO+LEFT(ALLTRIM(CIDADE),30) INTO MUN ADDITIVE
			SET RELATION TO ESTADO+LEFT(ALLTRIM(CIDADE),30) INTO ENC ADDITIVE
		CASE PrmArq = "CLIENC"
			SELE 0
			USE  x:\SCGC\CENTRAL\CLIENC ALIAS NF
			SET ORDER TO TAG CLIENTE
			SET RELATION TO  INT(VAL(CEP))  INTO CEP 
			SET RELATION TO ESTADO+LEFT(ALLTRIM(CIDADE),30) INTO MUN ADDITIVE
			SET RELATION TO ESTADO+LEFT(ALLTRIM(CIDADE),30) INTO ENC ADDITIVE
	ENDCASE		

	ON ERROR
	ON KEY
	SET ESCAPE ON
	GO TOP
	DO WHILE !EOF()
    	 IF EMPTY(CEP.ENDE_CEP)   && O CEP E INVALIDO
	        IF EMPTY(MUN.MUNI_CEP)
	            IF ENC.CEP  > 0 
					DO CASE
						CASE PrmArq = "NF"
						    IF NF.UF <>  ENC.UF_OK
						       SKIP
						       LOOP
						    ENDIF
						    REPLACE NF.CIDADE 	WITH ENC.CIDADE_OK
						    REPLACE NF.UF 		WITH ENC.UF_OK
						CASE PrmArq = "FORNECE"
						    REPLACE NF.CIDADE 	WITH ENC.CIDADE_OK
						    REPLACE NF.ESTADO   WITH ENC.UF_OK
						CASE PrmArq $ "CLIENTES/CLIENC"
						    REPLACE NF.CIDADE 	WITH ENC.CIDADE_OK
						    REPLACE NF.ESTADO   WITH ENC.UF_OK
					ENDCASE		
					SKIP
	    	    ENDIF
	    	ENDIF
	     ENDIF
		 SKIP
	ENDDO
	SELE NF
	USE
	SELE MUN
	USE
	SELE ENC
	USE
	SELE CEP
	USE

	DO ULMUNIVALIDO WITH PrmArq && CORRIGE NOTAS COM CEP INVALIDO MAS COM
	                 && MUNICIPIO VALIDO 
RETURN
