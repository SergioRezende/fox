*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º 08/06/15             SCT0100.SPR               15:48:38 º
*       º                                                         º
*       ÇÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¶
*       º                                                         º
*       º Author's Name                                           º
*       º                                                         º
*       º Copyright (c) 2015 Company Name                         º
*       º Address                                                 º
*       º City,     Zip                                           º
*       º                                                         º
*       º Description:                                            º
*       º This program was automatically generated by GENSCRN.    º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½


*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º          SCT0100/MS-DOS Setup Code - SECTION 1          º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*

#REGION 1
    = W_DEFPROC("rotinas.spr")
	ON KEY LABEL ESCAPE
	PRIVATE LFitemmov,LFsldressa
	PRIVATE LSalias
	PRIVATE wp_ref_local
	PRIVATE isediting
	wp_ref_local =  .f.     && NAO POSSUI CONTROLE DE REFRESH LOCAL
	m.isediting	 =	.F.
	LSalias	     = ALIAS()
    LFempresa    = NetArq("empresa")
    LFfornece    = NetArq("fornece")
    LFgrupo      = NetArq("grupo")
    LFitemmov    = NetArq("itemmov")
    LFsldressa   = NetArq("sldressa")
    LFvincress   = NetArq("vincress")
    LFtabforn    = NetArq("tabforn")
    IF (LFempresa+LFfornece+LFitemmov+LFsldressa+;
        LFgrupo+LFvincress) > 100000          && HOUVE FALHA ABERT
		DO ulfecha
    	RETURN(.F.)
    ENDIF

#REGION 0
REGIONAL m.currarea, m.talkstat, m.compstat

IF SET("TALK") = "ON"
	SET TALK OFF
	m.talkstat = "ON"
ELSE
	m.talkstat = "OFF"
ENDIF
m.compstat = SET("COMPATIBLE")
SET COMPATIBLE FOXPLUS

*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º                MS-DOS Window definitions                º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*

IF NOT WEXIST("sct0100") ;
	OR UPPER(WTITLE("SCT0100")) == "SCT0100.PJX" ;
	OR UPPER(WTITLE("SCT0100")) == "SCT0100.SCX" ;
	OR UPPER(WTITLE("SCT0100")) == "SCT0100.MNX" ;
	OR UPPER(WTITLE("SCT0100")) == "SCT0100.PRG" ;
	OR UPPER(WTITLE("SCT0100")) == "SCT0100.FRX" ;
	OR UPPER(WTITLE("SCT0100")) == "SCT0100.QPR"
	DEFINE WINDOW sct0100 ;
		FROM INT((SROW()-16)/2),INT((SCOL()-69)/2) ;
		TO INT((SROW()-16)/2)+15,INT((SCOL()-69)/2)+68 ;
		TITLE "[ R E S S A R C I M E N T O ]" ;
		FOOTER "[ 0100 ]" ;
		FLOAT ;
		NOCLOSE ;
		SHADOW ;
		NOMINIMIZE ;
		NONE ;
		COLOR SCHEME 1
ENDIF


*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º              SCT0100/MS-DOS Screen Layout               º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*

#REGION 1
IF WVISIBLE("sct0100")
	ACTIVATE WINDOW sct0100 SAME
ELSE
	ACTIVATE WINDOW sct0100 NOSHOW
ENDIF
@ 0,0 TO 15,67 ;
	COLOR SCHEME 23
@ 2,1 TO 4,16 ;
	COLOR SCHEME 23
@ 4,2 TO 4,15 ;
	COLOR SCHEME 24
@ 4,16 SAY "Ù" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 3,16 SAY "³" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 2,16 SAY "¿" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 2,2 SAY "[Filial]" ;
	SIZE 1,8, 0
@ 3,5 SAY "-" ;
	SIZE 1,1, 0
@ 2,18 TO 4,46 ;
	COLOR SCHEME 23
@ 4,19 TO 4,45 ;
	COLOR SCHEME 24
@ 4,46 SAY "Ù" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 3,46 SAY "³" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 2,46 SAY "¿" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 1,67 TO 15,67 ;
	COLOR SCHEME 24
@ 15,1 TO 15,66 ;
	COLOR SCHEME 24
@ 0,67 SAY "¿" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 0,19 SAY "[ R E S S A R C I M E N T O ]" ;
	SIZE 1,29, 0
@ 2,20 SAY "[ Periodo ]" ;
	SIZE 1,11, 0
@ 0,60 SAY "[0100]" ;
	SIZE 1,6, 0
@ 15,67 SAY "Ù" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 11,3 SAY "NF. Saida.......:" ;
	SIZE 1,17, 0
@ 12,3 SAY "Cod Prod........:" ;
	SIZE 1,17, 0
@ 6,1 TO 8,66 ;
	COLOR SCHEME 23
@ 8,3 TO 8,66 ;
	COLOR SCHEME 24
@ 7,66 SAY "³" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 6,66 SAY "¿" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 8,66 SAY "Ù" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 6,32 SAY "[Nome]" ;
	SIZE 1,6, 0
@ 3,2 GET m.empresa ;
	SIZE 1,3 ;
	DEFAULT 0 ;
	PICTURE "999" ;
	WHEN _4ez0xvyv5() ;
	VALID _4ez0xvyv6() ;
	ERROR "Empresa Nao Localizada. "
@ 3,6 GET m.nome_emp ;
	SIZE 1,7 ;
	DEFAULT " " ;
	PICTURE "@!K" ;
	WHEN _4ez0xvyv7()
@ 3,20 GET m.dt_inicio ;
	SIZE 1,10 ;
	DEFAULT {  /  /  } ;
	WHEN _4ez0xvyvp() ;
	VALID _4ez0xvyvu()
@ 3,34 GET m.dt_fim ;
	SIZE 1,10 ;
	DEFAULT {  /  /  } ;
	WHEN isediting ;
	VALID m.dt_fim >= m.dt_inicio ;
	MESSAGE "Data Final deve ser maior ou igual a Inicial"
@ 7,2 GET m.codigo ;
	SIZE 1,4 ;
	DEFAULT 0 ;
	PICTURE "9999" ;
	WHEN _4ez0xvyw0() ;
	VALID _4ez0xvyw4() ;
	ERROR wp_msg
@ 7,28 GET m.nome ;
	SIZE 1,38 ;
	DEFAULT " " ;
	PICTURE "@!K" ;
	WHEN .F.
@ 7,7 GET m.strcgc ;
	SIZE 1,20 ;
	DEFAULT " " ;
	PICTURE "@R 99.999.999/9999-99" ;
	WHEN .f.
@ 10,21 GET m.LNprocesso ;
	SIZE 1,12 ;
	DEFAULT 0 ;
	DISABLE
@ 11,21 GET m.LNs_nota ;
	SIZE 1,12 ;
	DEFAULT 0 ;
	DISABLE
@ 12,21 GET m.LSs_CODIGO ;
	SIZE 1,12 ;
	DEFAULT 0 ;
	DISABLE
@ 15,18 GET m.imp_btn ;
	PICTURE "@*HN \<Processar" ;
	SIZE 1,11,1 ;
	DEFAULT 1 ;
	WHEN _4ez0xvywe() ;
	VALID _4ez0xvywk() ;
	DISABLE
@ 15,32 GET m.imp_btn2 ;
	PICTURE "@*HN \<Imprimir" ;
	SIZE 1,11,1 ;
	DEFAULT 1 ;
	WHEN _4ez0xvywl() ;
	VALID _4ez0xvywm() ;
	DISABLE
@ 15,48 GET m.edit_btn ;
	PICTURE "@*HN \<Edita" ;
	SIZE 1,7,1 ;
	DEFAULT 1 ;
	WHEN _4ez0xvyx4() ;
	VALID _4ez0xvyx8() ;
	MESSAGE 'Permite a alteracao de dados do registro corrente'
@ 15,58 GET m.canc_btn ;
	PICTURE "@*HN \<Saida" ;
	SIZE 1,7,1 ;
	DEFAULT 1 ;
	VALID _4ez0xvyxg()
@ 6,2 SAY "[Fornecedor]" ;
	SIZE 1,12, 0
@ 10,3 SAY "Processo........:" ;
	SIZE 1,17, 0
@ 11,53 GET m.LNe_nf ;
	SIZE 1,12 ;
	DEFAULT 0 ;
	DISABLE
@ 11,35 SAY "NF. Entrada.....:" ;
	SIZE 1,17, 0

IF NOT WVISIBLE("sct0100")
	ACTIVATE WINDOW sct0100
ENDIF

READ CYCLE ;
	ACTIVATE READACT() ;
	DEACTIVATE READDEAC()

RELEASE WINDOW sct0100

#REGION 0
IF m.talkstat = "ON"
	SET TALK ON
ENDIF
IF m.compstat = "ON"
	SET COMPATIBLE ON
ENDIF



*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º   SCT0100/MS-DOS Supporting Procedures and Functions    º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*

#REGION 1
FUNCTION ULini
	LF_fim  = .f.
RETURN(" ")

FUNCTION ULfim
	LF_fim  = .t.
RETURN(" ")

*-----------------------------------------------------------------------*

PROCEDURE ULimprel
	SELE EMPRESA
	SET ORDER TO TAG empresa
	SEEK m.empresa
*******************
*---->   (INICIALIZACAO DO CONTROLE DE STATUS IMPRESSAO)
*******************	
    WAIT WIND "Aguarde, Processando ... " nowait
    = R_RESSARCI(m.empresa,m.dt_inicio,m.dt_fim)
*******************
	DO RELINIC.PRG                        && INICIA VAR P/ TERMOMETRO
	LFsegue     = .t.
	LSrel       = "RCT0100"
    LFok1        = .T.
    SELE c2_ressarc
	COUNT FOR c2_ressarc.s_nota > 0 TO LNimpressao
	LSorienta   = "FOR LFok1"
	LNimpressos = 0
    GO TOP
*******************
*---->   (COMPLETADO PREPARACAO DO CONTROLE DE STATUS IMPRESSAO)
*******************	
**************************>>> REGISTRO DE SAIDAS
	wp_arqname = ""
***********
    SELE c2_ressarc
    go top
	DO UPimpressao         && COORDENA TRABALHO DE IMPRESSAO
***********
    SELE c2_ressarc
    go top
	DO RELFIM.PRG          && FIM VAR P/ TERMOMETRO
*-----------------------------
    SET PRINTER TO SET('PRINTER',1)
	SET RELATION  TO
	SET POINT TO
	SET SEPARATOR TO
	SHOW GET m.imp_btn DISABLE
RETURN

PROCEDURE R_RESSARCI
	PARAMETER LNemp,LDdtinicio,LDdtfinal
	*------------------------------------------------------------*
	*  INICIA GERACAO DE ARQUIVO TEMPORARIO
	*------------------------------------------------------------*
	LSarqtmp 	= "" 			&& EX: C:\TMP\TMP0001
	LSaliastmp 	= "RES" 		&&     TMP001
	LSarqtmp = UPopentmp(wp_dirtmp,LSarqtmp,LSaliastmp,1)
	IF EMPTY(LSaliastmp)
		IF !EMPTY(LSalias) AND USED(LSalias)
			SELECT &LSalias
		ENDIF
		POP KEY 			&& reabilita teclas de atalho def. anteriormente
		RETURN(.F.)
	ENDIF		
	WAIT WINDOW ;
		"AGUARDE. Gerando Arq. Temporario. " NOWAIT

    CREATE TABLE &LSarqtmp ;
    	(CODFORN	N( 5),;
		 NOME		C(50),;
		 CODIGO		C(11),;
		 DESCRICAO	C(50),;
		 S_NOTA		N( 7),;
         S_DATA     D( 8),;
    	 S_QTDE		N( 5),;
		 E_NOTA		N( 7),;
         E_DATA     D( 8),;
		 QTRESSARCI	N( 5),;
		 VLRUNIT	N(12,2),;	
		 VLRTOTAL	N(12,2),;	
		 ALIQIPI	N( 7,2),;	
		 VLRIPI		N(12,2),;
		 BSICMS	N(12,2),;
		 BSCALCSUBS	N(12,2),;
		 IVA		N(12,2),;
		 BSSUBS  	N(12,2),;
		 ICMS17		N(12,2),;
		 ICMS7		N(12,2),;
		 ICMSRESS	N(12,2))


    USE
    SELE 200
    LSmacro = "USE "+LSarqtmp+" alias c2_ressarc excl"
	&LSmacro
    INDE ON S_NOTA TAG CHAVE1 OF &LSarqtmp

	SELE VINCRESS
	SET ORDE TO VINCULO
    SET FILT TO S_EMPRESA = LNemp AND ;
               (S_DATA>=LDdtinicio AND S_DATA<=LDdtfinal)
    GO TOP
*1
	
	=W_DEFPROC("NOTAENT.spr")
	=NECreate()
	=W_DEFPROC("NOTAITE.spr")
	=IECreate()


	set escape on
	DO WHILE !EOF()
	    msg = STR(vincress.s_nota,7)
		wait window msg nowait

        LSs_codigo	= vincress.s_codigo
		LDs_data	= vincress.s_data
		LSs_hora	= vincress.s_hora
		LNs_tipo	= vincress.s_tipo
        LNs_nota	= vincress.s_nota
		LNs_ordem   = vincress.s_ordem

        LSe_codigo	= vincress.e_codigo
		LDe_data	= vincress.e_data
		LSe_hora	= vincress.e_hora
		LNe_tipo	= vincress.e_tipo
        LNe_nota	= vincress.e_nota
		LNe_ordem   = vincress.e_ordem
		LNe_qtress  = vincress.qtressarci

		SELE GRUPO
		SET ORDE TO codigo
		SEEK LSs_codigo
		IF FOUND()
			LNs_forn = codforn
            LSs_desc = allt(descricao)
		ENDI


		*---------------------------------------------------*
		= W_DEFPROC("NOTAENT.spr")
		= NESetPropVT("EMPRESA",LNemp)

		= W_DEFPROC("NOTAENT.spr")
		= NESetPropVT("REFERENCIA",LNe_nota)

		= W_DEFPROC("NOTAENT.spr")
		= NESetPropVT("CODFORN",1)

		= W_DEFPROC("NOTAENT.spr")
		=NEfind()
		*---------------------------------------------------*

        SELE FORNECE
		SET ORDE TO CODIGO
		SEEK LNs_forn
		IF FOUND()
			LSs_forn = ALLT(NOME)
		ENDI

*-----------------------------------------------------------------------*
*    	SELE TABFORN
*   	SET ORDE TO TABELA
*		SEEK STR(LNs_forn,5)+LSs_codigo
*		IF !FOUND()
*			WAIT WIND "I.V.A nao foi cadastrado para o prod="+LSs_codigo
*          LNF_IVA = 0
*          ELSE
*           LNF_IVA = (tabforn.iva/100)+1
*        ENDI
*-----------------------------------------------------------------------*


		SELE ITEMMOV
        SET ORDE TO MOVIMENTO
        SEEK str(LNemp,3)+LSs_codigo+DTOS(LDs_data)+LSs_hora+;
			 LNs_tipo+STR(LNs_nota,7)+STR(LNs_ordem,3)
        IF !FOUND()
           WAIT WIND "Problemas !!"
           SELE VINCRESS
           SKIP
           LOOP
        ENDI
		LNs_qtde    = itemmov.qtde
		
		SELE ITEMMOV
        SET ORDE TO MOVIMENTO
        SEEK str(LNemp,3)+LSe_codigo+DTOS(LDe_data)+LSe_hora+;
			 LNe_tipo+STR(LNe_nota,7)+STR(LNe_ordem,3)
        IF !FOUND()
           WAIT WIND "Problemas !!"
           SELE VINCRESS
           SKIP
           LOOP
        ENDI

		*-----------------------------------------------------*
		= W_DEFPROC("NOTAENT.spr")
		LSUFOrigem = NEGetUFOrigem(itemmov.empresa,;
		                       itemmov.orcamento,;
		                       itemmov.codforn)


		= W_DEFPROC("NOTAENT.spr")
		LSUFDestino = NEGetUFDestino(itemmov.empresa,;
		                       itemmov.orcamento,;
		                       itemmov.codforn)


		=W_DEFPROC("TRIBUTAR.spr")
		LNF_IVA= TRGet_IVA(LSUFOrigem,itemmov.codigo,LSUFDestino,;
		   itemmov.data)

*		IF ITEMMOV.ORCAMENTO = 719880 AND ITEMMOV.CODIGO = "16021010"
*			set step on
*		endif

		*-----------------------------------------------------*

        LNs_vlrunit = itemmov.vlrvenda / itemmov.qtde

		LNs_vlripi  =  itemmov.vlripi
		LNs_aliqipi = (itemmov.vlripi * 100 / itemmov.vlrvenda)
		
    	SELE c2_ressarc
     	APPE BLANK
		REPL c2_ressarc.codforn	WITH LNs_forn
		REPL c2_ressarc.nome		WITH LSs_forn
		REPL c2_ressarc.codigo		WITH LSs_codigo
		REPL c2_ressarc.descricao	WITH LSs_desc
		REPL c2_ressarc.s_nota		WITH LNs_nota
        REPL c2_ressarc.s_data      WITH LDs_data
    	REPL c2_ressarc.s_qtde		WITH LNs_qtde
		REPL c2_ressarc.e_nota		WITH LNe_nota
		REPL c2_ressarc.e_data		WITH LDe_data
		REPL c2_ressarc.qtressarci	WITH LNe_qtress
		REPL vlrunit	WITH LNs_vlrunit

        m.vlrtotal      = c2_ressarc.vlrunit * LNe_qtress

		REPL c2_ressarc.vlrtotal	WITH m.vlrtotal
		REPL c2_ressarc.aliqipi	WITH LNs_aliqipi

		m.vlripi        = (m.vlrtotal* c2_ressarc.aliqipi)/100
		REPL c2_ressarc.vlripi		WITH m.vlripi

       *-----------------------------------------------------------*
		= W_DEFPROC("NOTAITE.spr")

		REPL c2_ressarc.bsicms	WITH ;
			IEGetBaseCalc(LNemp,itemmov.favorecido, LNe_nota, LNe_ordem)/;
					(itemmov.qtde*LNe_qtress)			

		= W_DEFPROC("NOTAITE.spr")
		REPL c2_ressarc.bsicms	WITH c2_ressarc.bsicms + ;
		    (IEGetBsIcmSO(LNemp,itemmov.favorecido, LNe_nota, LNe_ordem)/ ;
		        itemmov.qtde * LNe_qtress)

		REPL c2_ressarc.iva		WITH LNF_IVA


		= W_DEFPROC("NOTAITE.spr")
		REPL c2_ressarc.bscalcsubs	WITH ;
		    IEGetBsSbBrt(LNemp,itemmov.favorecido, LNe_nota, LNe_ordem)/;
				itemmov.qtde*LNe_qtress
		
		= W_DEFPROC("NOTAITE.spr")
		REPL c2_ressarc.bssubs	WITH ;
		    (IEGetBsSubs(LNemp,itemmov.favorecido, LNe_nota, LNe_ordem))/;
				itemmov.qtde*LNe_qtress

		REPL c2_ressarc.icms17		WITH c2_ressarc.bssubs * .17
		REPL c2_ressarc.icms7		WITH c2_ressarc.bsicms * .07
		REPL c2_ressarc.icmsress	WITH c2_ressarc.icms17  - ;
										 c2_ressarc.icms7

        SELE vincress
        SKIP
	ENDD	   	
	=W_DEFPROC("NOTAENT.spr")
	=NEDestroi()
	=W_DEFPROC("NOTAITE.spr")
	=IEDestroi()

    SELE c2_ressarc
    GO TOP
RETU

PROCEDURE antR_RESSARCI
	PARAMETER LNemp,LDdtinicio,LDdtfinal
	*------------------------------------------------------------*
	*  INICIA GERACAO DE ARQUIVO TEMPORARIO
	*------------------------------------------------------------*
	LSarqtmp 	= "" 			&& EX: C:\TMP\TMP0001
	LSaliastmp 	= "RES" 		&&     TMP001
	LSaliastmp = UPopentmp(wp_dirtmp,LSarqtmp,LSaliastmp,1)
	IF EMPTY(LSaliastmp)
		IF !EMPTY(LSalias) AND USED(LSalias)
			SELECT &LSalias
		ENDIF
		POP KEY 			&& reabilita teclas de atalho def. anteriormente
		RETURN(.F.)
	ENDIF		
	WAIT WINDOW ;
		"AGUARDE. Gerando Arq. Temporario. " NOWAIT
*    CREATE TABLE \TMP\&LSaliastmp ;
*   	(CODFORN	N( 5),;
*		 NOME		C(50),;
*		 CODIGO		C(11),;
*		 DESCRICAO	C(50),;
*		 S_NOTA		N( 7),;
*         S_DATA     D( 8),;
*    	 S_QTDE		N( 5),;
*		 E_NOTA		N( 7),;
*         E_DATA     D( 8),;
*		 QTRESSARCI	N( 5),;
*		 VLRUNIT	N(12,2),;	
*		 VLRTOTAL	N(12,2),;	
*		 ALIQIPI	N( 7,2),;	
*		 VLRIPI		N(12,2),;
*		 BASE_BRT	N(12,2),;
*		 BASE_CAL	N(12,2),;
*		 IVA		N(12,2),;
*		 BAS_SUBS	N(12,2),;
*		 ICMS17		N(12,2),;
*		 ICMS7		N(12,2),;
*		 ICMSRESS	N(12,2))

    CREATE TABLE \TMP\&LSaliastmp ;
    	(CODFORN	N( 5),;
		 NOME		C(50),;
		 CODIGO		C(11),;
		 DESCRICAO	C(50),;
		 S_NOTA		N( 7),;
         S_DATA     D( 8),;
    	 S_QTDE		N( 5),;
		 E_NOTA		N( 7),;
         E_DATA     D( 8),;
		 QTRESSARCI	N( 5),;
		 VLRUNIT	N(12,2),;	
		 VLRTOTAL	N(12,2),;	
		 ALIQIPI	N( 7,2),;	
		 VLRIPI		N(12,2),;
		 BSICMS	N(12,2),;
		 BSCALCSUBS	N(12,2),;
		 IVA		N(12,2),;
		 BSSUBS  	N(12,2),;
		 ICMS17		N(12,2),;
		 ICMS7		N(12,2),;
		 ICMSRESS	N(12,2))


    USE
    SELE 200
    LSmacro = "USE \TMP\"+LSaliastmp+" alias c2_ressarc excl"
	&LSmacro
    INDE ON S_NOTA TAG CHAVE1 OF \TMP\&LSaliastmp

	SELE VINCRESS
	SET ORDE TO VINCULO
    SET FILT TO S_EMPRESA = LNemp AND ;
               (S_DATA>=LDdtinicio AND S_DATA<=LDdtfinal)
    GO TOP
*1
	DO WHILE !EOF()
        LSs_codigo	= vincress.s_codigo
		LDs_data	= vincress.s_data
		LSs_hora	= vincress.s_hora
		LNs_tipo	= vincress.s_tipo
        LNs_nota	= vincress.s_nota
		LNs_ordem   = vincress.s_ordem

        LSe_codigo	= vincress.e_codigo
		LDe_data	= vincress.e_data
		LSe_hora	= vincress.e_hora
		LNe_tipo	= vincress.e_tipo
        LNe_nota	= vincress.e_nota
		LNe_ordem   = vincress.e_ordem
		LNe_qtress  = vincress.qtressarci
		SELE GRUPO
		SET ORDE TO codigo
		SEEK LSs_codigo
		IF FOUND()
			LNs_forn = codforn
            LSs_desc = allt(descricao)
		ENDI
        SELE FORNECE
		SET ORDE TO CODIGO
		SEEK LNs_forn
		IF FOUND()
			LSs_forn = ALLT(NOME)
		ENDI
     	SELE TABFORN
     	SET ORDE TO TABELA
		SEEK STR(LNs_forn,5)+LSs_codigo
		IF !FOUND()
			WAIT WIND "I.V.A nao foi cadastrado para o prod="+LSs_codigo
           LNF_IVA = 0
          ELSE
           LNF_IVA = (tabforn.iva/100)+1
        ENDI
		SELE ITEMMOV
        SET ORDE TO MOVIMENTO
        SEEK str(LNemp,3)+LSs_codigo+DTOS(LDs_data)+LSs_hora+;
			 LNs_tipo+STR(LNs_nota,7)+STR(LNs_ordem,3)
        IF !FOUND()
           WAIT WIND "Problemas !!"
           SELE VINCRESS
           SKIP
           LOOP
        ENDI
		LNs_qtde    = itemmov.qtde
		
		SELE ITEMMOV
        SET ORDE TO MOVIMENTO
        SEEK str(LNemp,3)+LSe_codigo+DTOS(LDe_data)+LSe_hora+;
			 LNe_tipo+STR(LNe_nota,7)+STR(LNe_ordem,3)
        IF !FOUND()
           WAIT WIND "Problemas !!"
           SELE VINCRESS
           SKIP
           LOOP
        ENDI
        LNs_vlrunit = itemmov.vlrvenda / itemmov.qtde

		LNs_vlripi  =  itemmov.vlripi
		LNs_aliqipi = (itemmov.vlripi * 100 / itemmov.vlrvenda)
		
    	SELE c2_ressarc
     	APPE BLANK
		REPL c2_ressarc.codforn	WITH LNs_forn
		REPL c2_ressarc.nome		WITH LSs_forn
		REPL c2_ressarc.codigo		WITH LSs_codigo
		REPL c2_ressarc.descricao	WITH LSs_desc
		REPL c2_ressarc.s_nota		WITH LNs_nota
        REPL c2_ressarc.s_data      WITH LDs_data
    	REPL c2_ressarc.s_qtde		WITH LNs_qtde
		REPL c2_ressarc.e_nota		WITH LNe_nota
		REPL c2_ressarc.e_data		WITH LDe_data
		REPL c2_ressarc.qtressarci	WITH LNe_qtress
		REPL vlrunit	WITH LNs_vlrunit

	        m.vlrtotal      = c2_ressarc.vlrunit * LNe_qtress

		REPL c2_ressarc.vlrtotal	WITH m.vlrtotal
		REPL c2_ressarc.aliqipi	WITH LNs_aliqipi

			m.vlripi        = (m.vlrtotal* c2_ressarc.aliqipi)/100

		REPL c2_ressarc.vlripi		WITH m.vlripi

       *-----------------------------------------------------------*
       *    calculos substituidos em 06/10/2003
       *-----------------------------------------------------------*
	   * REPL base_cal	WITH c2_ressarc.vlrtotal + c2_ressarc.vlripi
	   * REPL iva		WITH LNF_IVA
	   * REPL bas_subs	WITH c2_ressarc.base_cal * LNF_IVA
       *-----------------------------------------------------------*
	   * REPL icms17		WITH c2_ressarc.bas_subs * .17
	   * REPL icms7		WITH c2_ressarc.vlrtotal * .07
	   * REPL icmsress	WITH c2_ressarc.icms17   - c2_ressarc.icms7
       *-----------------------------------------------------------*
		=W_DEFPROC("tributar.spr")
								
		REPL c2_ressarc.bsicms	WITH TREnbsicmNormal(LSs_codigo,;
							 	      m.vlrtotal,;
								      m.vlripi,;
								      LNs_forn)

		REPL c2_ressarc.iva		WITH LNF_IVA

		=W_DEFPROC("notaent.spr")
		LSufOrigem = NEGetUFOrigem(LNemp,LNe_nota,LNs_forn)

		=W_DEFPROC("notaent.spr")
		LSufDestino = NEGetUFDestino(LNemp)

		=W_DEFPROC("tributar.spr")
		REPL c2_ressarc.bscalcsubs	WITH TREbsRtdoSIVA(LSs_codigo,;
										LSufOrigem,;
										LSufDestino,;
							 	      m.vlrtotal,;
								      m.vlripi,;
								      LNs_forn)

		=W_DEFPROC("tributar.spr")
		REPL c2_ressarc.bssubs	WITH TREbsRtdoCIVA(LSs_codigo,;
										LSufOrigem,;
										LSufDestino,;
							 	      m.vlrtotal,;
								      m.vlripi,;
								      LNs_forn)

		REPL c2_ressarc.icms17		WITH c2_ressarc.bssubs * .17
		REPL c2_ressarc.icms7		WITH c2_ressarc.bsicms * .07
		REPL c2_ressarc.icmsress	WITH c2_ressarc.icms17  - ;
										 c2_ressarc.icms7

        SELE vincress
        SKIP
	ENDD	   	
    SELE c2_ressarc
    GO TOP
RETU


PROC ulfecha
	=UP_fecha("empresa"  ,LFempresa)
	=UP_fecha("fornece"  ,LFfornece)
	=UP_fecha("grupo"    ,LFgrupo)
	=UP_fecha("itemmov"  ,LFitemmov)
	=UP_fecha("sldressa" ,LFsldressa)
	=UP_fecha("vincress" ,LFsldressa)
	=UP_fecha("tabforn"  ,LFtabforn)
RETU


*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _4EZ0XVYV5           m.empresa WHEN                     º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         SCT0100,     Record Number:   30   º
*       º Variable:            m.empresa                          º
*       º Called By:           WHEN Clause                        º
*       º Object Type:         Field                              º
*       º Snippet Number:      1                                  º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*
FUNCTION _4ez0xvyv5     &&  m.empresa WHEN
#REGION 1
ON KEY LABEL ENTER
ON KEY LABEL ESCAPE	KEYBOARD "{END}"
IF LASTKEY() = 15 AND !(isediting)
	KEYBOARD "{ESCAPE}"
ENDIF
RETURN(isediting)

*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _4EZ0XVYV6           m.empresa VALID                    º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         SCT0100,     Record Number:   30   º
*       º Variable:            m.empresa                          º
*       º Called By:           VALID Clause                       º
*       º Object Type:         Field                              º
*       º Snippet Number:      2                                  º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*
FUNCTION _4ez0xvyv6     &&  m.empresa VALID
#REGION 1
SET PROCEDURE TO EMPRESA.spr
RETURN(UVerifEmp(m.empresa,m.nome_emp,LASTKEY()))




*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _4EZ0XVYV7           m.nome_emp WHEN                    º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         SCT0100,     Record Number:   31   º
*       º Variable:            m.nome_emp                         º
*       º Called By:           WHEN Clause                        º
*       º Object Type:         Field                              º
*       º Snippet Number:      3                                  º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*
FUNCTION _4ez0xvyv7     &&  m.nome_emp WHEN
#REGION 1
SHOW GET m.nome_emp
ON KEY LABEL ESCAPE KEYBOARD "{BACKTAB}"
RETURN(.f.)


*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _4EZ0XVYVP           m.dt_inicio WHEN                   º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         SCT0100,     Record Number:   32   º
*       º Variable:            m.dt_inicio                        º
*       º Called By:           WHEN Clause                        º
*       º Object Type:         Field                              º
*       º Snippet Number:      4                                  º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*
FUNCTION _4ez0xvyvp     &&  m.dt_inicio WHEN
#REGION 1
IF isediting
	ON KEY LABEL ESCAPE	KEYBOARD "{END}"
ENDIF
RETURN(isediting)

*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _4EZ0XVYVU           m.dt_inicio VALID                  º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         SCT0100,     Record Number:   32   º
*       º Variable:            m.dt_inicio                        º
*       º Called By:           VALID Clause                       º
*       º Object Type:         Field                              º
*       º Snippet Number:      5                                  º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*
FUNCTION _4ez0xvyvu     &&  m.dt_inicio VALID
#REGION 1
m.dt_fim = m.dt_inicio
SHOW GET m.dt_fim
ON KEY LABEL ESCAPE KEYBOARD "{BACKTAB}"
RETURN (.T.)


*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _4EZ0XVYW0           m.codigo WHEN                      º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         SCT0100,     Record Number:   34   º
*       º Variable:            m.codigo                           º
*       º Called By:           WHEN Clause                        º
*       º Object Type:         Field                              º
*       º Snippet Number:      6                                  º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*
FUNCTION _4ez0xvyw0     &&  m.codigo WHEN
#REGION 1
ON KEY LABEL ESCAPE	KEYBOARD "{END}"
IF LASTKEY() = 15
	KEYBOARD "{ESCAPE}"
ENDIF
RETURN(isediting)


*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _4EZ0XVYW4           m.codigo VALID                     º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         SCT0100,     Record Number:   34   º
*       º Variable:            m.codigo                           º
*       º Called By:           VALID Clause                       º
*       º Object Type:         Field                              º
*       º Snippet Number:      7                                  º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*
FUNCTION _4ez0xvyw4     &&  m.codigo VALID
#REGION 1
ON KEY LABEL ESCAPE KEYBOARD "{BACKTAB}"
SELE fornece
SET ORDER TO TAG codigo

IF LASTKEY() = 9
    ON KEY LABEL ESCAPE
	DO loc_dlog WITH .T.
	ON KEY LABEL ESCAPE KEYBOARD "{BACKTAB}"
	IF LASTKEY() <> 27
		m.codigo = fornece.codigo
	ENDIF	
ENDIF	


IF !EMPT(m.codigo)
	SEEK m.codigo
    m.nome   = fornece.nome
	m.strcgc = STR(fornece.cgc,14)
	SHOW GET m.strcgc
	SHOW GET m.nome
ENDI
WP_RECORD = RECNO()

RETURN(UPtratachv())

*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _4EZ0XVYWE           m.imp_btn WHEN                     º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         SCT0100,     Record Number:   40   º
*       º Variable:            m.imp_btn                          º
*       º Called By:           WHEN Clause                        º
*       º Object Type:         Push Button                        º
*       º Snippet Number:      8                                  º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*
FUNCTION _4ez0xvywe     &&  m.imp_btn WHEN
#REGION 1
ON KEY LABEL ENTER
RETURN


*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _4EZ0XVYWK           m.imp_btn VALID                    º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         SCT0100,     Record Number:   40   º
*       º Variable:            m.imp_btn                          º
*       º Called By:           VALID Clause                       º
*       º Object Type:         Push Button                        º
*       º Snippet Number:      9                                  º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*

FUNCTION _4ez0xvywk     &&  m.imp_btn VALID
#REGION 1
LNemp      = m.empresa
LDdtinicio = m.dt_inicio
LDdtfinal  = m.dt_fim
LNcodforn  = m.codigo

DO ULprocessa WITH LNemp,LDdtinicio,LDdtfinal
RETURN
*--------------------------------------------------------------*
PROCEDURE ULprocessa
	PARAMETER LNemp,LDdtinicio,LDdtfinal
    PRIVATE LNs_empresa,LSs_codigo,LDs_data,LSs_hora,LSs_tipo,;
			LNs_nota,LNs_ordem,;
			LNe_empresa,LSe_codigo,LDe_data,LSe_hora,LSe_tipo,;
			LNe_nota,LNe_ordem,LNqtde,LNqress

* LNqress = SALDO DO ITEMMOV A SER RESSARCIDO
	
	PRIVATE LNreg1,LFachou,LNPOS
	LNREG1  = 0
    LFachou = .f.

	SELE ITEMMOV
	SET ORDE TO DT_MOV
	SET NEAR ON
	SEEK STR(LNemp,3)+DTOS(LDdtinicio)
	SET NEAR OFF
    m.LNprocesso = 0
    LFinterrompe = .F.
*1
	DO WHILE !EOF() AND !UPinterrompe(LFinterrompe)
		m.LNprocesso = m.LNprocesso + 1
		IF itemmov.empresa <> LNemp
			SELE ITEMMOV
			SKIP
			LOOP
		ENDI
		IF itemmov.dtfat < LDdtinicio OR itemmov.dtfat > LDdtfinal
			SKIP
			LOOP
		ENDI
	   	SHOW GET m.LNprocesso
		LNPOS      = RECNO()               && POSICAO DO ITEMMOV
		IF LEFT(itemmov.operacao,1)="S"  ;
			AND itemmov.ch_opera $ "1/2" ;
			AND itemmov.icms_subs > 0
   			*----------------------------------------------------------*
	   		* Encontrou uma operacao de saida para a qual deve ser
	   		* processado o ressarcimento
	   		*----------------------------------------------------------*
			LNs_empresa= itemmov.EMPRESA
			LSs_codigo = itemmov.codigo
			LDs_data   = itemmov.data
			LSs_hora   = itemmov.hora
			LSs_tipo   = itemmov.tipo
			LNs_nota   = itemmov.nota
			LNs_ordem  = itemmov.ordem
   			*----------------------------------------------------------*
	   		* Verificar se este produto  do fornecedor apontado
	   		*----------------------------------------------------------*
			SELE grupo
			SET ORDE TO codigo
			SEEK LSs_codigo
			IF FOUND()
				IF grupo.codforn#LNcodforn
					SELE itemmov
					SKIP
					LOOP
				ENDI
			ENDI
	        SELE FORNECE
			SET ORDE TO CODIGO
			SEEK LNcodforn
			IF FOUND()
				LSs_forn = ALLT(NOME)
			ENDI
*2
			DO WHILE .T. AND !UPinterrompe(LFinterrompe)
				
							 && REPETE O LACO INDEFINIDAMENTE SENDO SUA
			  		 		 && ITERRUPCAO CAUSADA QUANDO NAO HOUVER MAIS
			  				 && QTDE A SER RESSARCIDA
				
				m.LNs_nota   = LNs_nota
				m.LSs_codigo = LSs_codigo
				
				SHOW GET m.LNs_nota
				SHOW GET m.LSs_codigo
				
				SELE SLDRESSA
				SET ORDE TO MOVIMENTO
				SEEK STR(LNs_empresa,3)+LSs_codigo+DTOS(LDs_data)+;
						 LSs_hora+LSs_tipo+STR(LNs_nota,7)+STR(LNs_ordem,3)
				IF FOUND()
    	     		IF sldressa.qtressarci >= itemmov.qtde
	        	    	SELE ITEMMOV
    	        		EXIT
	    	    	ENDI
					LNQRESS = ITEMMOV.QTDE - sldressa.qtressarci
			       ELSE
			        LNQRESS = ITEMMOV.QTDE
				ENDI
				SELE ITEMMOV
				LNreg1    = RECNO()
				LNreg     = 0
				LNQtddisp = 0

*				IF M.LNS_NOTA = 139785 AND M.LSs_CODIGO = "30165202"
*				   SET STEP ON
*				ENDI

   				= W_DEFPROC("contabil.spr")
				LFflag = CTultCompra(LNs_empresa,LSs_codigo,LDs_data,LNreg,;
                                LNqtddisp)

				IF LFflag = .F.
					EXIT
				ENDI
				SELE ITEMMOV
				SET ORDE TO DT_MOV
				*----------------------------------------------------*
				* POSICIONANDO O REGISTRO NA ULTIMA COMPRA COM
				* RESSARCIMENTO NO REGISTRO FORNECIDO POR CTultCompra
				*----------------------------------------------------*
				GO LNREG
				LNe_empresa= m.empresa
				LSe_codigo = itemmov.codigo
				LDe_data   = itemmov.data
				LSe_hora   = itemmov.hora
      			LSe_tipo   = itemmov.tipo
      			LNe_nota   = itemmov.nota
      			LNe_ordem  = itemmov.ordem

				m.LNe_nf  = LNe_nota
				SHOW GET m.LNe_nf

				SELE ITEMMOV
				GO LNREG1
				IF LNqress > LNqtddisp
					LNqtde = LNqtddisp
				ELSE
					LNqtde = LNqress
				ENDIF

				=W_DEFPROC("contabil.spr")
     			LNRESS=CTgrvRessarcimento(LNs_empresa,;
     					   LNs_nota,LDs_data,LSs_hora,;
                           LSs_tipo,LNs_ordem,LSs_codigo, ;
                           LNe_empresa,LNe_nota,LDe_data,LSe_hora,;
                           LSe_tipo,LNe_ordem,LSe_codigo,LNqtde)
				IF LNRESS = 1
*AKI			   EXIT
				   EXIT
				ENDI
			ENDDO
*2
		ENDIF
		SELE ITEMMOV
      	SET ORDE TO DT_MOV
		*----------------------------------------------------*
		* POSICIONANDO O REGISTRO NA POSICAO ORIGINAL
		* ALIAS itemmov
		*----------------------------------------------------*
        GO LNPOS
	  	SKIP
	ENDDO
*1
	= W_DEFPROC("rotinas.spr")
	SELECT itemmov
	SET FILT TO
	SHOW WINDOW SCT0100 TOP
	SHOW GET m.imp_btn DISABLE
RETURN


*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _4EZ0XVYWL           m.imp_btn2 WHEN                    º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         SCT0100,     Record Number:   41   º
*       º Variable:            m.imp_btn2                         º
*       º Called By:           WHEN Clause                        º
*       º Object Type:         Push Button                        º
*       º Snippet Number:      10                                 º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*
FUNCTION _4ez0xvywl     &&  m.imp_btn2 WHEN
#REGION 1
ON KEY LABEL ENTER
RETURN


*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _4EZ0XVYWM           m.imp_btn2 VALID                   º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         SCT0100,     Record Number:   41   º
*       º Variable:            m.imp_btn2                         º
*       º Called By:           VALID Clause                       º
*       º Object Type:         Push Button                        º
*       º Snippet Number:      11                                 º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*
FUNCTION _4ez0xvywm     &&  m.imp_btn2 VALID
#REGION 1
DO ULimprel
SHOW WINDOW SCT0100 TOP
SHOW GET m.imp_btn DISABLE
RETU



*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _4EZ0XVYX4           m.edit_btn WHEN                    º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         SCT0100,     Record Number:   42   º
*       º Variable:            m.edit_btn                         º
*       º Called By:           WHEN Clause                        º
*       º Object Type:         Push Button                        º
*       º Snippet Number:      12                                 º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*
FUNCTION _4ez0xvyx4     &&  m.edit_btn WHEN
#REGION 1
ON KEY LABEL ENTER
RETURN


*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _4EZ0XVYX8           m.edit_btn VALID                   º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         SCT0100,     Record Number:   42   º
*       º Variable:            m.edit_btn                         º
*       º Called By:           VALID Clause                       º
*       º Object Type:         Push Button                        º
*       º Snippet Number:      13                                 º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*
FUNCTION _4ez0xvyx8     &&  m.edit_btn VALID
#REGION 1
=btn_val1('EDIT')
RETURN


PROCEDURE BTN_VAL1
	PARAMETER tecla, m.chv_ler, m.chv_compara, m.chv_brow
	LN_prxobj = _CUROBJ
	ON KEY LABEL ENTER
    DO CASE
		CASE tecla = "EDIT" AND !isediting   && INICIA EDICAO
			LFArqSaida = .F.       && ARQ TMP DEVE SER GERADO AO PROCESSAR
			SHOW GET edit_btn,1 PROMPT "\<Ok"
			SHOW GET m.imp_btn  DISABLE
            SHOW GET m.imp_btn2	DISABLE
			isediting = .t.
			_CUROBJ = 1	
		    ON KEY LABEL ESCAPE KEYBOARD "{BACKTAB}"
			ON KEY LABEL END DO BTN_VAL1 WITH 'DELETE'
		CASE tecla = "EDIT" AND isediting     && CONFIRMA EDICAO
			SHOW GET edit_btn,1 PROMPT "\<Edita"
			isediting = .f.
			_CUROBJ = 1	
			IF  m.dt_fim < m.dt_inicio
				SHOW GET m.imp_btn DISABLE
			ELSE
				SHOW GET m.imp_btn  ENABLE
                SHOW GET m.imp_btn2 ENABLE
			ENDIF
		    ON KEY LABEL ESCAPE
			ON KEY LABEL END
		CASE tecla = "DELETE" AND isediting     && CANCELA EDICAO
			SHOW GET edit_btn,1 PROMPT "\<Edita"
			isediting = .f.
			_CUROBJ = 1	
			SHOW GET m.imp_btn  DISABLE
            SHOW GET m.imp_btn2 DISABLE
		    ON KEY LABEL ESCAPE
			ON KEY LABEL END
	ENDCASE
RETURN

*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _4EZ0XVYXG           m.canc_btn VALID                   º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         SCT0100,     Record Number:   43   º
*       º Variable:            m.canc_btn                         º
*       º Called By:           VALID Clause                       º
*       º Object Type:         Push Button                        º
*       º Snippet Number:      14                                 º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*
FUNCTION _4ez0xvyxg     &&  m.canc_btn VALID
#REGION 1
ON KEY LABEL ENTER
CLEAR GETS
CLEAR READ
=UP_fecha("empresa"  ,LFempresa)
=UP_fecha("fornece"  ,LFfornece)
=UP_fecha("grupo"    ,LFgrupo)
=UP_fecha("itemmov"  ,LFitemmov)
=UP_fecha("sldressa" ,LFsldressa)
=UP_fecha("vincress" ,LFsldressa)
IF !EMPTY(LSalias) AND USED(LSalias)
	SELECT &LSalias
ENDIF
isediting = .f.
RETURN .T.