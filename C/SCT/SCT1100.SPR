*       ЦДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДД·
*       є                                                         є
*       є 03/19/09             SCT1100.SPR               14:44:22 є
*       є                                                         є
*       ЗДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДД¶
*       є                                                         є
*       є Author's Name                                           є
*       є                                                         є
*       є Copyright (c) 2009 Company Name                         є
*       є Address                                                 є
*       є City,     Zip                                           є
*       є                                                         є
*       є Description:                                            є
*       є This program was automatically generated by GENSCRN.    є
*       є                                                         є
*       УДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДЅ


#REGION 0
REGIONAL m.currarea, m.talkstat, m.compstat

IF SET("TALK") = "ON"
	SET TALK OFF
	m.talkstat = "ON"
ELSE
	m.talkstat = "OFF"
ENDIF
m.compstat = SET("COMPATIBLE")
SET COMPATIBLE FOXPLUS

*       ЦДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДД·
*       є                                                         є
*       є                MS-DOS Window definitions                є
*       є                                                         є
*       УДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДЅ
*

IF NOT WEXIST("sct1100") ;
	OR UPPER(WTITLE("SCT1100")) == "SCT1100.PJX" ;
	OR UPPER(WTITLE("SCT1100")) == "SCT1100.SCX" ;
	OR UPPER(WTITLE("SCT1100")) == "SCT1100.MNX" ;
	OR UPPER(WTITLE("SCT1100")) == "SCT1100.PRG" ;
	OR UPPER(WTITLE("SCT1100")) == "SCT1100.FRX" ;
	OR UPPER(WTITLE("SCT1100")) == "SCT1100.QPR"
	DEFINE WINDOW sct1100 ;
		FROM INT((SROW()-14)/2),INT((SCOL()-78)/2) ;
		TO INT((SROW()-14)/2)+13,INT((SCOL()-78)/2)+77 ;
		TITLE "[ Parametros para Relatorios de Envolvendo Estoque ]" ;
		FLOAT ;
		NOCLOSE ;
		SHADOW ;
		NOMINIMIZE ;
		NONE ;
		COLOR SCHEME 1
ENDIF


*       ЦДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДД·
*       є                                                         є
*       є          SCT1100/MS-DOS Setup Code - SECTION 2          є
*       є                                                         є
*       УДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДЅ
*

#REGION 1
* 					[ INICIO CONTROLE AMBIENTAL ]				*
CLEAR TYPEAHEAD
PUSH KEY CLEAR		&& desabilita teclas de atalho def. anteriormente
ON KEY LABEL F1		DO HLP2000.SPR WITH  POPUP(),PROMPT(),PROGRAM(),;
							WONTOP(),VARREAD()
ON KEY LABEL END DO ULencerra
*---------------------------------------------------------------*

PRIVATE isediting
isediting = .t.
LFcheq_A	=	.f.
LFcheq_B	=	.f.

*       ЦДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДД·
*       є                                                         є
*       є              SCT1100/MS-DOS Screen Layout               є
*       є                                                         є
*       УДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДЅ
*

#REGION 1
IF WVISIBLE("sct1100")
	ACTIVATE WINDOW sct1100 SAME
ELSE
	ACTIVATE WINDOW sct1100 NOSHOW
ENDIF
@ 0,0 TO 13,77 ;
	COLOR SCHEME 23
@ 13,1 TO 13,76 ;
	COLOR SCHEME 24
@ 13,77 SAY "Щ" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 1,77 TO 12,77 ;
	COLOR SCHEME 24
@ 0,77 SAY "ї" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 13,68 SAY "[sct1100]" ;
	SIZE 1,9, 0 ;
	COLOR SCHEME 24
@ 0,25 SAY "[ Relatorios Contabilidade ]" ;
	SIZE 1,28, 0
@ 2,7 GET LFcheq_A ;
	PICTURE "@*C \<A- Extrato Analitico de Substituicao Tributaria" ;
	SIZE 1,51 ;
	DEFAULT 0 ;
	WHEN isediting
@ 3,7 GET LFcheq_B ;
	PICTURE "@*C \<B- Extrato Sintetico de Substituicao Tributaria" ;
	SIZE 1,51 ;
	DEFAULT 0 ;
	WHEN isediting
@ 13,19 GET m.imp_btn ;
	PICTURE "@*HN \<Processar" ;
	SIZE 1,11,1 ;
	DEFAULT 1 ;
	WHEN isediting ;
	VALID _2lx0vlay3()
@ 13,46 GET m.canc_btn ;
	PICTURE "@*HN \<Saida" ;
	SIZE 1,7,1 ;
	DEFAULT 1 ;
	WHEN isediting ;
	VALID _2lx0vlay7()

IF NOT WVISIBLE("sct1100")
	ACTIVATE WINDOW sct1100
ENDIF

READ CYCLE ;
	ACTIVATE READACT() ;
	DEACTIVATE READDEAC()

RELEASE WINDOW sct1100

#REGION 0
IF m.talkstat = "ON"
	SET TALK ON
ENDIF
IF m.compstat = "ON"
	SET COMPATIBLE ON
ENDIF


*       ЦДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДД·
*       є                                                         є
*       є               SCT1100/MS-DOS Cleanup Code               є
*       є                                                         є
*       УДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДЅ
*

#REGION 1
POP KEY 			&& reabilita teclas de atalho def. anteriormente
RETURN

*******************************************************************



*       ЦДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДД·
*       є                                                         є
*       є   SCT1100/MS-DOS Supporting Procedures and Functions    є
*       є                                                         є
*       УДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДЅ
*

#REGION 1
PROCEDURE ULencerra
	CLEAR GETS
	CLEAR READ
	isediting = .f.
RETURN

PROCEDURE CTextrsubstituicao
	*------------------------------------------------------------*
	* CLASSIFICACAO:  [*****]   MODULO INDEPENDENTE				 *
	*------------------------------------------------------------*
	* OBJETIVO....: Imprimir extrato de produtos
	*------------------------------------------------------------*
	* COMENTARIO..: Este modulo processa informacoes sob a forma
	*       de extrato de produto enfatizando informacoes da subs-
	*		tituicao tributaria.
	*------------------------------------------------------------*
	* OBS........ :
	*------------------------------------------------------------*
	* TABELAS....:
	*------------------------------------------------------------*
	* PARAMETROS..:
	*		LSrelatorio....: Nome do Formulario  de Relatorio
	*		LNemp..........: Empresa de referencia da movimentacao
	*		LDdtini........: Data Inicial para  extrato
	*		LDdtfim........: Data Final para  extrato
	*		LSkeyinicio....: Chave  do Registro de Produto inicial
	*		LSkeyfinal.....: Chave  do Registro de Produto final
	*		LSordem........: Ordenacao a ser dada aos Produtos
	*		LSfiltro.......: Condicao para processar registro grupo
	*------------------------------------------------------------*
	* RETORNO.....:
	*------------------------------------------------------------*
	PARAMETERS 	LSrelatorio,LNemp,LDdtini,LDdtfim,LStag,LSkeyinicio,;
				LSkeyfinal,LSfiltro
	=W_DEFPROC("rotinas.SPR")
	*------------------------------------------------------------*
	PRIVATE LFgrupo,LFsaldo,LFitemmov,LFnota,LFnotaent,LSalias
	PRIVATE LSfornece
	PRIVATE LSarqtmp,LSaliastmp
	PRIVATE LFinterrompe			&& Interrupcao de processos

	LSalias			= ALIAS()
	LFgrupo 		= NetArq("grupo")
	LFsaldo			= NetArq("saldo")
	LFitemmov		= NetArq("itemmov")
	LFnota			= NetArq("nota")
	LFnotaent		= NetArq("notaent")
	LFfornece		= NetArq("fornece")

	IF (LFgrupo+LFsaldo+LFitemmov+LFnota+LFnotaent+LFfornece) > 100000 ;
										&& HOUVE FALHA DE ABERTURA
		=UP_fecha("grupo" ,LFgrupo)
		=UP_fecha("saldo" ,LFsaldo)
		=UP_fecha("itemmov" ,LFitemmov)
		=UP_fecha("nota" ,LFnota)
		=UP_fecha("notaent" ,LFnotaent)
		=UP_fecha("fornece" ,LFfornece)
		IF !EMPTY(LSalias) AND USED(LSalias)
			SELECT &LSalias
		ENDIF
		RETURN(1)
	ENDIF
	SELE grupo
	SET ORDER TO TAG &LStag
	SET NEAR ON
	SEEK LSkeyinicio
	SET NEAR OFF
	IF EOF() OR ULvlrchave(KEY()) > LSkeyfinal
		WAIT WINDOW "Nao Existem Dados Com Parametros Informados. <ENTER> "
		=UP_fecha("grupo" ,LFgrupo)
		=UP_fecha("saldo" ,LFsaldo)
		=UP_fecha("itemmov" ,LFitemmov)
		=UP_fecha("nota" ,LFnota)
		=UP_fecha("notaent" ,LFnotaent)
		=UP_fecha("fornece" ,LFfornece)
		IF !EMPTY(LSalias) AND USED(LSalias)
			SELECT &LSalias
		ENDIF
		RETURN(2)
	ENDIF

	DO RELINIC.PRG          && INICIA VAR P/ TERMOMETRO
	LNregistro 	= RECNO()
	*------------------------------------------------------------*
	*  INICIA GERACAO DE ARQUIVO TEMPORARIO
	*------------------------------------------------------------*
	LSarqtmp 	= "" 			&& EX: C:\TMP\TMP0001
	LSaliastmp 	= "TMP" 		&&     TMP001
	LSaliastmp = UPopentmp(wp_dirtmp,LSarqtmp,LSaliastmp,1)
	IF EMPTY(LSaliastmp)
		DO RELFIM.PRG          && FIM VAR P/ TERMOMETRO
		=UP_fecha("grupo" ,LFgrupo)
		=UP_fecha("saldo" ,LFsaldo)
		=UP_fecha("itemmov" ,LFitemmov)
		=UP_fecha("nota" ,LFnota)
		=UP_fecha("notaent" ,LFnotaent)
		=UP_fecha("fornece" ,LFfornece)
		IF !EMPTY(LSalias) AND USED(LSalias)
			SELECT &LSalias
		ENDIF
		RETURN(3)
 	ENDIF		
	SELE itemmov
	COPY STRU TO &LSarqtmp
	SELE 0
	USE &LSarqtmp	ALIAS Aliastmp	EXCLUSIVE	&& ALIAS FIXO P/ RELATORIO
	INDEX ON classifica TAG classifica
	
	WAIT WINDOW ;
		"AGUARDE. Gerando Arq. Temporario.<TECLADO> = Interrompe " NOWAIT
	SET SAFET OFF

	SELE itemmov
	SELE grupo
 	LFinterrompe =  .F.
 	DO WHILE !EOF() AND  !UPinterrompe(LFinterrompe) ;
 					AND  ULvlrchave(KEY()) <= LSkeyfinal
		SELE itemmov
		SET ORDER TO TAG movimento
		SET NEAR ON
		SEEK STR(LNemp,3)+grupo.codigo+DTOS(LDdtini)
		SET NEAR OFF
		DO WHILE !EOF() AND !UPinterrompe(LFinterrompe) ;
						AND itemmov.empresa	=	LNemp	;
						AND itemmov.codigo	=	grupo.codigo ;
						AND itemmov.data 	<= 	LDdtfim
			LSmsg = transf(grupo.codigo,masc_codi)+" - "+STR(RECNO(),6)
			WAIT WINDOW LSmsg+;
				" - AGUARDE... "+;
				"Use <TECLADO> = Interromper " NOWAIT

			*-------------------------------------------------------*
			* 	Descarte das operacoes que nao sejam VENDAS, COMPRAS
			*   ou TRANSFERENCIAS
			*-------------------------------------------------------*
			IF !(itemmov.ch_opera $ "12")
				SKIP
				LOOP
			ENDIF
			*-------------------------------------------------------*
			* 	Descarte das operacoes de TRANSFERENCIA INTERNA
			*-------------------------------------------------------*
			IF itemmov.ch_opera $ "2" AND itemmov.ch_desti = "1"
				SKIP
				LOOP
			ENDIF
			*-------------------------------------------------------*
			SCATTER MEMVAR
			SELE Aliastmp
			=edithand('SAVE')
			SELE itemmov
			SKIP
		ENDDO
		SELE grupo
		SKIP
	ENDDO
	KEYBOARD CHR(4)		&& APAGANDO MENSSAGEM
	=INKEY(0)
	CLEAR TYPEAHEAD

	SELE Aliastmp
	IF  EOF() AND BOF() OR LFinterrompe
		DO RELFIM.PRG          && FIM VAR P/ TERMOMETRO
		=UP_fecha("Aliastmp"	,2)
		=UP_fecha("grupo" 		,LFgrupo)
		=UP_fecha("saldo" 		,LFsaldo)
		=UP_fecha("itemmov" 	,LFitemmov)
		=UP_fecha("nota" 		,LFnota)
		=UP_fecha("notaent" 	,LFnotaent)
		=UP_fecha("fornece" ,LFfornece)
		IF !EMPTY(LSalias) AND USED(LSalias)
			SELECT &LSalias
		ENDIF
		RETURN(0)
	ENDIF
	*------------------------------------------------------------*
	*   (INICIALIZACAO DO CONTROLE DE STATUS IMPRESSAO)
	*------------------------------------------------------------*
	SELE grupo
	LFsegue 	= .t.
	GO LNregistro
    COUNT TO LNimpressao &LSfiltro ;
    		WHILE !UPinterrompe(LFinterrompe) ;
    			  AND ULvlrchave(KEY()) <= LSkeyfinal
	LNimpressos = 0
	GO LNregistro
	*------------------------------------------------------------*
	*   (COMPLETADO PREPARACAO DO CONTROLE DE STATUS IMPRESSAO)
	*------------------------------------------------------------*
	LFsegue  	= .T.
	wp_arqname 	= ""

    LSrel 		= LSrelatorio  && SCT1101 ou SCT1100A

	IF EMPTY("LSfiltro")
		LSfiltro  = " FOR ULtem_mov(GRUPO.CLASSIFICA) "
	ELSE
		LSfiltro  = LSfiltro+" AND ULtem_mov(GRUPO.CLASSIFICA) "
	ENDIF
	LSorienta 	= ;
			" &LSfiltro WHILE ULvlrchave(KEY()) <= LSkeyfinal AND LFsegue "
	SELE fornece
	SET ORDER TO TAG codigo
	SELE nota
	SET ORDER TO TAG nota
	SELE notaent
	SET ORDER TO TAG nota

	SELE Aliastmp
	SET RELATION   TO STR(EMPRESA,3)+STR(NOTA,7) INTO nota ADDITIVE
	SET RELATION   TO STR(EMPRESA,3)+STR(CODFORN,5)+;
				STR(NOTA,6)+SERIE+LEFT(TIPO,1) INTO notaent ADDITIVE

	SELE grupo
	SET RELATION 	TO  codforn	   INTO fornece	
	SET RELATION 	TO  classifica INTO Aliastmp ADDITIVE
	SET SKIP 		TO	Aliastmp
	*------------------------------------------------------------*
	IF  !LFinterrompe		&& NAO HOUVE INTERRUPCAO
		DO UPimpressao      && COORDENA TRABALHO DE IMPRESSAO
	ENDIF
	*------------------------------------------------------------*
    SET PRINTER TO SET('PRINTER',1)
	SET RELATION TO
	SET POINT TO
	SET SEPARATOR  TO
	DO RELFIM.PRG          && FIM VAR P/ TERMOMETRO
	=UP_fecha("Aliastmp"	,2)
	=UP_fecha("grupo" 		,LFgrupo)
	=UP_fecha("saldo" 		,LFsaldo)
	=UP_fecha("itemmov" 	,LFitemmov)
	=UP_fecha("nota" 		,LFnota)
	=UP_fecha("notaent" 	,LFnotaent)
	=UP_fecha("fornece" ,LFfornece)
	IF !EMPTY(LSalias) AND USED(LSalias)
		SELECT &LSalias
	ENDIF
	*------------------------------------------------------------*
RETURN(0)


FUNCTION ULvlrchave			&& RETORNAR O VALOR EQUIVALENTE A CHAVE
	PARAMETERS LSchave		&& KEY() COMPOSICAO DA CHAVE
RETURN( &LSchave )			&& VALOR DA CHAVE

FUNCTION ULtem_mov
	*------------------------------------------------------------*
	* CLASSIFICACAO:  []   MODULO ANEXO                      	 *
	*------------------------------------------------------------*
	* OBJETIVO....: Informa se produto tem Saldo ou movimento
	*------------------------------------------------------------*
	* COMENTARIO..: Caso o Produto nao tenha MOVIMENTO retorna .f.
	*				Permitindo a nao impressao do mesmo
	*------------------------------------------------------------*
	* OBS........ :
	*------------------------------------------------------------*
	* TABELAS....:
	*------------------------------------------------------------*
	* PARAMETROS..:
	*			LNclassifca....: Produto que se quer ver movimento
	*------------------------------------------------------------*
	* RETORNO.....:  .T. => TEM MOVIMENTO
	*                .F. => SEM MOVIMENTO
	*------------------------------------------------------------*
	PARAMETERS LSclassifica

	PRIVATE LSarea,LNreg,LStag
	LSarea	=	ALIAS()
	SELE Aliastmp
	IF EOF()			&& FINAL DO ARQ.
		SELE &LSarea
		RETURN(.F.)	
	ENDIF
	LStag	=	TAG()
	LNreg	= 	RECNO()
	SET ORDER TO TAG classifica	
	SET NEAR ON
	SEEK LSclassifica
	SET NEAR OFF
	IF  LSclassifica <>	Aliastmp.classifica
		SET ORDER TO  TAG &LStag	
		GO LNreg
		SELE &LSarea
		RETURN(.F.)	
	ENDIF
	SET ORDER TO  TAG &LStag	
	GO LNreg
	SELE &LSarea
RETURN(.T.)	

FUNCTION UL1a_entrada
	*------------------------------------------------------------*
	* CLASSIFICACAO:  []   MODULO ANEXO A SCMC001, SCMR001		 *
	*------------------------------------------------------------*
	* OBJETIVO....: Retornar valor da 1a entrada do produto
	*------------------------------------------------------------*
	* COMENTARIO..: Sera considerada entrada por COMPRA ou
	*		TRANSFERENCIA INTERESTADUAL
	*------------------------------------------------------------*
	* OBS........ :
	*------------------------------------------------------------*
	* TABELAS....:
	*------------------------------------------------------------*
	* PARAMETROS..:
	*		LNemp..........: Empresa da Pesquisa de movimento
	*		LDdtref........: Data referencia p/ ver ultima entrada
	*		LNcodigo.......: Produto
	*		LNclassifca....: Produto que se quer a
	*						 Ultima Entrada (QTDO EXISTE MOV ANTERIOR
	*						 1a Entrada(QTDO NAO EXISTE MOV ANTERIOR)
	*		LNvlrentrada...: Referencia para valor unitario da 1a
	*						entrada
	*		LNvlr_ultent...: Algumas operacoes o valor a operar
	*						deve ser o valor referente a ultima
	*						entrada. (QNDO NAO EXISTE MOVIMENTO ANTERIOR)
	*						Como esta operacao pode ser
	*						a 1a depois do saldo inicial, o valor
	*						da 1a entrada e atribuido ao valor da
	*						ultima untrada
	*------------------------------------------------------------*
	* RETORNO.....:   LNvlrentrada
	*------------------------------------------------------------*
	PARAMETERS LSemp,LDdtref, LScodigo, LSclassifica,;
					 LNvlrentrada,LNvlr_ultent

	PRIVATE LSarea,LNreg
	LNvlrentrada	= 	0
	LNvlr_ultent	=	0
	LSarea	=	ALIAS()

	SELE itemmov
	IF EOF()			&& FINAL DO ARQ.
		SELE &LSarea
		RETURN(LNvlrentrada)	
	ENDIF
	SET ORDER TO TAG movimento
	SET NEAR ON
	SEEK STR(LSemp,3)+LScodigo+DTOS(LDdtref)
	SET NEAR OFF
	SKIP -1
	DO WHILE !BOF() AND LSclassifica = 	itemmov.classifica
		IF LEFT(itemmov.operacao,1) = "E" ;
			AND itemmov.ch_opera $ "12" ;
			AND itemmov.ch_desti = "2"
			LNvlrentrada = (itemmov.vlrvenda+itemmov.vlripi)/itemmov.qtde
			EXIT
		ENDIF
		SKIP -1
	ENDDO
	IF LNvlrentrada > 0
		SELE &LSarea
		LNvlr_ultent	=	LNvlrentrada
		RETURN(LNvlrentrada)	
	ENDIF
	**********************************************
	* COMO NAO ACHOU MOVIMENTO ANTERIOR
	* CONSIDERAR  A 1a ENTRADO DO PERIODO
	**********************************************
	SELE Aliastmp
	IF EOF()			&& FINAL DO ARQ.
		SELE &LSarea
		RETURN(LNvlrentrada)	
	ENDIF
	LNreg	= 	RECNO()
	SET NEAR ON
	SEEK LSclassifica
	SET NEAR OFF
	DO WHILE !EOF() AND LSclassifica = 	Aliastmp.classifica
		IF LEFT(Aliastmp.operacao,1) = "E" ;
			AND Aliastmp.ch_opera $ "12" ;
			AND Aliastmp.ch_desti = "2"
			LNvlrentrada = (Aliastmp.vlrvenda+Aliastmp.vlripi)/Aliastmp.qtde
			EXIT
		ENDIF
		SKIP
	ENDDO
	GO LNreg
	SELE &LSarea
	LNvlr_ultent	=	LNvlrentrada
RETURN(LNvlrentrada)	

FUNCTION ULvlroperar
	*------------------------------------------------------------*
	* CLASSIFICACAO:  []   MODULO ANEXO A SCMC001, SCMR001		 *
	*------------------------------------------------------------*
	* OBJETIVO....: Retornar valor a ser considerado na coluna
	*			VALOR NA OPERACAO no relatorio SCMR001
	*------------------------------------------------------------*
	* COMENTARIO..: Conforme a natureza da operacao o valor a ser
	*			Considerado na operacaoo segue alguns criterios
	*			EX: SAIDA TRANSFERENCIA ITERESTADUAL
	*					VALOR NA OPERACAO = VLR ULTIMA ENTRADA
	*------------------------------------------------------------*
	* OBS........ :
	*
	*
	*------------------------------------------------------------*
	* TABELAS....:
	*------------------------------------------------------------*
	* PARAMETROS..:
	*		LNemp.........: Empresa
	*		LDdtini.......: Data inicial do Periodo
	*		LNchamada.....: Qual o Ponto do Relatorio que Chamou
	*		LSvolta.......: Retorna qual deve ser a proxima CHAMADA
	*		LNvlr_operar..: Valor Referencia que sera usado no cal-
	*						culo da linha em questao
	*		LNvlr_ultent..: Valor Registrado da Ultima Entrada
	*		LNvlr_1aent...: Valor Registrado da Primeira Entrada
	*		LNsld_estq....:	Quantidade envolvida
	*		LNbasesubst...: Base de substituicao
	*		LNvlr_icms....: Valor do icms
	*		LNvlr_saldo...: Acumula saldo de icm p/ produto
	*		LNicmsretido..: Acumula icms Retido
	*		LNicmsresgat..: Acumula icms Resgatado
	*		LNicmgeral....: Saldo Geral de ICMS
	*------------------------------------------------------------*
	* RETORNO.....:   VLR_OPERAR
	*------------------------------------------------------------*
	PARAMETERS LNemp, LDdtini, LSchamada,LSvolta,LNvlr_operar,;
		 LNvlr_ultent,LNvlr_1aent,;
		 LNsld_estq,LNbasesubst,LNvlr_icms,LNvlr_saldo,LNsinal,;
		 LNicmsretido,LNicmsresgat,LNicmgeral
		
		LNvlr_operar = 0

		DO CASE
			CASE LSchamada = "ENCERRA CODIGO" && FORCA ENTRAR NA 1A
											  && CHAMDA DA LINHA DETALHE
				LSvolta = "QUEBRA CODIGO"   && PARA INICIALIZAR CODIGO
				LNvlr_operar 	= LNvlr_ultent*LNsld_estq
				LNbasesubst		= LNvlr_operar * Aliastmp.iva
				LNvlr_icms		= LNbasesubst * .17
			 	LNsinal			=	-1
				LNvlr_saldo 	= LNvlr_saldo 	- LNvlr_icms
				LNicmsresgat 	= LNicmsresgat 	+ LNvlr_icms	
				LNicmgeral		= LNicmgeral	- LNvlr_icms


			CASE LSchamada = "QUEBRA CODIGO"
				*-----
				* Ativando Rotinas p/ Receber 1a Entrada e Saldo de Estoque
				*-----
				=UL1a_entrada(LNemp,LDdtini,Aliastmp.codigo,;
							Aliastmp.classifica,LNvlr_1aent,LNvlr_ultent)
				LNTMP  = 0
				=W_DEFPROC("ESTOQUE.SPR")+;
					ESsaldo(LNemp,grupo.codigo,grupo.classifica,LDdtini-1,;
							LNsld_estq,LNTMP)
				*-----
				* Fim Ativando Rotinas p/ Receber 1a Entrada e Saldo de Estoque
				*-----
				LNvlr_operar 	= LNvlr_1aent*LNsld_estq
				LNbasesubst		= LNvlr_operar * Aliastmp.iva
				LNvlr_icms		= LNbasesubst * .17
				LNvlr_saldo 	= LNvlr_icms
			 	LNsinal			=	1
				LSvolta = "LINHA DETALHE" 	&& PROXIMA CHAMADA
				LNicmsretido	= LNvlr_icms
				LNicmsresgat	= 0
				LNicmgeral		= 	LNicmgeral	+(LNvlr_icms*LNsinal)
			CASE LSchamada = "LINHA DETALHE"
				*-------------------------------------------------------*
				*	Quando a operacao for TRANSFERENCIA (ch_opera = "2"
				* ou for uma venda a consumidor INSCRITO FORA DO ESTADO
				* a operacao de substituicao deve ser anulada pelo valor
				* da ultima entrada
				*-------------------------------------------------------*
				IF (LEFT(Aliastmp.operacao,1)="S" AND ;
						Aliastmp.ch_opera = "2" AND;
					 	Aliastmp.ch_desti =  "2" ) ;
					OR ;
						(Aliastmp.ch_opera = "1" AND ;
						(Aliastmp.ch_contr $ "2" AND ;
					 	Aliastmp.ch_desti = "2"))
							LNvlr_operar = LNvlr_ultent * Aliastmp.qtde
				ELSE
						LNvlr_operar = Aliastmp.vlrvenda+Aliastmp.vlripi
				ENDIF

				IF LEFT(Aliastmp.operacao,1)="E"
					 LNbasesubst=	LNvlr_operar * Aliastmp.iva
					 LNvlr_icms	=	LNbasesubst * .17
					 LNsinal	=	1
				ELSE
					IF Aliastmp.ch_opera = "2" OR ;
						(Aliastmp.ch_opera = "1" AND ;
						(Aliastmp.ch_contr $ "2" AND ;
						 Aliastmp.ch_desti = "2"))
						 LNbasesubst=	LNvlr_operar * Aliastmp.iva
						 LNvlr_icms	=	LNbasesubst * .17
					ELSE
						 LNbasesubst=	LNvlr_operar
						 LNvlr_icms	=	LNbasesubst * .17
					ENDIF
					LNsinal	=	-1
				ENDIF
				IF LNsinal < 0		&& RESGATE DE ICMS
					LNicmsresgat = LNicmsresgat + LNvlr_icms	
				ELSE
					LNicmsretido = LNicmsretido + LNvlr_icms
				ENDIF
				LNvlr_saldo 	= 	LNvlr_saldo	+(LNvlr_icms*LNsinal)
				LNsld_estq      =   LNsld_estq+(LNsinal*Aliastmp.QTDE)
				LNicmgeral		= 	LNicmgeral	+(LNvlr_icms*LNsinal)

		ENDCASE

	RETURN("")
	

*       ЦДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДД·
*       є                                                         є
*       є _2LX0VLAY3           m.imp_btn VALID                    є
*       є                                                         є
*       є Function Origin:                                        є
*       є                                                         є
*       є From Platform:       MS-DOS                             є
*       є From Screen:         SCT1100,     Record Number:   11   є
*       є Variable:            m.imp_btn                          є
*       є Called By:           VALID Clause                       є
*       є Object Type:         Push Button                        є
*       є Snippet Number:      1                                  є
*       є                                                         є
*       УДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДЅ
*
	*---------------------------------------------------------------*
	*	DEFINICOES DE USO ESPECIFICO DESTE PROGRAMA
	*---------------------------------------------------------------*
FUNCTION _2lx0vlay3     &&  m.imp_btn VALID
#REGION 1
	PRIVATE LNempresa
	PRIVATE LStag
	PRIVATE LSkeyinicio,LSkeyfinal,LScontroles,LNpagina,LFmtvretorno
	PRIVATE LDdtinicio,LDdtfim
	
	*---------------------------------------------------------------*
	LNempresa 	 = wp_empresa
	LSkeyinicio  = ""
	LSkeyfinal   = ""    && CLASSIFIC. DE ENCERRA ALTERACAO
	LScontroles  = "     "  && CONTEM OS CODIGOS DE CONTROLE DE PRODUTO QUE
						&& DEVEM SER IMPRESSOS
	LNpagina	=  1
	LFmtvretorno=  "ABORTANDO"
	
	LStag 		=  "CLASSIFICA"
	LDdtinicio	=  	{}
	LDdtfim		=	{}

	do SCT1101.SPX WITH	LNempresa,LStag,LSkeyinicio,LSkeyfinal,;
			LDdtinicio,LDdtfim,LScontroles,LNpagina,LFmtvretorno

	IF LFmtvretorno = "NORMAL"
		WAIT WINDOW "Processo em Andamento...." NOWAIT
		IF LFcheq_A
			do CTextrsubstituicao ;
			 	WITH "RCT1100",;
	 			LNempresa,LDdtinicio,LDdtfim,;
	 			LStag,LSkeyinicio,LSkeyfinal ,;
	 			" FOR grupo.cdg_tipo = 4 AND " +;
	 			" STR(grupo.tp_control,1) $ '&LScontroles'"
		ENDIF
		IF LFcheq_B
			do CTextrsubstituicao ;
			 	WITH "RCT1100A",;
	 			LNempresa,LDdtinicio,LDdtfim,;
	 			LStag,LSkeyinicio,LSkeyfinal ,;
	 			" FOR grupo.cdg_tipo = 4 AND " +;
	 			" STR(grupo.tp_control,1) $ '&LScontroles'"
		ENDIF
	ELSE
		WAIT WINDOW "Processo Cancelado...." NOWAIT
	ENDIF
	CLEAR TYPEAHEAD
	SHOW WINDOWS SCT1100 TOP
RETURN


*       ЦДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДД·
*       є                                                         є
*       є _2LX0VLAY7           m.canc_btn VALID                   є
*       є                                                         є
*       є Function Origin:                                        є
*       є                                                         є
*       є From Platform:       MS-DOS                             є
*       є From Screen:         SCT1100,     Record Number:   12   є
*       є Variable:            m.canc_btn                         є
*       є Called By:           VALID Clause                       є
*       є Object Type:         Push Button                        є
*       є Snippet Number:      2                                  є
*       є                                                         є
*       УДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДЅ
*
FUNCTION _2lx0vlay7     &&  m.canc_btn VALID
#REGION 1
DO ULencerra