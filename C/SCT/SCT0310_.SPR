*       ЦДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДД·
*       є                                                         є
*       є 09/05/2003            SCT0310.SPR              17:49:51 є
*       є                                                         є
*       ЗДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДД¶
*       є                                                         є
*       є Author's Name                                           є
*       є                                                         є
*       є Copyright (c) 2003 Company Name                         є
*       є Address                                                 є
*       є City,     Zip                                           є
*       є                                                         є
*       є Description:                                            є
*       є This program was automatically generated by GENSCRN.    є
*       є                                                         є
*       УДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДЅ


*       ЦДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДД·
*       є                                                         є
*       є          SCT0310/MS-DOS Setup Code - SECTION 1          є
*       є                                                         є
*       УДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДЅ
*

#REGION 1
	*------------------------------------------------------------*
	* CLASSIFICACAO:  [?????]                           		 *
	*------------------------------------------------------------*
	* OBJETIVO....:GERAR  ARQ. SINTEGRA
	*------------------------------------------------------------*
	* COMENTARIO..:
	*------------------------------------------------------------*
	* OBS........ :
	*------------------------------------------------------------*
	* TABELAS....: EMPRESA,NOTA,NOTAENT,ITEMMOV
	*------------------------------------------------------------*
	* PARAMETROS..:
	*------------------------------------------------------------*
	* RETORNO.....:
	*------------------------------------------------------------*
	*<<<<<<<<<<<<<<<<<<<<<<<         >>>>>>>>>>>>>>>>>>>>>>>>>>>>*
	*------------------------------------------------------------*
	* Ambiente
	*------------------------------------------------------------*
	SET PROCEDURE TO ROTINAS.spr
	ON KEY LABEL ESCAPE

	*------------------------------------------------------------*
	* Variaveis  Controlando Arquivos
	*------------------------------------------------------------*
	PRIVATE LSalias
	PRIVATE LFempresa,LFnota,LFnotaent,LFitemmov,LFfornece,LFgrupo
	PRIVATE LFgrfiscal
	PRIVATE LFtabnbm,LFclasnbm,LFmapaecf,LFtipooper

	LSalias			= ALIAS()
	LFempresa		= NetArq("empresa")
	LFnota			= NetArq("nota")
	LFnotaent		= NetArq("notaent")
	LFitemmov		= NetArq("itemmov")
	LFfornece		= NetArq("fornece")
	LFgrupo  		= NetArq("grupo")
	LFgrfiscal 		= NetArq("grfiscal")
	LFTabNbm  		= NetArq("tabnbm")
	LFClasNbm 		= NetArq("clasnbm")
	LFMapaEcf 		= NetArq("mapaecf")
	LFTipooper		= NetArq("L:\TMP\CFO\tipooper")
	LFCliente		= NetArq("clientes")
	LFTipo_50		= NetArq("tipo_50",.t.)
	LFTipo_60A		= NetArq("tipo_60A",.t.)

	
	IF (LFempresa+LFnota+LFnotaent+LFitemmov+;
		LFfornece+LFgrupo+LFgrfiscal+LFtabnbm+LFclasnbm+LFMapaEcf+;
		LFtipooper+LFcliente) > 100000
		*-----------------------------------------------------*
		* FALHA DE ABERTURA DE TABELAS
		*-----------------------------------------------------*
		DO ULfecha
		RETURN(0)
	ENDIF
	IF (LFtipo_50+LFtipo_60a) > 100000
		*-----------------------------------------------------*
		* FALHA DE ABERTURA DE TABELAS
		*-----------------------------------------------------*
		DO ULfecha
		RETURN(0)
	ENDIF



	*------------------------------------------------------------*
	* Variaveis  abientais com influencia na biblioteca
	*   deve-se adequar a biblioteca para recebelas via parametro
	*   e nao pelo ambiente com esta sendo feito
	*------------------------------------------------------------*
	PRIVATE wp_ref_local
	PRIVATE isediting
	wp_ref_local 	=  .f.     && NAO POSSUI CONTROLE DE REFRESH LOCAL
	m.isediting		=	.F.

	*------------------------------------------------------------*
	* Variaveis  de uso Especico no Formulario
	*------------------------------------------------------------*
	PRIVATE LFAnSaida,LFStSaida,LFResCfoS,LFResUfS,LNPagina
	PRIVATE LFAnEntrada,LFStEntrada,LFResCfoE,LFResUfE
	PRIVATE LFIpiEntrada,LFIpiSaida,LFIpiProd
	PRIVATE LFCr_ICMS,LFconv_3199
	PRIVATE LFICMProd

	STORE .F. TO LFAnSaida,LFStSaida,LFResCfoS,LFResUfS
	STORE 0   TO LNpagina
	STORE .F. TO LFAnEntrada,LFStEntrada,LFResCfoE,LFResUfE
	STORE .F. TO LFIpiEntrada,LFIpiSaida,LFIpiProd
	STORE .F. TO LFCr_ICMS,LFCRpc_ICMS,LFconv_3199
	STORE .F. TO LFICMProd

#REGION 0
REGIONAL m.currarea, m.talkstat, m.compstat

IF SET("TALK") = "ON"
	SET TALK OFF
	m.talkstat = "ON"
ELSE
	m.talkstat = "OFF"
ENDIF
m.compstat = SET("COMPATIBLE")
SET COMPATIBLE FOXPLUS

*       ЦДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДД·
*       є                                                         є
*       є                MS-DOS Window definitions                є
*       є                                                         є
*       УДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДЅ
*

IF NOT WEXIST("sct0310") ;
	OR UPPER(WTITLE("SCT0310")) == "SCT0310.PJX" ;
	OR UPPER(WTITLE("SCT0310")) == "SCT0310.SCX" ;
	OR UPPER(WTITLE("SCT0310")) == "SCT0310.MNX" ;
	OR UPPER(WTITLE("SCT0310")) == "SCT0310.PRG" ;
	OR UPPER(WTITLE("SCT0310")) == "SCT0310.FRX" ;
	OR UPPER(WTITLE("SCT0310")) == "SCT0310.QPR"
	DEFINE WINDOW sct0310 ;
		FROM INT((SROW()-17)/2),INT((SCOL()-68)/2) ;
		TO INT((SROW()-17)/2)+16,INT((SCOL()-68)/2)+67 ;
		TITLE "GERAR ARQUIVO SINTEGRA" ;
		FOOTER "CT0310" ;
		FLOAT ;
		NOCLOSE ;
		SHADOW ;
		NOMINIMIZE ;
		NONE ;
		COLOR SCHEME 1
ENDIF


*       ЦДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДД·
*       є                                                         є
*       є          SCT0310/MS-DOS Setup Code - SECTION 2          є
*       є                                                         є
*       УДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДЅ
*

#REGION 1




*       ЦДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДД·
*       є                                                         є
*       є              SCT0310/MS-DOS Screen Layout               є
*       є                                                         є
*       УДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДЅ
*

#REGION 1
IF WVISIBLE("sct0310")
	ACTIVATE WINDOW sct0310 SAME
ELSE
	ACTIVATE WINDOW sct0310 NOSHOW
ENDIF
@ 0,0 TO 16,67 ;
	COLOR SCHEME 23
@ 1,67 TO 15,67 ;
	COLOR SCHEME 24
@ 16,1 TO 16,66 ;
	COLOR SCHEME 24
@ 0,67 SAY "ї" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 16,67 SAY "Щ" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 0,57 SAY "[CT0310]" ;
	SIZE 1,8, 0
@ 0,3 SAY "[ Gera Arquivo Para SINTEGRA ]" ;
	SIZE 1,30, 0
@ 3,5 TO 5,20 ;
	COLOR SCHEME 23
@ 5,6 TO 5,19 ;
	COLOR SCHEME 24
@ 5,20 SAY "Щ" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 4,20 SAY "і" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 3,20 SAY "ї" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 3,6 SAY "[Filial]" ;
	SIZE 1,8, 0
@ 4,9 SAY "-" ;
	SIZE 1,1, 0
@ 3,24 TO 5,52 ;
	COLOR SCHEME 23
@ 5,25 TO 5,51 ;
	COLOR SCHEME 24
@ 5,52 SAY "Щ" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 4,52 SAY "і" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 3,52 SAY "ї" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 3,26 SAY "[ Periodo ]" ;
	SIZE 1,11, 0
@ 7,4 TO 9,24 ;
	COLOR SCHEME 23
@ 9,5 TO 9,23 ;
	COLOR SCHEME 24
@ 9,24 SAY "Щ" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 8,24 SAY "і" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 7,24 SAY "ї" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 8,5 SAY "Filtrar Estado" ;
	SIZE 1,14, 0
@ 8,34 SAY "Finalidade :" ;
	SIZE 1,12, 0
@ 4,6 GET m.empresa ;
	SIZE 1,3 ;
	DEFAULT 0 ;
	PICTURE "999" ;
	WHEN _0y6127uqv() ;
	VALID _0y6127ur0() ;
	ERROR "Empresa Nao Localizada. "
@ 4,10 GET m.nome_emp ;
	SIZE 1,7 ;
	DEFAULT " " ;
	PICTURE "@!K" ;
	WHEN _0y6127uso()
@ 4,26 GET m.dt_inicio ;
	SIZE 1,10 ;
	DEFAULT {  /  /  } ;
	WHEN _0y6127ust() ;
	VALID _0y6127usu()
@ 4,40 GET m.dt_fim ;
	SIZE 1,10 ;
	DEFAULT {  /  /  } ;
	WHEN isediting ;
	VALID m.dt_fim >= m.dt_inicio ;
	MESSAGE "Data Final deve ser maior ou igual a Inicial"
@ 8,20 GET LSuf_destino ;
	SIZE 1,2 ;
	DEFAULT " " ;
	WHEN _0y6127usv()
@ 8,57 GET m.val_btn ;
	PICTURE "@*HN \<Validar" ;
	SIZE 1,9,1 ;
	DEFAULT 1 ;
	WHEN _0y6127usw() ;
	VALID _0y6127usx() ;
	DISABLE
@ 9,35 GET LNfinalidade ;
	PICTURE "@*RVN Normal;Retifica‡Жo Total;Retifica‡Жo Aditiva;Desfasimento" ;
	SIZE 1,23,0 ;
	DEFAULT 1 ;
	WHEN _0y6127uua()
@ 16,47 GET m.edit_btn ;
	PICTURE "@*HN \<Edita" ;
	SIZE 1,7,1 ;
	DEFAULT 1 ;
	WHEN _0y6127uub() ;
	VALID _0y6127uuc() ;
	MESSAGE 'Permite a alteracao de dados do registro corrente'
@ 16,60 GET m.canc_btn ;
	PICTURE "@*HN \<Saida" ;
	SIZE 1,7,1 ;
	DEFAULT 1 ;
	VALID _0y6127uud()
@ 10,1 GET m.antimp_btn ;
	PICTURE "@*HN \<Gerar Arq.SINTEGRA 31/99" ;
	SIZE 1,26,1 ;
	DEFAULT 1 ;
	WHEN _0y6127uue() ;
	VALID _0y6127uuf() ;
	DISABLE
@ 15,1 GET m.LIV_btn ;
	PICTURE "@*HN \<Resumo CFO SINTEGRA" ;
	SIZE 1,21,1 ;
	DEFAULT 1 ;
	WHEN _0y6127v59() ;
	VALID _0y6127v5e() ;
	DISABLE
@ 11,1 GET m.ssimp_btn ;
	PICTURE "@*HN \<Gerar Arq.SINTEGRA 31/99-2002" ;
	SIZE 1,31,1 ;
	DEFAULT 1 ;
	WHEN _0y6127v65() ;
	VALID _0y6127v80() ;
	DISABLE
@ 13,1 GET m.imp_btn ;
	PICTURE "@*HN \<Gerar Arq.SINTEGRA 69/02-2003" ;
	SIZE 1,31,1 ;
	DEFAULT 1 ;
	WHEN _0y6127vli() ;
	VALID _0y6127vlv() ;
	DISABLE

IF NOT WVISIBLE("sct0310")
	ACTIVATE WINDOW sct0310
ENDIF

READ CYCLE MODAL ;
	ACTIVATE READACT() ;
	DEACTIVATE READDEAC()

RELEASE WINDOW sct0310

#REGION 0
IF m.talkstat = "ON"
	SET TALK ON
ENDIF
IF m.compstat = "ON"
	SET COMPATIBLE ON
ENDIF


*       ЦДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДД·
*       є                                                         є
*       є               SCT0310/MS-DOS Cleanup Code               є
*       є                                                         є
*       УДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДЅ
*

#REGION 1
DO ULfecha
RETURN

**************************************


*       ЦДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДД·
*       є                                                         є
*       є   SCT0310/MS-DOS Supporting Procedures and Functions    є
*       є                                                         є
*       УДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДЅ
*

#REGION 1
PROCEDURE ULfecha
	=UP_fecha("empresa" ,LFempresa)
	=UP_fecha("nota" ,LFnota)
	=UP_fecha("notaent" ,LFnotaent)
	=UP_fecha("itemmov" ,LFitemmov)
	=UP_fecha("fornece" ,LFfornece)
	=UP_fecha("grupo" ,LFgrupo)
	=UP_fecha("grfiscal" ,LFgrfiscal)
	=UP_fecha("tabnbm" ,LFTabNbm)
	=UP_fecha("grupo" ,LFClasNbm)
	=UP_fecha("mapaecf" ,LFMapaEcf)
	=UP_fecha("clientes" ,LFcliente)
	=UP_fecha("tipooper" ,LFtipooper)
	=UP_fecha("tipo_50" ,LFtipo_50)
	=UP_fecha("tipo_60a" ,LFtipo_60a)


	IF !EMPTY(LSalias) AND USED(LSalias)
		SELECT &LSalias
	ENDIF
	ON KEY LABEL ESCAPE
	SET FORMAT TO
RETURN


*       ЦДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДД·
*       є                                                         є
*       є _0Y6127UQV           m.empresa WHEN                     є
*       є                                                         є
*       є Function Origin:                                        є
*       є                                                         є
*       є From Platform:       MS-DOS                             є
*       є From Screen:         SCT0310,     Record Number:   29   є
*       є Variable:            m.empresa                          є
*       є Called By:           WHEN Clause                        є
*       є Object Type:         Field                              є
*       є Snippet Number:      1                                  є
*       є                                                         є
*       УДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДЅ
*
FUNCTION _0y6127uqv     &&  m.empresa WHEN
#REGION 1
ON KEY LABEL ENTER
ON KEY LABEL ESCAPE	KEYBOARD "{END}"
IF LASTKEY() = 15 AND !(isediting)
	KEYBOARD "{ESCAPE}"
ENDIF
RETURN(isediting)

*       ЦДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДД·
*       є                                                         є
*       є _0Y6127UR0           m.empresa VALID                    є
*       є                                                         є
*       є Function Origin:                                        є
*       є                                                         є
*       є From Platform:       MS-DOS                             є
*       є From Screen:         SCT0310,     Record Number:   29   є
*       є Variable:            m.empresa                          є
*       є Called By:           VALID Clause                       є
*       є Object Type:         Field                              є
*       є Snippet Number:      2                                  є
*       є                                                         є
*       УДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДЅ
*
FUNCTION _0y6127ur0     &&  m.empresa VALID
#REGION 1
SET PROCEDURE TO EMPRESA.spr
RETURN(UVerifEmp(m.empresa,m.nome_emp,LASTKEY()))




*       ЦДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДД·
*       є                                                         є
*       є _0Y6127USO           m.nome_emp WHEN                    є
*       є                                                         є
*       є Function Origin:                                        є
*       є                                                         є
*       є From Platform:       MS-DOS                             є
*       є From Screen:         SCT0310,     Record Number:   30   є
*       є Variable:            m.nome_emp                         є
*       є Called By:           WHEN Clause                        є
*       є Object Type:         Field                              є
*       є Snippet Number:      3                                  є
*       є                                                         є
*       УДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДЅ
*
FUNCTION _0y6127uso     &&  m.nome_emp WHEN
#REGION 1
SHOW GET m.nome_emp
ON KEY LABEL ESCAPE KEYBOARD "{BACKTAB}"
RETURN(.f.)


*       ЦДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДД·
*       є                                                         є
*       є _0Y6127UST           m.dt_inicio WHEN                   є
*       є                                                         є
*       є Function Origin:                                        є
*       є                                                         є
*       є From Platform:       MS-DOS                             є
*       є From Screen:         SCT0310,     Record Number:   31   є
*       є Variable:            m.dt_inicio                        є
*       є Called By:           WHEN Clause                        є
*       є Object Type:         Field                              є
*       є Snippet Number:      4                                  є
*       є                                                         є
*       УДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДЅ
*
FUNCTION _0y6127ust     &&  m.dt_inicio WHEN
#REGION 1
IF isediting
	ON KEY LABEL ESCAPE	KEYBOARD "{END}"
ENDIF
RETURN(isediting)

*       ЦДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДД·
*       є                                                         є
*       є _0Y6127USU           m.dt_inicio VALID                  є
*       є                                                         є
*       є Function Origin:                                        є
*       є                                                         є
*       є From Platform:       MS-DOS                             є
*       є From Screen:         SCT0310,     Record Number:   31   є
*       є Variable:            m.dt_inicio                        є
*       є Called By:           VALID Clause                       є
*       є Object Type:         Field                              є
*       є Snippet Number:      5                                  є
*       є                                                         є
*       УДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДЅ
*
FUNCTION _0y6127usu     &&  m.dt_inicio VALID
#REGION 1
m.dt_fim = m.dt_inicio
SHOW GET m.dt_fim
ON KEY LABEL ESCAPE KEYBOARD "{BACKTAB}"
RETURN (.T.)


*       ЦДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДД·
*       є                                                         є
*       є _0Y6127USV           LSuf_destino WHEN                  є
*       є                                                         є
*       є Function Origin:                                        є
*       є                                                         є
*       є From Platform:       MS-DOS                             є
*       є From Screen:         SCT0310,     Record Number:   33   є
*       є Variable:            LSuf_destino                       є
*       є Called By:           WHEN Clause                        є
*       є Object Type:         Field                              є
*       є Snippet Number:      6                                  є
*       є                                                         є
*       УДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДЅ
*
FUNCTION _0y6127usv     &&  LSuf_destino WHEN
#REGION 1
ON KEY LABEL ENTER
RETURN(isediting)

*       ЦДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДД·
*       є                                                         є
*       є _0Y6127USW           m.val_btn WHEN                     є
*       є                                                         є
*       є Function Origin:                                        є
*       є                                                         є
*       є From Platform:       MS-DOS                             є
*       є From Screen:         SCT0310,     Record Number:   34   є
*       є Variable:            m.val_btn                          є
*       є Called By:           WHEN Clause                        є
*       є Object Type:         Push Button                        є
*       є Snippet Number:      7                                  є
*       є                                                         є
*       УДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДЅ
*
FUNCTION _0y6127usw     &&  m.val_btn WHEN
#REGION 1
ON KEY LABEL ENTER
RETURN


*       ЦДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДД·
*       є                                                         є
*       є _0Y6127USX           m.val_btn VALID                    є
*       є                                                         є
*       є Function Origin:                                        є
*       є                                                         є
*       є From Platform:       MS-DOS                             є
*       є From Screen:         SCT0310,     Record Number:   34   є
*       є Variable:            m.val_btn                          є
*       є Called By:           VALID Clause                       є
*       є Object Type:         Push Button                        є
*       є Snippet Number:      8                                  є
*       є                                                         є
*       УДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДЅ
*
FUNCTION _0y6127usx     &&  m.val_btn VALID
#REGION 1
PRIVATE dbf_NFSTMP,dbf_NFS
PRIVATE dbf_REZTMP

	LSuf_origem = LSuf_destino


	*
	* LOCALIZACAO DO ARQUIVO DE NOTA PARA OPERCAO SELECT ??? FROM <>
	*

	dbf_NFS  		= wp_dirdat+'NOTA.DBF'
	dbf_MAPA  		= wp_dirdat+"MAPAECF.DBF"



	*----------------------------------------------------------*
	*  TEMPORARIO PARA NOTA DO PERIODO
	*----------------------------------------------------------*
	LSarqtmp 	= "" 			&& EX: C:\TMP\TMP0001
	LSaliastmp 	= "NFS" 		&&     TMP001
	LSaliastmp = UPopentmp(wp_dirtmp,LSarqtmp,LSaliastmp,1)
	IF EMPTY(LSaliastmp)
		WAIT WINDOW 'NЖo Foi Possivel Definir Arquivo Temporario'
		RETURN
	ENDIF
	dbf_NFSTMP  = wp_dirtmp+LSaliastmp+".DBF"
	als_NFSTMP  = LSaliastmp
	*----------------------------------------------------------*
	*  TEMPORARIO PARA AGREGAR CUPONS NORMAIS
	*----------------------------------------------------------*
	LSarqtmp 	= "" 			&& EX: C:\TMP\TMP0001
	LSaliastmp 	= "CPM" 		&&     TMP001
	LSaliastmp = UPopentmp(wp_dirtmp,LSarqtmp,LSaliastmp,1)
	IF EMPTY(LSaliastmp)
		WAIT WINDOW 'NЖo Foi Possivel Definir Arquivo Temporario'
		RETURN
	ENDIF
	dbf_CPMTMP  = wp_dirtmp+LSaliastmp+".DBF"
	als_CPMTMP  = LSaliastmp
	*----------------------------------------------------------*
	*  TEMPORARIO PARA AGREGAR CUPONS CANCELADOS
	*----------------------------------------------------------*
	LSarqtmp 	= "" 			&& EX: C:\TMP\TMP0001
	LSaliastmp 	= "CAN" 		&&     TMP001
	LSaliastmp = UPopentmp(wp_dirtmp,LSarqtmp,LSaliastmp,1)
	IF EMPTY(LSaliastmp)
		WAIT WINDOW 'NЖo Foi Possivel Definir Arquivo Temporario'
		RETURN
	ENDIF
	dbf_CANTMP  = wp_dirtmp+LSaliastmp+".DBF"
	als_CANTMP  = LSaliastmp
	*----------------------------------------------------------*


	*----------------------------------------------------------*
	*  SELECIONANDO REGISTROS DE SAIDA
	*----------------------------------------------------------*

	IF !EMPTY(LSuf_destino)
		SELECT  NOTA , SERIE, DATA, HORA, UF, CFO, ;
			TIPO,FAVORECIDO,TP_PESSOA,INSCRICAO,;
	        STATUS, OPERACAO, CUPOM, ;
			TOTSERVICO, BASE_ISS,  ALIQ_ISS, VLR_ISS, ;
			BASE_ICMS,	ALIQ_ICMS, VLR_ICMS, ;
			BASE_SBBRT, BASE_SUBS, ICMS_SUBS, ;
			BASE_ISENT, BASE_OUTR, BASE_ISIPI, BASE_IPI,  VLR_IPI, ;
			TOTPRODUTO, VLRFRETE, VLRSEGURO, VLRDESPES, ;
			TOTAL_NOTA ;	
		FROM &dbf_NFS ;
		WHERE   	empresa = M.EMPRESA;
			AND data >= M.dt_inicio AND  data <= M.dt_fim ;
			AND ch_opera <> "5" ;
			AND UF = LSuf_destino ;
	    INTO TABLE &dbf_NFSTMP
	ELSE
		SELECT  NOTA , SERIE, DATA, HORA, UF, CFO, ;
	        STATUS, OPERACAO, CUPOM, ;
			TIPO,FAVORECIDO,TP_PESSOA,INSCRICAO,;
			TOTSERVICO, BASE_ISS,  ALIQ_ISS, VLR_ISS, ;
			BASE_ICMS,	ALIQ_ICMS, VLR_ICMS, ;
			BASE_SBBRT, BASE_SUBS, ICMS_SUBS, ;
			BASE_ISENT, BASE_OUTR, BASE_ISIPI, BASE_IPI,  VLR_IPI, ;
			TOTPRODUTO, VLRFRETE, VLRSEGURO, VLRDESPES, ;
			TOTAL_NOTA ;	
		FROM &dbf_NFS ;
		WHERE   	empresa = M.EMPRESA;
			AND data >= M.dt_inicio AND  data <= M.dt_fim ;
			AND ch_opera <> "5" ;
	    INTO TABLE &dbf_NFSTMP
	ENDIF

	*---------------------------------------------------------------*

	DO ULval31R_60 WITH ;
	    (m.empresa),(m.dt_inicio),(m.dt_fim)

	*---------------------------------------------------------------*
	SELECT &als_CPMTMP
	USE

	SELECT &als_CANTMP
	USE

	SELECT &als_NFSTMP
	USE

RETURN

*-------------------------------------------------------------------*

PROCEDURE ULval31R_60
PARAMETERS LNemp, LDper_ini, LDper_fim


	*****************************************************************
	*  REGISTRO CUPONS  - 60 -
	*****************************************************************
	*-------------------------------------------------------------------*
	* PROCESSO SOBRE RESUMO DO MAPAECF
	*-------------------------------------------------------------------*
	
	SELECT  "5.00"   AS CFO ,      ;
			DATA,ALIQUOTA AS ALIQ_ICMS,;
			"XX" AS UF, ;
		 	VLRCONTAB 	    						  AS TOTAL_NOTA,;
		 	(VLRCONTAB-VLRISENT-VLRSERVICO-VLRSUBST)  AS BASE_ICMS,;
			VLRISENT								  AS BASE_ISENT,;
			VLROUTRO								  AS BASE_OUTR,;
			VLRSERVICO      						  AS BASE_ISS,;
			VLRSUBST 								  AS BASE_SUBS,;
			CANCELA;
		FROM &dbf_MAPA ;
		WHERE    data >= LDper_ini;
		   	AND  data <= LDper_fim;
		GROUP BY DATA,ALIQ_ICMS,UF;
    	INTO CURSOR TMP_MAPA

	*-------------------------------------------------------------------*
	* PROCESSO APURANDO CUPONS EMITIDOS E NAO CANCELADOS MAPAECF
	*-------------------------------------------------------------------*

 	SELECT  "5.00" AS CFO ,  ;
			DATA, ;
			ALIQ_ICMS, ;
			"XX"			 	AS UF, ;
		 	SUM(TOTAL_NOTA)  	AS TOTAL_NOTA,;
		 	SUM(BASE_ICMS)   	AS BASE_ICMS,;
			SUM(BASE_ISENT)  	AS BASE_ISENT,;
			SUM(BASE_OUTR)   	AS BASE_OUTR,;
			SUM(BASE_ISS)    	AS BASE_ISS,;
			SUM(BASE_SUBS)   	AS BASE_SUBS,;
			0*SUM(BASE_SUBS)      AS CANCELA;
	FROM &dbf_NFSTMP ;
		WHERE   status = 1 ;
			AND  operacao  = "S" ;
		   	AND  cupom > 0 ;
	GROUP BY DATA,ALIQ_ICMS;
   	INTO TABLE &dbf_CPMTMP

	*-------------------------------------------------------------------*
	* PROCESSO APURANDO CUPONS  CANCELADOS
	*-------------------------------------------------------------------*


 	SELECT  "5.00" AS CFO ,  ;
			DATA, ;
			ALIQ_ICMS, ;
			"XX"			 AS UF, ;
		 	0     AS TOTAL_NOTA,;
		 	0	 AS BASE_ICMS,;
			0	 AS BASE_ISENT,;
			0	 AS BASE_OUTR,;
			0	 AS BASE_ISS,;
			0	 AS BASE_SUBS,;
		 	SUM(TOTAL_NOTA)  AS CANCELA;
	FROM &dbf_NFSTMP ;
		WHERE   status = 2 ;
		    AND  operacao  = "S" ;
		    AND  cupom > 0 ;
	GROUP BY DATA,ALIQ_ICMS;
   	INTO TABLE &dbf_CANTMP

	*-------------------------------------------------------------------*
	* PROCESSO FUSAO CUPONS NORMAIS E CANCELADOS
	*-------------------------------------------------------------------*

   	SELECT  &als_CPMTMP
	append from   &dbf_CANTMP

	*-------------------------------------------------------------------*
	* PROCESSO AGRUPAMENTO DE CUPONS NORMAIS E CANCELADOS
	*-------------------------------------------------------------------*

 	SELECT  "5.00" AS CFO ,  ;
			DATA, ;
			ALIQ_ICMS, ;
			"XX"			 	AS UF, ;
		 	SUM(TOTAL_NOTA)  	AS TOTAL_NOTA,;
		 	SUM(BASE_ICMS)   	AS BASE_ICMS,;
			SUM(BASE_ISENT)  	AS BASE_ISENT,;
			SUM(BASE_OUTR)   	AS BASE_OUTR,;
			SUM(BASE_ISS)    	AS BASE_ISS,;
			SUM(BASE_SUBS)   	AS BASE_SUBS,;
			SUM(CANCELA)        AS CANCELA;
	FROM &dbf_CPMTMP ;
	GROUP BY DATA,ALIQ_ICMS;
   	INTO CURSOR TMP_FATU



	*-------------------------------------------------------------------*
	* PROCESSO TIPO "60" COM BASE NO  MAPA ECF
	*-------------------------------------------------------------------*

	SELECT  M1.CFO ,  ;
			M1.DATA, M1.ALIQ_ICMS, ;
			M1.UF, ;
		 	M1.TOTAL_NOTA 	AS M_TOTAL_NOTA,;
		 	F1.TOTAL_NOTA   AS F_TOTAL_NOTA,;
		 	M1.BASE_ICMS  	AS M_BASE_ICMS,;
		 	F1.BASE_ICMS    AS F_BASE_ICMS,;
			M1.BASE_ISENT	AS M_BASE_ISENT,;
			F1.BASE_ISENT	AS F_BASE_ISENT,;
			M1.BASE_OUTR    AS M_BASE_OUTR,;
			F1.BASE_OUTR    AS F_BASE_OUTR,;
			M1.BASE_ISS     AS M_BASE_ISS,;
			F1.BASE_ISS     AS F_BASE_ISS,;
			M1.BASE_SUBS    AS M_BASE_SUBS,;
			F1.BASE_SUBS    AS F_BASE_SUBS,;
			M1.CANCELA      AS M_CANCELA,;
			F1.CANCELA      AS F_CANCELA;
	 FROM TMP_MAPA  M1, TMP_FATU F1;
		WHERE 	 F1.DATA = M1.DATA;
		     AND F1.ALIQ_ICMS = M1.ALIQ_ICMS ;
   	INTO CURSOR TMP_DIFE

    SELECT * FROM TMP_DIFE ;
     UNION ;
	SELECT  "TOTA"  		AS CFO ,  ;
			{12.12.9999}    AS DATA,;
			0 				AS ALIQ_ICMS, ;
			"XX"            AS UF, ;
		 	SUM(M1.TOTAL_NOTA) 	AS M_TOTAL_NOTA,;
		 	SUM(F1.TOTAL_NOTA)   AS F_TOTAL_NOTA,;
		 	SUM(M1.BASE_ICMS)  	AS M_BASE_ICMS,;
		 	SUM(F1.BASE_ICMS)    AS F_BASE_ICMS,;
			SUM(M1.BASE_ISENT)	AS M_BASE_ISENT,;
			SUM(F1.BASE_ISENT)	AS F_BASE_ISENT,;
			SUM(M1.BASE_OUTR)    AS M_BASE_OUTR,;
			SUM(F1.BASE_OUTR)    AS F_BASE_OUTR,;
			SUM(M1.BASE_ISS)     AS M_BASE_ISS,;
			SUM(F1.BASE_ISS)     AS F_BASE_ISS,;
			SUM(M1.BASE_SUBS)    AS M_BASE_SUBS,;
			SUM(F1.BASE_SUBS)    AS F_BASE_SUBS,;
			SUM(M1.CANCELA)      AS M_CANCELA,;
			SUM(F1.CANCELA)      AS F_CANCELA;
	 FROM TMP_MAPA  M1, TMP_FATU F1;
		WHERE 	 F1.DATA = M1.DATA;
		     AND F1.ALIQ_ICMS = M1.ALIQ_ICMS ;
   	INTO CURSOR TMP_RESU

	LSnome	 =	RIGHT(str(year(LDper_ini)),2)+;
				STR(MONTH(LDper_ini),2)+STR(LNemp,2)+"VL.DBF"
	LSnome	= 	"\SCGC\AGENFA\"+STRTRAN(LSnome," ","0")

	COPY TO &LSnome

	SELE TMP_RESU
	GO BOTT
	
	IF M_TOTAL_NOTA <> F_TOTAL_NOTA
	
		DO OBJ_ALER.SPR  WITH ;
			"CRITICA !!! Use Planilha EXCEL e Verifique o Arq.:"+;
	         LSnome
	ENDIF
	go top
RETURN


*       ЦДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДД·
*       є                                                         є
*       є _0Y6127UUA           LNfinalidade WHEN                  є
*       є                                                         є
*       є Function Origin:                                        є
*       є                                                         є
*       є From Platform:       MS-DOS                             є
*       є From Screen:         SCT0310,     Record Number:   35   є
*       є Variable:            LNfinalidade                       є
*       є Called By:           WHEN Clause                        є
*       є Object Type:         Radio Button                       є
*       є Snippet Number:      9                                  є
*       є                                                         є
*       УДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДЅ
*
FUNCTION _0y6127uua     &&  LNfinalidade WHEN
#REGION 1
ON KEY LABEL ENTER  KEYBOARD "{RIGHTARROW}"
RETURN(isediting)


*       ЦДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДД·
*       є                                                         є
*       є _0Y6127UUB           m.edit_btn WHEN                    є
*       є                                                         є
*       є Function Origin:                                        є
*       є                                                         є
*       є From Platform:       MS-DOS                             є
*       є From Screen:         SCT0310,     Record Number:   36   є
*       є Variable:            m.edit_btn                         є
*       є Called By:           WHEN Clause                        є
*       є Object Type:         Push Button                        є
*       є Snippet Number:      10                                 є
*       є                                                         є
*       УДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДЅ
*
FUNCTION _0y6127uub     &&  m.edit_btn WHEN
#REGION 1
ON KEY LABEL ENTER
RETURN


*       ЦДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДД·
*       є                                                         є
*       є _0Y6127UUC           m.edit_btn VALID                   є
*       є                                                         є
*       є Function Origin:                                        є
*       є                                                         є
*       є From Platform:       MS-DOS                             є
*       є From Screen:         SCT0310,     Record Number:   36   є
*       є Variable:            m.edit_btn                         є
*       є Called By:           VALID Clause                       є
*       є Object Type:         Push Button                        є
*       є Snippet Number:      11                                 є
*       є                                                         є
*       УДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДЅ
*
FUNCTION _0y6127uuc     &&  m.edit_btn VALID
#REGION 1
=btn_val1('EDIT')
RETURN

PROCEDURE BTN_VAL1
	PARAMETER tecla, m.chv_ler, m.chv_compara, m.chv_brow
	LN_prxobj = _CUROBJ
	ON KEY LABEL ENTER
    DO CASE
		CASE tecla = "EDIT" AND !isediting   && INICIA EDICAO
			LFArqSaida = .F.       && ARQ TMP DEVE SER GERADO AO PROCESSAR
			SHOW GET edit_btn,1 PROMPT "\<Ok"
			SHOW GET m.imp_btn  DISABLE
			SHOW GET m.LIV_btn  DISABLE

			isediting  = .t.
			_CUROBJ = 1	
		    ON KEY LABEL ESCAPE KEYBOARD "{BACKTAB}"
			ON KEY LABEL END DO BTN_VAL1 WITH 'DELETE'
		CASE tecla = "EDIT" AND isediting     && CONFIRMA EDICAO
			SHOW GET edit_btn,1 PROMPT "\<Edita"
			isediting = .f.
			_CUROBJ = 1	
			IF  m.dt_fim < m.dt_inicio
				SHOW GET m.imp_btn DISABLE
				SHOW GET m.LIV_btn  DISABLE
			ELSE
				SHOW GET m.imp_btn  ENABLE
				SHOW GET m.LIV_btn  ENABLE
		ENDIF
		    ON KEY LABEL ESCAPE
			ON KEY LABEL END
		CASE tecla = "DELETE" AND isediting     && CANCELA EDICAO
			SHOW GET edit_btn,1 PROMPT "\<Edita"
			isediting = .f.
			_CUROBJ = 1	
			SHOW GET m.imp_btn  DISABLE
			SHOW GET m.LIV_btn  DISABLE
		    ON KEY LABEL ESCAPE
			ON KEY LABEL END
	ENDCASE
RETURN

*       ЦДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДД·
*       є                                                         є
*       є _0Y6127UUD           m.canc_btn VALID                   є
*       є                                                         є
*       є Function Origin:                                        є
*       є                                                         є
*       є From Platform:       MS-DOS                             є
*       є From Screen:         SCT0310,     Record Number:   37   є
*       є Variable:            m.canc_btn                         є
*       є Called By:           VALID Clause                       є
*       є Object Type:         Push Button                        є
*       є Snippet Number:      12                                 є
*       є                                                         є
*       УДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДЅ
*
FUNCTION _0y6127uud     &&  m.canc_btn VALID
#REGION 1
ON KEY LABEL ENTER
CLEAR GETS
CLEAR READ
isediting = .f.
RETURN .T.

*       ЦДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДД·
*       є                                                         є
*       є _0Y6127UUE           m.antimp_btn WHEN                  є
*       є                                                         є
*       є Function Origin:                                        є
*       є                                                         є
*       є From Platform:       MS-DOS                             є
*       є From Screen:         SCT0310,     Record Number:   38   є
*       є Variable:            m.antimp_btn                       є
*       є Called By:           WHEN Clause                        є
*       є Object Type:         Push Button                        є
*       є Snippet Number:      13                                 є
*       є                                                         є
*       УДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДЅ
*
FUNCTION _0y6127uue     &&  m.antimp_btn WHEN
#REGION 1
ON KEY LABEL ENTER
RETURN


*       ЦДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДД·
*       є                                                         є
*       є _0Y6127UUF           m.antimp_btn VALID                 є
*       є                                                         є
*       є Function Origin:                                        є
*       є                                                         є
*       є From Platform:       MS-DOS                             є
*       є From Screen:         SCT0310,     Record Number:   38   є
*       є Variable:            m.antimp_btn                       є
*       є Called By:           VALID Clause                       є
*       є Object Type:         Push Button                        є
*       є Snippet Number:      14                                 є
*       є                                                         є
*       УДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДЅ
*
FUNCTION _0y6127uuf     &&  m.antimp_btn VALID
#REGION 1
PRIVATE dbf_NFSTMP,dbf_NFS
PRIVATE dbf_NFETMP,dbf_NFE

PRIVATE	dbf_NFE
	LSuf_origem = LSuf_destino


	IF !ULArqItens()
		RETURN(.F.)
	ENDIF

	*
	* LOCALIZACAO DO ARQUIVO DE NOTA PARA OPERCAO SELECT ??? FROM <>
	*

	dbf_NFS  		= wp_dirdat+'NOTA.DBF'
	dbf_NFE  		= wp_dirdat+"NOTAENT.DBF"
	dbf_MAPA  		= wp_dirdat+"MAPAECF.DBF"


	*----------------------------------------------------------*
	LSarqtmp 	= "" 			&& EX: C:\TMP\TMP0001
	LSaliastmp 	= "NFS" 		&&     TMP001
	LSaliastmp = UPopentmp(wp_dirtmp,LSarqtmp,LSaliastmp,1)
	IF EMPTY(LSaliastmp)
		WAIT WINDOW 'NЖo Foi Possivel Definir Arquivo Temporario'
		RETURN
	ENDIF
	dbf_NFSTMP  = wp_dirtmp+LSaliastmp+".DBF"
	als_NFSTMP  = LSaliastmp
	*----------------------------------------------------------*
	LSarqtmp 	= "" 			&& EX: C:\TMP\TMP0001
	LSaliastmp 	= "NFE" 		&&     TMP001
	LSaliastmp = UPopentmp(wp_dirtmp,LSarqtmp,LSaliastmp,1)
	IF EMPTY(LSaliastmp)
		WAIT WINDOW 'NЖo Foi Possivel Definir Arquivo Temporario'

		RETURN
	ENDIF
	dbf_NFETMP  = wp_dirtmp+LSaliastmp+".DBF"
	als_NFETMP  = LSaliastmp


	*----------------------------------------------------------*
	*    GERAR ARQ. RESUMO CONTENDO SO AS NOTAS DO PERIODO E DA
	* EMPRESA SELECIONADA PARA ACELERAR OS OUTROS SELECTs
	*----------------------------------------------------------*

	*----------------------------------------------------------*
	*  SELECIONANDO REGISTROS DE SAIDA
	*----------------------------------------------------------*

	IF !EMPTY(LSuf_destino)
		SELECT  NOTA , SERIE, DATA, HORA, UF, CFO, ;
			TIPO,FAVORECIDO,TP_PESSOA,INSCRICAO,;
	        STATUS, OPERACAO, CUPOM, ;
			TOTSERVICO, BASE_ISS,  ALIQ_ISS, VLR_ISS, ;
			BASE_ICMS,	ALIQ_ICMS, VLR_ICMS, ;
			BASE_SBBRT, BASE_SUBS, ICMS_SUBS, ;
			BASE_ISENT, BASE_OUTR, BASE_ISIPI, BASE_IPI,  VLR_IPI, ;
			TOTPRODUTO, VLRFRETE, VLRSEGURO, VLRDESPES, ;
			TOTAL_NOTA ;	
		FROM &dbf_NFS ;
		WHERE   	empresa = M.EMPRESA;
			AND data >= M.dt_inicio AND  data <= M.dt_fim ;
			AND ch_opera <> "5" ;
			AND UF = LSuf_destino ;
	    INTO TABLE &dbf_NFSTMP
	ELSE
		SELECT  NOTA , SERIE, DATA, HORA, UF, CFO, ;
	        STATUS, OPERACAO, CUPOM, ;
			TIPO,FAVORECIDO,TP_PESSOA,INSCRICAO,;
			TOTSERVICO, BASE_ISS,  ALIQ_ISS, VLR_ISS, ;
			BASE_ICMS,	ALIQ_ICMS, VLR_ICMS, ;
			BASE_SBBRT, BASE_SUBS, ICMS_SUBS, ;
			BASE_ISENT, BASE_OUTR, BASE_ISIPI, BASE_IPI,  VLR_IPI, ;
			TOTPRODUTO, VLRFRETE, VLRSEGURO, VLRDESPES, ;
			TOTAL_NOTA ;	
		FROM &dbf_NFS ;
		WHERE   	empresa = M.EMPRESA;
			AND data >= M.dt_inicio AND  data <= M.dt_fim ;
			AND ch_opera <> "5" ;
	    INTO TABLE &dbf_NFSTMP
	ENDIF

	*----------------------------------------------------------*
	*  SELECIONANDO REGISTROS DE ENTRADA
	*----------------------------------------------------------*


	IF !EMPTY(LSuf_destino)
		SELECT  NOTA , SERIE, DATA,DATA_EMI,CODFORN, HORA, UF, CFO, ;
			FAVORECIDO,INSCRICAO,TIPO,CH_PRODU,;
	        STATUS,  ;
			TOTSERVICO, BASE_ISS,  ALIQ_ISS, ;
			BASE_ICMS,	ALIQ_ICMS, VLR_ICMS, ;
			BASE_SBBRT, BASE_SUBS, ICMS_SUBS, ;
			BASE_ISENT, BASE_OUTR, BASE_ISIPI, BASE_IPI,  VLR_IPI, ;
			TOTPRODUTO, VLRFRETE, VLRSEGURO, VLRDESPES, ;
			TOTAL_NOTA ;	
		FROM &dbf_NFE ;
		WHERE  	!(ch_opera $"56") ;
			AND LSuf_origem = uf;
			AND LEFT(situacao,1) = "C" ;
			AND empresa = m.empresa ;
			AND data >= dt_inicio ;
			AND data <= dt_fim ;		
	    INTO TABLE &dbf_NFETMP
	ELSE
		SELECT  NOTA , SERIE, DATA,DATA_EMI,CODFORN, HORA, UF, CFO, ;
			FAVORECIDO,INSCRICAO,TIPO,CH_PRODU,;
	        STATUS,  ;
			TOTSERVICO, BASE_ISS,  ALIQ_ISS, ;
			BASE_ICMS,	ALIQ_ICMS, VLR_ICMS, ;
			BASE_SBBRT, BASE_SUBS, ICMS_SUBS, ;
			BASE_ISENT, BASE_OUTR, BASE_ISIPI, BASE_IPI,  VLR_IPI, ;
			TOTPRODUTO, VLRFRETE, VLRSEGURO, VLRDESPES, ;
			TOTAL_NOTA ;	
		FROM &dbf_NFE ;
		WHERE  	!(ch_opera $"56") ;
			AND LEFT(situacao,1) = "C" ;
			AND empresa = m.empresa ;
			AND data >= dt_inicio ;
			AND data <= dt_fim ;		
	    INTO TABLE &dbf_NFETMP
	ENDIF


	*---------------------------------------------------------------*

	DO ULProcCVN3199 WITH ;
	    (m.empresa),(m.dt_inicio),(m.dt_fim)

	*---------------------------------------------------------------*
	IF USED("ITENSNEGOC")
		SELECT ITENSNEGOC
		USE
	ENDIF

	SELECT &als_NFSTMP
	USE

	SELECT &als_NFETMP
	USE

	SHOW WINDOW SCT0310 TOP

RETURN

function antULArqItens
	*---------------------------------------------------------*
	* Gerar Arq. Temporario para registrar itens vendidos
	*---------------------------------------------------------*
	LSarqtmp 	= "" 			&& EX: C:\TMP\TMP0001
	LSaliastmp 	= "TMP" 		&&     TMP001
	LSaliastmp = UPopentmp(wp_dirtmp,LSarqtmp,LSaliastmp,1)
	IF EMPTY(LSaliastmp)
 		WAIT WINDOW "Nao Foi Possivel Gerar Arq Temporario."
 		SELE notaent
		UNLOCK
 		RETURN(.F.)
 	ENDIF		
	*---------------------------------------------------------*
	IF USED("ITENSNEG")
		SELE ITENSNEGOC
		USE
	ENDIF

	SELE grupo
	WAIT WINDOW "AGUARDE. Gerando Arq. Temporario." NOWAIT

	COPY STRU TO &LSarqtmp WITH CDX

	KEYBOARD CHR(13)
	WAIT WINDOW " "
    SELE 0
	USE &LSarqtmp	ALIAS ITENSNEGOC	EXCLUSIVE	
	KEYBOARD CHR(13)
	WAIT WINDOW " "
RETURN(.T.)


*-------------------------------------------------------------------*

procedure antULProcCVN3199
PARAMETERS LNemp, LDper_ini, LDper_fim

	PRIVATE LSnome

	LSnome	 =	RIGHT(str(year(LDper_ini)),2)+;
				STR(MONTH(LDper_ini),2)+STR(LNemp,2)+"AG.DAT"
	LSnome	= 	"\SCGC\AGENFA\"+STRTRAN(LSnome," ","0")
	LNcontrol = FCREATE(LSnome)	
	PRIVATE LNctr_10,LNctr_11,LNctr_50,LNctr_53,LNctr_54,LNctr_60,;
			LNctr_70,LNctr_75
	STORE 0 TO LNctr_10,LNctr_11,LNctr_50,LNctr_53,LNctr_54,LNctr_60,;
			LNctr_70,LNctr_75

	=UL31R_10((LNemp),(LNcontrol),(LDper_ini),(LDper_fim),LNctr_10)
	=UL31R_11((LNemp),(LNcontrol),(LDper_ini),(LDper_fim),LNctr_11)
	=UL31R_50((LNemp),(LNcontrol),(LDper_ini),(LDper_fim),LNctr_50)
	=UL31R_53((LNemp),(LNcontrol),(LDper_ini),(LDper_fim),LNctr_53)
	=UL31R_54((LNemp),(LNcontrol),(LDper_ini),(LDper_fim),LNctr_54)
	=UL31R_60((LNemp),(LNcontrol),(LDper_ini),(LDper_fim),LNctr_60)
	=UL31R_70((LNemp),(LNcontrol),(LDper_ini),(LDper_fim),LNctr_70)
	=UL31R_75((LNemp),(LNcontrol),(LDper_ini),(LDper_fim),LNctr_75)
	=UL31R_90((LNemp),(LNcontrol),LNctr_10,LNctr_11,LNctr_50,;
				LNctr_53,LNctr_54,LNctr_60,LNctr_70,LNctr_75)
	=FCLOSE(LNcontrol)
RETURN

function antUL31R_10
	PARAMETERS LNemp, LNctrl, LDper_ini, LDper_fim, LN_Ctr

	SELE empresa
	SET ORDER TO TAG empresa
	SEEK LNemp
	
	LStipo  		= "10"
	LScgc			= CHRTRAN(STR(empresa.cgc,14)," ","0")
	LSinsc			= CHRTRAN(empresa.inscricao," ","")
	LSinsc			= CHRTRAN(LSinsc,".","")
	LSinsc			= CHRTRAN(LSinsc,"/","")
	LSinsc			= CHRTRAN(LSinsc,"-","")
	LSinsc			= LEFT(LSinsc+space(14),14)
	LSnome			= LEFT(empresa.nome,35)
	LSmunicipio		= LEFT(empresa.cidade,30)
	LSestado		= empresa.estado
	LSfax			= REPLICATE("0",10)
	LSdtini			= STR(YEAR(LDper_ini),4)+;
					  STR(MONTH(LDper_ini),2)+;
					  STR(DAY(LDper_ini),2)
	LSdtini			= CHRTRAN(LSdtini," ","0")				
	LSdtfim			= STR(YEAR(LDper_fim),4)+;
					  STR(MONTH(LDper_fim),2)+;
					  STR(DAY(LDper_fim),2)
	LSdtfim			= CHRTRAN(LSdtfim," ","0")				
	LScod_id		= "13"

	
	LScod_f			= str(LNfinalidade,1)
	

	LStmp1 			=LStipo+LScgc+LSinsc+LSnome+;
					 LSmunicipio+LSestado+LSfax+;
					 LSdtini+LSdtfim+LScod_id+LScod_f

	=FPUT(LNctrl,LStmp1,126)
	LN_Ctr	=	LN_Ctr + 1
RETURN

function antUL31R_11
	PARAMETERS LNemp, LNctrl, LDper_ini, LDper_fim, LN_Ctr

	SELE empresa
	SET ORDER TO TAG empresa
	SEEK LNemp
	
	LStipo  		= "11"
	LSlogr			= LEFT(empresa.endereco,34)

	IF TYPE("empresa.num") = "U"
		LSnum			= "00001"
	ELSE
		LSnum			= CHRTRAN(STR(empresa.num,5)," ","0")
	ENDIF
	LScompl			= SPACE(22)
	LSbairro		= LEFT(empresa.bairro,15)
	LScep			= LEFT(CHRTRAN(empresa.cep," ","0"),8)
	LScontato		= LEFT(empresa.contato,28)

	LSfone			= CHRTRAN(UPPER(empresa.fone),"X","0")
	LSfone			= CHRTRAN(LSfone,"(","")
	LSfone			= CHRTRAN(LSfone,")","")
	LSfone			= CHRTRAN(LSfone,"-","")
	LSfone			= CHRTRAN(LSfone," ","")
	LSfone			= REPL("0",12-LEN(LSfone))+LSfone

	LSfone			= LEFT(LSfone,12)

	LStmp1 			= LStipo+LSlogr+LSnum+LScompl+LSbairro+LScep+;
					  LScontato+LSfone	
	=FPUT(LNctrl,LStmp1,126)
	LN_Ctr	=	LN_Ctr + 1
RETURN

function antUL31R_50
	PARAMETERS LNemp, LNctrl, LDper_ini, LDper_fim, LN_Ctr

	*-------------------------------------------------------------------*
	*	NOTAS DE SAIDA
	*-------------------------------------------------------------------*
    * vlr_icms =  (base_icms * aliq_icms/100) as vlr_icms,;
	*-------------------------------------------------------------------*

	SELECT 	empresa,nota,serie, cupom, favorecido,tp_pessoa,;
			inscricao, uf, cfo,tipo,;
	        data, total_nota,;
		    vlrfrete,vlrseguro,vlrdespes,;
	  		base_subs, icms_subs, base_icms, aliq_icms,;
	  		(base_icms * aliq_icms/100) as vlr_icms,;
		    base_isent,base_outr,status;
   	FROM &dbf_NFSTMP   where  ;
   			operacao =  "S" AND CUPOM = 0;
    ORDER BY DATA, NOTA           ;
  	INTO CURSOR LIVROSAI

	GO TOP

	LStipo  		= "50"

	DO WHILE !EOF()
		LSmsg = "Saidas (50) "+;
				 	DTOC(LIVROSAI.DATA)+;
					STR(LIVROSAI.NOTA,6)
		WAIT WINDOW LSmsg NOWAIT

		*----------------------------------------------------------*
		LScgc	=  CHRTRAN(STR(LIVROSAI.favorecido,14)," ","0")
		*----------------------------------------------------------*
		*     Quando a inscricao que estiver na nota for invalida
		*  o prog buscara a inscricao do cadastro de clientes
		*  pode ocorrer que no momento da emissao da nota a inscricao
		*  estivesse errada.
		*----------------------------------------------------------*

		LSinsc	=  ALLTRIM(LIVROSAI.inscricao)
		LSuf	=  LIVROSAI.uf

		IF !UPInscricao(LSuf,LSinsc,1,0,0,'')
			IF LIVROSAI.favorecido = 0
				LSinsc	=  "ISENTO"
			ELSE
				SELE clientes
				SET ORDER TO TAG cliente
				SEEK LIVROSAI.favorecido
				IF  FOUND() AND;
					UPInscricao(clientes.estado,clientes.INSCRICAO,1,0,0,'')
					&& CFOs Inciados em 5 o estado deve ser igual ao do
					&& informante
					DO CASE
						CASE LEFT(LIVROSAI.CFO,1) = "5" ;
							AND clientes.estado = empresa.estado
							LSinsc	=  ALLTRIM(clientes.inscricao)
							LSuf	=	clientes.estado
						CASE LEFT(LIVROSAI.CFO,1) <> "5" ;
							AND clientes.estado <> empresa.estado
							LSinsc	=  ALLTRIM(clientes.inscricao)
							LSuf	=	clientes.estado
					ENDCASE
				ELSE
					LSinsc	=  ALLTRIM(LIVROSAI.inscricao)
				ENDIF		
			ENDIF
		ENDIF
		SELE LIVROSAI
		*----------------------------------------------------------*
		IF "ISENTO" $ UPPER(LSinsc)
			LSinsc	=  "ISENTO"
			LScgc	=  CHRTRAN(STR(0,14)," ","0")
		ELSE
			LSinsc	=  CHRTRAN(LSinsc,".","")
			LSinsc	=  CHRTRAN(LSinsc,"/","")
			LSinsc	=  CHRTRAN(LSinsc,"-","")
			LSinsc	=  CHRTRAN(LSinsc,"(","")
			LSinsc	=  CHRTRAN(LSinsc,")","")
		ENDIF			
		LSinsc			= LEFT(LSinsc+space(14),14)
		IF LIVROSAI.TP_PESSOA = 1
			LScgc	=  CHRTRAN(STR(0,14)," ","0")
		ENDIF			


		LSdtemi		=	STR(YEAR(LIVROSAI.data),4)+;
						STR(MONTH(LIVROSAI.data),2)+;
						STR(DAY(LIVROSAI.data),2)
		LSdtemi		=   CHRTRAN(LSdtemi," ","0")						
		LSmodelo 	=   "01"

*		LSserie		=   "  1"
*		LSsubserie  = 	"  "

		LSserie		=   LIVROSAI.serie+"  "
		LSsubserie  = 	"  "

		LSnumero 	= 	CHRTRAN(STR(LIVROSAI.NOTA,7)," ","0")
		LSnumero 	= 	SUBS(LSnumero,2,6)

		LScfo		=   CHRTRAN(LIVROSAI.cfo,".","")						

		SELE TIPOOPER
		SET ORDER TO TAG TIPO
		SEEK "S"+LIVROSAI.tipo
		IF FOUND()
			LScfo	= tipooper.cfo
		ELSE
	    	SEEK "s"+LIVROSAI.tipo
		    IF FOUND()
			   LScfo	= tipooper.cfo
  		 	ENDIF
		ENDIF


		LScfo		=   CHRTRAN(LScfo,".","")						

        IF LIVROSAI.DATA <= {31.12.2002}
  		       LScfo	=   LEFT(LScfo,3)
  	    ENDIF


		SELE LIVROSAI

		*-----------------------------------------------------------------*
		*      Quando o registro se referenciar a uma copia de cupom
		* em NF os valores sao zerados devido aos mesmos serem relacio-
		* nados no registro tipo 61
		*-----------------------------------------------------------------*


		IF LIVROSAI.CUPOM = 0   && PORQUE SE <> 0 E NOTA REFERENTE A CUPOM
			LSvalor		=	str(LIVROSAI.total_nota,14,2)						
			LSbase_icms	=	str(LIVROSAI.base_icms,14,2)						
			LSvlr_icms	=	ROUND(base_icms *  aliq_icms / 100,2)
			LSbase_isent=	str(LIVROSAI.base_isent,14,2)						
			LSbase_outr	=	str(LIVROSAI.base_outr,14,2)						
			LSaliq_icms	=	str(LIVROSAI.aliq_icms,5,2)						
		ELSE
			LSvalor		=	str(0,14,2)						
			LSbase_icms	=	str(0,14,2)						
			LSvlr_icms	=	ROUND(0,2)
			LSbase_isent=	str(0,14,2)						
			LSbase_outr	=	str(0,14,2)						
			LSaliq_icms	=	str(LIVROSAI.aliq_icms,5,2)						
		ENDIF	

		LSvalor		=   CHRTRAN(LSvalor," ","0")						
		LSvalor		=   CHRTRAN(LSvalor,",","")						
		LSvalor		=   CHRTRAN(LSvalor,".","")						


		LSbase_icms	=   CHRTRAN(LSbase_icms," ","0")						
		LSbase_icms	=   CHRTRAN(LSbase_icms,",","")						
		LSbase_icms	=   CHRTRAN(LSbase_icms,".","")						


		LSvlr_icms	=	STR(LSvlr_icms,14,2)
		LSvlr_icms	=   CHRTRAN(LSvlr_icms," ","0")						
		LSvlr_icms	=   CHRTRAN(LSvlr_icms,",","")						
		LSvlr_icms	=   CHRTRAN(LSvlr_icms,".","")						


		LSbase_isent=   CHRTRAN(LSbase_isent," ","0")						
		LSbase_isent=   CHRTRAN(LSbase_isent,",","")						
		LSbase_isent=   CHRTRAN(LSbase_isent,".","")						
		

		LSbase_outr	=   CHRTRAN(LSbase_outr," ","0")						
		LSbase_outr	=   CHRTRAN(LSbase_outr,",","")						
		LSbase_outr	=   CHRTRAN(LSbase_outr,".","")						


		LSaliq_icms	=   CHRTRAN(LSaliq_icms," ","0")						
		LSaliq_icms	=   CHRTRAN(LSaliq_icms,",","")						
		LSaliq_icms	=   CHRTRAN(LSaliq_icms,".","")						

		IF LIVROSAI.status = 2
			LSstatus = "S"
		ELSE
			LSstatus = "N"
		ENDIF		
		************************************************************
		LStmp1		=	LStipo+LScgc+LSinsc+LSdtemi+LSuf+LSmodelo+;
						LSserie+LSsubserie+LSnumero+LScfo+LSvalor+;
						LSbase_icms+LSvlr_icms+LSbase_isent+;
						LSbase_outr+LSaliq_icms+LSstatus
		************************************************************
		=FPUT(LNctrl,LStmp1,126)
		LN_Ctr	=	LN_Ctr + 1
		SKIP
	ENDDO

	*-------------------------------------------------------------------*
	*	NOTAS DE ENTRADA
	*-------------------------------------------------------------------*

	SELECT 	empresa,nota,serie, codforn,inscricao, data, uf, cfo,tipo,;
	        total_nota, vlrfrete,vlrseguro,vlrdespes,;
	        base_subs,icms_subs, base_icms, ;
	  		vlr_icms, base_isent,base_outr,aliq_icms,status;
		FROM &dbf_NFETMP ;
		WHERE  ch_produ <> "9" ;
	    ORDER BY DATA, NOTA ;
   		INTO CURSOR LIVROENT

	SELECT LIVROENT
	GO TOP

	LStipo  		= "50"

	DO WHILE !EOF()
		LSmsg = "Entradas (50) "+;
				 	DTOC(LIVROENT.DATA)+;
					STR(LIVROENT.NOTA,6)
		WAIT WINDOW LSmsg NOWAIT

		*-----------------------------------------------------------*
		SELE fornece
		SET ORDER TO TAG codigo
		SEEK LIVROENT.codforn

		IF FOUND()
			LSinsc	=  ALLTRIM(fornece.inscricao)
			LScgc	=  CHRTRAN(STR(fornece.cgc,14)," ","0")
		ELSE
			LSinsc	=  ALLTRIM(LIVROENT.inscricao)
			LScgc	=  CHRTRAN(STR(LIVROENT.favorecido,14)," ","0")
		ENDIF

		IF "ISENTO" $ UPPER(LSinsc)
			LSinsc	=  "ISENTO"
			LScgc	=  CHRTRAN(STR(0,14)," ","0")
		ELSE
			LSinsc	=  CHRTRAN(LSinsc,".","")
			LSinsc	=  CHRTRAN(LSinsc,"/","")
			LSinsc	=  CHRTRAN(LSinsc,"-","")
			LSinsc	=  CHRTRAN(LSinsc,"(","")
			LSinsc	=  CHRTRAN(LSinsc,")","")
		ENDIF			
		LSinsc			= LEFT(LSinsc+space(14),14)
		*-----------------------------------------------------------*
		SELECT LIVROENT

		LSdtemi		=	STR(YEAR(LIVROENT.data),4)+;
						STR(MONTH(LIVROENT.data),2)+;
						STR(DAY(LIVROENT.data),2)
		LSdtemi		=   CHRTRAN(LSdtemi," ","0")						
		LSuf		=	LIVROENT.uf
		LSmodelo 	=   "01"
		LSserie		=   LIVROENT.serie+"  "
		LSsubserie  = 	"  "
		LSnumero 	= 	CHRTRAN(STR(LIVROENT.NOTA,6)," ","0")

		IF EMPTY(LIVROENT.cfo)
			SELE TIPOOPER
			SET ORDER TO TAG TIPO
			SEEK "E"+LIVROENT.tipo
			IF FOUND()
				LScfo	= tipooper.cfo
			ENDIF
		ELSE	
			LScfo		=   CHRTRAN(LIVROENT.cfo,".","")						
		ENDIF
		LScfo		=   CHRTRAN(LScfo,".","")						

        IF LIVROENT.DATA <= {31.12.2002}
  		       LScfo	=   LEFT(LScfo,3)
  	    ENDIF


		SELE LIVROENT

		LSvalor		=	str(LIVROENT.total_nota,14,2)						
		LSvalor		=   CHRTRAN(LSvalor," ","0")						
		LSvalor		=   CHRTRAN(LSvalor,",","")						
		LSvalor		=   CHRTRAN(LSvalor,".","")						

		LSbase_icms	=   IIF(LIVROENT.base_subs > 0, 0, LIVROENT.base_icms)

		LSbase_icms	=	str(LSbase_icms,14,2)						
		LSbase_icms	=   CHRTRAN(LSbase_icms," ","0")						
		LSbase_icms	=   CHRTRAN(LSbase_icms,",","")						
		LSbase_icms	=   CHRTRAN(LSbase_icms,".","")						

		LSvlr_icms	=	IIF(LIVROENT.base_subs > 0, 0, LIVROENT.vlr_icms)

		LSvlr_icms	=	str(LSvlr_icms,14,2)						
		LSvlr_icms	=   CHRTRAN(LSvlr_icms," ","0")						
		LSvlr_icms	=   CHRTRAN(LSvlr_icms,",","")						
		LSvlr_icms	=   CHRTRAN(LSvlr_icms,".","")						

		LSbase_isent=	str(LIVROENT.base_isent,14,2)						
		LSbase_isent=   CHRTRAN(LSbase_isent," ","0")						
		LSbase_isent=   CHRTRAN(LSbase_isent,",","")						
		LSbase_isent=   CHRTRAN(LSbase_isent,".","")						
		
		LSbase_outr	=	str(LIVROENT.base_outr,14,2)						
		LSbase_outr	=   CHRTRAN(LSbase_outr," ","0")						
		LSbase_outr	=   CHRTRAN(LSbase_outr,",","")						
		LSbase_outr	=   CHRTRAN(LSbase_outr,".","")						

		LSaliq_icms	=	str(LIVROENT.aliq_icms,5,2)						
		LSaliq_icms	=   CHRTRAN(LSaliq_icms," ","0")						
		LSaliq_icms	=   CHRTRAN(LSaliq_icms,",","")						
		LSaliq_icms	=   CHRTRAN(LSaliq_icms,".","")						

		LSstatus = "N"
		************************************************************
		LStmp1		=	LStipo+LScgc+LSinsc+LSdtemi+LSuf+LSmodelo+;
						LSserie+LSsubserie+LSnumero+LScfo+LSvalor+;
						LSbase_icms+LSvlr_icms+LSbase_isent+;
						LSbase_outr+LSaliq_icms+LSstatus
		************************************************************
		=FPUT(LNctrl,LStmp1,126)
		LN_Ctr	=	LN_Ctr + 1
		SKIP
	ENDDO
RETURN



function antUL31R_53
	PARAMETERS LNemp, LNctrl, LDper_ini, LDper_fim, LN_Ctr

	*-------------------------------------------------------------------*
	*	NOTAS DE SAIDA
	*-------------------------------------------------------------------*
	*-------------------------------------------------------------------*
	*	NOTAS DE SAIDA
	*-------------------------------------------------------------------*
    * vlr_icms =  (base_icms * aliq_icms/100) as vlr_icms,;
	*-------------------------------------------------------------------*

	SELECT 	empresa,nota,serie, cupom, favorecido,tp_pessoa,;
			inscricao, uf, cfo,tipo,;
	        data, total_nota,;
		    vlrfrete,vlrseguro,vlrdespes,;
	  		base_subs, icms_subs, base_icms, aliq_icms,;
	  		(base_icms * aliq_icms/100) as vlr_icms,;
		    base_isent,base_outr,status;
	FROM  &dbf_NFSTMP        WHERE ;
   				operacao <> "E"   ;
   			AND tipo   <> "CPM"   ;
   			AND icms_subs > 0  	  ;
    ORDER BY DATA, NOTA ;
  	INTO CURSOR LIVROSAI


	LStipo  		= "53"
	DO WHILE !EOF()
		LSmsg = "Subst.Saida (53) "+;
				 	DTOC(LIVROSAI.DATA)+;
					STR(LIVROSAI.NOTA,6)
		WAIT WINDOW LSmsg NOWAIT

		*----------------------------------------------------------*
		LScgc	=  CHRTRAN(STR(LIVROSAI.favorecido,14)," ","0")

		LSinsc	=  ALLTRIM(LIVROSAI.inscricao)
		LSuf	=	LIVROSAI.uf
		IF !UPInscricao(LSuf,LSinsc,1,0,0,'')
			IF LIVROSAI.favorecido = 0
				LSinsc	=  "ISENTO"
			ELSE
				SELE clientes
				SET ORDER TO TAG cliente
				SEEK LIVROSAI.favorecido
				IF  FOUND() AND ;
				   UPInscricao(clientes.estado,clientes.INSCRICAO,1,0,0,'')
					&& CFOs Inciados em 5 o estado deve ser igual ao do
					&& informante
					DO CASE
						CASE LEFT(LIVROSAI.CFO,1) = "5" ;
							AND clientes.estado = empresa.estado
							LSinsc	=  ALLTRIM(clientes.inscricao)
							LSuf	=	clientes.estado
						CASE LEFT(LIVROSAI.CFO,1) <> "5" ;
							AND clientes.estado <> empresa.estado
							LSinsc	=  ALLTRIM(clientes.inscricao)
							LSuf	=	clientes.estado
					ENDCASE
				ELSE
					LSinsc	=  ALLTRIM(LIVROSAI.inscricao)
				ENDIF		
			ENDIF
		ENDIF
		SELE LIVROSAI

		IF "ISENTO" $ UPPER(LSinsc)
			LSinsc	=  "ISENTO"
			LScgc	=  CHRTRAN(STR(0,14)," ","0")
		ELSE
			LSinsc	=  CHRTRAN(LSinsc,".","")
			LSinsc	=  CHRTRAN(LSinsc,"/","")
			LSinsc	=  CHRTRAN(LSinsc,"-","")
			LSinsc	=  CHRTRAN(LSinsc,"(","")
			LSinsc	=  CHRTRAN(LSinsc,")","")
		ENDIF			
		IF LIVROSAI.TP_PESSOA = 1
			LScgc	=  CHRTRAN(STR(0,14)," ","0")
		ENDIF			


		LSinsc			= LEFT(LSinsc+space(14),14)
		LSdtemi		=	STR(YEAR(LIVROSAI.data),4)+;
						STR(MONTH(LIVROSAI.data),2)+;
						STR(DAY(LIVROSAI.data),2)
		LSdtemi		=   CHRTRAN(LSdtemi," ","0")						
		LSmodelo 	=   "01"
	*	LSserie		=   "  1"
	*	LSsubserie  = 	"  "

		LSserie		=   LIVROSAI.serie+"  "
		LSsubserie  = 	"  "


		LSnumero 	= 	CHRTRAN(STR(LIVROSAI.NOTA,7)," ","0")
		LSnumero 	= 	SUBS(LSnumero,2,6)

		LScfo		=   CHRTRAN(LIVROSAI.cfo,".","")						
		IF EMPTY(LIVROSAI.cfo)
			SELE TIPOOPER
			SET ORDER TO TAG TIPO
			SEEK "S"+LIVROSAI.tipo
			IF FOUND()
				LScfo	= tipooper.cfo
			ENDIF
		ELSE	
			LScfo		=   CHRTRAN(LIVROSAI.cfo,".","")						
		ENDIF
		LScfo		=   CHRTRAN(LScfo,".","")						
        IF LIVROSAI.DATA <= {31.12.2002}
           LScfo = LEFT(LScfo,3)
        ENDIF

		SELE LIVROSAI


		*-- > Base de Substituicao
		LSbase_icms	=	str(LIVROSAI.base_subs,14,2)						
		LSbase_icms	=   CHRTRAN(LSbase_icms," ","0")						
		LSbase_icms	=   CHRTRAN(LSbase_icms,",","")						
		LSbase_icms	=   CHRTRAN(LSbase_icms,".","")						

		*-- > ICMS de Substituicao
		LSvlr_icms	=	STR(LIVROSAI.icms_subs,14,2)
		LSvlr_icms	=   CHRTRAN(LSvlr_icms," ","0")						
		LSvlr_icms	=   CHRTRAN(LSvlr_icms,",","")						
		LSvlr_icms	=   CHRTRAN(LSvlr_icms,".","")						

		*--- > Despesas acessorias
		LSdespesa=	LIVROSAI.vlrfrete+LIVROSAI.vlrseguro+LIVROSAI.vlrdespes
		LSdespesa=	 str(LSdespesa,14,2)						
		LSdespesa=   CHRTRAN(LSdespesa," ","0")						
		LSdespesa=   CHRTRAN(LSdespesa,",","")						
		LSdespesa=   CHRTRAN(LSdespesa,".","")						
		
		IF LIVROSAI.status = 2
			LSstatus = "S"
		ELSE
			LSstatus = "N"
		ENDIF		

		LSfiler  	=  space(30)
		************************************************************
		LStmp1		=	LStipo+LScgc+LSinsc+LSdtemi+LSuf+LSmodelo+;
						LSserie+LSsubserie+LSnumero+LScfo+;
						LSbase_icms+LSvlr_icms+LSdespesa+;
						LSstatus+LSfiler
		************************************************************
		=FPUT(LNctrl,LStmp1,126)
		LN_Ctr	=	LN_Ctr + 1
		SKIP
	ENDDO

	*-------------------------------------------------------------------*
	*	NOTAS DE ENTRADA
	*-------------------------------------------------------------------*

	*	NOTAS DE ENTRADA
	*-------------------------------------------------------------------*

	SELECT 	empresa,nota,serie, codforn,inscricao, data, uf, cfo,tipo,;
	        total_nota, vlrfrete,vlrseguro,vlrdespes,;
	        base_subs,icms_subs, base_icms, ;
	  		vlr_icms, base_isent,base_outr,aliq_icms,status;
		FROM &dbf_NFETMP ;
		WHERE  icms_subs > 0 	  ;
   			AND ch_produ <> "9"   ;
	    ORDER BY DATA, NOTA ;
	   	INTO CURSOR LIVROENT

	GO TOP



	LStipo  		= "53"
	DO WHILE !EOF()
		LSmsg = "Subst.Entrada (53) "+;
				 	DTOC(LIVROENT.DATA)+;
					STR(LIVROENT.NOTA,6)
		WAIT WINDOW LSmsg NOWAIT


		*-----------------------------------------------------------*
		SELE fornece
		SET ORDER TO TAG codigo
		SEEK LIVROENT.codforn
		IF FOUND()
			LSinsc	=  ALLTRIM(fornece.inscricao)
			LScgc	=  CHRTRAN(STR(fornece.cgc,14)," ","0")
		ELSE
			LSinsc	=  ALLTRIM(LIVROENT.inscricao)
			LScgc	=  CHRTRAN(STR(LIVROENT.favorecido,14)," ","0")
		ENDIF

		IF "ISENTO" $ UPPER(LSinsc)
			LSinsc	=  "ISENTO"
			LScgc	=  CHRTRAN(STR(0,14)," ","0")
		ELSE
			LSinsc	=  CHRTRAN(LSinsc,".","")
			LSinsc	=  CHRTRAN(LSinsc,"/","")
			LSinsc	=  CHRTRAN(LSinsc,"-","")
			LSinsc	=  CHRTRAN(LSinsc,"(","")
			LSinsc	=  CHRTRAN(LSinsc,")","")
		ENDIF			
		LSinsc		= LEFT(LSinsc+space(14),14)
		SELECT LIVROENT

		LSdtemi		=	STR(YEAR(LIVROENT.data),4)+;
						STR(MONTH(LIVROENT.data),2)+;
						STR(DAY(LIVROENT.data),2)
		LSdtemi		=   CHRTRAN(LSdtemi," ","0")						

		LSuf		=	LIVROENT.uf
		LSmodelo 	=   "01"
*		LSserie		=   "  1"
*		LSsubserie  = 	"  "

		LSserie		=   LIVROENT.serie+"  "
		LSsubserie  = 	"  "

		LSnumero 	= 	CHRTRAN(STR(LIVROENT.NOTA,6)," ","0")
		IF EMPTY(LIVROENT.cfo)
			SELE TIPOOPER
			SET ORDER TO TAG TIPO
			SEEK "E"+LIVROENT.tipo
			IF FOUND()
				LScfo	= tipooper.cfo
			ENDIF
		ELSE	
			LScfo		=   CHRTRAN(LIVROENT.cfo,".","")						
		ENDIF
		LScfo		=   CHRTRAN(LScfo,".","")						
        IF LIVROENT.DATA <= {31.12.2002}
           LScfo = LEFT(LScfo,3)
        ENDIF

		SELE LIVROENT


		*-- > Base de Substituicao
		LSbase_icms	=	str(LIVROENT.base_subs,14,2)						
		LSbase_icms	=   CHRTRAN(LSbase_icms," ","0")						
		LSbase_icms	=   CHRTRAN(LSbase_icms,",","")						
		LSbase_icms	=   CHRTRAN(LSbase_icms,".","")						

		*-- > ICMS de Substituicao
		LSvlr_icms	=	STR(LIVROENT.icms_subs,14,2)
		LSvlr_icms	=   CHRTRAN(LSvlr_icms," ","0")						
		LSvlr_icms	=   CHRTRAN(LSvlr_icms,",","")						
		LSvlr_icms	=   CHRTRAN(LSvlr_icms,".","")						

		*--- > Despesas acessorias
		LSdespesa=	LIVROENT.vlrfrete+LIVROENT.vlrseguro+LIVROENT.vlrdespes
		LSdespesa=	 str(LSdespesa,14,2)						
		LSdespesa=   CHRTRAN(LSdespesa," ","0")						
		LSdespesa=   CHRTRAN(LSdespesa,",","")						
		LSdespesa=   CHRTRAN(LSdespesa,".","")						
		

		LSstatus = "N"
		LSfiler  	=  space(30)
		************************************************************
		LStmp1		=	LStipo+LScgc+LSinsc+LSdtemi+LSuf+LSmodelo+;
						LSserie+LSsubserie+LSnumero+LScfo+;
						LSbase_icms+LSvlr_icms+LSdespesa+;
						LSstatus+LSfiler
		************************************************************
		=FPUT(LNctrl,LStmp1,126)
		LN_Ctr	=	LN_Ctr + 1
		SKIP
	ENDDO

RETURN

*****************************************************************
*  REGISTRO DE ITENS - 54 - ENTRADA E SAIDA
*****************************************************************

function antUL31R_54
	PARAMETERS LNemp, LNctrl, LDper_ini, LDper_fim, LN_Ctr
	PRIVATE LNctrOrdem

	*-------------------------------------------------------------------*
	*	ITENS DAS NOTAS DE SAIDA
	*-------------------------------------------------------------------*


	SELECT 	empresa,nota,serie, cupom, favorecido,tp_pessoa,;
			inscricao, uf, cfo,tipo,;
	        data, total_nota,;
		    vlrfrete,vlrseguro,vlrdespes,;
	  		base_subs, icms_subs, base_icms, aliq_icms,;
	  		(base_icms * aliq_icms/100) as vlr_icms,;
		    base_isent,base_outr,status;
		FROM  &dbf_NFSTMP   ;
	    WHERE operacao =  "S" AND CUPOM = 0;
    ORDER BY DATA, NOTA ;
  	INTO CURSOR LIVROSAI

	GO TOP

	DO WHILE !EOF()
	
		LSmsg = "Produtos Saida (54) "+;
				 	DTOC(LIVROSAI.DATA)+;
					STR(LIVROSAI.NOTA,6)
		WAIT WINDOW LSmsg NOWAIT

		LStipo  	=   "54"

		
		*----------------------------------------------------------*
		LScgc	=  CHRTRAN(STR(LIVROSAI.favorecido,14)," ","0")
		*----------------------------------------------------------*

		LSinsc	=  ALLTRIM(LIVROSAI.inscricao)
		LSuf	=  LIVROSAI.uf

		IF !UPInscricao(LSuf,LSinsc,1,0,0,'')
			IF LIVROSAI.favorecido = 0
				LSinsc	=  "ISENTO"
			ELSE
				SELE clientes
				SET ORDER TO TAG cliente
				SEEK LIVROSAI.favorecido
				IF  FOUND() AND;
					UPInscricao(clientes.estado,clientes.INSCRICAO,1,0,0,'')
					&& CFOs Inciados em 5 o estado deve ser igual ao do
					&& informante
					DO CASE
						CASE LEFT(LIVROSAI.CFO,1) = "5" ;
							AND clientes.estado = empresa.estado
							LSinsc	=  ALLTRIM(clientes.inscricao)
							LSuf	=	clientes.estado
						CASE LEFT(LIVROSAI.CFO,1) <> "5" ;
							AND clientes.estado <> empresa.estado
							LSinsc	=  ALLTRIM(clientes.inscricao)
							LSuf	=	clientes.estado
					ENDCASE
				ELSE
					LSinsc	=  ALLTRIM(LIVROSAI.inscricao)
				ENDIF		
			ENDIF
		ENDIF

		SELE LIVROSAI
		IF "ISENTO" $ UPPER(LSinsc)
			LScgc	=  CHRTRAN(STR(0,14)," ","0")
		ENDIF			
		IF LIVROSAI.TP_PESSOA = 1
			LScgc	=  CHRTRAN(STR(0,14)," ","0")
		ENDIF			
			
		LSmodelo 	=   "01"
		LSserie		=   "  1"
		LSsubserie  = 	"  "

		LSserie		=   LIVROSAI.serie+"  "
		LSsubserie  = 	"  "


		LSnumero 	= 	CHRTRAN(STR(LIVROSAI.NOTA,7)," ","0")
		LSnumero 	= 	SUBS(LSnumero,2,6)
		LScfo		=   CHRTRAN(LIVROSAI.cfo,".","")						

		IF EMPTY(LIVROSAI.cfo)
			SELE TIPOOPER
			SET ORDER TO TAG TIPO
			SEEK "S"+LIVROSAI.tipo
			IF FOUND()
				LScfo	= tipooper.cfo
			ENDIF
		ELSE	
			LScfo		=   CHRTRAN(LIVROSAI.cfo,".","")						
		ENDIF
		LScfo		=   CHRTRAN(LScfo,".","")						

        IF LIVROSAI.DATA <= {31.12.2002}
           LScfo = LEFT(LScfo,3)
        ENDIF

		SELE ITEMMOV
		SET ORDER TO TAG itensnota
		SET NEAR ON
		SEEK STR(LNemp,3)+"S"+STR(LIVROSAI.NOTA,7)
		SET NEAR OFF
		LNctrordem = 1		&& INDICAR ORDEM DO PRODUTO NA NOTA

		DO WHILE !EOF() AND LIVROSAI.NOTA = itemmov.nota ;
						AND LEFT(itemmov.operacao,1) = "S"
			*--------------------------------------------------*
			* 	Podem ser identificadas itens de sadida com
			* numero de nota conincidenter  com itens de uma
			*	SCA por isso e feito a verificacao do tipo
			*---------------------------------------------------*
			IF 	LIVROSAI.TIPO 	 <> itemmov.tipo
				SKIP
				LOOP
			ENDIF
			*---------------------------------------------------*
			DO ULitem_75  && REGISTRAR ITEM COMERCIALIZADO
			*---------------------------------------------------*			
			SELE ITEMMOV

			LSordem = CHRTRAN(STR(LNctrordem,3)," ","0")
			LNctrordem	= LNctrordem + 1
			LScodigo=  LEFT(itemmov.codigo,10)+space(4)

			LSqtde	= STR(itemmov.qtde,14,3)			
			LSqtde  = CHRTRAN(LSqtde," ","0")
			LSqtde  = CHRTRAN(LSqtde,",","")
			LSqtde  = CHRTRAN(LSqtde,".","")

			LSvalor	= STR(itemmov.vlrvenda,13,2)			
			LSvalor = CHRTRAN(LSvalor," ","0")
			LSvalor = CHRTRAN(LSvalor,",","")
			LSvalor = CHRTRAN(LSvalor,".","")

			LSdesconto	= STR(0,13,2)			
			LSdesconto  = CHRTRAN(LSdesconto," ","0")
			LSdesconto  = CHRTRAN(LSdesconto,",","")
			LSdesconto  = CHRTRAN(LSdesconto,".","")

			LSbase_icms = STR(itemmov.base_calc,13,2)			
			LSbase_icms = CHRTRAN(LSbase_icms," ","0")
			LSbase_icms = CHRTRAN(LSbase_icms,",","")
			LSbase_icms = CHRTRAN(LSbase_icms,".","")

			LSbase_subs = (itemmov.base_calc*itemmov.iva)
			LSbase_subs = STR(LSbase_subs,13,2)			
			LSbase_subs = CHRTRAN(LSbase_subs," ","0")
			LSbase_subs = CHRTRAN(LSbase_subs,",","")
			LSbase_subs = CHRTRAN(LSbase_subs,".","")

			LSvlripi	= STR(0,13,2)			
			LSvlripi	= CHRTRAN(LSvlripi," ","0")
			LSvlripi 	= CHRTRAN(LSvlripi,",","")
			LSvlripi 	= CHRTRAN(LSvlripi,".","")

			LSaliq_icms	=	str(itemmov.aliq_icms,5,2)						
			LSaliq_icms	=   CHRTRAN(LSaliq_icms," ","0")						
			LSaliq_icms	=   CHRTRAN(LSaliq_icms,",","")						
			LSaliq_icms	=   CHRTRAN(LSaliq_icms,".","")						
			
			*******************************************************

			LStmp1		= LStipo+LScgc+LSmodelo+LSserie+;
						  LSsubserie+LSnumero+LScfo+LSordem+;
						  LScodigo+LSqtde+LSvalor+LSdesconto+LSbase_icms+;
						  LSbase_subs+LSvlripi+LSaliq_icms
			=FPUT(LNctrl,LStmp1,126)
			LN_Ctr	=	LN_Ctr + 1
			*******************************************************			
			SKIP
		ENDDO
		SELECT LIVROSAI
		SKIP
	ENDDO

	*-------------------------------------------------------------------*
	*	NOTAS DE ENTRADA
	*-------------------------------------------------------------------*

	SELECT 	empresa,nota,serie,favorecido, codforn,;
			inscricao, data, uf, cfo,tipo,;
			total_nota, vlrfrete,vlrseguro,vlrdespes,;
			vlrfrete,vlrseguro,vlrdespes,;
            base_subs,icms_subs, base_icms, ;
	  		vlr_icms, base_isent,base_outr,aliq_icms,status;
		FROM &dbf_NFETMP ;
	 	WHERE  icms_subs > 0 	  ;
   			AND ch_produ <> "9"   ;
	    ORDER BY DATA, NOTA ;
   		INTO CURSOR LIVROENT
	GO TOP

	DO WHILE !EOF()
		LSmsg = "Produtos Entrada (54) "+;
				 	DTOC(LIVROENT.DATA)+;
					STR(LIVROENT.NOTA,6)
		WAIT WINDOW LSmsg NOWAIT

		LStipo  	= "54"

		*-----------------------------------------------------------*
		SELE fornece
		SET ORDER TO TAG codigo
		SEEK LIVROENT.codforn
		IF FOUND()
			LSinsc	=  ALLTRIM(fornece.inscricao)
			LScgc	=  CHRTRAN(STR(fornece.cgc,14)," ","0")
		ELSE
			LSinsc	=  ALLTRIM(LIVROENT.inscricao)
			LScgc	=  CHRTRAN(STR(LIVROENT.favorecido,14)," ","0")
		ENDIF
		*-----------------------------------------------------------*
		SELE LIVROENT

		IF "ISENTO" $ UPPER(LSinsc)
			LScgc	=  CHRTRAN(STR(0,14)," ","0")
		ENDIF
		LSmodelo 	=   "01"
	*	LSserie		=   "  1"
	*	LSsubserie  = 	"  "

		LSserie		=   LIVROENT.serie+"  "
		LSsubserie  = 	"  "


		LSnumero 	= 	CHRTRAN(STR(LIVROENT.NOTA,6)," ","0")

		IF EMPTY(LIVROENT.cfo)
			SELE TIPOOPER
			SET ORDER TO TAG TIPO
			SEEK "E"+LIVROENT.tipo
			IF FOUND()
				LScfo	= tipooper.cfo
			ENDIF
		ELSE	
			LScfo		=   CHRTRAN(LIVROENT.cfo,".","")						
		ENDIF
		LScfo		=   CHRTRAN(LScfo,".","")						

		SELE LIVROENT

        IF LIVROENT.DATA <= {31.12.2002}
           LScfo = LEFT(LScfo,3)
        ENDIF

		SELE ITEMMOV
		SET ORDER TO TAG itensnota
		SET NEAR ON
		SEEK STR(LNemp,3)+"E"+STR(LIVROENT.NOTA,7)
		SET NEAR OFF
		LNctrordem	= 1

		DO WHILE !EOF() AND LIVROENT.NOTA = itemmov.nota ;
						AND LEFT(itemmov.operacao,1) = "E"
			*--------------------------------------------------*
			* 	Podem ser identificadas itens de entrada com mesmo
			* numero de nota por isso e feito a verificacao do tipo
			* e do codiforn
			*---------------------------------------------------*
			IF 	LIVROENT.TIPO 	 <> itemmov.tipo OR ;
				LIVROENT.CODFORN <> itemmov.codforn
				SKIP
				LOOP
			ENDIF
			*---------------------------------------------------*
			DO ULitem_75  && REGISTRAR ITEM COMERCIALIZADO
			*---------------------------------------------------*			

			LSordem = CHRTRAN(STR(LNctrordem,3)," ","0")
			LNctrordem	= LNctrordem + 1
			LScodigo=  LEFT(itemmov.codigo,10)+space(4)


			LSqtde	= STR(itemmov.qtde,14,3)			
			LSqtde  = CHRTRAN(LSqtde," ","0")
			LSqtde  = CHRTRAN(LSqtde,",","")
			LSqtde  = CHRTRAN(LSqtde,".","")

			LSvalor	= STR(itemmov.vlrvenda,13,2)			
			LSvalor = CHRTRAN(LSvalor," ","0")
			LSvalor = CHRTRAN(LSvalor,",","")
			LSvalor = CHRTRAN(LSvalor,".","")

			LSdesconto	= STR(0,13,2)			
			LSdesconto  = CHRTRAN(LSdesconto," ","0")
			LSdesconto  = CHRTRAN(LSdesconto,",","")
			LSdesconto  = CHRTRAN(LSdesconto,".","")

			LSbase_icms = STR(itemmov.base_calc,13,2)			
			LSbase_icms = CHRTRAN(LSbase_icms," ","0")
			LSbase_icms = CHRTRAN(LSbase_icms,",","")
			LSbase_icms = CHRTRAN(LSbase_icms,".","")

			LSbase_subs = (itemmov.base_calc+itemmov.vlripi)*itemmov.iva
			LSbase_subs = STR(LSbase_subs,13,2)			
			LSbase_subs = CHRTRAN(LSbase_subs," ","0")
			LSbase_subs = CHRTRAN(LSbase_subs,",","")
			LSbase_subs = CHRTRAN(LSbase_subs,".","")

			LSvlripi	= STR(itemmov.vlripi,13,2)			
			LSvlripi	= CHRTRAN(LSvlripi," ","0")
			LSvlripi 	= CHRTRAN(LSvlripi,",","")
			LSvlripi 	= CHRTRAN(LSvlripi,".","")

			LSaliq_icms	=	str(itemmov.aliq_icms,5,2)						
			LSaliq_icms	=   CHRTRAN(LSaliq_icms," ","0")						
			LSaliq_icms	=   CHRTRAN(LSaliq_icms,",","")						
			LSaliq_icms	=   CHRTRAN(LSaliq_icms,".","")						

			
			*******************************************************			
			LStmp1		= LStipo+LScgc+LSmodelo+LSserie+;
						  LSsubserie+LSnumero+LScfo+LSordem+;
						  LScodigo+LSqtde+LSvalor+LSdesconto+LSbase_icms+;
						  LSbase_subs+LSvlripi+LSaliq_icms
			=FPUT(LNctrl,LStmp1,126)
			LN_Ctr	=	LN_Ctr + 1
			*******************************************************			
			SKIP
		ENDDO
		SELECT LIVROENT
		SKIP
	ENDDO

RETURN

procedure antULitem_75
	*-----------------------------------------------------------*
	* REGISTRA ITENS COMERCIALIZADOS PARA REGISTRO TIPO 75
	*-----------------------------------------------------------*
	PRIVATE LSalias
	LSalias = ALIAS()

	SELE ITENSNEGOC
	SET ORDER TO TAG CODIGO
	m.codigo	= itemmov.codigo
	SEEK m.codigo
	IF !FOUND()
 		IF LEFT(m.codigo,5) <> "99999" AND EMPTY(itemmov.descricao)		
			SELE grupo
			SET ORDER TO TAG codigo
			SEEK m.codigo
			IF FOUND()
				m.descricao = grupo.descricao
			ELSE
				m.descricao = itemmov.descricao
			ENDIF
		ELSE
			m.descricao = itemmov.descricao
			IF empty(m.descricao)
				m.descricao = LEFT("SERVICO"+SPACE(25),25)
			ENDIF
		ENDIF
		*--------------------------------------------------------*
		SELE ITENSNEGOC
 		IF LEFT(m.codigo,5) <> "99999" AND EMPTY(itemmov.descricao)		
			m.classifica= itemmov.classifica
		ELSE
			m.classifica= "999999999999"
		ENDIF
		m.status	= 1
		m.cdg_tipo	= 4
		m.unidade 	= itemmov.unidade
		m.aliq_ipi	= itemmov.aliq_ipi
		m.aliq_icms	= itemmov.aliq_icms
		m.iva		= itemmov.iva
		m.tp_mercad = itemmov.tp_mercad
		=edithand("SAVE")
	ENDIF
	IF !EMPTY(LSalias) AND USED(LSalias)
		SELECT &LSalias
	ENDIF
RETURN

*****************************************************************
*  REGISTRO CUPONS  - 60 -
*****************************************************************



function antUL31R_60
	PARAMETERS LNemp, LNctrl, LDper_ini, LDper_fim, LN_Ctr

	*-------------------------------------------------------------------*
	* PROCESSO SOBRE RESUMO DO MAPAECF
	*-------------------------------------------------------------------*
	
*	SELECT  "5.00"   AS CFO ,      ;
*			DATA,ALIQUOTA AS ALIQ_ICMS,;
*			"XX" AS UF, ;
*		 	VLRCONTAB 	    						  AS TOTAL_NOTA,;
*		 	(VLRCONTAB-VLRISENT-VLRSERVICO-VLRSUBST)  AS BASE_ICMS,;
*			VLRISENT								  AS BASE_ISENT,;
*			VLROUTRO								  AS BASE_OUTR,;
*			VLRSERVICO      						  AS BASE_ISS,;
*			VLRSUBST 								  AS BASE_SUBS,;
*			CANCELA;
*		FROM &dbf_MAPA ;
*		WHERE    data >= LDper_ini;
*		   	AND  data <= LDper_fim;
*		GROUP BY DATA,ALIQ_ICMS,UF;
*   	INTO CURSOR LIVROSAI


	*-------------------------------------------------------------------*

	*----------------------------------------------------------*
	*  TEMPORARIO PARA AGREGAR CUPONS NORMAIS
	*----------------------------------------------------------*
	LSarqtmp 	= "" 			&& EX: C:\TMP\TMP0001
	LSaliastmp 	= "CPM" 		&&     TMP001
	LSaliastmp = UPopentmp(wp_dirtmp,LSarqtmp,LSaliastmp,1)
	IF EMPTY(LSaliastmp)
		DO OBJ_ALER.SPR  WITH ;
			"FALHA !!! NЖo Foi Possivel Definir Arquivo Temporario"
		RETURN
	ENDIF
	dbf_CPMTMP  = wp_dirtmp+LSaliastmp+".DBF"
	als_CPMTMP  = LSaliastmp
	*----------------------------------------------------------*
	*  TEMPORARIO PARA AGREGAR CUPONS CANCELADOS
	*----------------------------------------------------------*
	LSarqtmp 	= "" 			&& EX: C:\TMP\TMP0001
	LSaliastmp 	= "CAN" 		&&     TMP001
	LSaliastmp = UPopentmp(wp_dirtmp,LSarqtmp,LSaliastmp,1)
	IF EMPTY(LSaliastmp)
		DO OBJ_ALER.SPR  WITH ;
			"FALHA !!! NЖo Foi Possivel Definir Arquivo Temporario"
		RETURN
	ENDIF
	dbf_CANTMP  = wp_dirtmp+LSaliastmp+".DBF"
	als_CANTMP  = LSaliastmp
	*----------------------------------------------------------*
	*-------------------------------------------------------------------*
	* PROCESSO APURANDO CUPONS EMITIDOS E NAO CANCELADOS MAPAECF
	*-------------------------------------------------------------------*
 	SELECT  "5.00" AS CFO ,  ;
			DATA, ;
			ALIQ_ICMS, ;
			"XX"			 	AS UF, ;
		 	SUM(TOTAL_NOTA)  	AS TOTAL_NOTA,;
		 	SUM(BASE_ICMS)   	AS BASE_ICMS,;
			SUM(BASE_ISENT)  	AS BASE_ISENT,;
			SUM(BASE_OUTR)   	AS BASE_OUTR,;
			SUM(BASE_ISS)    	AS BASE_ISS,;
			SUM(BASE_SUBS)   	AS BASE_SUBS,;
			0*SUM(BASE_SUBS)      AS CANCELA;
	FROM &dbf_NFSTMP ;
		WHERE   status = 1 ;
			AND  operacao  = "S" ;
		   	AND  cupom > 0 ;
	GROUP BY DATA,ALIQ_ICMS;
   	INTO TABLE &dbf_CPMTMP

	*-------------------------------------------------------------------*
	* PROCESSO APURANDO CUPONS  CANCELADOS
	*-------------------------------------------------------------------*


 	SELECT  "5.00" AS CFO ,  ;
			DATA, ;
			ALIQ_ICMS, ;
			"XX"			 AS UF, ;
		 	0     AS TOTAL_NOTA,;
		 	0	 AS BASE_ICMS,;
			0	 AS BASE_ISENT,;
			0	 AS BASE_OUTR,;
			0	 AS BASE_ISS,;
			0	 AS BASE_SUBS,;
		 	SUM(TOTAL_NOTA)  AS CANCELA;
	FROM &dbf_NFSTMP ;
		WHERE   status = 2 ;
		    AND  operacao  = "S" ;
		    AND  cupom > 0 ;
	GROUP BY DATA,ALIQ_ICMS;
   	INTO TABLE &dbf_CANTMP

	*-------------------------------------------------------------------*
	* PROCESSO FUSAO CUPONS NORMAIS E CANCELADOS
	*-------------------------------------------------------------------*

   	SELECT  &als_CPMTMP
	append from   &dbf_CANTMP

	*-------------------------------------------------------------------*
	* PROCESSO AGRUPAMENTO DE CUPONS NORMAIS E CANCELADOS
	*-------------------------------------------------------------------*

 	SELECT  "5.00" AS CFO ,  ;
			DATA, ;
			ALIQ_ICMS, ;
			"XX"			 	AS UF, ;
		 	SUM(TOTAL_NOTA)  	AS TOTAL_NOTA,;
		 	SUM(BASE_ICMS)   	AS BASE_ICMS,;
			SUM(BASE_ISENT)  	AS BASE_ISENT,;
			SUM(BASE_OUTR)   	AS BASE_OUTR,;
			SUM(BASE_ISS)    	AS BASE_ISS,;
			SUM(BASE_SUBS)   	AS BASE_SUBS,;
			SUM(CANCELA)        AS CANCELA;
	FROM &dbf_CPMTMP ;
	GROUP BY DATA,ALIQ_ICMS;
   	INTO CURSOR LIVROSAI




	SELECT LIVROSAI

	go top


	DO WHILE !EOF()
		LSmsg = "Resum.Cupons (60) "+;
				 	DTOC(LIVROSAI.DATA)
		WAIT WINDOW LSmsg NOWAIT

		*---------------------------------------------------------
		*--> PROCESSAR SOMENTE O REGISTRO RESUMO DOS CUPONS
		* REGISTROS SAO GERADOS QUANDO PROCESSO O ARQUIVO LIVROSAI
		* RESUMINDO OS CUPONS POR DATA E ALIQUOTA

		LDtqbr		= 	LIVROSAI.data
		LSvalor		= 	0
		LSvlr_icms	= 	0
		LSnroini	=   0
		LSnrofim	=   0
		*--------------------------------------------------------------*
		=W_DEFPROC("NOTA.SPR")
		=NFEcfInforme((LNemp),(LDtqbr),(LDtqbr),LSnroIni,LSnroFim,;
					LSvalor, LSvlr_icms)
		*--------------------------------------------------------------*
		*	Identifica‡Жo do Equipamento
		*--------------------------------------------------------------*
		LStipo  	= "60"
		LSMestre	= "M"
		LSdtemi		=	STR(YEAR(LDtqbr),4)+;
						STR(MONTH(LDtqbr),2)+;
						STR(DAY(LDtqbr),2)
		LSdtemi		=   CHRTRAN(LSdtemi," ","0")						

		LSnumero 	= 	"001"
		LSserie     =   empresa.ecf_serie
		LSmodelo	=	"2D"
		
		LSnroini	=   CHRTRAN(STR(LSnroini,6)," ","0")
		LSnrofim	=   CHRTRAN(STR(LSnrofim,6)," ","0")

		SELE mapaecf
		SET NEAR ON
		SET ORDER TO TAG mapa
		SEEK STR(LNemp,3)+DTOS(LDtqbr)+STR(1,4)+STR(17,5,2)	
		SET NEAR OFF
		IF mapaecf.empresa = LNemp AND ;
		   mapaecf.data    = LDtqbr AND ;
		   mapaecf.ecf		= 1 AND ;
		   mapaecf.aliquota = 17
				LSnroredZ		=	mapaecf.ctrreducao
				LSgtInivalor	=	mapaecf.gt_inicial
				LSgtFimvalor	=	mapaecf.gt_final
		ELSE
			SKIP -1
			DO WHILE !BOF() AND mapaecf.empresa = LNemp
				IF  mapaecf.aliquota = 17
					EXIT
				ENDIF
				SKIP -1
			ENDDO
			IF !BOF()
				LSnroredZ		=	mapaecf.ctrreducao
				LSgtInivalor	=	mapaecf.gt_inicial
				LSgtFimvalor	=	mapaecf.gt_final
			ELSE			
				LSnroredZ		=	0
				LSgtInivalor	=	0
				LSgtFimvalor	=	0
			ENDIF
		ENDIF

		LSctrredZ		=   CHRTRAN(STR(LSnroredZ,6)," ","0")

		LSgtInivalor	=	STR(LSgtInivalor,17,2)
		LSgtInivalor	=   CHRTRAN(LSgtInivalor," ","0")						
		LSgtInivalor	=   CHRTRAN(LSgtInivalor,",","")						
		LSgtInivalor	=   CHRTRAN(LSgtInivalor,".","")						

		LSgtFimvalor	=	STR(LSgtFimvalor,17,2)
		LSgtFimvalor	=   CHRTRAN(LSgtFimvalor," ","0")						
		LSgtFimvalor	=   CHRTRAN(LSgtFimvalor,",","")						
		LSgtFimvalor	=   CHRTRAN(LSgtFimvalor,".","")						

		LSbranco_B	=  SPACE(45)
		*******************************************************
		LStmp1		=  LStipo+"M"+LSdtemi+LSnumero+LSserie+;
					+LSmodelo+LSnroini+LSnrofim+LSctrredZ+;
					LSgtIniValor+LSgtFimValor+LSbranco_B

		=FPUT(LNctrl,LStmp1,126)
		LN_Ctr	=	LN_Ctr + 1
		*******************************************************			




		SELECT LIVROSAI
		LNctrRegAnaliticos = 0
		DO WHILE !EOF() AND LDTqbr = LIVROSAI.data

			IF (LIVROSAI.CANCELA) > 0
				LSaliq_icms	=	"CANC"
				LSvalor		=	STR(LIVROSAI.CANCELA,13,2)
				LSvalor		=   CHRTRAN(LSvalor," ","0")						
				LSvalor		=   CHRTRAN(LSvalor,",","")						
				LSvalor		=   CHRTRAN(LSvalor,".","")						
				LSbranco_B	=  SPACE(96)
				*******************************************************
				LStmp1		=  LStipo+"A"+LSdtemi+LSnumero+LSaliq_icms+;
					+LSvalor+LSbranco_B
				=FPUT(LNctrl,LStmp1,126)
				LN_Ctr	=	LN_Ctr + 1
				*******************************************************			
			ENDIF
			*******************************************************			

			IF LIVROSAI.base_icms > 0

				LSaliq_icms	=	str(LIVROSAI.aliq_icms,5,2)						
				LSaliq_icms	=   CHRTRAN(LSaliq_icms," ","0")						
				LSaliq_icms	=   CHRTRAN(LSaliq_icms,",","")						
				LSaliq_icms	=   CHRTRAN(LSaliq_icms,".","")						

				LSvalor		=	STR(LIVROSAI.base_icms,13,2)
				LSvalor		=   CHRTRAN(LSvalor," ","0")						
				LSvalor		=   CHRTRAN(LSvalor,",","")						
				LSvalor		=   CHRTRAN(LSvalor,".","")						
		
				LSbranco_B	=  SPACE(96)
				LNctrRegAnaliticos = LNctrRegAnaliticos + 1
				*******************************************************
				LStmp1		=  LStipo+"A"+LSdtemi+LSnumero+LSaliq_icms+;
						+LSvalor+LSbranco_B
				=FPUT(LNctrl,LStmp1,126)
				LN_Ctr	=	LN_Ctr + 1
				*******************************************************			
			ENDIF
			






			IF (LIVROSAI.BASE_ISS) > 0
				LSaliq_icms	=	"ISS "
				LSvalor		=	LIVROSAI.BASE_ISS

				LSvalor		=	STR(LSvalor,13,2)
				LSvalor		=   CHRTRAN(LSvalor," ","0")						
				LSvalor		=   CHRTRAN(LSvalor,",","")						
				LSvalor		=   CHRTRAN(LSvalor,".","")						
				LSbranco_B	=  SPACE(96)
				*******************************************************
				LStmp1		=  LStipo+"A"+LSdtemi+LSnumero+LSaliq_icms+;
						+LSvalor+LSbranco_B
				=FPUT(LNctrl,LStmp1,126)
				LN_Ctr	=	LN_Ctr + 1
				*******************************************************			
			ENDIF
	
			*----------------------------------------------------------*
			* ATENЂЗO : NO RESUMO DO LIVRO O VALOR DE MERCADORIAS
			*          VENDIDAS COM RECOLHIMENTO EM REGIME DE
			*		   SUBSTITUIЂЗO SAO LANCADOS  EM "ISENTO"
			*          JA O SINTEGRA LANCA NA OPCAO "F" DE MERCADORIA
			*           EM REGIME SUBSTITUIЂЗO
			*----------------------------------------------------------*
			*   NESTE CASO E ATE SEGUNDA ORDEM ESTAMOS PASSANDO
			* A COLUNA ISENTAS PARA "F"
			*----------------------------------------------------------*

			IF (LIVROSAI.base_isent + LIVROSAI.BASE_SUBS) > 0
				LSaliq_icms	=	"F   "
				LSvalor 	=	LIVROSAI.base_isent + LIVROSAI.BASE_SUBS

				LSvalor		=	STR(LSvalor,13,2)
				LSvalor		=   CHRTRAN(LSvalor," ","0")						
				LSvalor		=   CHRTRAN(LSvalor,",","")						
				LSvalor		=   CHRTRAN(LSvalor,".","")						
				LSbranco_B	=  SPACE(96)
				*******************************************************
				LStmp1		=  LStipo+"A"+LSdtemi+LSnumero+LSaliq_icms+;
						+LSvalor+LSbranco_B
				=FPUT(LNctrl,LStmp1,126)
				LN_Ctr	=	LN_Ctr + 1
				*******************************************************			
			ENDIF
	
	*		IF LIVROSAI.base_isent > 0
	*			LSaliq_icms	=	"I   "
	*			LSvalor		=	STR(LIVROSAI.base_isent,13,2)
	*			LSvalor		=   CHRTRAN(LSvalor," ","0")						
	*			LSvalor		=   CHRTRAN(LSvalor,",","")						
	*			LSvalor		=   CHRTRAN(LSvalor,".","")						
	*			LSbranco_B	=  SPACE(96)
	*			*******************************************************
	*			LStmp1		=  LStipo+"A"+LSdtemi+LSnumero+LSaliq_icms+;
	*					+LSvalor+LSbranco_B
	*			=FPUT(LNctrl,LStmp1,126)
	*			LN_Ctr	=	LN_Ctr + 1
	*			*******************************************************			
	*		ENDIF
*
*			IF (LIVROSAI.BASE_SUBS) > 0
*				LSaliq_icms	=	"F   "
*				LSvalor		=	STR(LIVROSAI.BASE_SUBS,13,2)
*				LSvalor		=   CHRTRAN(LSvalor," ","0")						
*				LSvalor		=   CHRTRAN(LSvalor,",","")						
*				LSvalor		=   CHRTRAN(LSvalor,".","")						
*				LSbranco_B	=  SPACE(96)
*				*******************************************************
*				LStmp1		=  LStipo+"A"+LSdtemi+LSnumero+LSaliq_icms+;
*						+LSvalor+LSbranco_B
*				=FPUT(LNctrl,LStmp1,126)
*				LN_Ctr	=	LN_Ctr + 1
*			*******************************************************			
*			ENDIF
			*******************************************************			
	
			SKIP
		ENDDO

		SELECT LIVROSAI
		IF EOF()
			EXIT
		ENDIF
	ENDDO
RETURN


function antANTES_UL31R_60
	PARAMETERS LNemp, LNctrl, LDper_ini, LDper_fim, LN_Ctr

	*-------------------------------------------------------------------*

	SELECT 	data,nota,aliq_icms, cfo,uf ,  	;
			SUM(totservico)		AS totservico,	;
			SUM(base_iss)       AS base_iss,	;
			SUM(base_icms)		AS base_icms,	;
			SUM(base_sbbrt)     AS base_sbbrt,	;
			SUM(base_subs)      AS base_subs,	;
			SUM(icms_subs)      AS icms_subs,	;
			SUM(base_isent)     AS base_isent,	;
			SUM(base_outr)      AS base_outr,	;
			SUM(totproduto)     AS totproduto,	;
			SUM(vlrfrete)       AS vlrfrete,	;
			SUM(vlrseguro)      AS vlrseguro,	;
			SUM(vlrdespes)       AS vlrdespes,	;
			SUM(vlr_ipi)        AS vlr_ipi,		;
			SUM(total_nota)     AS total_nota	;
	FROM  &dbf_NFSTMP         WHERE ;
   			    operacao =  "S" AND CUPOM > 0;
	GROUP BY data,aliq_icms, cfo,uf	;
    ORDER BY data,aliq_icms, cfo,uf ;
  	INTO CURSOR LIVROSAI

	go top


	DO WHILE !EOF()
		LSmsg = "Resum.Cupons (60) "+;
				 	DTOC(LIVROSAI.DATA)+;
					STR(LIVROSAI.NOTA,7)
		WAIT WINDOW LSmsg NOWAIT

		*---------------------------------------------------------
		*--> PROCESSAR SOMENTE O REGISTRO RESUMO DOS CUPONS
		* REGISTROS SAO GERADOS QUANDO PROCESSO O ARQUIVO LIVROSAI
		* RESUMINDO OS CUPONS POR DATA E ALIQUOTA

		LDtqbr		= 	LIVROSAI.data
		LSvalor		= 	0
		LSvlr_icms	= 	0
		LSnroini	=   0
		LSnrofim	=   0
		*--------------------------------------------------------------*
		=W_DEFPROC("NOTA.SPR")
		=NFEcfInforme((LNemp),(LDtqbr),(LDtqbr),LSnroIni,LSnroFim,;
					LSvalor, LSvlr_icms)
		*--------------------------------------------------------------*
		*	Identifica‡Жo do Equipamento
		*--------------------------------------------------------------*
		LStipo  	= "60"
		LSMestre	= "M"
		LSdtemi		=	STR(YEAR(LDtqbr),4)+;
						STR(MONTH(LDtqbr),2)+;
						STR(DAY(LDtqbr),2)
		LSdtemi		=   CHRTRAN(LSdtemi," ","0")						

		LSnumero 	= 	"001"
		LSserie     =   empresa.ecf_serie
		*LSserie     =   "123456789012345"
		LSmodelo	=	"2D"
		
		LSnroini	=   CHRTRAN(STR(LSnroini,6)," ","0")
		LSnrofim	=   CHRTRAN(STR(LSnrofim,6)," ","0")

		SELE mapaecf
		SET NEAR ON
		SET ORDER TO TAG mapa
		SEEK STR(LNemp,3)+DTOS(LDtqbr)+STR(1,4)+STR(17,5,2)	
		SET NEAR OFF
		IF mapaecf.empresa = LNemp AND ;
		   mapaecf.data    = LDtqbr AND ;
		   mapaecf.ecf		= 1 AND ;
		   mapaecf.aliquota = 17
				LSnroredZ		=	mapaecf.ctrreducao
				LSgtInivalor	=	mapaecf.gt_inicial
				LSgtFimvalor	=	mapaecf.gt_final
		ELSE
			SKIP -1
			DO WHILE !BOF() AND mapaecf.empresa = LNemp
				IF  mapaecf.aliquota = 17
					EXIT
				ENDIF
				SKIP -1
			ENDDO
			IF !BOF()
				LSnroredZ		=	mapaecf.ctrreducao
				LSgtInivalor	=	mapaecf.gt_inicial
				LSgtFimvalor	=	mapaecf.gt_final
			ELSE			
				LSnroredZ		=	0
				LSgtInivalor	=	0
				LSgtFimvalor	=	0
			ENDIF
		ENDIF

		LSctrredZ		=   CHRTRAN(STR(LSnroredZ,6)," ","0")

		LSgtInivalor	=	STR(LSgtInivalor,17,2)
		LSgtInivalor	=   CHRTRAN(LSgtInivalor," ","0")						
		LSgtInivalor	=   CHRTRAN(LSgtInivalor,",","")						
		LSgtInivalor	=   CHRTRAN(LSgtInivalor,".","")						

		LSgtFimvalor	=	STR(LSgtFimvalor,17,2)
		LSgtFimvalor	=   CHRTRAN(LSgtFimvalor," ","0")						
		LSgtFimvalor	=   CHRTRAN(LSgtFimvalor,",","")						
		LSgtFimvalor	=   CHRTRAN(LSgtFimvalor,".","")						

		LSbranco_B	=  SPACE(45)
		*******************************************************
		LStmp1		=  LStipo+"M"+LSdtemi+LSnumero+LSserie+;
					+LSmodelo+LSnroini+LSnrofim+LSctrredZ+;
					LSgtIniValor+LSgtFimValor+LSbranco_B

		=FPUT(LNctrl,LStmp1,126)
		LN_Ctr	=	LN_Ctr + 1
		*******************************************************			
		SELECT LIVROSAI
		LNbase_iss	=	0
		LNbase_sbbrt= 	0
		LNbase_isent=	0
		LNctrRegAnaliticos = 0
		DO WHILE !EOF() AND LDTqbr = LIVROSAI.data


			LNbase_iss	= LNbase_iss	+ LIVROSAI.base_iss
			LNbase_sbbrt= LNbase_sbbrt  + LIVROSAI.base_sbbrt
			LNbase_isent= LNbase_isent  + LIVROSAI.base_isent

			IF LIVROSAI.base_icms = 0
				SKIP
				LOOP
			ENDIF

			LSaliq_icms	=	str(LIVROSAI.aliq_icms,5,2)						
			LSaliq_icms	=   CHRTRAN(LSaliq_icms," ","0")						
			LSaliq_icms	=   CHRTRAN(LSaliq_icms,",","")						
			LSaliq_icms	=   CHRTRAN(LSaliq_icms,".","")						

			LSvalor		=	STR(LIVROSAI.base_icms,13,2)
			LSvalor		=   CHRTRAN(LSvalor," ","0")						
			LSvalor		=   CHRTRAN(LSvalor,",","")						
			LSvalor		=   CHRTRAN(LSvalor,".","")						
		
			LSbranco_B	=  SPACE(96)
			LNctrRegAnaliticos = LNctrRegAnaliticos + 1
			*******************************************************
			LStmp1		=  LStipo+"A"+LSdtemi+LSnumero+LSaliq_icms+;
					+LSvalor+LSbranco_B
			=FPUT(LNctrl,LStmp1,126)
			LN_Ctr	=	LN_Ctr + 1
			*******************************************************			
			SKIP
		ENDDO
		LSaliq_icms	=	"ISS "
		IF FOUND("MAPAECF")
			LSvalor		=	mapaecf.vlrservico
		ELSE
			LSvalor		=	LNbase_iss
		ENDIF

		IF LSvalor > 0
			LSvalor		=	STR(LSvalor,13,2)
			LSvalor		=   CHRTRAN(LSvalor," ","0")						
			LSvalor		=   CHRTRAN(LSvalor,",","")						
			LSvalor		=   CHRTRAN(LSvalor,".","")						
			LSbranco_B	=  SPACE(96)
			*******************************************************
			LStmp1		=  LStipo+"A"+LSdtemi+LSnumero+LSaliq_icms+;
					+LSvalor+LSbranco_B
			=FPUT(LNctrl,LStmp1,126)
			LN_Ctr	=	LN_Ctr + 1
		ENDIF
		*******************************************************			
		LSaliq_icms	=	"F   "
		IF FOUND("MAPAECF")
			LSvalor		=	mapaecf.vlrsubst
		ELSE
			LSvalor		=	LNbase_sbbrt
		ENDIF

		IF LSvalor > 0
			LSvalor		=	STR(LSvalor,13,2)
			LSvalor		=   CHRTRAN(LSvalor," ","0")						
			LSvalor		=   CHRTRAN(LSvalor,",","")						
			LSvalor		=   CHRTRAN(LSvalor,".","")						
			LSbranco_B	=  SPACE(96)
			*******************************************************
			LStmp1		=  LStipo+"A"+LSdtemi+LSnumero+LSaliq_icms+;
					+LSvalor+LSbranco_B
			=FPUT(LNctrl,LStmp1,126)
			LN_Ctr	=	LN_Ctr + 1
			*******************************************************			
		ENDIF
		LSaliq_icms	=	"I   "
		IF FOUND("MAPAECF")
			LSvalor		=	mapaecf.vlrisent
		ELSE
			LSvalor		=	LNbase_isent
		ENDIF

		IF LSvalor > 0
			LSvalor		=	STR(LSvalor,13,2)
			LSvalor		=   CHRTRAN(LSvalor," ","0")						
			LSvalor		=   CHRTRAN(LSvalor,",","")						
			LSvalor		=   CHRTRAN(LSvalor,".","")						
			LSbranco_B	=  SPACE(96)
			*******************************************************
			LStmp1		=  LStipo+"A"+LSdtemi+LSnumero+LSaliq_icms+;
					+LSvalor+LSbranco_B
			=FPUT(LNctrl,LStmp1,126)
			LN_Ctr	=	LN_Ctr + 1
			*******************************************************			
		ENDIF
		LSaliq_icms	=	"CANC"
		IF FOUND("MAPAECF")
			LSvalor		=	mapaecf.cancela
		ELSE
			LSvalor		=	0
		ENDIF
		IF LSvalor > 0
			LSvalor		=	STR(LSvalor,13,2)
			LSvalor		=   CHRTRAN(LSvalor," ","0")						
			LSvalor		=   CHRTRAN(LSvalor,",","")						
			LSvalor		=   CHRTRAN(LSvalor,".","")						
			LSbranco_B	=  SPACE(96)
			*******************************************************
			LStmp1		=  LStipo+"A"+LSdtemi+LSnumero+LSaliq_icms+;
					+LSvalor+LSbranco_B
			=FPUT(LNctrl,LStmp1,126)
			LN_Ctr	=	LN_Ctr + 1
			*******************************************************			
		ENDIF
		SELECT LIVROSAI
		IF EOF()
			EXIT
		ENDIF
	ENDDO
RETURN

*---------------------------------------------------------------------*
*		Conhecimento de Tranporte
*---------------------------------------------------------------------*

function antUL31R_70
	PARAMETERS LNemp, LNctrl, LDper_ini, LDper_fim, LN_Ctr

	*-------------------------------------------------------------------*
	*	NOTAS DE ENTRADA
	*-------------------------------------------------------------------*
	SELECT 	empresa,nota,serie, codforn,inscricao, data, uf, cfo,tipo,;
	        total_nota, vlrfrete,vlrseguro,vlrdespes,;
            base_subs,icms_subs, base_icms, 	;
	  		vlr_icms, base_isent,base_outr,aliq_icms,status;
		FROM &dbf_NFETMP ;
		WHERE ch_produ = "9" 			;	
	    ORDER BY DATA, NOTA ;
	  	INTO CURSOR LIVROENT

	SELECT LIVROENT
	GO TOP

	LStipo  		= "70"

	DO WHILE !EOF()
		LSmsg = "Conh.Frete (70) "+;
				 	DTOC(LIVROENT.DATA)+;
					STR(LIVROENT.NOTA,6)
		WAIT WINDOW LSmsg NOWAIT
		&& SE NAO FOR CONHECIMENTO DE TRANSPORTE

		*-----------------------------------------------------------*
		SELE fornece
		SET ORDER TO TAG codigo
		SEEK LIVROENT.codforn

		IF FOUND()
			LSinsc	=  ALLTRIM(fornece.inscricao)
			LScgc	=  CHRTRAN(STR(fornece.cgc,14)," ","0")
		ELSE
			LSinsc	=  ALLTRIM(LIVROENT.inscricao)
			LScgc	=  CHRTRAN(STR(LIVROENT.favorecido,14)," ","0")
		ENDIF

		IF "ISENTO" $ UPPER(LSinsc)
			LSinsc	=  "ISENTO"
			LScgc	=  CHRTRAN(STR(0,14)," ","0")
		ELSE
			LSinsc	=  CHRTRAN(LSinsc,".","")
			LSinsc	=  CHRTRAN(LSinsc,"/","")
			LSinsc	=  CHRTRAN(LSinsc,"-","")
			LSinsc	=  CHRTRAN(LSinsc,"(","")
			LSinsc	=  CHRTRAN(LSinsc,")","")
		ENDIF			
		LSinsc			= LEFT(LSinsc+space(14),14)
		*-----------------------------------------------------------*
		SELECT LIVROENT

		LSdtemi		=	STR(YEAR(LIVROENT.data),4)+;
						STR(MONTH(LIVROENT.data),2)+;
						STR(DAY(LIVROENT.data),2)
		LSdtemi		=   CHRTRAN(LSdtemi," ","0")						
		LSuf		=	LIVROENT.uf
		LSmodelo 	=   "08"


		IF  LIVROENT.serie $ "1/2"
			LSserie		=   "U"
			LSsubserie  = 	LIVROENT.serie+" "
		ELSE
			LSserie		=   LIVROENT.serie
			LSsubserie  = 	"U "
		ENDIF

		LSnumero 	= 	CHRTRAN(STR(LIVROENT.NOTA,6)," ","0")

		SELE TIPOOPER
		SET ORDER TO TAG TIPO
		SEEK "E"+LIVROENT.tipo
		IF FOUND()
			LScfo	= tipooper.cfo
		ELSE	
			LScfo		=   CHRTRAN(LIVROENT.cfo,".","")						
		ENDIF
		LScfo		=   CHRTRAN(LScfo,".","")						

        IF LIVROENT.DATA <= {31.12.2002}
           LScfo = LEFT(LScfo,3)
        ENDIF


		SELE LIVROENT

		LSvalor		=	str(LIVROENT.total_nota,15,2)						
		LSvalor		=   CHRTRAN(LSvalor," ","0")						
		LSvalor		=   CHRTRAN(LSvalor,",","")						
		LSvalor		=   CHRTRAN(LSvalor,".","")						

		LSbase_icms	=   IIF(LIVROENT.base_subs > 0, 0, LIVROENT.base_icms)

		LSbase_icms	=	str(LSbase_icms,15,2)						
		LSbase_icms	=   CHRTRAN(LSbase_icms," ","0")						
		LSbase_icms	=   CHRTRAN(LSbase_icms,",","")						
		LSbase_icms	=   CHRTRAN(LSbase_icms,".","")						

		LSvlr_icms	=	IIF(LIVROENT.base_subs > 0, 0, LIVROENT.vlr_icms)

		LSvlr_icms	=	str(LSvlr_icms,15,2)						
		LSvlr_icms	=   CHRTRAN(LSvlr_icms," ","0")						
		LSvlr_icms	=   CHRTRAN(LSvlr_icms,",","")						
		LSvlr_icms	=   CHRTRAN(LSvlr_icms,".","")						

		LSbase_isent=	str(LIVROENT.base_isent,15,2)						
		LSbase_isent=   CHRTRAN(LSbase_isent," ","0")						
		LSbase_isent=   CHRTRAN(LSbase_isent,",","")						
		LSbase_isent=   CHRTRAN(LSbase_isent,".","")						
		
		LSbase_outr	=	str(LIVROENT.base_outr,15,2)						
		LSbase_outr	=   CHRTRAN(LSbase_outr," ","0")						
		LSbase_outr	=   CHRTRAN(LSbase_outr,",","")						
		LSbase_outr	=   CHRTRAN(LSbase_outr,".","")						

		LSCifFob	=	"2"

		LSstatus = "N"
		************************************************************
		LStmp1		=	LStipo+LScgc+LSinsc+LSdtemi+LSuf+LSmodelo+;
						LSserie+LSsubserie+LSnumero+LScfo+LSvalor+;
						LSbase_icms+LSvlr_icms+LSbase_isent+;
						LSbase_outr+LSCifFob+LSstatus
		************************************************************
		=FPUT(LNctrl,LStmp1,126)
		LN_Ctr	=	LN_Ctr + 1
		SKIP
	ENDDO
RETURN

*****************************************************************
*  CADASTRO SE PRODUTOS - 75 -
*****************************************************************

function antUL31R_75
	PARAMETERS LNemp, LNctrl, LDper_ini, LDper_fim, LN_Ctr

	*-------------------------------------------------------------------*
	*	CADASTRO DOS PRODUTOS COMERCIALIZADOS NO PERIODO
	*-------------------------------------------------------------------*
	SELECT EMPRESA
	SET ORDER TO TAG empresa
	SEEK LNemp
	IF !FOUND()
		RETURN(.F.)
	ENDIF	

	SELE ITENSNEGOC
	SET ORDER TO TAG CODIGO
	GO TOP
	
	DO WHILE !EOF()
		WAIT WINDOW ITENSNEGOC.codigo+ITENSNEGOC.descricao NOWAIT
		
		LStipo	= "75"
		LSdini		=	STR(YEAR(LDper_ini),4)+;
						STR(MONTH(LDper_ini),2)+;
						STR(DAY(LDper_ini),2)
		LSdini		=   CHRTRAN(LSdini," ","0")						

		LSdfim		=	STR(YEAR(LDper_fim),4)+;
						STR(MONTH(LDper_fim),2)+;
						STR(DAY(LDper_fim),2)
		LSdfim		=   CHRTRAN(LSdfim," ","0")						
	
		LScodigo= LEFT(ITENSNEGOC.codigo+SPACE(14),14)

		LSncm   = SPACE(8)

		LSnome	  = LEFT(ITENSNEGOC.descricao+SPACE(53),53)
		LSunidade = LEFT(ITENSNEGOC.unidade+SPACE(6),6)
		LNtab_cst = empresa.tab_cst
		*---------------------------------------------------------*
		*  Buscar CST para operacao mais comum (VLA)
		*---------------------------------------------------------*
		=W_DEFPROC("ORCAMENT.SPR")
		m.cst = ORdefcst((LNtab_cst),("VLA"),(ITENSNEGOC.tp_mercad),;
					ITENSNEGOC.codigo)
		
		*------------------------------------------------------------*
		LScst     	=  	"0"+m.cst+"0"
		LScst		=   CHRTRAN(LScst," ","0")						

		LSaliq_ipi	=	str(ITENSNEGOC.aliq_ipi,5,2)						
		LSaliq_ipi	=   CHRTRAN(LSaliq_ipi," ","0")						
		LSaliq_ipi	=   CHRTRAN(LSaliq_ipi,",","")						
		LSaliq_ipi	=   CHRTRAN(LSaliq_ipi,".","")						

		LSaliq_icms	=	str(17,5,2)						
		LSaliq_icms	=   CHRTRAN(LSaliq_icms," ","0")						
		LSaliq_icms	=   CHRTRAN(LSaliq_icms,",","")						
		LSaliq_icms	=   CHRTRAN(LSaliq_icms,".","")						

		LSaliq_rdz	=	str(0,5,2)						
		LSaliq_rdz 	=   CHRTRAN(LSaliq_rdz ," ","0")						
		LSaliq_rdz 	=   CHRTRAN(LSaliq_rdz ,",","")						
		LSaliq_rdz 	=   CHRTRAN(LSaliq_rdz ,".","")						

		LSaliq_iva	=	str(ITENSNEGOC.iva,13,2)						
		LSaliq_iva	=   CHRTRAN(LSaliq_iva," ","0")						
		LSaliq_iva	=   CHRTRAN(LSaliq_iva,",","")						
		LSaliq_iva	=   CHRTRAN(LSaliq_iva,".","")						


		LSbranco  = SPACE(25)
		*******************************************************
		LStmp1	= LStipo+LSdini+LSdfim+LScodigo+LSncm+LSnome+;
					LSunidade+LScst+LSaliq_ipi+LSaliq_icms+;
					LSaliq_rdz+LSaliq_iva
		=FPUT(LNctrl,LStmp1,126)
		LN_Ctr	=	LN_Ctr + 1
		*******************************************************			
		SELE ITENSNEGOC
		SKIP
	ENDDO
			
RETURN

*****************************************************************
*  TOTALIZADORES  - 90 -
*****************************************************************

function antUL31R_90
	PARAMETERS LNemp,LNctrl,LNctr_10,LNctr_11,LNctr_50,LNctr_53,LNctr_54,;
				LNctr_60,LNctr_70,LNctr_75

	*-------------------------------------------------------------------*
	*	CADASTRO DOS PRODUTOS COMERCIALIZADOS NO PERIODO
	*-------------------------------------------------------------------*
	SELECT EMPRESA
	SET ORDER TO TAG empresa
	SEEK LNemp
	IF !FOUND()
		RETURN(.F.)
	ENDIF	

	LStipo	= "90"
	LScgc	= 	CHRTRAN(STR(empresa.cgc,14)," ","0")
	LSinsc	= 	CHRTRAN(empresa.inscricao," ","")
	LSinsc	= 	CHRTRAN(LSinsc,".","")
	LSinsc	= 	CHRTRAN(LSinsc,"/","")
	LSinsc	= 	CHRTRAN(LSinsc,"-","")
	LSinsc	= 	LEFT(LSinsc+space(14),14)


	LS_tp50	=	"50"
	LS_ct50	=	CHRTRAN(STR(LNctr_50,8)," ","0")

	LS_tp53	=	"53"
	LS_ct53	=	CHRTRAN(STR(LNctr_53,8)," ","0")

	LS_tp54	=	"54"
	LS_ct54	=	CHRTRAN(STR(LNctr_54,8)," ","0")

	LS_tp60	=	"60"
	LS_ct60	=	CHRTRAN(STR(LNctr_60,8)," ","0")

	LS_tp70	=	"70"
	LS_ct70	=	CHRTRAN(STR(LNctr_70,8)," ","0")

	LS_tp75	=	"75"
	LS_ct75	=	CHRTRAN(STR(LNctr_75,8)," ","0")

	LNctr_90=	1
	LS_tp90	=	"90"
	LS_ct90	=	CHRTRAN(STR(LNctr_90,8)," ","0")


	LSspaco =   SPACE(25)

	LS_ctgr	=	LNctr_10+LNctr_11+LNctr_50+LNctr_53+LNctr_54+;
				LNctr_60+LNctr_70+LNctr_75+LNctr_90

	LS_tpGR	=	"99"
	LS_ctgr	=	CHRTRAN(STR(LS_ctgr,8)," ","0")

	*******************************************************
	LStmp1	= LStipo+LScgc+LSinsc+;
			  LS_tp50+LS_ct50+LS_tp53+LS_ct53+LS_tp54+LS_ct54+;
			  LS_tp60+LS_ct60+LS_tp70+LS_ct70+LS_tp75+LS_ct75+;
			  LS_tpGr+LS_ctgr+ LSspaco+"1"

	=FPUT(LNctrl,LStmp1,126)
RETURN


*       ЦДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДД·
*       є                                                         є
*       є _0Y6127V59           m.LIV_btn WHEN                     є
*       є                                                         є
*       є Function Origin:                                        є
*       є                                                         є
*       є From Platform:       MS-DOS                             є
*       є From Screen:         SCT0310,     Record Number:   39   є
*       є Variable:            m.LIV_btn                          є
*       є Called By:           WHEN Clause                        є
*       є Object Type:         Push Button                        є
*       є Snippet Number:      15                                 є
*       є                                                         є
*       УДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДЅ
*
FUNCTION _0y6127v59     &&  m.LIV_btn WHEN
#REGION 1
ON KEY LABEL ENTER
RETURN


*       ЦДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДД·
*       є                                                         є
*       є _0Y6127V5E           m.LIV_btn VALID                    є
*       є                                                         є
*       є Function Origin:                                        є
*       є                                                         є
*       є From Platform:       MS-DOS                             є
*       є From Screen:         SCT0310,     Record Number:   39   є
*       є Variable:            m.LIV_btn                          є
*       є Called By:           VALID Clause                       є
*       є Object Type:         Push Button                        є
*       є Snippet Number:      16                                 є
*       є                                                         є
*       УДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДЅ
*
FUNCTION _0y6127v5e     &&  m.LIV_btn VALID
#REGION 1
PRIVATE dbf_NFSTMP,dbf_NFS
PRIVATE dbf_NFETMP,dbf_NFE

PRIVATE	dbf_NFE

	*---------------------------------------------------------------*

	DO ULLivro3199 WITH ;
	    (m.empresa),(m.dt_inicio),(m.dt_fim)

	SHOW WINDOW SCT0310 TOP

RETURN



*-------------------------------------------------------------------*

PROCEDURE ULLivro3199
PARAMETERS LNemp, LDper_ini, LDper_fim

	PRIVATE LSnome

	LSnome	 =	RIGHT(str(year(LDper_ini)),2)+;
				STR(MONTH(LDper_ini),2)+STR(LNemp,2)+"AG.DAT"
	LSnome	= 	"\SCGC\AGENFA\"+STRTRAN(LSnome," ","0")



	SELECT tipo_50
	zap
	pack
	append from &LSnome ;
			FOR 	TIPO = 50 ;
				AND CFOP > 400 ;
				AND SITUACAO  = "N" TYPE SDF
	

	SELECT tipo_60A
	zap
	pack

	append from &LSnome ;
				FOR 	TIPO = 60 ;
					AND ANALITICO = "A"  TYPE SDF


	SELECT  CFOP 			 AS CFO,  ;
			0				 AS TOTSERVICO, ;
			0			   	 AS BASE_ISS,;
			0			 	 AS VLR_ISS, ;
			SUM(BASE_ICMS/100) 	 AS BASE_ICMS,;
			SUM(VALOR_ICMS/100)  AS VLR_ICMS, ;
			0				 AS BASE_SBBRT,;
			0				 AS BASE_SUBS, ;
			0                AS ICMS_SUBS,;
			SUM(ISENTAS/100) AS BASE_ISENT,;
			SUM(OUTRAS/100)	 AS BASE_OUTR, ;
			0				 AS BASE_ISIPI,;
			0				 AS BASE_IPI,  ;
			0				 AS VLR_IPI,   ;
			0				 AS TOTPRODUTO, ;
			0				 AS VLRFRETE,  ;
			0				 AS VLRSEGURO,;
			0				 AS VLRDESPES, ;
			SUM(VALOR_TOTAL/100) AS TOTAL_NOTA ;	
		FROM tipo_50 ;
	    ORDER BY CFOP ;
	    GROUP BY CFOP ;
    	INTO CURSOR TMP1LIVR

    	
	SELECT  500  			 AS CFO,  ;
			0				 AS TOTSERVICO, ;
			0			   	 AS BASE_ISS,;
			0			 	 AS VLR_ISS, ;
			0			 	 AS BASE_ICMS,;
			0				 AS VLR_ICMS, ;
			0				 AS BASE_SBBRT,;
			0				 AS BASE_SUBS, ;
			0                AS ICMS_SUBS,;
			0				 AS BASE_ISENT,;
			0				 AS BASE_OUTR, ;
			0				 AS BASE_ISIPI,;
			0				 AS BASE_IPI,  ;
			0				 AS VLR_IPI,   ;
			0				 AS TOTPRODUTO, ;
			0				 AS VLRFRETE,  ;
			0				 AS VLRSEGURO,;
			0				 AS VLRDESPES, ;
			SUM(VALOR/100)   AS TOTAL_NOTA ;	
		FROM tipo_60A ;
		WHERE ALIQUOTA $ "I   /F   /ISS " ;
    	INTO CURSOR TMP2LIVR

	SELECT * FROM   TMP2LIVR ;
	UNION ;
	SELECT  500  			 AS CFO,  ;
			0				 AS TOTSERVICO, ;
			0			   	 AS BASE_ISS,;
			0			 	 AS VLR_ISS, ;
			0			 	 AS BASE_ICMS,;
			0				 AS VLR_ICMS, ;
			0				 AS BASE_SBBRT,;
			0				 AS BASE_SUBS, ;
			0                AS ICMS_SUBS,;
			SUM(VALOR/100) 	 AS BASE_ISENT,;
			0				 AS BASE_OUTR, ;
			0				 AS BASE_ISIPI,;
			0				 AS BASE_IPI,  ;
			0				 AS VLR_IPI,   ;
			0				 AS TOTPRODUTO, ;
			0				 AS VLRFRETE,  ;
			0				 AS VLRSEGURO,;
			0				 AS VLRDESPES, ;
			0				 AS TOTAL_NOTA ;	
		FROM tipo_60A ;
		WHERE ALIQUOTA $ "I   " ;
    	INTO CURSOR TMP3LIVR

	SELECT * FROM   TMP3LIVR ;
	UNION ;
	SELECT  500  			 AS CFO,  ;
			SUM(VALOR/100)	 AS TOTSERVICO, ;
			SUM(VALOR/100) 	 AS BASE_ISS,;
			0			 	 AS VLR_ISS, ;
			0			 	 AS BASE_ICMS,;
			0				 AS VLR_ICMS, ;
			0				 AS BASE_SBBRT,;
			0				 AS BASE_SUBS, ;
			0                AS ICMS_SUBS,;
			0			 	 AS BASE_ISENT,;
			0				 AS BASE_OUTR, ;
			0				 AS BASE_ISIPI,;
			0				 AS BASE_IPI,  ;
			0				 AS VLR_IPI,   ;
			0				 AS TOTPRODUTO, ;
			0				 AS VLRFRETE,  ;
			0				 AS VLRSEGURO,;
			0				 AS VLRDESPES, ;
			0				 AS TOTAL_NOTA ;	
		FROM tipo_60A ;
		WHERE ALIQUOTA $ "ISS " ;
    	INTO CURSOR TMP4LIVR


	SELECT * FROM   TMP4LIVR ;
	UNION ;
	SELECT  500  			 AS CFO,  ;
			0				 AS TOTSERVICO, ;
			0				 AS BASE_ISS,;
			0			 	 AS VLR_ISS, ;
			0			 	 AS BASE_ICMS,;
			0				 AS VLR_ICMS, ;
			0				 AS BASE_SBBRT,;
			0				 AS BASE_SUBS, ;
			0                AS ICMS_SUBS,;
			0			 	 AS BASE_ISENT,;
			SUM(VALOR/100)	 AS BASE_OUTR, ;
			0				 AS BASE_ISIPI,;
			0				 AS BASE_IPI,  ;
			0				 AS VLR_IPI,   ;
			0				 AS TOTPRODUTO, ;
			0				 AS VLRFRETE,  ;
			0				 AS VLRSEGURO,;
			0				 AS VLRDESPES, ;
			0				 AS TOTAL_NOTA ;	
		FROM tipo_60A ;
		WHERE ALIQUOTA $ "F   " ;
    	INTO CURSOR TMP5LIVR



	SELECT * FROM   TMP1LIVR ;
	UNION ;
	SELECT  CFO,  ;
			SUM(TOTSERVICO)	 AS TOTSERVICO, ;
			SUM(BASE_ISS)	 AS BASE_ISS,;
			SUM(VLR_ISS) 	 AS VLR_ISS, ;
			SUM(BASE_ISS) 	 AS BASE_ICMS,;
			SUM(VLR_ICMS)	 AS VLR_ICMS, ;
			SUM(BASE_SBBRT)	 AS BASE_SBBRT,;
			SUM(BASE_SUBS)	 AS BASE_SUBS, ;
			SUM(ICMS_SUBS)   AS ICMS_SUBS,;
			SUM(BASE_ISENT)	 AS BASE_ISENT,;
			SUM(BASE_OUTR)	 AS BASE_OUTR, ;
			SUM(BASE_ISIPI)	 AS BASE_ISIPI,;
			SUM(BASE_IPI)	 AS BASE_IPI,  ;
			SUM(VLR_IPI)	 AS VLR_IPI,   ;
			SUM(TOTPRODUTO)	 AS TOTPRODUTO, ;
			SUM(VLRFRETE)	 AS VLRFRETE,  ;
			SUM(VLRSEGURO)	 AS VLRSEGURO,;
			SUM(VLRDESPES)	 AS VLRDESPES, ;
			SUM(TOTAL_NOTA)	 AS TOTAL_NOTA ;		
		FROM TMP5LIVR ;
	    	GROUP BY CFO;
    	INTO CURSOR TMP6LIVR


		SELECT * FROM  TMP6LIVR ;
		    ORDER BY CFO;
    	INTO CURSOR LIVROSAI


	SELECT LIVROSAI
	GO TOP
	
	IF EOF()
 		SELE nota
		UNLOCK
 		RETURN
 	ENDIF		
	GO TOP

	LFLdireciona  = .F. && Ativa PRTSETUP para direcionar impressao DEF(.T.)
	LFLagrega 	  = .F. && Agrega o ??.REL em ??.AGR			    DEF(.F.)
	LFLfimagrega  = .F. && Qdo. Estiver agregando => encerra        DEF(.F.)

*******************
*---->   (INICIALIZACAO DO CONTROLE DE STATUS IMPRESSAO)
*******************	
	DO RELINIC.PRG          && INICIA VAR P/ TERMOMETRO
	LFsegue = .t.
	LNregistro = RECNO()
    COUNT  TO LNimpressao
	LNimpressos = 0
	GO LNregistro
*******************
*---->   (COMPLETADO PREPARACAO DO CONTROLE DE STATUS IMPRESSAO)
**************************>>> REGISTRO DE SAIDAS
    LSrel = "REL220A"      && relatorio padrao p/ impressoras ex: epson

    LSorienta = " WHILE  LFsegue "

	DO UPimpressao WITH 	(LFLdireciona), (LFLagrega), (LFLfimagrega)
	LFcontinua = LFsegue
************
	DO RELFIM.PRG          && FIM VAR P/ TERMOMETRO
	LNpagina = LNpagina + _PAGENO - 1   && DAR SEQU AO N. PAGINA
RETURN




*       ЦДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДД·
*       є                                                         є
*       є _0Y6127V65           m.ssimp_btn WHEN                   є
*       є                                                         є
*       є Function Origin:                                        є
*       є                                                         є
*       є From Platform:       MS-DOS                             є
*       є From Screen:         SCT0310,     Record Number:   40   є
*       є Variable:            m.ssimp_btn                        є
*       є Called By:           WHEN Clause                        є
*       є Object Type:         Push Button                        є
*       є Snippet Number:      17                                 є
*       є                                                         є
*       УДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДЅ
*
FUNCTION _0y6127v65     &&  m.ssimp_btn WHEN
#REGION 1
ON KEY LABEL ENTER
RETURN


*       ЦДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДД·
*       є                                                         є
*       є _0Y6127V80           m.ssimp_btn VALID                  є
*       є                                                         є
*       є Function Origin:                                        є
*       є                                                         є
*       є From Platform:       MS-DOS                             є
*       є From Screen:         SCT0310,     Record Number:   40   є
*       є Variable:            m.ssimp_btn                        є
*       є Called By:           VALID Clause                       є
*       є Object Type:         Push Button                        є
*       є Snippet Number:      18                                 є
*       є                                                         є
*       УДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДЅ
*
FUNCTION _0y6127v80     &&  m.ssimp_btn VALID
#REGION 1
PRIVATE dbf_NFSTMP,dbf_NFS		&& NOTA FISCASL DE SAIDA
PRIVATE dbf_ITMTMP,dbf_ITM      && MOVIMENTO E ITENS DA NF DE SAIDA

PRIVATE dbf_NFETMP,dbf_NFE		&& NOTA FISCAL DE ENTRADA
PRIVATE dbf_INETMP,dbf_INE    && ITENS DA NF DE ENTRADA

PRIVATE dbf_TIPTMP,dbf_TIP		&& TIPOOPER
PRIVATE dbf_MAPA                && MAPAECF


	LSuf_origem = LSuf_destino


	IF !ULArqItens()
		RETURN(.F.)
	ENDIF

	*
	* LOCALIZACAO DO ARQUIVO DE NOTA PARA OPERCAO SELECT ??? FROM <>
	*

	dbf_NFS  		= wp_dirdat+'NOTA.DBF'
	dbf_ITM  		= wp_dirdat+"ITEMMOV.DBF"


	dbf_NFE  		= wp_dirdat+"NOTAENT.DBF"
	dbf_INE  		= wp_dirdat+"NOTAITE.DBF"

	dbf_MAPA  		= wp_dirdat+"MAPAECF.DBF"
    if M.dt_fim < {01.01.2003}
		dbf_TIP  		= "L:\TMP\CFO\TIPOOPER.DBF"
	else
		dbf_TIP  		= wp_dirdat+"TIPOOPER.DBF"
	endif

	*----------------------------------------------------------*
	LSarqtmp 	= "" 			&& EX: C:\TMP\TMP0001
	LSaliastmp 	= "NFS" 		&&     TMP001
	LSaliastmp = UPopentmp(wp_dirtmp,LSarqtmp,LSaliastmp,1)
	IF EMPTY(LSaliastmp)
		WAIT WINDOW 'NЖo Foi Possivel Definir Arquivo Temporario'
		RETURN
	ENDIF
	dbf_NFSTMP  = wp_dirtmp+LSaliastmp+".DBF"
	als_NFSTMP  = LSaliastmp

	*----------------------------------------------------------*

	LSarqtmp 	= "" 			&& EX: C:\TMP\TMP0001
	LSaliastmp 	= "ITM" 		&&     TMP001
	LSaliastmp = UPopentmp(wp_dirtmp,LSarqtmp,LSaliastmp,1)
	IF EMPTY(LSaliastmp)
		WAIT WINDOW 'NЖo Foi Possivel Definir Arquivo Temporario'
		RETURN
	ENDIF
	dbf_ITMTMP  = wp_dirtmp+LSaliastmp+".DBF"
	als_ITMTMP  = LSaliastmp

	*----------------------------------------------------------*
	*----------------------------------------------------------*

	LSarqtmp 	= "" 			&& EX: C:\TMP\TMP0001
	LSaliastmp 	= "NFE" 		&&     TMP001
	LSaliastmp = UPopentmp(wp_dirtmp,LSarqtmp,LSaliastmp,1)
	IF EMPTY(LSaliastmp)
		WAIT WINDOW 'NЖo Foi Possivel Definir Arquivo Temporario'
		RETURN
	ENDIF
	dbf_NFETMP  = wp_dirtmp+LSaliastmp+".DBF"
	als_NFETMP  = LSaliastmp

	*----------------------------------------------------------*

	LSarqtmp 	= "" 			&& EX: C:\TMP\TMP0001
	LSaliastmp 	= "INE" 		&&     TMP001
	LSaliastmp = UPopentmp(wp_dirtmp,LSarqtmp,LSaliastmp,1)
	IF EMPTY(LSaliastmp)
		WAIT WINDOW 'NЖo Foi Possivel Definir Arquivo Temporario'
		RETURN
	ENDIF
	dbf_INETMP  = wp_dirtmp+LSaliastmp+".DBF"
	als_INETMP     = LSaliastmp



	*----------------------------------------------------------*
	*    GERAR ARQ. RESUMO CONTENDO SO AS NOTAS DO PERIODO E DA
	* EMPRESA SELECIONADA PARA ACELERAR OS OUTROS SELECTs
	*----------------------------------------------------------*

	*----------------------------------------------------------*
	*  SELECIONANDO REGISTROS DE SAIDA
	*----------------------------------------------------------*

	IF !EMPTY(LSuf_destino)
		SELECT  EMPRESA, NOTA , SERIE, DATA, HORA, UF, CFO, ;
			TIPO,FAVORECIDO,TP_PESSOA,INSCRICAO,;
	        STATUS, OPERACAO, CUPOM, ;
			TOTSERVICO, BASE_ISS,  ALIQ_ISS, VLR_ISS, ;
			BASE_ICMS,	ALIQ_ICMS, VLR_ICMS, ;
			BASE_SBBRT, BASE_SUBS, ICMS_SUBS, ;
			BASE_ISENT, BASE_OUTR, BASE_ISIPI, BASE_IPI,  VLR_IPI, ;
			TOTPRODUTO, VLRFRETE, VLRSEGURO, VLRDESPES, ;
-			TOTAL_NOTA ;	
		FROM &dbf_NFS ;
		WHERE   	empresa = M.EMPRESA;
			AND data >= M.dt_inicio AND  data <= M.dt_fim ;
			AND ch_opera <> "5" ;
			AND UF = LSuf_destino ;
	    INTO TABLE &dbf_NFSTMP
	ELSE
		SELECT  EMPRESA, NOTA , SERIE, DATA, HORA, UF, CFO, ;
	        STATUS, OPERACAO, CUPOM, ;
			TIPO,FAVORECIDO,TP_PESSOA,INSCRICAO,;
			TOTSERVICO, BASE_ISS,  ALIQ_ISS, VLR_ISS, ;
			BASE_ICMS,	ALIQ_ICMS, VLR_ICMS, ;
			BASE_SBBRT, BASE_SUBS, ICMS_SUBS, ;
			BASE_ISENT, BASE_OUTR, BASE_ISIPI, BASE_IPI,  VLR_IPI, ;
			TOTPRODUTO, VLRFRETE, VLRSEGURO, VLRDESPES, ;
			TOTAL_NOTA ;	
		FROM &dbf_NFS ;
		WHERE   	empresa = M.EMPRESA;
			AND data >= M.dt_inicio AND  data <= M.dt_fim ;
			AND ch_opera <> "5" ;
	    INTO TABLE &dbf_NFSTMP
	ENDIF

	*----------------------------------------------------------*
	*  SELECIONANDO REGISTROS DE ENTRADA
	*----------------------------------------------------------*


	IF !EMPTY(LSuf_destino)
	   SELECT EMPRESA,NOTA , SERIE, DATA,DATA_EMI,CODFORN, HORA, UF, CFO, ;
			FAVORECIDO,INSCRICAO,TIPO,CH_OPERA,CH_PRODU,;
	        STATUS, SITUACAO , ;
			TOTSERVICO, BASE_ISS,  ALIQ_ISS, ;
			BASE_ICMS,	ALIQ_ICMS, VLR_ICMS, ;
			BASE_SBBRT, BASE_SUBS, ICMS_SUBS, ;
			BASE_ISENT, BASE_OUTR, BASE_ISIPI, BASE_IPI,  VLR_IPI, ;
			TOTPRODUTO, VLRFRETE, VLRSEGURO, VLRDESPES, ;
			TOTAL_NOTA ;	
		FROM &dbf_NFE ;
		WHERE  	!(ch_opera $"56") ;
			AND LSuf_origem = uf;
			AND LEFT(situacao,1) = "C" ;
			AND empresa = m.empresa ;
			AND data >= dt_inicio ;
			AND data <= dt_fim ;		
	    INTO TABLE &dbf_NFETMP
	ELSE
	   SELECT EMPRESA,NOTA , SERIE, DATA,DATA_EMI,CODFORN, HORA, UF, CFO, ;
			FAVORECIDO,INSCRICAO,TIPO,CH_OPERA,CH_PRODU,;
	        STATUS, SITUACAO , ;
			TOTSERVICO, BASE_ISS,  ALIQ_ISS, ;
			BASE_ICMS,	ALIQ_ICMS, VLR_ICMS, ;
			BASE_SBBRT, BASE_SUBS, ICMS_SUBS, ;
			BASE_ISENT, BASE_OUTR, BASE_ISIPI, BASE_IPI,  VLR_IPI, ;
			TOTPRODUTO, VLRFRETE, VLRSEGURO, VLRDESPES, ;
			TOTAL_NOTA ;	
		FROM &dbf_NFE ;
		WHERE  	!(ch_opera $"56") ;
			AND LEFT(situacao,1) = "C" ;
			AND empresa = m.empresa ;
			AND data >= dt_inicio ;
			AND data <= dt_fim ;		
	    INTO TABLE &dbf_NFETMP
	ENDIF


	*----------------------------------------------------------*
	*  SELECIONANDO ITENS DO MOVIMENTO  E ITENS DA NF DE SAIDA
	*----------------------------------------------------------*

	SELECT  EMPRESA, NOTA , SERIE, DATA, CODIGO,TP_MERCAD, VLRVENDA,QTDE,;
            CFO, OPERACAO, FAVORECIDO,;
			TIPO,BASE_ISS,  ALIQ_ISS, ;
			BASE_CALC,	ALIQ_ICMS, VLR_ICMS, ;
			BASE_SBBRT, BASE_SUBS, ICMS_SUBS, ;
			BASE_ISENT, BASE_OUTR, BASE_ISIPI, BASE_IPI,  VLRIPI ;
		FROM &dbf_ITM ;
		WHERE  	!(ch_opera $"56") ;
			AND empresa = m.empresa ;
			AND data >= dt_inicio ;
			AND data <= dt_fim ;		
	    INTO TABLE &dbf_ITMTMP

	*---------------------------------------------------------------*

	*----------------------------------------------------------*
	*  SELECIONANDO ITENS DA NF DE ENTRADA
	*----------------------------------------------------------*
	SELECT  * ;
		FROM &dbf_ine ;
		WHERE  	!(ch_opera $"56") ;
			AND empresa = m.empresa ;
			AND data >= dt_inicio ;
			AND data <= dt_fim ;		
	    INTO TABLE &dbf_ineTMP

	*---------------------------------------------------------------*



	DO ULProcCVN3199 WITH ;
	    (m.empresa),(m.dt_inicio),(m.dt_fim)

	*---------------------------------------------------------------*
	IF USED("ITENSNEGOC")
		SELECT ITENSNEGOC
		USE
	ENDIF

	SELECT &als_NFSTMP
	USE

	SELECT &als_ITMTMP
	USE

	SELECT &als_INETMP
	USE


	SHOW WINDOW SCT0310 TOP

RETURN

FUNCTION ULArqItens
	*---------------------------------------------------------*
	* Gerar Arq. Temporario para registrar itens vendidos
	*---------------------------------------------------------*
	LSarqtmp 	= "" 			&& EX: C:\TMP\TMP0001
	LSaliastmp 	= "TMP" 		&&     TMP001
	LSaliastmp = UPopentmp(wp_dirtmp,LSarqtmp,LSaliastmp,1)
	IF EMPTY(LSaliastmp)
 		WAIT WINDOW "Nao Foi Possivel Gerar Arq Temporario."
 		SELE notaent
		UNLOCK
 		RETURN(.F.)
 	ENDIF		
	*---------------------------------------------------------*
	IF USED("ITENSNEG")
		SELE ITENSNEGOC
		USE
	ENDIF

	SELE grupo
	WAIT WINDOW "AGUARDE. Gerando Arq. Temporario." NOWAIT

	COPY STRU TO &LSarqtmp WITH CDX

	KEYBOARD CHR(13)
	WAIT WINDOW " "
    SELE 0
	USE &LSarqtmp	ALIAS ITENSNEGOC	EXCLUSIVE	
	KEYBOARD CHR(13)
	WAIT WINDOW " "
RETURN(.T.)


*-------------------------------------------------------------------*

PROCEDURE ULProcCVN3199
PARAMETERS LNemp, LDper_ini, LDper_fim

	PRIVATE LSnome

	LSnome	 =	RIGHT(str(year(LDper_ini)),2)+;
				STR(MONTH(LDper_ini),2)+STR(LNemp,2)+"AG.DAT"
	LSnome	= 	"\SCGC\AGENFA\"+STRTRAN(LSnome," ","0")
	LNcontrol = FCREATE(LSnome)	
	PRIVATE LNctr_10,LNctr_11,LNctr_50,LNctr_53,LNctr_54,LNctr_60,;
			LNctr_70,LNctr_75
	STORE 0 TO LNctr_10,LNctr_11,LNctr_50,LNctr_53,LNctr_54,LNctr_60,;
			LNctr_70,LNctr_75

	=UL31R_10((LNemp),(LNcontrol),(LDper_ini),(LDper_fim),LNctr_10)
	=UL31R_11((LNemp),(LNcontrol),(LDper_ini),(LDper_fim),LNctr_11)
	=UL31R_50((LNemp),(LNcontrol),(LDper_ini),(LDper_fim),LNctr_50)
	=UL31R_53((LNemp),(LNcontrol),(LDper_ini),(LDper_fim),LNctr_53)
	=UL31R_54((LNemp),(LNcontrol),(LDper_ini),(LDper_fim),LNctr_54)
	=UL31R_60((LNemp),(LNcontrol),(LDper_ini),(LDper_fim),LNctr_60)
	=UL31R_70((LNemp),(LNcontrol),(LDper_ini),(LDper_fim),LNctr_70)
	=UL31R_75((LNemp),(LNcontrol),(LDper_ini),(LDper_fim),LNctr_75)
	=UL31R_90((LNemp),(LNcontrol),LNctr_10,LNctr_11,LNctr_50,;
				LNctr_53,LNctr_54,LNctr_60,LNctr_70,LNctr_75)
	=FCLOSE(LNcontrol)
RETURN

FUNCTION UL31R_10
	PARAMETERS LNemp, LNctrl, LDper_ini, LDper_fim, LN_Ctr

	SELE empresa
	SET ORDER TO TAG empresa
	SEEK LNemp
	
	LStipo  		= "10"
	LScgc			= CHRTRAN(STR(empresa.cgc,14)," ","0")
	LSinsc			= CHRTRAN(empresa.inscricao," ","")
	LSinsc			= CHRTRAN(LSinsc,".","")
	LSinsc			= CHRTRAN(LSinsc,"/","")
	LSinsc			= CHRTRAN(LSinsc,"-","")
	LSinsc			= LEFT(LSinsc+space(14),14)
	LSnome			= LEFT(empresa.nome,35)
	LSmunicipio		= LEFT(empresa.cidade,30)
	LSestado		= empresa.estado
	LSfax			= REPLICATE("0",10)
	LSdtini			= STR(YEAR(LDper_ini),4)+;
					  STR(MONTH(LDper_ini),2)+;
					  STR(DAY(LDper_ini),2)
	LSdtini			= CHRTRAN(LSdtini," ","0")				
	LSdtfim			= STR(YEAR(LDper_fim),4)+;
					  STR(MONTH(LDper_fim),2)+;
					  STR(DAY(LDper_fim),2)
	LSdtfim			= CHRTRAN(LSdtfim," ","0")				
	LScod_id		= "13"

	
	LScod_f			= str(LNfinalidade,1)
	

	LStmp1 			=LStipo+LScgc+LSinsc+LSnome+;
					 LSmunicipio+LSestado+LSfax+;
					 LSdtini+LSdtfim+LScod_id+LScod_f

	=FPUT(LNctrl,LStmp1,126)
	LN_Ctr	=	LN_Ctr + 1
RETURN

FUNCTION UL31R_11
	PARAMETERS LNemp, LNctrl, LDper_ini, LDper_fim, LN_Ctr

	SELE empresa
	SET ORDER TO TAG empresa
	SEEK LNemp
	
	LStipo  		= "11"
	LSlogr			= LEFT(empresa.endereco,34)

	IF TYPE("empresa.num") = "U"
		LSnum			= "00001"
	ELSE
		LSnum			= CHRTRAN(STR(empresa.num,5)," ","0")
	ENDIF
	LScompl			= SPACE(22)
	LSbairro		= LEFT(empresa.bairro,15)
	LScep			= LEFT(CHRTRAN(empresa.cep," ","0"),8)
	LScontato		= LEFT(empresa.contato,28)

	LSfone			= CHRTRAN(UPPER(empresa.fone),"X","0")
	LSfone			= CHRTRAN(LSfone,"(","")
	LSfone			= CHRTRAN(LSfone,")","")
	LSfone			= CHRTRAN(LSfone,"-","")
	LSfone			= CHRTRAN(LSfone," ","")
	LSfone			= REPL("0",12-LEN(LSfone))+LSfone

	LSfone			= LEFT(LSfone,12)

	LStmp1 			= LStipo+LSlogr+LSnum+LScompl+LSbairro+LScep+;
					  LScontato+LSfone	
	=FPUT(LNctrl,LStmp1,126)
	LN_Ctr	=	LN_Ctr + 1
RETURN

FUNCTION UL31R_50
	PARAMETERS LNemp, LNctrl, LDper_ini, LDper_fim, LN_Ctr

	*-------------------------------------------------------------------*
	*	NOTAS DE SAIDA
	*-------------------------------------------------------------------*
    * vlr_icms =  (base_icms * aliq_icms/100) as vlr_icms,;
	*-------------------------------------------------------------------*
    *-----> NAO CANCELADAS
	*-------------------------------------------------------------------*


   SELECT NF.empresa   , NF.nota,      NF.serie,      NF.cupom, ;
          NF.favorecido, NF.tp_pessoa, NF.inscricao,  NF.uf, ;
		  NF.tipo,       NF.data,    ;
		  NF.vlrfrete,   NF.vlrseguro,    NF.vlrdespes, NF.status,;
          NF.total_nota  AS VlrNota,;
		  IIF(IT.tp_mercad <> 2 ,TP.cfo, TP.cfosubs) as SET_CFO,;
	  	  IT.aliq_icms,;
		  SUM(IT.vlrvenda)  AS TOTAL_NOTA,;
	  	  SUM(IT.base_subs) AS BASE_SUBS,;
	  	  SUM(IT.icms_subs) AS ICMS_SUBS,;
	  	  SUM(IT.base_calc) AS BASE_ICMS,;
	  	  SUM(IT.Base_calc * IT.aliq_icms/100) AS VLR_ICMS,;
	 	  SUM(IT.base_isent) AS BASE_ISENT ,;
		  SUM(IT.base_outr)  AS BASE_OUTR ;
   	FROM  &dbf_NFSTMP  NF,;
   	      &dbf_TIP     TP,;
   	      &dbf_ITMTMP  IT ;
    WHERE ;
              NF.status = 1;
   		  AND NF.operacao =  "S"         ;
   		  AND NF.CUPOM = 0               ;
   		  AND TP.TIPO = NF.TIPO    ;
   	      AND TP.PROCESSO $ "Ss" ;
   		  AND LEFT(IT.OPERACAO,1) = "S" ;
   	 	  AND IT.EMPRESA = NF.EMPRESA    ;
   		  AND IT.NOTA    = NF.NOTA         ;
   		  AND IT.SERIE   = NF.SERIE        ;
    ORDER BY NF.EMPRESA, NF.DATA, NF.NOTA, SET_CFO, IT.ALIQ_ICMS ;
    GROUP BY NF.EMPRESA, NF.DATA, NF.NOTA, SET_CFO, IT.ALIQ_ICMS ;
    INTO TABLE L:\TMP\TMP1

	*-------------------------------------------------------------------*
    *-----> CANCELADAS
	*-------------------------------------------------------------------*

SELECT 	NF.empresa   , NF.nota,      NF.serie,      NF.cupom, ;
        NF.favorecido, NF.tp_pessoa, NF.inscricao,  NF.uf, ;
		NF.tipo,       NF.data,    ;
		NF.vlrfrete,   NF.vlrseguro,    NF.vlrdespes, NF.status,;
        NF.total_nota  AS VlrNota,;
		NF.cfo         AS  SET_CFO,;
	  	NF.aliq_icms,;
		NF.TOTAL_NOTA,;
	  	NF.base_subs,;
	  	NF.icms_subs,;
	  	NF.base_icms,;
	  	(NF.Base_icms * NF.aliq_icms/100) AS VLR_ICMS,;
		NF.base_isent,;
		NF.base_outr ;
   	FROM  &dbf_NFSTMP  NF;
    WHERE ;
              NF.status = 2;
   		  AND NF.operacao =  "S"         ;
   		  AND NF.CUPOM = 0               ;
    ORDER BY NF.EMPRESA, NF.DATA, NF.NOTA, SET_CFO, NF.ALIQ_ICMS ;
    INTO TABLE L:\TMP\TMP2

    SELE TMP1
    APPEND FROM L:\TMP\TMP2
	*-------------------------------------------------------------------*
    *-----> UNIAO CANCELADAS E NAO CANCELADAS
	*-------------------------------------------------------------------*

    SELECT * FROM L:\TMP\TMP1 ;
     ORDER BY EMPRESA, DATA, NOTA, SET_CFO, ALIQ_ICMS ;
    	INTO CURSOR LIVROSAI

*---------------------------------------------------------------------*

	GO TOP
	LStipo  		= "50"
	DO WHILE !EOF()
		LSmsg = "Saidas (50) "+;
				 	DTOC(LIVROSAI.DATA)+;
					STR(LIVROSAI.NOTA,6)
		WAIT WINDOW LSmsg NOWAIT

		*----------------------------------------------------------*
		LScgc	=  CHRTRAN(STR(LIVROSAI.favorecido,14)," ","0")
		*----------------------------------------------------------*
		*     Quando a inscricao que estiver na nota for invalida
		*  o prog buscara a inscricao do cadastro de clientes
		*  pode ocorrer que no momento da emissao da nota a inscricao
		*  estivesse errada.
		*----------------------------------------------------------*

		LSinsc	=  ALLTRIM(LIVROSAI.inscricao)
		LSuf	=  LIVROSAI.uf

		IF !UPInscricao(LSuf,LSinsc,1,0,0,'')
			IF LIVROSAI.favorecido = 0
				LSinsc	=  "ISENTO"
			ELSE
				SELE clientes
				SET ORDER TO TAG cliente
				SEEK LIVROSAI.favorecido
				IF  FOUND() AND;
					UPInscricao(clientes.estado,clientes.INSCRICAO,1,0,0,'')
					&& CFOs Inciados em 5 o estado deve ser igual ao do
					&& informante
					DO CASE
						CASE LEFT(LIVROSAI.SET_CFO,1) = "5" ;
							AND clientes.estado = empresa.estado
							LSinsc	=  ALLTRIM(clientes.inscricao)
							LSuf	=	clientes.estado
						CASE LEFT(LIVROSAI.SET_CFO,1) <> "5" ;
							AND clientes.estado <> empresa.estado
							LSinsc	=  ALLTRIM(clientes.inscricao)
							LSuf	=	clientes.estado
					ENDCASE
				ELSE
					LSinsc	=  ALLTRIM(LIVROSAI.inscricao)
				ENDIF		
			ENDIF
		ENDIF
		SELE LIVROSAI
		*----------------------------------------------------------*
		IF "ISENTO" $ UPPER(LSinsc)
			LSinsc	=  "ISENTO"
			LScgc	=  CHRTRAN(STR(0,14)," ","0")
		ELSE
			LSinsc	=  CHRTRAN(LSinsc,".","")
			LSinsc	=  CHRTRAN(LSinsc,"/","")
			LSinsc	=  CHRTRAN(LSinsc,"-","")
			LSinsc	=  CHRTRAN(LSinsc,"(","")
			LSinsc	=  CHRTRAN(LSinsc,")","")
		ENDIF			
		LSinsc			= LEFT(LSinsc+space(14),14)
		IF LIVROSAI.TP_PESSOA = 1
			LScgc	=  CHRTRAN(STR(0,14)," ","0")
		ENDIF			


		LSdtemi		=	STR(YEAR(LIVROSAI.data),4)+;
						STR(MONTH(LIVROSAI.data),2)+;
						STR(DAY(LIVROSAI.data),2)
		LSdtemi		=   CHRTRAN(LSdtemi," ","0")						
		LSmodelo 	=   "01"

*		LSserie		=   "  1"
*		LSsubserie  = 	"  "

		LSserie		=   LIVROSAI.serie+"  "
		LSsubserie  = 	"  "

		LSnumero 	= 	CHRTRAN(STR(LIVROSAI.NOTA,7)," ","0")
		LSnumero 	= 	SUBS(LSnumero,2,6)

		LScfo		=   CHRTRAN(LIVROSAI.SET_CFO,".","")						

		LScfo		=   CHRTRAN(LScfo,".","")						

        IF LIVROSAI.DATA <= {31.12.2002}
  		       LScfo	=   LEFT(LScfo,3)
  	    ENDIF
        LScfo	=   LEFT(LScfo,3)


		SELE LIVROSAI
		*-----------------------------------------------------------------*
		*      Quando o registro se referenciar a uma copia de cupom
		* em NF os valores sao zerados devido aos mesmos serem relacio-
		* nados no registro tipo 61
		*-----------------------------------------------------------------*

		IF LIVROSAI.CUPOM = 0   && PORQUE SE <> 0 E NOTA REFERENTE A CUPOM
			LSvalor		=	str(LIVROSAI.total_nota,14,2)						
			LSbase_icms	=	str(LIVROSAI.base_icms,14,2)						
			LSvlr_icms	=	ROUND(base_icms *  aliq_icms / 100,2)
			LSbase_isent=	str(LIVROSAI.base_isent,14,2)						
			LSbase_outr	=	str(LIVROSAI.base_outr,14,2)						
			LSaliq_icms	=	str(LIVROSAI.aliq_icms,5,2)						
		ELSE
			LSvalor		=	str(0,14,2)						
			LSbase_icms	=	str(0,14,2)						
			LSvlr_icms	=	ROUND(0,2)
			LSbase_isent=	str(0,14,2)						
			LSbase_outr	=	str(0,14,2)						
			LSaliq_icms	=	str(LIVROSAI.aliq_icms,5,2)						
		ENDIF	

		LSvalor		=   CHRTRAN(LSvalor," ","0")						
		LSvalor		=   CHRTRAN(LSvalor,",","")						
		LSvalor		=   CHRTRAN(LSvalor,".","")						


		LSbase_icms	=   CHRTRAN(LSbase_icms," ","0")						
		LSbase_icms	=   CHRTRAN(LSbase_icms,",","")						
		LSbase_icms	=   CHRTRAN(LSbase_icms,".","")						


		LSvlr_icms	=	STR(LSvlr_icms,14,2)
		LSvlr_icms	=   CHRTRAN(LSvlr_icms," ","0")						
		LSvlr_icms	=   CHRTRAN(LSvlr_icms,",","")						
		LSvlr_icms	=   CHRTRAN(LSvlr_icms,".","")						


		LSbase_isent=   CHRTRAN(LSbase_isent," ","0")						
		LSbase_isent=   CHRTRAN(LSbase_isent,",","")						
		LSbase_isent=   CHRTRAN(LSbase_isent,".","")						
		

		LSbase_outr	=   CHRTRAN(LSbase_outr," ","0")						
		LSbase_outr	=   CHRTRAN(LSbase_outr,",","")						
		LSbase_outr	=   CHRTRAN(LSbase_outr,".","")						


		LSaliq_icms	=   CHRTRAN(LSaliq_icms," ","0")						
		LSaliq_icms	=   CHRTRAN(LSaliq_icms,",","")						
		LSaliq_icms	=   CHRTRAN(LSaliq_icms,".","")						

		IF LIVROSAI.status = 2
			LSstatus = "S"
		ELSE
			LSstatus = "N"
		ENDIF		
		************************************************************
		LStmp1		=	LStipo+LScgc+LSinsc+LSdtemi+LSuf+LSmodelo+;
						LSserie+LSsubserie+LSnumero+LScfo+LSvalor+;
						LSbase_icms+LSvlr_icms+LSbase_isent+;
						LSbase_outr+LSaliq_icms+LSstatus
		************************************************************
		=FPUT(LNctrl,LStmp1,126)
		LN_Ctr	=	LN_Ctr + 1
		SKIP
	ENDDO

	*-------------------------------------------------------------------*
	*	NOTAS DE ENTRADA
    * 		WHERE  ch_produ <> "9"  FAZ COM QUE AS NOTAS DE CONHECIMENTO;
    *      DE TRANSP NAO SEJAM SELECIONADAS
	*-------------------------------------------------------------------*

	SELECT 	;
		NF.empresa   , NF.nota,      NF.serie,    ;
        NF.codforn   , NF.inscricao,  NF.uf, ;
		NF.tipo,       NF.data,      NF.data_emi,  ;
		NF.vlrfrete,   NF.vlrseguro,    NF.vlrdespes,;
        NF.total_nota  AS VlrNota,;
		IIF(IT.tp_mercad <> 2,TP.cfo, TP.cfosubs) as SET_CFO,;
	  	NF.aliq_icms,;
		NF.TOTAL_NOTA,;
	  	NF.base_subs,;
	  	NF.icms_subs,;
	  	IIF(NF.BASE_SUBS = 0,NF.base_icms,NF.base_icms*0)     AS BASE_ICMS,;
	  	IIF(NF.BASE_SUBS = 0,NF.VLR_ICMS,NF.VLR_ICMS*0)      AS VLR_ICMS,;
		NF.BASE_ISENT ,;
		(NF.base_outr+NF.BASE_ISS)  AS BASE_OUTR ;
   	FROM  &dbf_NFETMP  NF,;
   	      &dbf_TIP     TP,;
   	      &dbf_INETMP  IT ;
    WHERE ;
            LEFT(NF.situacao,1) = "C" ;
		AND NF.ch_produ <> "9" ;
        AND NF.CH_OPERA         <> "5" ;
   		AND NF.TIPO             = TP.TIPO ;
   	    AND TP.PROCESSO         $ "Ee" ;
   		AND IT.TIPO             = NF.TIPO ;
   		AND IT.EMPRESA          = NF.EMPRESA    ;
   		AND IT.NOTA             = NF.NOTA         ;
   		AND IT.SERIE            = NF.SERIE        ;
   		AND IT.FAVORECIDO       = NF.FAVORECIDO ;
    GROUP BY NF.EMPRESA, NF.DATA, NF.NOTA, SET_CFO, IT.ALIQ_ICMS ;
    INTO CURSOR TMPLIVR

    SELECT * FROM TMPLIVR NF;
	    ORDER BY NF.EMPRESA, NF.DATA, NF.NOTA, NF.SET_CFO, NF.ALIQ_ICMS ;
	    INTO CURSOR LIVROENT

*-----------------------------------------------------------------------*

	SELECT LIVROENT
	GO TOP

	LStipo  		= "50"

	DO WHILE !EOF()
		LSmsg = "Entradas (50) "+;
				 	DTOC(LIVROENT.DATA)+;
					STR(LIVROENT.NOTA,6)
		WAIT WINDOW LSmsg NOWAIT

		*-----------------------------------------------------------*
		SELE fornece
		SET ORDER TO TAG codigo
		SEEK LIVROENT.codforn

		IF FOUND()
			LSinsc	=  ALLTRIM(fornece.inscricao)
			LScgc	=  CHRTRAN(STR(fornece.cgc,14)," ","0")
		ELSE
			LSinsc	=  ALLTRIM(LIVROENT.inscricao)
			LScgc	=  CHRTRAN(STR(LIVROENT.favorecido,14)," ","0")
		ENDIF

		IF "ISENTO" $ UPPER(LSinsc)
			LSinsc	=  "ISENTO"
			LScgc	=  CHRTRAN(STR(0,14)," ","0")
		ELSE
			LSinsc	=  CHRTRAN(LSinsc,".","")
			LSinsc	=  CHRTRAN(LSinsc,"/","")
			LSinsc	=  CHRTRAN(LSinsc,"-","")
			LSinsc	=  CHRTRAN(LSinsc,"(","")
			LSinsc	=  CHRTRAN(LSinsc,")","")
		ENDIF			
		LSinsc			= LEFT(LSinsc+space(14),14)
		*-----------------------------------------------------------*
		SELECT LIVROENT

		LSdtemi		=	STR(YEAR(LIVROENT.data),4)+;
						STR(MONTH(LIVROENT.data),2)+;
						STR(DAY(LIVROENT.data),2)
		LSdtemi		=   CHRTRAN(LSdtemi," ","0")						
		LSuf		=	LIVROENT.uf
		LSmodelo 	=   "01"
		LSserie		=   LIVROENT.serie+"  "
		LSsubserie  = 	"  "
		LSnumero 	= 	CHRTRAN(STR(LIVROENT.NOTA,6)," ","0")

		LScfo		=   CHRTRAN(LIVROENT.SET_CFO,".","")						
		LScfo		=   CHRTRAN(LScfo,".","")						

        IF LIVROENT.DATA <= {31.12.2002}
  		       LScfo	=   LEFT(LScfo,3)
  	    ENDIF
        LScfo	=   LEFT(LScfo,3)


		SELE LIVROENT

		LSvalor		=	str(LIVROENT.total_nota,14,2)						
		LSvalor		=   CHRTRAN(LSvalor," ","0")						
		LSvalor		=   CHRTRAN(LSvalor,",","")						
		LSvalor		=   CHRTRAN(LSvalor,".","")						

		LSbase_icms	=   IIF(LIVROENT.base_subs > 0, 0, LIVROENT.base_icms)

		LSbase_icms	=	str(LSbase_icms,14,2)						
		LSbase_icms	=   CHRTRAN(LSbase_icms," ","0")						
		LSbase_icms	=   CHRTRAN(LSbase_icms,",","")						
		LSbase_icms	=   CHRTRAN(LSbase_icms,".","")						

		LSvlr_icms	=	IIF(LIVROENT.base_subs > 0, 0, LIVROENT.vlr_icms)

		LSvlr_icms	=	str(LSvlr_icms,14,2)						
		LSvlr_icms	=   CHRTRAN(LSvlr_icms," ","0")						
		LSvlr_icms	=   CHRTRAN(LSvlr_icms,",","")						
		LSvlr_icms	=   CHRTRAN(LSvlr_icms,".","")						

		LSbase_isent=	str(LIVROENT.base_isent,14,2)						
		LSbase_isent=   CHRTRAN(LSbase_isent," ","0")						
		LSbase_isent=   CHRTRAN(LSbase_isent,",","")						
		LSbase_isent=   CHRTRAN(LSbase_isent,".","")						
		
		LSbase_outr	=	str(LIVROENT.base_outr,14,2)						
		LSbase_outr	=   CHRTRAN(LSbase_outr," ","0")						
		LSbase_outr	=   CHRTRAN(LSbase_outr,",","")						
		LSbase_outr	=   CHRTRAN(LSbase_outr,".","")						

		LSaliq_icms	=	str(LIVROENT.aliq_icms,5,2)						
		LSaliq_icms	=   CHRTRAN(LSaliq_icms," ","0")						
		LSaliq_icms	=   CHRTRAN(LSaliq_icms,",","")						
		LSaliq_icms	=   CHRTRAN(LSaliq_icms,".","")						

		LSstatus = "N"
		************************************************************
		LStmp1		=	LStipo+LScgc+LSinsc+LSdtemi+LSuf+LSmodelo+;
						LSserie+LSsubserie+LSnumero+LScfo+LSvalor+;
						LSbase_icms+LSvlr_icms+LSbase_isent+;
						LSbase_outr+LSaliq_icms+LSstatus
		************************************************************
		=FPUT(LNctrl,LStmp1,126)
		LN_Ctr	=	LN_Ctr + 1
		SKIP
	ENDDO
RETURN



FUNCTION UL31R_53
	PARAMETERS LNemp, LNctrl, LDper_ini, LDper_fim, LN_Ctr

	*-------------------------------------------------------------------*
	*	NOTAS DE SAIDA  =>
	*           icms_subs > 0   => Com Valor de Substituicao Tributaria
	*           tipo <> "CPM"   => Nao seja Cupom
	*           Operacao = "S" => Nao se NF de Entrada
	*-------------------------------------------------------------------*
	*-------------------------------------------------------------------*
	*	NOTAS DE SAIDA
	*-------------------------------------------------------------------*
	*-------------------------------------------------------------------*
    *-----> NAO CANCELADAS
	*-------------------------------------------------------------------*

   IF USED("TMP1")
      SELE TMP1
      USE
   ENDIF


   SELECT NF.empresa   , NF.nota,      NF.serie,      NF.cupom, ;
          NF.favorecido, NF.tp_pessoa, NF.inscricao,  NF.uf, ;
		  NF.tipo,       NF.data,    ;
		  NF.vlrfrete,   NF.vlrseguro,    NF.vlrdespes, NF.status,;
          NF.total_nota  AS VlrNota,;
		  IIF(IT.tp_mercad <> 2,TP.cfo, TP.cfosubs) as SET_CFO,;
	  	  IT.aliq_icms,;
		  SUM(IT.vlrvenda)  AS TOTAL_NOTA,;
	  	  SUM(IT.base_subs) AS BASE_SUBS,;
	  	  SUM(IT.icms_subs) AS ICMS_SUBS,;
	  	  SUM(IT.base_calc) AS BASE_ICMS,;
	  	  SUM(IT.Base_calc * IT.aliq_icms/100) AS VLR_ICMS,;
	 	  SUM(IT.base_isent) AS BASE_ISENT ,;
		  SUM(IT.base_outr)  AS BASE_OUTR ;
   	FROM  &dbf_NFSTMP  NF,;
   	      &dbf_TIP     TP,;
   	      &dbf_ITMTMP  IT ;
    WHERE ;
              NF.status = 1        ;
   		  AND NF.operacao =  "S"   ;
          AND NF.icms_subs > 0     ;
   		  AND TP.TIPO = NF.TIPO    ;
   	      AND TP.PROCESSO $ "Ss"   ;
   		  AND LEFT(IT.OPERACAO,1) = "S"    ;
   	 	  AND IT.EMPRESA = NF.EMPRESA      ;
   		  AND IT.NOTA    = NF.NOTA         ;
   		  AND IT.SERIE   = NF.SERIE        ;
          AND IT.icms_subs > 0     ;
    GROUP BY NF.EMPRESA, NF.DATA, NF.NOTA, SET_CFO, IT.ALIQ_ICMS ;
    INTO CURSOR CRSTMP1

    SELECT * FROM CRSTMP1 NF ;
       ORDER BY NF.EMPRESA, NF.DATA, NF.NOTA, NF.SET_CFO, NF.ALIQ_ICMS ;
       INTO TABLE L:\TMP\TMP1

	*-------------------------------------------------------------------*
    *-----> CANCELADAS
	*-------------------------------------------------------------------*

SELECT 	NF.empresa   , NF.nota,      NF.serie,      NF.cupom, ;
        NF.favorecido, NF.tp_pessoa, NF.inscricao,  NF.uf, ;
		NF.tipo,       NF.data,    ;
		NF.vlrfrete,   NF.vlrseguro,    NF.vlrdespes, NF.status,;
        NF.total_nota  AS VlrNota,;
		NF.cfo         AS  SET_CFO,;
	  	NF.aliq_icms,;
		NF.TOTAL_NOTA,;
	  	NF.base_subs,;
	  	NF.icms_subs,;
	  	NF.base_icms,;
	  	(NF.Base_icms * NF.aliq_icms/100) AS VLR_ICMS,;
		NF.base_isent,;
		NF.base_outr ;
   	FROM  &dbf_NFSTMP  NF;
    WHERE ;
              NF.status = 2        ;
   		  AND NF.operacao =  "S"   ;
          AND NF.icms_subs > 0     ;
    ORDER BY NF.EMPRESA, NF.DATA, NF.NOTA, SET_CFO, NF.ALIQ_ICMS ;
    INTO TABLE L:\TMP\TMP2

    SELE TMP1
    APPEND FROM L:\TMP\TMP2
	*-------------------------------------------------------------------*
    *-----> UNIAO CANCELADAS E NAO CANCELADAS
	*-------------------------------------------------------------------*

    SELECT * FROM L:\TMP\TMP1 ;
     ORDER BY EMPRESA, DATA, NOTA, SET_CFO, ALIQ_ICMS ;
    	INTO CURSOR LIVROSAI

*--------------------------------------------------------------------*

	LStipo  		= "53"
	DO WHILE !EOF()
		LSmsg = "Subst.Saida (53) "+;
				 	DTOC(LIVROSAI.DATA)+;
					STR(LIVROSAI.NOTA,6)
		WAIT WINDOW LSmsg NOWAIT

		*----------------------------------------------------------*
		LScgc	=  CHRTRAN(STR(LIVROSAI.favorecido,14)," ","0")

		LSinsc	=  ALLTRIM(LIVROSAI.inscricao)
		LSuf	=	LIVROSAI.uf
		IF !UPInscricao(LSuf,LSinsc,1,0,0,'')
			IF LIVROSAI.favorecido = 0
				LSinsc	=  "ISENTO"
			ELSE
				SELE clientes
				SET ORDER TO TAG cliente
				SEEK LIVROSAI.favorecido
				IF  FOUND() AND ;
				   UPInscricao(clientes.estado,clientes.INSCRICAO,1,0,0,'')
					&& CFOs Inciados em 5 o estado deve ser igual ao do
					&& informante
					DO CASE
						CASE LEFT(LIVROSAI.SET_CFO,1) = "5" ;
							AND clientes.estado = empresa.estado
							LSinsc	=  ALLTRIM(clientes.inscricao)
							LSuf	=	clientes.estado
						CASE LEFT(LIVROSAI.SET_CFO,1) <> "5" ;
							AND clientes.estado <> empresa.estado
							LSinsc	=  ALLTRIM(clientes.inscricao)
							LSuf	=	clientes.estado
					ENDCASE
				ELSE
					LSinsc	=  ALLTRIM(LIVROSAI.inscricao)
				ENDIF		
			ENDIF
		ENDIF
		SELE LIVROSAI

		IF "ISENTO" $ UPPER(LSinsc)
			LSinsc	=  "ISENTO"
			LScgc	=  CHRTRAN(STR(0,14)," ","0")
		ELSE
			LSinsc	=  CHRTRAN(LSinsc,".","")
			LSinsc	=  CHRTRAN(LSinsc,"/","")
			LSinsc	=  CHRTRAN(LSinsc,"-","")
			LSinsc	=  CHRTRAN(LSinsc,"(","")
			LSinsc	=  CHRTRAN(LSinsc,")","")
		ENDIF			
		IF LIVROSAI.TP_PESSOA = 1
			LScgc	=  CHRTRAN(STR(0,14)," ","0")
		ENDIF			


		LSinsc			= LEFT(LSinsc+space(14),14)
		LSdtemi		=	STR(YEAR(LIVROSAI.data),4)+;
						STR(MONTH(LIVROSAI.data),2)+;
						STR(DAY(LIVROSAI.data),2)
		LSdtemi		=   CHRTRAN(LSdtemi," ","0")						
		LSmodelo 	=   "01"
	*	LSserie		=   "  1"
	*	LSsubserie  = 	"  "

		LSserie		=   LIVROSAI.serie+"  "
		LSsubserie  = 	"  "


		LSnumero 	= 	CHRTRAN(STR(LIVROSAI.NOTA,7)," ","0")
		LSnumero 	= 	SUBS(LSnumero,2,6)

		LScfo		=   CHRTRAN(LIVROSAI.SET_CFO,".","")						
		LScfo		=   CHRTRAN(LScfo,".","")						
        IF LIVROSAI.DATA <= {31.12.2002}
           LScfo = LEFT(LScfo,3)
        ENDIF
        LScfo	=   LEFT(LScfo,3)

		SELE LIVROSAI


		*-- > Base de Substituicao
		LSbase_icms	=	str(LIVROSAI.base_subs,14,2)						
		LSbase_icms	=   CHRTRAN(LSbase_icms," ","0")						
		LSbase_icms	=   CHRTRAN(LSbase_icms,",","")						
		LSbase_icms	=   CHRTRAN(LSbase_icms,".","")						

		*-- > ICMS de Substituicao
		LSvlr_icms	=	STR(LIVROSAI.icms_subs,14,2)
		LSvlr_icms	=   CHRTRAN(LSvlr_icms," ","0")						
		LSvlr_icms	=   CHRTRAN(LSvlr_icms,",","")						
		LSvlr_icms	=   CHRTRAN(LSvlr_icms,".","")						

		*--- > Despesas acessorias
		LSdespesa=	LIVROSAI.vlrfrete+LIVROSAI.vlrseguro+LIVROSAI.vlrdespes
		LSdespesa=	 str(LSdespesa,14,2)						
		LSdespesa=   CHRTRAN(LSdespesa," ","0")						
		LSdespesa=   CHRTRAN(LSdespesa,",","")						
		LSdespesa=   CHRTRAN(LSdespesa,".","")						
		
		IF LIVROSAI.status = 2
			LSstatus = "S"
		ELSE
			LSstatus = "N"
		ENDIF		

		LSfiler  	=  space(30)
		************************************************************
		LStmp1		=	LStipo+LScgc+LSinsc+LSdtemi+LSuf+LSmodelo+;
						LSserie+LSsubserie+LSnumero+LScfo+;
						LSbase_icms+LSvlr_icms+LSdespesa+;
						LSstatus+LSfiler
		************************************************************
		=FPUT(LNctrl,LStmp1,126)
		LN_Ctr	=	LN_Ctr + 1
		SKIP
	ENDDO

	*-------------------------------------------------------------------*
	*	NOTAS DE ENTRADA
	*-------------------------------------------------------------------*

	*-------------------------------------------------------------------*
	*	NOTAS DE ENTRADA
    * 		WHERE  ch_produ <> "9"  FAZ COM QUE AS NOTAS DE CONHECIMENTO;
    *      DE TRANSP NAO SEJAM SELECIONADAS
	*-------------------------------------------------------------------*


	SELECT 	;
		NF.empresa   , NF.nota,      NF.serie,    ;
        NF.codforn   , NF.inscricao,  NF.uf, ;
		NF.tipo,       NF.data,      NF.data_emi,  ;
		NF.vlrfrete,   NF.vlrseguro,    NF.vlrdespes,;
        NF.total_nota  AS VlrNota,;
		IIF(IT.tp_mercad <> 2,TP.cfo, TP.cfosubs) as SET_CFO,;
	  	NF.aliq_icms,;
		NF.TOTAL_NOTA,;
	  	NF.base_subs,;
	  	NF.icms_subs,;
	  	IIF(NF.BASE_SUBS = 0,NF.base_icms,NF.base_icms*0)     AS BASE_ICMS,;
	  	IIF(NF.BASE_SUBS = 0,NF.VLR_ICMS,NF.VLR_ICMS*0)      AS VLR_ICMS,;
		NF.BASE_ISENT ,;
		(NF.base_outr+NF.BASE_ISS)  AS BASE_OUTR ;
   	FROM  &dbf_NFETMP  NF,;
   	      &dbf_TIP     TP,;
   	      &dbf_INETMP  IT ;
    WHERE ;
            LEFT(NF.situacao,1) = "C" ;
		AND NF.ch_produ <> "9" ;
        AND NF.CH_OPERA         <> "5" ;
   		AND NF.TIPO             = TP.TIPO ;
   	    AND TP.PROCESSO         $ "Ee" ;
   		AND IT.TIPO             = NF.TIPO ;
   		AND IT.EMPRESA          = NF.EMPRESA    ;
   		AND IT.NOTA             = NF.NOTA         ;
   		AND IT.SERIE            = NF.SERIE        ;
   		AND IT.FAVORECIDO       = NF.FAVORECIDO ;
    GROUP BY NF.EMPRESA, NF.DATA, NF.NOTA, SET_CFO, IT.ALIQ_ICMS ;
    INTO CURSOR TMPLIVR

    SELECT * FROM TMPLIVR NF;
      WHERE  NF.ICMS_SUBS > 0 ;
	    ORDER BY NF.EMPRESA, NF.DATA, NF.NOTA, NF.SET_CFO, NF.ALIQ_ICMS ;
	    INTO CURSOR LIVROENT

	GO TOP

	LStipo  		= "53"
	DO WHILE !EOF()
		LSmsg = "Subst.Entrada (53) "+;
				 	DTOC(LIVROENT.DATA)+;
					STR(LIVROENT.NOTA,6)
		WAIT WINDOW LSmsg NOWAIT


		*-----------------------------------------------------------*
		SELE fornece
		SET ORDER TO TAG codigo
		SEEK LIVROENT.codforn
		IF FOUND()
			LSinsc	=  ALLTRIM(fornece.inscricao)
			LScgc	=  CHRTRAN(STR(fornece.cgc,14)," ","0")
		ELSE
			LSinsc	=  ALLTRIM(LIVROENT.inscricao)
			LScgc	=  CHRTRAN(STR(LIVROENT.favorecido,14)," ","0")
		ENDIF

		IF "ISENTO" $ UPPER(LSinsc)
			LSinsc	=  "ISENTO"
			LScgc	=  CHRTRAN(STR(0,14)," ","0")
		ELSE
			LSinsc	=  CHRTRAN(LSinsc,".","")
			LSinsc	=  CHRTRAN(LSinsc,"/","")
			LSinsc	=  CHRTRAN(LSinsc,"-","")
			LSinsc	=  CHRTRAN(LSinsc,"(","")
			LSinsc	=  CHRTRAN(LSinsc,")","")
		ENDIF			
		LSinsc		= LEFT(LSinsc+space(14),14)
		SELECT LIVROENT

		LSdtemi		=	STR(YEAR(LIVROENT.data),4)+;
						STR(MONTH(LIVROENT.data),2)+;
						STR(DAY(LIVROENT.data),2)
		LSdtemi		=   CHRTRAN(LSdtemi," ","0")						

		LSuf		=	LIVROENT.uf
		LSmodelo 	=   "01"
*		LSserie		=   "  1"
*		LSsubserie  = 	"  "

		LSserie		=   LIVROENT.serie+"  "
		LSsubserie  = 	"  "

		LSnumero 	= 	CHRTRAN(STR(LIVROENT.NOTA,6)," ","0")

		LScfo		=   CHRTRAN(LIVROENT.SET_CFO,".","")						
		LScfo		=   CHRTRAN(LScfo,".","")						
        IF LIVROENT.DATA <= {31.12.2002}
           LScfo = LEFT(LScfo,3)
        ENDIF
        LScfo	=   LEFT(LScfo,3)


		SELE LIVROENT


		*-- > Base de Substituicao
		LSbase_icms	=	str(LIVROENT.base_subs,14,2)						
		LSbase_icms	=   CHRTRAN(LSbase_icms," ","0")						
		LSbase_icms	=   CHRTRAN(LSbase_icms,",","")						
		LSbase_icms	=   CHRTRAN(LSbase_icms,".","")						

		*-- > ICMS de Substituicao
		LSvlr_icms	=	STR(LIVROENT.icms_subs,14,2)
		LSvlr_icms	=   CHRTRAN(LSvlr_icms," ","0")						
		LSvlr_icms	=   CHRTRAN(LSvlr_icms,",","")						
		LSvlr_icms	=   CHRTRAN(LSvlr_icms,".","")						

		*--- > Despesas acessorias
		LSdespesa=	LIVROENT.vlrfrete+LIVROENT.vlrseguro+LIVROENT.vlrdespes
		LSdespesa=	 str(LSdespesa,14,2)						
		LSdespesa=   CHRTRAN(LSdespesa," ","0")						
		LSdespesa=   CHRTRAN(LSdespesa,",","")						
		LSdespesa=   CHRTRAN(LSdespesa,".","")						
		

		LSstatus = "N"
		LSfiler  	=  space(30)
		************************************************************
		LStmp1		=	LStipo+LScgc+LSinsc+LSdtemi+LSuf+LSmodelo+;
						LSserie+LSsubserie+LSnumero+LScfo+;
						LSbase_icms+LSvlr_icms+LSdespesa+;
						LSstatus+LSfiler
		************************************************************
		=FPUT(LNctrl,LStmp1,126)
		LN_Ctr	=	LN_Ctr + 1
		SKIP
	ENDDO

RETURN

*****************************************************************
*  REGISTRO DE ITENS - 54 - ENTRADA E SAIDA
*****************************************************************

FUNCTION UL31R_54
	PARAMETERS LNemp, LNctrl, LDper_ini, LDper_fim, LN_Ctr
	PRIVATE LNctrOrdem

	*-------------------------------------------------------------------*
	*	ITENS DAS NOTAS DE SAIDA
	*-------------------------------------------------------------------*


	SELECT 	empresa,nota,serie, cupom, favorecido,tp_pessoa,;
			inscricao, uf, cfo AS SET_CFO ,tipo,;
	        data, total_nota,;
		    vlrfrete,vlrseguro,vlrdespes,;
	  		base_subs, icms_subs, base_icms, aliq_icms,;
	  		(base_icms * aliq_icms/100) as vlr_icms,;
		    base_isent,base_outr,status;
		FROM  &dbf_NFSTMP   ;
	    WHERE operacao =  "S" AND CUPOM = 0;
    ORDER BY DATA, NOTA ;
  	INTO CURSOR LIVROSAI

	GO TOP

	DO WHILE !EOF()
	
		LSmsg = "Produtos Saida (54) "+;
				 	DTOC(LIVROSAI.DATA)+;
					STR(LIVROSAI.NOTA,6)
		WAIT WINDOW LSmsg NOWAIT

		LStipo  	=   "54"

		
		*----------------------------------------------------------*
		LScgc	=  CHRTRAN(STR(LIVROSAI.favorecido,14)," ","0")
		*----------------------------------------------------------*

		LSinsc	=  ALLTRIM(LIVROSAI.inscricao)
		LSuf	=  LIVROSAI.uf

		IF !UPInscricao(LSuf,LSinsc,1,0,0,'')
			IF LIVROSAI.favorecido = 0
				LSinsc	=  "ISENTO"
			ELSE
				SELE clientes
				SET ORDER TO TAG cliente
				SEEK LIVROSAI.favorecido
				IF  FOUND() AND;
					UPInscricao(clientes.estado,clientes.INSCRICAO,1,0,0,'')
					&& CFOs Inciados em 5 o estado deve ser igual ao do
					&& informante
					DO CASE
						CASE LEFT(LIVROSAI.SET_CFO,1) = "5" ;
							AND clientes.estado = empresa.estado
							LSinsc	=  ALLTRIM(clientes.inscricao)
							LSuf	=	clientes.estado
						CASE LEFT(LIVROSAI.SET_CFO,1) <> "5" ;
							AND clientes.estado <> empresa.estado
							LSinsc	=  ALLTRIM(clientes.inscricao)
							LSuf	=	clientes.estado
					ENDCASE
				ELSE
					LSinsc	=  ALLTRIM(LIVROSAI.inscricao)
				ENDIF		
			ENDIF
		ENDIF

		SELE LIVROSAI
		IF "ISENTO" $ UPPER(LSinsc)
			LScgc	=  CHRTRAN(STR(0,14)," ","0")
		ENDIF			
		IF LIVROSAI.TP_PESSOA = 1
			LScgc	=  CHRTRAN(STR(0,14)," ","0")
		ENDIF			
			
		LSmodelo 	=   "01"
		LSserie		=   "  1"
		LSsubserie  = 	"  "

		LSserie		=   LIVROSAI.serie+"  "
		LSsubserie  = 	"  "


		LSnumero 	= 	CHRTRAN(STR(LIVROSAI.NOTA,7)," ","0")
		LSnumero 	= 	SUBS(LSnumero,2,6)

		SELE ITEMMOV
		SET ORDER TO TAG itensnota
		SET NEAR ON
		SEEK STR(LNemp,3)+"S"+STR(LIVROSAI.NOTA,7)
		SET NEAR OFF
		LNctrordem = 1		&& INDICAR ORDEM DO PRODUTO NA NOTA

		DO WHILE !EOF() AND LIVROSAI.NOTA = itemmov.nota ;
						AND LEFT(itemmov.operacao,1) = "S"
			*--------------------------------------------------*
			* 	Podem ser identificadas itens de sadida com
			* numero de nota conincidenter  com itens de uma
			*	SCA por isso e feito a verificacao do tipo
			*---------------------------------------------------*
			IF 	LIVROSAI.TIPO 	 <> itemmov.tipo
				SKIP
				LOOP
			ENDIF
			*---------------------------------------------------*
			DO ULitem_75  && REGISTRAR ITEM COMERCIALIZADO
			*---------------------------------------------------*			
			SELE ITEMMOV

			LSordem = CHRTRAN(STR(LNctrordem,3)," ","0")
			LNctrordem	= LNctrordem + 1
			LScodigo=  LEFT(itemmov.codigo,10)+space(4)

			LSqtde	= STR(itemmov.qtde,14,3)			
			LSqtde  = CHRTRAN(LSqtde," ","0")
			LSqtde  = CHRTRAN(LSqtde,",","")
			LSqtde  = CHRTRAN(LSqtde,".","")

			LSvalor	= STR(itemmov.vlrvenda,13,2)			
			LSvalor = CHRTRAN(LSvalor," ","0")
			LSvalor = CHRTRAN(LSvalor,",","")
			LSvalor = CHRTRAN(LSvalor,".","")

			LSdesconto	= STR(0,13,2)			
			LSdesconto  = CHRTRAN(LSdesconto," ","0")
			LSdesconto  = CHRTRAN(LSdesconto,",","")
			LSdesconto  = CHRTRAN(LSdesconto,".","")

			LSbase_icms = STR(itemmov.base_calc,13,2)			
			LSbase_icms = CHRTRAN(LSbase_icms," ","0")
			LSbase_icms = CHRTRAN(LSbase_icms,",","")
			LSbase_icms = CHRTRAN(LSbase_icms,".","")

			LSbase_subs = (itemmov.base_calc*itemmov.iva)
			LSbase_subs = STR(LSbase_subs,13,2)			
			LSbase_subs = CHRTRAN(LSbase_subs," ","0")
			LSbase_subs = CHRTRAN(LSbase_subs,",","")
			LSbase_subs = CHRTRAN(LSbase_subs,".","")

			LSvlripi	= STR(0,13,2)			
			LSvlripi	= CHRTRAN(LSvlripi," ","0")
			LSvlripi 	= CHRTRAN(LSvlripi,",","")
			LSvlripi 	= CHRTRAN(LSvlripi,".","")

			LSaliq_icms	=	str(itemmov.aliq_icms,5,2)						
			LSaliq_icms	=   CHRTRAN(LSaliq_icms," ","0")						
			LSaliq_icms	=   CHRTRAN(LSaliq_icms,",","")						
			LSaliq_icms	=   CHRTRAN(LSaliq_icms,".","")						
			
			LScfo		=   CHRTRAN(LIVROSAI.SET_cfo,".","")						
	
			SELE TIPOOPER
			SET ORDER TO TAG TIPO
			SEEK "S"+LIVROSAI.tipo
			IF !FOUND()
  			    SEEK "s"+LIVROSAI.tipo
			ENDIF
			
            IF itemmov.tp_mercad = 2
   			    LScfo	= tipooper.cfosubs
   			else
   			    LScfo	= tipooper.cfo
			endif
			
   		    LScfo		=   CHRTRAN(LScfo,".","")						

            IF LScfo = ""
               set step on
            ENDIF


            IF LIVROSAI.DATA <= {31.12.2002}
               LScfo = LEFT(LScfo,3)
            ENDIF
            LScfo	=   LEFT(LScfo,3)


			*******************************************************

			LStmp1		= LStipo+LScgc+LSmodelo+LSserie+;
						  LSsubserie+LSnumero+LScfo+LSordem+;
						  LScodigo+LSqtde+LSvalor+LSdesconto+LSbase_icms+;
						  LSbase_subs+LSvlripi+LSaliq_icms
			=FPUT(LNctrl,LStmp1,126)
			LN_Ctr	=	LN_Ctr + 1
			*******************************************************			
            SELECT itemmov
			SKIP
		ENDDO
		SELECT LIVROSAI
		SKIP
	ENDDO

	*-------------------------------------------------------------------*
	*	NOTAS DE ENTRADA
	*-------------------------------------------------------------------*

	SELECT 	empresa,nota,serie,favorecido, codforn,;
			inscricao, data, uf, cfo AS SET_CFO,tipo,;
			total_nota, vlrfrete,vlrseguro,vlrdespes,;
			vlrfrete,vlrseguro,vlrdespes,;
            base_subs,icms_subs, base_icms, ;
	  		vlr_icms, base_isent,base_outr,aliq_icms,status;
		FROM &dbf_NFETMP ;
	 	WHERE  icms_subs > 0 	  ;
   			AND ch_produ <> "9"   ;
	    ORDER BY DATA, NOTA ;
   		INTO CURSOR LIVROENT
	GO TOP

	DO WHILE !EOF()
		LSmsg = "Produtos Entrada (54) "+;
				 	DTOC(LIVROENT.DATA)+;
					STR(LIVROENT.NOTA,6)
		WAIT WINDOW LSmsg NOWAIT

		LStipo  	= "54"

		*-----------------------------------------------------------*
		SELE fornece
		SET ORDER TO TAG codigo
		SEEK LIVROENT.codforn
		IF FOUND()
			LSinsc	=  ALLTRIM(fornece.inscricao)
			LScgc	=  CHRTRAN(STR(fornece.cgc,14)," ","0")
		ELSE
			LSinsc	=  ALLTRIM(LIVROENT.inscricao)
			LScgc	=  CHRTRAN(STR(LIVROENT.favorecido,14)," ","0")
		ENDIF
		*-----------------------------------------------------------*
		SELE LIVROENT

		IF "ISENTO" $ UPPER(LSinsc)
			LScgc	=  CHRTRAN(STR(0,14)," ","0")
		ENDIF
		LSmodelo 	=   "01"
	*	LSserie		=   "  1"
	*	LSsubserie  = 	"  "

		LSserie		=   LIVROENT.serie+"  "
		LSsubserie  = 	"  "


		LSnumero 	= 	CHRTRAN(STR(LIVROENT.NOTA,6)," ","0")


		SELE LIVROENT

        IF LIVROENT.DATA <= {31.12.2002}
           LScfo = LEFT(LScfo,3)
        ENDIF
        LScfo	=   LEFT(LScfo,3)


		SELE ITEMMOV
		SET ORDER TO TAG itensnota
		SET NEAR ON
		SEEK STR(LNemp,3)+"E"+STR(LIVROENT.NOTA,7)
		SET NEAR OFF
		LNctrordem	= 1

		DO WHILE !EOF() AND LIVROENT.NOTA = itemmov.nota ;
						AND LEFT(itemmov.operacao,1) = "E"
			*--------------------------------------------------*
			* 	Podem ser identificadas itens de entrada com mesmo
			* numero de nota por isso e feito a verificacao do tipo
			* e do codiforn
			*---------------------------------------------------*
			IF 	LIVROENT.TIPO 	 <> itemmov.tipo OR ;
				LIVROENT.CODFORN <> itemmov.codforn
				SKIP
				LOOP
			ENDIF
			*---------------------------------------------------*
			DO ULitem_75  && REGISTRAR ITEM COMERCIALIZADO
			*---------------------------------------------------*			

			LSordem = CHRTRAN(STR(LNctrordem,3)," ","0")
			LNctrordem	= LNctrordem + 1
			LScodigo=  LEFT(itemmov.codigo,10)+space(4)


			LSqtde	= STR(itemmov.qtde,14,3)			
			LSqtde  = CHRTRAN(LSqtde," ","0")
			LSqtde  = CHRTRAN(LSqtde,",","")
			LSqtde  = CHRTRAN(LSqtde,".","")

			LSvalor	= STR(itemmov.vlrvenda,13,2)			
			LSvalor = CHRTRAN(LSvalor," ","0")
			LSvalor = CHRTRAN(LSvalor,",","")
			LSvalor = CHRTRAN(LSvalor,".","")

			LSdesconto	= STR(0,13,2)			
			LSdesconto  = CHRTRAN(LSdesconto," ","0")
			LSdesconto  = CHRTRAN(LSdesconto,",","")
			LSdesconto  = CHRTRAN(LSdesconto,".","")

			LSbase_icms = STR(itemmov.base_calc,13,2)			
			LSbase_icms = CHRTRAN(LSbase_icms," ","0")
			LSbase_icms = CHRTRAN(LSbase_icms,",","")
			LSbase_icms = CHRTRAN(LSbase_icms,".","")

			LSbase_subs = (itemmov.base_calc+itemmov.vlripi)*itemmov.iva
			LSbase_subs = STR(LSbase_subs,13,2)			
			LSbase_subs = CHRTRAN(LSbase_subs," ","0")
			LSbase_subs = CHRTRAN(LSbase_subs,",","")
			LSbase_subs = CHRTRAN(LSbase_subs,".","")

			LSvlripi	= STR(itemmov.vlripi,13,2)			
			LSvlripi	= CHRTRAN(LSvlripi," ","0")
			LSvlripi 	= CHRTRAN(LSvlripi,",","")
			LSvlripi 	= CHRTRAN(LSvlripi,".","")

			LSaliq_icms	=	str(itemmov.aliq_icms,5,2)						
			LSaliq_icms	=   CHRTRAN(LSaliq_icms," ","0")						
			LSaliq_icms	=   CHRTRAN(LSaliq_icms,",","")						
			LSaliq_icms	=   CHRTRAN(LSaliq_icms,".","")						


			LScfo		=   CHRTRAN(LIVROENT.SET_cfo,".","")						
	
			SELE TIPOOPER
			SET ORDER TO TAG TIPO
			SEEK "E"+LIVROENT.tipo
			IF !FOUND()
  			    SEEK "e"+LIVROENT.tipo
			ENDIF
            IF itemmov.tp_mercad = 2
   			    LScfo	= tipooper.cfosubs
   			else
   			    LScfo	= tipooper.cfo
			endif
   		    LScfo		=   CHRTRAN(LScfo,".","")						

            IF LIVROSAI.DATA <= {31.12.2002}
               LScfo = LEFT(LScfo,3)
            ENDIF
            LScfo	=   LEFT(LScfo,3)


			
			*******************************************************			
			LStmp1		= LStipo+LScgc+LSmodelo+LSserie+;
						  LSsubserie+LSnumero+LScfo+LSordem+;
						  LScodigo+LSqtde+LSvalor+LSdesconto+LSbase_icms+;
						  LSbase_subs+LSvlripi+LSaliq_icms
			=FPUT(LNctrl,LStmp1,126)
			LN_Ctr	=	LN_Ctr + 1
			*******************************************************			
            SELECT itemmov
			SKIP
		ENDDO
		SELECT LIVROENT
		SKIP
	ENDDO

RETURN

PROCEDURE ULitem_75
	*-----------------------------------------------------------*
	* REGISTRA ITENS COMERCIALIZADOS PARA REGISTRO TIPO 75
	*-----------------------------------------------------------*
	PRIVATE LSalias
	LSalias = ALIAS()

	SELE ITENSNEGOC
	SET ORDER TO TAG CODIGO
	m.codigo	= itemmov.codigo
	SEEK m.codigo
	IF !FOUND()
 		IF LEFT(m.codigo,5) <> "99999" AND EMPTY(itemmov.descricao)		
			SELE grupo
			SET ORDER TO TAG codigo
			SEEK m.codigo
			IF FOUND()
				m.descricao = grupo.descricao
			ELSE
				m.descricao = itemmov.descricao
			ENDIF
		ELSE
			m.descricao = itemmov.descricao
			IF empty(m.descricao)
				m.descricao = LEFT("SERVICO"+SPACE(25),25)
			ENDIF
		ENDIF
		*--------------------------------------------------------*
		SELE ITENSNEGOC
 		IF LEFT(m.codigo,5) <> "99999" AND EMPTY(itemmov.descricao)		
			m.classifica= itemmov.classifica
		ELSE
			m.classifica= "999999999999"
		ENDIF
		m.status	= 1
		m.cdg_tipo	= 4
		m.unidade 	= itemmov.unidade
		m.aliq_ipi	= itemmov.aliq_ipi
		m.aliq_icms	= itemmov.aliq_icms
		m.iva		= itemmov.iva
		m.tp_mercad = itemmov.tp_mercad
		=edithand("SAVE")
	ENDIF
	IF !EMPTY(LSalias) AND USED(LSalias)
		SELECT &LSalias
	ENDIF
RETURN

*****************************************************************
*  REGISTRO CUPONS  - 60 -
*****************************************************************



FUNCTION UL31R_60
	PARAMETERS LNemp, LNctrl, LDper_ini, LDper_fim, LN_Ctr

	*-------------------------------------------------------------------*
	* PROCESSO SOBRE RESUMO DO MAPAECF
	*-------------------------------------------------------------------*
	
*	SELECT  "5.00"   AS CFO ,      ;
*			DATA,ALIQUOTA AS ALIQ_ICMS,;
*			"XX" AS UF, ;
*		 	VLRCONTAB 	    						  AS TOTAL_NOTA,;
*		 	(VLRCONTAB-VLRISENT-VLRSERVICO-VLRSUBST)  AS BASE_ICMS,;
*			VLRISENT								  AS BASE_ISENT,;
*			VLROUTRO								  AS BASE_OUTR,;
*			VLRSERVICO      						  AS BASE_ISS,;
*			VLRSUBST 								  AS BASE_SUBS,;
*			CANCELA;
*		FROM &dbf_MAPA ;
*		WHERE    data >= LDper_ini;
*		   	AND  data <= LDper_fim;
*		GROUP BY DATA,ALIQ_ICMS,UF;
*   	INTO CURSOR LIVROSAI


	*-------------------------------------------------------------------*

	*----------------------------------------------------------*
	*  TEMPORARIO PARA AGREGAR CUPONS NORMAIS
	*----------------------------------------------------------*
	LSarqtmp 	= "" 			&& EX: C:\TMP\TMP0001
	LSaliastmp 	= "CPM" 		&&     TMP001
	LSaliastmp = UPopentmp(wp_dirtmp,LSarqtmp,LSaliastmp,1)
	IF EMPTY(LSaliastmp)
		DO OBJ_ALER.SPR  WITH ;
			"FALHA !!! NЖo Foi Possivel Definir Arquivo Temporario"
		RETURN
	ENDIF
	dbf_CPMTMP  = wp_dirtmp+LSaliastmp+".DBF"
	als_CPMTMP  = LSaliastmp
	*----------------------------------------------------------*
	*  TEMPORARIO PARA AGREGAR CUPONS CANCELADOS
	*----------------------------------------------------------*
	LSarqtmp 	= "" 			&& EX: C:\TMP\TMP0001
	LSaliastmp 	= "CAN" 		&&     TMP001
	LSaliastmp = UPopentmp(wp_dirtmp,LSarqtmp,LSaliastmp,1)
	IF EMPTY(LSaliastmp)
		DO OBJ_ALER.SPR  WITH ;
			"FALHA !!! NЖo Foi Possivel Definir Arquivo Temporario"
		RETURN
	ENDIF
	dbf_CANTMP  = wp_dirtmp+LSaliastmp+".DBF"
	als_CANTMP  = LSaliastmp
	*----------------------------------------------------------*
	*-------------------------------------------------------------------*
	* PROCESSO APURANDO CUPONS EMITIDOS E NAO CANCELADOS MAPAECF
	*-------------------------------------------------------------------*
 	SELECT  "5.00" AS CFO ,  ;
			DATA, ;
			ALIQ_ICMS, ;
			"XX"			 	AS UF, ;
		 	SUM(TOTAL_NOTA)  	AS TOTAL_NOTA,;
		 	SUM(BASE_ICMS)   	AS BASE_ICMS,;
			SUM(BASE_ISENT)  	AS BASE_ISENT,;
			SUM(BASE_OUTR)   	AS BASE_OUTR,;
			SUM(BASE_ISS)    	AS BASE_ISS,;
			SUM(BASE_SUBS)   	AS BASE_SUBS,;
			0*SUM(BASE_SUBS)      AS CANCELA;
	FROM &dbf_NFSTMP ;
		WHERE   status = 1 ;
			AND  operacao  = "S" ;
		   	AND  cupom > 0 ;
	GROUP BY DATA,ALIQ_ICMS;
   	INTO TABLE &dbf_CPMTMP

	*-------------------------------------------------------------------*
	* PROCESSO APURANDO CUPONS  CANCELADOS
	*-------------------------------------------------------------------*


 	SELECT  "5.00" AS CFO ,  ;
			DATA, ;
			ALIQ_ICMS, ;
			"XX"			 AS UF, ;
		 	0     AS TOTAL_NOTA,;
		 	0	 AS BASE_ICMS,;
			0	 AS BASE_ISENT,;
			0	 AS BASE_OUTR,;
			0	 AS BASE_ISS,;
			0	 AS BASE_SUBS,;
		 	SUM(TOTAL_NOTA)  AS CANCELA;
	FROM &dbf_NFSTMP ;
		WHERE   status = 2 ;
		    AND  operacao  = "S" ;
		    AND  cupom > 0 ;
	GROUP BY DATA,ALIQ_ICMS;
   	INTO TABLE &dbf_CANTMP

	*-------------------------------------------------------------------*
	* PROCESSO FUSAO CUPONS NORMAIS E CANCELADOS
	*-------------------------------------------------------------------*

   	SELECT  &als_CPMTMP
	append from   &dbf_CANTMP

	*-------------------------------------------------------------------*
	* PROCESSO AGRUPAMENTO DE CUPONS NORMAIS E CANCELADOS
	*-------------------------------------------------------------------*

 	SELECT  "5.00" AS CFO ,  ;
			DATA, ;
			ALIQ_ICMS, ;
			"XX"			 	AS UF, ;
		 	SUM(TOTAL_NOTA)  	AS TOTAL_NOTA,;
		 	SUM(BASE_ICMS)   	AS BASE_ICMS,;
			SUM(BASE_ISENT)  	AS BASE_ISENT,;
			SUM(BASE_OUTR)   	AS BASE_OUTR,;
			SUM(BASE_ISS)    	AS BASE_ISS,;
			SUM(BASE_SUBS)   	AS BASE_SUBS,;
			SUM(CANCELA)        AS CANCELA;
	FROM &dbf_CPMTMP ;
	GROUP BY DATA,ALIQ_ICMS;
   	INTO CURSOR LIVROSAI




	SELECT LIVROSAI

	go top


	DO WHILE !EOF()
		LSmsg = "Resum.Cupons (60) "+;
				 	DTOC(LIVROSAI.DATA)
		WAIT WINDOW LSmsg NOWAIT

		*---------------------------------------------------------
		*--> PROCESSAR SOMENTE O REGISTRO RESUMO DOS CUPONS
		* REGISTROS SAO GERADOS QUANDO PROCESSO O ARQUIVO LIVROSAI
		* RESUMINDO OS CUPONS POR DATA E ALIQUOTA

		LDtqbr		= 	LIVROSAI.data
		LSvalor		= 	0
		LSvlr_icms	= 	0
		LSnroini	=   0
		LSnrofim	=   0
		*--------------------------------------------------------------*
		=W_DEFPROC("NOTA.SPR")
		=NFEcfInforme((LNemp),(LDtqbr),(LDtqbr),LSnroIni,LSnroFim,;
					LSvalor, LSvlr_icms)
		*--------------------------------------------------------------*
		*	Identifica‡Жo do Equipamento
		*--------------------------------------------------------------*
		LStipo  	= "60"
		LSMestre	= "M"
		LSdtemi		=	STR(YEAR(LDtqbr),4)+;
						STR(MONTH(LDtqbr),2)+;
						STR(DAY(LDtqbr),2)
		LSdtemi		=   CHRTRAN(LSdtemi," ","0")						

		LSnumero 	= 	"001"
		LSserie     =   empresa.ecf_serie
		LSmodelo	=	"2D"
		
		LSnroini	=   CHRTRAN(STR(LSnroini,6)," ","0")
		LSnrofim	=   CHRTRAN(STR(LSnrofim,6)," ","0")

		SELE mapaecf
		SET NEAR ON
		SET ORDER TO TAG mapa
		SEEK STR(LNemp,3)+DTOS(LDtqbr)+STR(1,4)+STR(17,5,2)	
		SET NEAR OFF
		IF mapaecf.empresa = LNemp AND ;
		   mapaecf.data    = LDtqbr AND ;
		   mapaecf.ecf		= 1 AND ;
		   mapaecf.aliquota = 17
				LSnroredZ		=	mapaecf.ctrreducao
				LSgtInivalor	=	mapaecf.gt_inicial
				LSgtFimvalor	=	mapaecf.gt_final
		ELSE
			SKIP -1
			DO WHILE !BOF() AND mapaecf.empresa = LNemp
				IF  mapaecf.aliquota = 17
					EXIT
				ENDIF
				SKIP -1
			ENDDO
			IF !BOF()
				LSnroredZ		=	mapaecf.ctrreducao
				LSgtInivalor	=	mapaecf.gt_inicial
				LSgtFimvalor	=	mapaecf.gt_final
			ELSE			
				LSnroredZ		=	0
				LSgtInivalor	=	0
				LSgtFimvalor	=	0
			ENDIF
		ENDIF

		LSctrredZ		=   CHRTRAN(STR(LSnroredZ,6)," ","0")

		LSgtInivalor	=	STR(LSgtInivalor,17,2)
		LSgtInivalor	=   CHRTRAN(LSgtInivalor," ","0")						
		LSgtInivalor	=   CHRTRAN(LSgtInivalor,",","")						
		LSgtInivalor	=   CHRTRAN(LSgtInivalor,".","")						

		LSgtFimvalor	=	STR(LSgtFimvalor,17,2)
		LSgtFimvalor	=   CHRTRAN(LSgtFimvalor," ","0")						
		LSgtFimvalor	=   CHRTRAN(LSgtFimvalor,",","")						
		LSgtFimvalor	=   CHRTRAN(LSgtFimvalor,".","")						

		LSbranco_B	=  SPACE(45)
		*******************************************************
		LStmp1		=  LStipo+"M"+LSdtemi+LSnumero+LSserie+;
					+LSmodelo+LSnroini+LSnrofim+LSctrredZ+;
					LSgtIniValor+LSgtFimValor+LSbranco_B

		=FPUT(LNctrl,LStmp1,126)
		LN_Ctr	=	LN_Ctr + 1
		*******************************************************			




		SELECT LIVROSAI
		LNctrRegAnaliticos = 0
		DO WHILE !EOF() AND LDTqbr = LIVROSAI.data

			IF (LIVROSAI.CANCELA) > 0
				LSaliq_icms	=	"CANC"
				LSvalor		=	STR(LIVROSAI.CANCELA,13,2)
				LSvalor		=   CHRTRAN(LSvalor," ","0")						
				LSvalor		=   CHRTRAN(LSvalor,",","")						
				LSvalor		=   CHRTRAN(LSvalor,".","")						
				LSbranco_B	=  SPACE(96)
				*******************************************************
				LStmp1		=  LStipo+"A"+LSdtemi+LSnumero+LSaliq_icms+;
					+LSvalor+LSbranco_B
				=FPUT(LNctrl,LStmp1,126)
				LN_Ctr	=	LN_Ctr + 1
				*******************************************************			
			ENDIF
			*******************************************************			

			IF LIVROSAI.base_icms > 0

				LSaliq_icms	=	str(LIVROSAI.aliq_icms,5,2)						
				LSaliq_icms	=   CHRTRAN(LSaliq_icms," ","0")						
				LSaliq_icms	=   CHRTRAN(LSaliq_icms,",","")						
				LSaliq_icms	=   CHRTRAN(LSaliq_icms,".","")						

				LSvalor		=	STR(LIVROSAI.base_icms,13,2)
				LSvalor		=   CHRTRAN(LSvalor," ","0")						
				LSvalor		=   CHRTRAN(LSvalor,",","")						
				LSvalor		=   CHRTRAN(LSvalor,".","")						
		
				LSbranco_B	=  SPACE(96)
				LNctrRegAnaliticos = LNctrRegAnaliticos + 1
				*******************************************************
				LStmp1		=  LStipo+"A"+LSdtemi+LSnumero+LSaliq_icms+;
						+LSvalor+LSbranco_B
				=FPUT(LNctrl,LStmp1,126)
				LN_Ctr	=	LN_Ctr + 1
				*******************************************************			
			ENDIF
			






			IF (LIVROSAI.BASE_ISS) > 0
				LSaliq_icms	=	"ISS "
				LSvalor		=	LIVROSAI.BASE_ISS

				LSvalor		=	STR(LSvalor,13,2)
				LSvalor		=   CHRTRAN(LSvalor," ","0")						
				LSvalor		=   CHRTRAN(LSvalor,",","")						
				LSvalor		=   CHRTRAN(LSvalor,".","")						
				LSbranco_B	=  SPACE(96)
				*******************************************************
				LStmp1		=  LStipo+"A"+LSdtemi+LSnumero+LSaliq_icms+;
						+LSvalor+LSbranco_B
				=FPUT(LNctrl,LStmp1,126)
				LN_Ctr	=	LN_Ctr + 1
				*******************************************************			
			ENDIF
	
			*----------------------------------------------------------*
			* ATENЂЗO : NO RESUMO DO LIVRO O VALOR DE MERCADORIAS
			*          VENDIDAS COM RECOLHIMENTO EM REGIME DE
			*		   SUBSTITUIЂЗO SAO LANCADOS  EM "ISENTO"
			*          JA O SINTEGRA LANCA NA OPCAO "F" DE MERCADORIA
			*           EM REGIME SUBSTITUIЂЗO
			*----------------------------------------------------------*
			*   NESTE CASO E ATE SEGUNDA ORDEM ESTAMOS PASSANDO
			* A COLUNA ISENTAS PARA "F"
			*----------------------------------------------------------*

			IF (LIVROSAI.base_isent + LIVROSAI.BASE_SUBS) > 0
				LSaliq_icms	=	"F   "
				LSvalor 	=	LIVROSAI.base_isent + LIVROSAI.BASE_SUBS

				LSvalor		=	STR(LSvalor,13,2)
				LSvalor		=   CHRTRAN(LSvalor," ","0")						
				LSvalor		=   CHRTRAN(LSvalor,",","")						
				LSvalor		=   CHRTRAN(LSvalor,".","")						
				LSbranco_B	=  SPACE(96)
				*******************************************************
				LStmp1		=  LStipo+"A"+LSdtemi+LSnumero+LSaliq_icms+;
						+LSvalor+LSbranco_B
				=FPUT(LNctrl,LStmp1,126)
				LN_Ctr	=	LN_Ctr + 1
				*******************************************************			
			ENDIF
	
	*		IF LIVROSAI.base_isent > 0
	*			LSaliq_icms	=	"I   "
	*			LSvalor		=	STR(LIVROSAI.base_isent,13,2)
	*			LSvalor		=   CHRTRAN(LSvalor," ","0")						
	*			LSvalor		=   CHRTRAN(LSvalor,",","")						
	*			LSvalor		=   CHRTRAN(LSvalor,".","")						
	*			LSbranco_B	=  SPACE(96)
	*			*******************************************************
	*			LStmp1		=  LStipo+"A"+LSdtemi+LSnumero+LSaliq_icms+;
	*					+LSvalor+LSbranco_B
	*			=FPUT(LNctrl,LStmp1,126)
	*			LN_Ctr	=	LN_Ctr + 1
	*			*******************************************************			
	*		ENDIF
*
*			IF (LIVROSAI.BASE_SUBS) > 0
*				LSaliq_icms	=	"F   "
*				LSvalor		=	STR(LIVROSAI.BASE_SUBS,13,2)
*				LSvalor		=   CHRTRAN(LSvalor," ","0")						
*				LSvalor		=   CHRTRAN(LSvalor,",","")						
*				LSvalor		=   CHRTRAN(LSvalor,".","")						
*				LSbranco_B	=  SPACE(96)
*				*******************************************************
*				LStmp1		=  LStipo+"A"+LSdtemi+LSnumero+LSaliq_icms+;
*						+LSvalor+LSbranco_B
*				=FPUT(LNctrl,LStmp1,126)
*				LN_Ctr	=	LN_Ctr + 1
*			*******************************************************			
*			ENDIF
			*******************************************************			
	
			SKIP
		ENDDO

		SELECT LIVROSAI
		IF EOF()
			EXIT
		ENDIF
	ENDDO
RETURN


FUNCTION ANTES_UL31R_60
	PARAMETERS LNemp, LNctrl, LDper_ini, LDper_fim, LN_Ctr

	*-------------------------------------------------------------------*

	SELECT 	data,nota,aliq_icms, cfo,uf ,  	;
			SUM(totservico)		AS totservico,	;
			SUM(base_iss)       AS base_iss,	;
			SUM(base_icms)		AS base_icms,	;
			SUM(base_sbbrt)     AS base_sbbrt,	;
			SUM(base_subs)      AS base_subs,	;
			SUM(icms_subs)      AS icms_subs,	;
			SUM(base_isent)     AS base_isent,	;
			SUM(base_outr)      AS base_outr,	;
			SUM(totproduto)     AS totproduto,	;
			SUM(vlrfrete)       AS vlrfrete,	;
			SUM(vlrseguro)      AS vlrseguro,	;
			SUM(vlrdespes)       AS vlrdespes,	;
			SUM(vlr_ipi)        AS vlr_ipi,		;
			SUM(total_nota)     AS total_nota	;
	FROM  &dbf_NFSTMP         WHERE ;
   			    operacao =  "S" AND CUPOM > 0;
	GROUP BY data,aliq_icms, cfo,uf	;
    ORDER BY data,aliq_icms, cfo,uf ;
  	INTO CURSOR LIVROSAI

	go top


	DO WHILE !EOF()
		LSmsg = "Resum.Cupons (60) "+;
				 	DTOC(LIVROSAI.DATA)+;
					STR(LIVROSAI.NOTA,7)
		WAIT WINDOW LSmsg NOWAIT

		*---------------------------------------------------------
		*--> PROCESSAR SOMENTE O REGISTRO RESUMO DOS CUPONS
		* REGISTROS SAO GERADOS QUANDO PROCESSO O ARQUIVO LIVROSAI
		* RESUMINDO OS CUPONS POR DATA E ALIQUOTA

		LDtqbr		= 	LIVROSAI.data
		LSvalor		= 	0
		LSvlr_icms	= 	0
		LSnroini	=   0
		LSnrofim	=   0
		*--------------------------------------------------------------*
		=W_DEFPROC("NOTA.SPR")
		=NFEcfInforme((LNemp),(LDtqbr),(LDtqbr),LSnroIni,LSnroFim,;
					LSvalor, LSvlr_icms)
		*--------------------------------------------------------------*
		*	Identifica‡Жo do Equipamento
		*--------------------------------------------------------------*
		LStipo  	= "60"
		LSMestre	= "M"
		LSdtemi		=	STR(YEAR(LDtqbr),4)+;
						STR(MONTH(LDtqbr),2)+;
						STR(DAY(LDtqbr),2)
		LSdtemi		=   CHRTRAN(LSdtemi," ","0")						

		LSnumero 	= 	"001"
		LSserie     =   empresa.ecf_serie
		*LSserie     =   "123456789012345"
		LSmodelo	=	"2D"
		
		LSnroini	=   CHRTRAN(STR(LSnroini,6)," ","0")
		LSnrofim	=   CHRTRAN(STR(LSnrofim,6)," ","0")

		SELE mapaecf
		SET NEAR ON
		SET ORDER TO TAG mapa
		SEEK STR(LNemp,3)+DTOS(LDtqbr)+STR(1,4)+STR(17,5,2)	
		SET NEAR OFF
		IF mapaecf.empresa = LNemp AND ;
		   mapaecf.data    = LDtqbr AND ;
		   mapaecf.ecf		= 1 AND ;
		   mapaecf.aliquota = 17
				LSnroredZ		=	mapaecf.ctrreducao
				LSgtInivalor	=	mapaecf.gt_inicial
				LSgtFimvalor	=	mapaecf.gt_final
		ELSE
			SKIP -1
			DO WHILE !BOF() AND mapaecf.empresa = LNemp
				IF  mapaecf.aliquota = 17
					EXIT
				ENDIF
				SKIP -1
			ENDDO
			IF !BOF()
				LSnroredZ		=	mapaecf.ctrreducao
				LSgtInivalor	=	mapaecf.gt_inicial
				LSgtFimvalor	=	mapaecf.gt_final
			ELSE			
				LSnroredZ		=	0
				LSgtInivalor	=	0
				LSgtFimvalor	=	0
			ENDIF
		ENDIF

		LSctrredZ		=   CHRTRAN(STR(LSnroredZ,6)," ","0")

		LSgtInivalor	=	STR(LSgtInivalor,17,2)
		LSgtInivalor	=   CHRTRAN(LSgtInivalor," ","0")						
		LSgtInivalor	=   CHRTRAN(LSgtInivalor,",","")						
		LSgtInivalor	=   CHRTRAN(LSgtInivalor,".","")						

		LSgtFimvalor	=	STR(LSgtFimvalor,17,2)
		LSgtFimvalor	=   CHRTRAN(LSgtFimvalor," ","0")						
		LSgtFimvalor	=   CHRTRAN(LSgtFimvalor,",","")						
		LSgtFimvalor	=   CHRTRAN(LSgtFimvalor,".","")						

		LSbranco_B	=  SPACE(45)
		*******************************************************
		LStmp1		=  LStipo+"M"+LSdtemi+LSnumero+LSserie+;
					+LSmodelo+LSnroini+LSnrofim+LSctrredZ+;
					LSgtIniValor+LSgtFimValor+LSbranco_B

		=FPUT(LNctrl,LStmp1,126)
		LN_Ctr	=	LN_Ctr + 1
		*******************************************************			
		SELECT LIVROSAI
		LNbase_iss	=	0
		LNbase_sbbrt= 	0
		LNbase_isent=	0
		LNctrRegAnaliticos = 0
		DO WHILE !EOF() AND LDTqbr = LIVROSAI.data


			LNbase_iss	= LNbase_iss	+ LIVROSAI.base_iss
			LNbase_sbbrt= LNbase_sbbrt  + LIVROSAI.base_sbbrt
			LNbase_isent= LNbase_isent  + LIVROSAI.base_isent

			IF LIVROSAI.base_icms = 0
				SKIP
				LOOP
			ENDIF

			LSaliq_icms	=	str(LIVROSAI.aliq_icms,5,2)						
			LSaliq_icms	=   CHRTRAN(LSaliq_icms," ","0")						
			LSaliq_icms	=   CHRTRAN(LSaliq_icms,",","")						
			LSaliq_icms	=   CHRTRAN(LSaliq_icms,".","")						

			LSvalor		=	STR(LIVROSAI.base_icms,13,2)
			LSvalor		=   CHRTRAN(LSvalor," ","0")						
			LSvalor		=   CHRTRAN(LSvalor,",","")						
			LSvalor		=   CHRTRAN(LSvalor,".","")						
		
			LSbranco_B	=  SPACE(96)
			LNctrRegAnaliticos = LNctrRegAnaliticos + 1
			*******************************************************
			LStmp1		=  LStipo+"A"+LSdtemi+LSnumero+LSaliq_icms+;
					+LSvalor+LSbranco_B
			=FPUT(LNctrl,LStmp1,126)
			LN_Ctr	=	LN_Ctr + 1
			*******************************************************			
			SKIP
		ENDDO
		LSaliq_icms	=	"ISS "
		IF FOUND("MAPAECF")
			LSvalor		=	mapaecf.vlrservico
		ELSE
			LSvalor		=	LNbase_iss
		ENDIF

		IF LSvalor > 0
			LSvalor		=	STR(LSvalor,13,2)
			LSvalor		=   CHRTRAN(LSvalor," ","0")						
			LSvalor		=   CHRTRAN(LSvalor,",","")						
			LSvalor		=   CHRTRAN(LSvalor,".","")						
			LSbranco_B	=  SPACE(96)
			*******************************************************
			LStmp1		=  LStipo+"A"+LSdtemi+LSnumero+LSaliq_icms+;
					+LSvalor+LSbranco_B
			=FPUT(LNctrl,LStmp1,126)
			LN_Ctr	=	LN_Ctr + 1
		ENDIF
		*******************************************************			
		LSaliq_icms	=	"F   "
		IF FOUND("MAPAECF")
			LSvalor		=	mapaecf.vlrsubst
		ELSE
			LSvalor		=	LNbase_sbbrt
		ENDIF

		IF LSvalor > 0
			LSvalor		=	STR(LSvalor,13,2)
			LSvalor		=   CHRTRAN(LSvalor," ","0")						
			LSvalor		=   CHRTRAN(LSvalor,",","")						
			LSvalor		=   CHRTRAN(LSvalor,".","")						
			LSbranco_B	=  SPACE(96)
			*******************************************************
			LStmp1		=  LStipo+"A"+LSdtemi+LSnumero+LSaliq_icms+;
					+LSvalor+LSbranco_B
			=FPUT(LNctrl,LStmp1,126)
			LN_Ctr	=	LN_Ctr + 1
			*******************************************************			
		ENDIF
		LSaliq_icms	=	"I   "
		IF FOUND("MAPAECF")
			LSvalor		=	mapaecf.vlrisent
		ELSE
			LSvalor		=	LNbase_isent
		ENDIF

		IF LSvalor > 0
			LSvalor		=	STR(LSvalor,13,2)
			LSvalor		=   CHRTRAN(LSvalor," ","0")						
			LSvalor		=   CHRTRAN(LSvalor,",","")						
			LSvalor		=   CHRTRAN(LSvalor,".","")						
			LSbranco_B	=  SPACE(96)
			*******************************************************
			LStmp1		=  LStipo+"A"+LSdtemi+LSnumero+LSaliq_icms+;
					+LSvalor+LSbranco_B
			=FPUT(LNctrl,LStmp1,126)
			LN_Ctr	=	LN_Ctr + 1
			*******************************************************			
		ENDIF
		LSaliq_icms	=	"CANC"
		IF FOUND("MAPAECF")
			LSvalor		=	mapaecf.cancela
		ELSE
			LSvalor		=	0
		ENDIF
		IF LSvalor > 0
			LSvalor		=	STR(LSvalor,13,2)
			LSvalor		=   CHRTRAN(LSvalor," ","0")						
			LSvalor		=   CHRTRAN(LSvalor,",","")						
			LSvalor		=   CHRTRAN(LSvalor,".","")						
			LSbranco_B	=  SPACE(96)
			*******************************************************
			LStmp1		=  LStipo+"A"+LSdtemi+LSnumero+LSaliq_icms+;
					+LSvalor+LSbranco_B
			=FPUT(LNctrl,LStmp1,126)
			LN_Ctr	=	LN_Ctr + 1
			*******************************************************			
		ENDIF
		SELECT LIVROSAI
		IF EOF()
			EXIT
		ENDIF
	ENDDO
RETURN

*---------------------------------------------------------------------*
*		Conhecimento de Tranporte
*---------------------------------------------------------------------*

FUNCTION UL31R_70
	PARAMETERS LNemp, LNctrl, LDper_ini, LDper_fim, LN_Ctr

	*-------------------------------------------------------------------*
	*	NOTAS DE ENTRADA
	*-------------------------------------------------------------------*
	SELECT 	empresa,nota,serie, codforn,inscricao, data, uf, cfo,tipo,;
	        total_nota, vlrfrete,vlrseguro,vlrdespes,;
            base_subs,icms_subs, base_icms, 	;
	  		vlr_icms, base_isent,base_outr,aliq_icms,status;
		FROM &dbf_NFETMP ;
		WHERE ch_produ = "9" 			;	
	    ORDER BY DATA, NOTA ;
	  	INTO CURSOR LIVROENT

	SELECT LIVROENT
	GO TOP

	LStipo  		= "70"

	DO WHILE !EOF()
		LSmsg = "Conh.Frete (70) "+;
				 	DTOC(LIVROENT.DATA)+;
					STR(LIVROENT.NOTA,6)
		WAIT WINDOW LSmsg NOWAIT
		&& SE NAO FOR CONHECIMENTO DE TRANSPORTE

		*-----------------------------------------------------------*
		SELE fornece
		SET ORDER TO TAG codigo
		SEEK LIVROENT.codforn

		IF FOUND()
			LSinsc	=  ALLTRIM(fornece.inscricao)
			LScgc	=  CHRTRAN(STR(fornece.cgc,14)," ","0")
		ELSE
			LSinsc	=  ALLTRIM(LIVROENT.inscricao)
			LScgc	=  CHRTRAN(STR(LIVROENT.favorecido,14)," ","0")
		ENDIF

		IF "ISENTO" $ UPPER(LSinsc)
			LSinsc	=  "ISENTO"
			LScgc	=  CHRTRAN(STR(0,14)," ","0")
		ELSE
			LSinsc	=  CHRTRAN(LSinsc,".","")
			LSinsc	=  CHRTRAN(LSinsc,"/","")
			LSinsc	=  CHRTRAN(LSinsc,"-","")
			LSinsc	=  CHRTRAN(LSinsc,"(","")
			LSinsc	=  CHRTRAN(LSinsc,")","")
		ENDIF			
		LSinsc			= LEFT(LSinsc+space(14),14)
		*-----------------------------------------------------------*
		SELECT LIVROENT

		LSdtemi		=	STR(YEAR(LIVROENT.data),4)+;
						STR(MONTH(LIVROENT.data),2)+;
						STR(DAY(LIVROENT.data),2)
		LSdtemi		=   CHRTRAN(LSdtemi," ","0")						
		LSuf		=	LIVROENT.uf
		LSmodelo 	=   "08"


		IF  LIVROENT.serie $ "1/2"
			LSserie		=   "U"
			LSsubserie  = 	LIVROENT.serie+" "
		ELSE
			LSserie		=   LIVROENT.serie
			LSsubserie  = 	"U "
		ENDIF

		LSnumero 	= 	CHRTRAN(STR(LIVROENT.NOTA,6)," ","0")

		SELE TIPOOPER
		SET ORDER TO TAG TIPO
		SEEK "E"+LIVROENT.tipo
		IF FOUND()
			LScfo	= tipooper.cfo
		ELSE	
			LScfo		=   CHRTRAN(LIVROENT.SET_cfo,".","")						
		ENDIF
		LScfo		=   CHRTRAN(LScfo,".","")						

        IF LIVROENT.DATA <= {31.12.2002}
           LScfo = LEFT(LScfo,3)
        ENDIF
        LScfo	=   LEFT(LScfo,3)



		SELE LIVROENT

		LSvalor		=	str(LIVROENT.total_nota,15,2)						
		LSvalor		=   CHRTRAN(LSvalor," ","0")						
		LSvalor		=   CHRTRAN(LSvalor,",","")						
		LSvalor		=   CHRTRAN(LSvalor,".","")						

		LSbase_icms	=   IIF(LIVROENT.base_subs > 0, 0, LIVROENT.base_icms)

		LSbase_icms	=	str(LSbase_icms,15,2)						
		LSbase_icms	=   CHRTRAN(LSbase_icms," ","0")						
		LSbase_icms	=   CHRTRAN(LSbase_icms,",","")						
		LSbase_icms	=   CHRTRAN(LSbase_icms,".","")						

		LSvlr_icms	=	IIF(LIVROENT.base_subs > 0, 0, LIVROENT.vlr_icms)

		LSvlr_icms	=	str(LSvlr_icms,15,2)						
		LSvlr_icms	=   CHRTRAN(LSvlr_icms," ","0")						
		LSvlr_icms	=   CHRTRAN(LSvlr_icms,",","")						
		LSvlr_icms	=   CHRTRAN(LSvlr_icms,".","")						

		LSbase_isent=	str(LIVROENT.base_isent,15,2)						
		LSbase_isent=   CHRTRAN(LSbase_isent," ","0")						
		LSbase_isent=   CHRTRAN(LSbase_isent,",","")						
		LSbase_isent=   CHRTRAN(LSbase_isent,".","")						
		
		LSbase_outr	=	str(LIVROENT.base_outr,15,2)						
		LSbase_outr	=   CHRTRAN(LSbase_outr," ","0")						
		LSbase_outr	=   CHRTRAN(LSbase_outr,",","")						
		LSbase_outr	=   CHRTRAN(LSbase_outr,".","")						

		LSCifFob	=	"2"

		LSstatus = "N"
		************************************************************
		LStmp1		=	LStipo+LScgc+LSinsc+LSdtemi+LSuf+LSmodelo+;
						LSserie+LSsubserie+LSnumero+LScfo+LSvalor+;
						LSbase_icms+LSvlr_icms+LSbase_isent+;
						LSbase_outr+LSCifFob+LSstatus
		************************************************************
		=FPUT(LNctrl,LStmp1,126)
		LN_Ctr	=	LN_Ctr + 1
		SKIP
	ENDDO
RETURN

*****************************************************************
*  CADASTRO SE PRODUTOS - 75 -
*****************************************************************

FUNCTION UL31R_75
	PARAMETERS LNemp, LNctrl, LDper_ini, LDper_fim, LN_Ctr

	*-------------------------------------------------------------------*
	*	CADASTRO DOS PRODUTOS COMERCIALIZADOS NO PERIODO
	*-------------------------------------------------------------------*
	SELECT EMPRESA
	SET ORDER TO TAG empresa
	SEEK LNemp
	IF !FOUND()
		RETURN(.F.)
	ENDIF	

	SELE ITENSNEGOC
	SET ORDER TO TAG CODIGO
	GO TOP
	
	DO WHILE !EOF()
		WAIT WINDOW ITENSNEGOC.codigo+ITENSNEGOC.descricao NOWAIT
		
		LStipo	= "75"
		LSdini		=	STR(YEAR(LDper_ini),4)+;
						STR(MONTH(LDper_ini),2)+;
						STR(DAY(LDper_ini),2)
		LSdini		=   CHRTRAN(LSdini," ","0")						

		LSdfim		=	STR(YEAR(LDper_fim),4)+;
						STR(MONTH(LDper_fim),2)+;
						STR(DAY(LDper_fim),2)
		LSdfim		=   CHRTRAN(LSdfim," ","0")						
	
		LScodigo= LEFT(ITENSNEGOC.codigo+SPACE(14),14)

		LSncm   = SPACE(8)

		LSnome	  = LEFT(ITENSNEGOC.descricao+SPACE(53),53)
		LSunidade = LEFT(ITENSNEGOC.unidade+SPACE(6),6)
		LNtab_cst = empresa.tab_cst
		*---------------------------------------------------------*
		*  Buscar CST para operacao mais comum (VLA)
		*---------------------------------------------------------*
		=W_DEFPROC("ORCAMENT.SPR")
		m.cst = ORdefcst((LNtab_cst),("VLA"),(ITENSNEGOC.tp_mercad),;
					ITENSNEGOC.codigo)
		
		*------------------------------------------------------------*
		LScst     	=  	"0"+m.cst+"0"
		LScst		=   CHRTRAN(LScst," ","0")						

		LSaliq_ipi	=	str(ITENSNEGOC.aliq_ipi,5,2)						
		LSaliq_ipi	=   CHRTRAN(LSaliq_ipi," ","0")						
		LSaliq_ipi	=   CHRTRAN(LSaliq_ipi,",","")						
		LSaliq_ipi	=   CHRTRAN(LSaliq_ipi,".","")						

		LSaliq_icms	=	str(17,5,2)						
		LSaliq_icms	=   CHRTRAN(LSaliq_icms," ","0")						
		LSaliq_icms	=   CHRTRAN(LSaliq_icms,",","")						
		LSaliq_icms	=   CHRTRAN(LSaliq_icms,".","")						

		LSaliq_rdz	=	str(0,5,2)						
		LSaliq_rdz 	=   CHRTRAN(LSaliq_rdz ," ","0")						
		LSaliq_rdz 	=   CHRTRAN(LSaliq_rdz ,",","")						
		LSaliq_rdz 	=   CHRTRAN(LSaliq_rdz ,".","")						

		LSaliq_iva	=	str(ITENSNEGOC.iva,13,2)						
		LSaliq_iva	=   CHRTRAN(LSaliq_iva," ","0")						
		LSaliq_iva	=   CHRTRAN(LSaliq_iva,",","")						
		LSaliq_iva	=   CHRTRAN(LSaliq_iva,".","")						


		LSbranco  = SPACE(25)
		*******************************************************
		LStmp1	= LStipo+LSdini+LSdfim+LScodigo+LSncm+LSnome+;
					LSunidade+LScst+LSaliq_ipi+LSaliq_icms+;
					LSaliq_rdz+LSaliq_iva
		=FPUT(LNctrl,LStmp1,126)
		LN_Ctr	=	LN_Ctr + 1
		*******************************************************			
		SELE ITENSNEGOC
		SKIP
	ENDDO
			
RETURN

*****************************************************************
*  TOTALIZADORES  - 90 -
*****************************************************************

FUNCTION UL31R_90
	PARAMETERS LNemp,LNctrl,LNctr_10,LNctr_11,LNctr_50,LNctr_53,LNctr_54,;
				LNctr_60,LNctr_70,LNctr_75

	*-------------------------------------------------------------------*
	*	CADASTRO DOS PRODUTOS COMERCIALIZADOS NO PERIODO
	*-------------------------------------------------------------------*
	SELECT EMPRESA
	SET ORDER TO TAG empresa
	SEEK LNemp
	IF !FOUND()
		RETURN(.F.)
	ENDIF	

	LStipo	= "90"
	LScgc	= 	CHRTRAN(STR(empresa.cgc,14)," ","0")
	LSinsc	= 	CHRTRAN(empresa.inscricao," ","")
	LSinsc	= 	CHRTRAN(LSinsc,".","")
	LSinsc	= 	CHRTRAN(LSinsc,"/","")
	LSinsc	= 	CHRTRAN(LSinsc,"-","")
	LSinsc	= 	LEFT(LSinsc+space(14),14)


	LS_tp50	=	"50"
	LS_ct50	=	CHRTRAN(STR(LNctr_50,8)," ","0")

	LS_tp53	=	"53"
	LS_ct53	=	CHRTRAN(STR(LNctr_53,8)," ","0")

	LS_tp54	=	"54"
	LS_ct54	=	CHRTRAN(STR(LNctr_54,8)," ","0")

	LS_tp60	=	"60"
	LS_ct60	=	CHRTRAN(STR(LNctr_60,8)," ","0")

	LS_tp70	=	"70"
	LS_ct70	=	CHRTRAN(STR(LNctr_70,8)," ","0")

	LS_tp75	=	"75"
	LS_ct75	=	CHRTRAN(STR(LNctr_75,8)," ","0")

	LNctr_90=	1
	LS_tp90	=	"90"
	LS_ct90	=	CHRTRAN(STR(LNctr_90,8)," ","0")


	LSspaco =   SPACE(25)

	LS_ctgr	=	LNctr_10+LNctr_11+LNctr_50+LNctr_53+LNctr_54+;
				LNctr_60+LNctr_70+LNctr_75+LNctr_90

	LS_tpGR	=	"99"
	LS_ctgr	=	CHRTRAN(STR(LS_ctgr,8)," ","0")

	*******************************************************
	LStmp1	= LStipo+LScgc+LSinsc+;
			  LS_tp50+LS_ct50+LS_tp53+LS_ct53+LS_tp54+LS_ct54+;
			  LS_tp60+LS_ct60+LS_tp70+LS_ct70+LS_tp75+LS_ct75+;
			  LS_tpGr+LS_ctgr+ LSspaco+"1"

	=FPUT(LNctrl,LStmp1,126)
RETURN


*       ЦДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДД·
*       є                                                         є
*       є _0Y6127VLI           m.imp_btn WHEN                     є
*       є                                                         є
*       є Function Origin:                                        є
*       є                                                         є
*       є From Platform:       MS-DOS                             є
*       є From Screen:         SCT0310,     Record Number:   41   є
*       є Variable:            m.imp_btn                          є
*       є Called By:           WHEN Clause                        є
*       є Object Type:         Push Button                        є
*       є Snippet Number:      19                                 є
*       є                                                         є
*       УДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДЅ
*
FUNCTION _0y6127vli     &&  m.imp_btn WHEN
#REGION 1
ON KEY LABEL ENTER
RETURN


*       ЦДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДД·
*       є                                                         є
*       є _0Y6127VLV           m.imp_btn VALID                    є
*       є                                                         є
*       є Function Origin:                                        є
*       є                                                         є
*       є From Platform:       MS-DOS                             є
*       є From Screen:         SCT0310,     Record Number:   41   є
*       є Variable:            m.imp_btn                          є
*       є Called By:           VALID Clause                       є
*       є Object Type:         Push Button                        є
*       є Snippet Number:      20                                 є
*       є                                                         є
*       УДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДДЅ
*

FUNCTION _0y6127vlv     &&  m.imp_btn VALID
#REGION 1
	PRIVATE dbf_NFSTMP, als_NFSTMP, dbf_NFS
	PRIVATE dbf_ITMTMP, als_ITMTMP, dbf_ITM
	PRIVATE dbf_TIPTMP, als_TIPTMP, dbf_TIP




	PRIVATE dbf_NFETMP, als_NFETMP, dbf_NFE		&& NOTA FISCAL DE ENTRADA
	PRIVATE dbf_INETMP, dbf_INETMP, dbf_INE    && ITENS DA NF DE ENTRADA

	PRIVATE dbf_MAPA                && MAPAECF


	LSuf_origem = LSuf_destino


	IF !ULArqItens()
		RETURN(.F.)
	ENDIF

	*
	* LOCALIZACAO DO ARQUIVO DE NOTA PARA OPERCAO SELECT ??? FROM <>
	*

	dbf_NFS  		= wp_dirdat+'NOTA.DBF'
	dbf_ITM  		= wp_dirdat+"ITEMMOV.DBF"


	dbf_NFE  		= wp_dirdat+"NOTAENT.DBF"
	dbf_INE  		= wp_dirdat+"NOTAITE.DBF"

	dbf_MAPA  		= wp_dirdat+"MAPAECF.DBF"

    IF M.dt_fim < {01.01.2003}
		dbf_TIP  		= "L:\TMP\CFO\TIPOOPER.DBF"
	ELSE
		dbf_TIP         =  UPobterPath("TIPOOPER",.F.)+"TIPOOPER.DBF"
	ENDIF


	*----------------------------------------------------------*
	LSarqtmp 	= "" 			&& EX: C:\TMP\TMP0001
	LSaliastmp 	= "NFS" 		&&     TMP001
	LSaliastmp = UPopentmp(wp_dirtmp,LSarqtmp,LSaliastmp,1)
	IF EMPTY(LSaliastmp)
		WAIT WINDOW 'NЖo Foi Possivel Definir Arquivo Temporario'
		RETURN
	ENDIF
	dbf_NFSTMP  = "C:"+wp_dirtmp+LSaliastmp+".DBF"
	als_NFSTMP  = LSaliastmp

	*----------------------------------------------------------*

	LSarqtmp 	= "" 			&& EX: C:\TMP\TMP0001
	LSaliastmp 	= "ITM" 		&&     TMP001
	LSaliastmp = UPopentmp(wp_dirtmp,LSarqtmp,LSaliastmp,1)
	IF EMPTY(LSaliastmp)
		WAIT WINDOW 'NЖo Foi Possivel Definir Arquivo Temporario'
		RETURN
	ENDIF
	dbf_ITMTMP  = "C:"+wp_dirtmp+LSaliastmp+".DBF"
	als_ITMTMP  = LSaliastmp

	*----------------------------------------------------------*
	*----------------------------------------------------------*

	LSarqtmp 	= "" 			&& EX: C:\TMP\TMP0001
	LSaliastmp 	= "NFE" 		&&     TMP001
	LSaliastmp = UPopentmp(wp_dirtmp,LSarqtmp,LSaliastmp,1)
	IF EMPTY(LSaliastmp)
		WAIT WINDOW 'NЖo Foi Possivel Definir Arquivo Temporario'
		RETURN
	ENDIF
	dbf_NFETMP  = "C:"+wp_dirtmp+LSaliastmp+".DBF"
	als_NFETMP  = LSaliastmp

	*----------------------------------------------------------*

	LSarqtmp 	= "" 			&& EX: C:\TMP\TMP0001
	LSaliastmp 	= "INE" 		&&     TMP001
	LSaliastmp = UPopentmp(wp_dirtmp,LSarqtmp,LSaliastmp,1)
	IF EMPTY(LSaliastmp)
		WAIT WINDOW 'NЖo Foi Possivel Definir Arquivo Temporario'
		RETURN
	ENDIF
	dbf_INETMP  = "C:"+wp_dirtmp+LSaliastmp+".DBF"
	als_INETMP  = LSaliastmp
	*----------------------------------------------------------*

	LSarqtmp 	= "" 			&& EX: C:\TMP\TMP0001
	LSaliastmp 	= "TIP" 		&&     TMP001
	LSaliastmp = UPopentmp(wp_dirtmp,LSarqtmp,LSaliastmp,1)
	IF EMPTY(LSaliastmp)
		WAIT WINDOW 'NЖo Foi Possivel Definir Arquivo Temporario'
		RETURN
	ENDIF
	dbf_TIPTMP  = "C:"+wp_dirtmp+LSaliastmp+".DBF"
	als_TIPTMP  = LSaliastmp


	SET TALK ON
	*----------------------------------------------------------*
	*    GERAR ARQ. RESUMO CONTENDO SO AS NOTAS DO PERIODO E DA
	* EMPRESA SELECIONADA PARA ACELERAR OS OUTROS SELECTs
	*----------------------------------------------------------*

	*----------------------------------------------------------*
	*  SELECIONANDO REGISTROS DE SAIDA
	*----------------------------------------------------------*

	IF !EMPTY(LSuf_destino)
		SELECT  ;
           NF.CH_OPERA+NF.CH_PRODU+NF.CH_MOTIV+;
              NF.CH_DESTI+NF.CH_CONTR+NF.CH_CONDI+NF.TIPO AS KEY_TIPO,;
			NF.EMPRESA,EMP.CGC,NF.NOTA,NF.SERIE,NF.DATA,NF.HORA,NF.UF,;
			NF.CFO,NF.STATUS,NF.OPERACAO,NF.CUPOM,NF.TIPO,NF.FAVORECIDO,;
			NF.TP_PESSOA,NF.INSCRICAO,NF.TOTSERVICO,NF.BASE_ISS,;
			NF.ALIQ_ISS,NF.VLR_ISS,NF.BASE_ICMS,NF.ALIQ_ICMS,NF.VLR_ICMS, ;
			NF.BASE_SBBRT,NF.BASE_SUBS,NF.ICMS_SUBS,NF.BASE_ISENT,;
			NF.BASE_OUTR,NF.BASE_ISIPI,NF.BASE_IPI,NF.VLR_IPI,;
			NF.TOTPRODUTO,NF.VLRFRETE,NF.VLRSEGURO,NF.VLRDESPES, ;
			NF.TOTAL_NOTA ;	
		FROM &dbf_NFS NF, empresa EMP;
		WHERE   	NF.empresa = M.EMPRESA;
			AND emp.empresa = m.empresa ;
			AND NF.data >= M.dt_inicio AND  NF.data <= M.dt_fim ;
			AND NF.ch_opera <> "5" ;
			AND NF.UF = LSuf_destino ;
	    INTO TABLE &dbf_NFSTMP
	ELSE
		SELECT  ;
           NF.CH_OPERA+NF.CH_PRODU+NF.CH_MOTIV+;
              NF.CH_DESTI+NF.CH_CONTR+NF.CH_CONDI+NF.TIPO AS KEY_TIPO,;
			NF.EMPRESA,EMP.CGC,NF.NOTA,NF.SERIE,NF.DATA,NF.HORA,NF.UF,;
			NF.CFO,NF.STATUS,NF.OPERACAO,NF.CUPOM,NF.TIPO,NF.FAVORECIDO,;
			NF.TP_PESSOA,NF.INSCRICAO,NF.TOTSERVICO,NF.BASE_ISS,;
			NF.ALIQ_ISS,NF.VLR_ISS,NF.BASE_ICMS,NF.ALIQ_ICMS,NF.VLR_ICMS, ;
			NF.BASE_SBBRT,NF.BASE_SUBS,NF.ICMS_SUBS,NF.BASE_ISENT,;
			NF.BASE_OUTR,NF.BASE_ISIPI,NF.BASE_IPI,NF.VLR_IPI,;
			NF.TOTPRODUTO,NF.VLRFRETE,NF.VLRSEGURO,NF.VLRDESPES, ;
			NF.TOTAL_NOTA ;	
		FROM &dbf_NFS NF, empresa EMP;
		WHERE   	NF.empresa = M.EMPRESA;
			AND emp.empresa = m.empresa ;
			AND NF.data >= M.dt_inicio AND  NF.data <= M.dt_fim ;
			AND NF.ch_opera <> "5" ;
	    INTO TABLE &dbf_NFSTMP
	ENDIF


	*----------------------------------------------------------*
	*  SELECIONANDO REGISTROS DE ENTRADA
	*----------------------------------------------------------*


	IF !EMPTY(LSuf_destino)
	   SELECT ;
	        CH_OPERA+CH_PRODU+CH_MOTIV+;
            CH_DESTI+CH_CONTR+CH_CONDI+TIPO AS KEY_TIPO,;
			EMPRESA,EMP.CGC,;
			NOTA , SERIE, DATA,DATA_EMI,CODFORN, HORA, UF, CFO, ;
			FAVORECIDO,INSCRICAO,TIPO,CH_OPERA,CH_PRODU,;
	        STATUS, SITUACAO , ;
			TOTSERVICO, BASE_ISS,  ALIQ_ISS, ;
			BASE_ICMS,	ALIQ_ICMS, VLR_ICMS, ;
			BASE_SBBRT, BASE_SUBS, ICMS_SUBS, ;
			BASE_ISENT, BASE_OUTR, BASE_ISIPI, BASE_IPI,  VLR_IPI, ;
			TOTPRODUTO, VLRFRETE, VLRSEGURO, VLRDESPES, ;
			TOTAL_NOTA ;	
		FROM &dbf_NFE, empresa EMP ;
		WHERE  	!(ch_opera $"56") ;
			AND LSuf_origem = uf;
			AND LEFT(situacao,1) = "C" ;
			AND empresa = m.empresa ;
			AND emp.empresa = m.empresa ;
			AND data >= dt_inicio ;
			AND data <= dt_fim ;		
	    INTO TABLE &dbf_NFETMP
	ELSE
	   SELECT ;
	   	    CH_OPERA+CH_PRODU+CH_MOTIV+;
            CH_DESTI+CH_CONTR+CH_CONDI+TIPO AS KEY_TIPO,;
			EMPRESA, EMP.CGC,;
			NOTA , SERIE, DATA,DATA_EMI,CODFORN, HORA, UF, CFO, ;
			FAVORECIDO,INSCRICAO,TIPO,CH_OPERA,CH_PRODU,;
	        STATUS, SITUACAO , ;
			TOTSERVICO, BASE_ISS,  ALIQ_ISS, ;
			BASE_ICMS,	ALIQ_ICMS, VLR_ICMS, ;
			BASE_SBBRT, BASE_SUBS, ICMS_SUBS, ;
			BASE_ISENT, BASE_OUTR, BASE_ISIPI, BASE_IPI,  VLR_IPI, ;
			TOTPRODUTO, VLRFRETE, VLRSEGURO, VLRDESPES, ;
			TOTAL_NOTA ;	
		FROM &dbf_NFE, empresa EMP ;
		WHERE  	!(ch_opera $"56") ;
			AND LEFT(situacao,1) = "C" ;
			AND empresa = m.empresa ;
			AND emp.empresa = m.empresa ;
			AND data >= dt_inicio ;
			AND data <= dt_fim ;		
	    INTO TABLE &dbf_NFETMP
	ENDIF


	*----------------------------------------------------------*
	*  SELECIONANDO ITENS DO MOVIMENTO  E ITENS DA NF DE SAIDA
	*----------------------------------------------------------*

	SELECT  ;
	           CH_OPERA+CH_PRODU+CH_MOTIV+;
              CH_DESTI+CH_CONTR+CH_CONDI+TIPO AS KEY_TIPO,;
			EMPRESA, NOTA , SERIE, DATA, CODIGO,TP_MERCAD, VLRVENDA,QTDE,;
            CFO, OPERACAO, FAVORECIDO,;
			TIPO,BASE_ISS,  ALIQ_ISS, VLR_ISS, ;
			BASE_CALC,	ALIQ_ICMS, VLR_ICMS, ;
			BASE_SBBRT, BASE_SUBS, ICMS_SUBS, ;
			BASE_ISENT, BASE_OUTR, BASE_ISIPI, BASE_IPI,  VLRIPI ;
		FROM &dbf_ITM ;
		WHERE  	!(ch_opera $"56") ;
			AND empresa = m.empresa ;
			AND data >= dt_inicio ;
			AND data <= dt_fim ;		
	    INTO TABLE &dbf_ITMTMP

	*---------------------------------------------------------------*

	*----------------------------------------------------------*
	*  SELECIONANDO ITENS DA NF DE ENTRADA
	*----------------------------------------------------------*
	SELECT  ;
			CH_OPERA+CH_PRODU+CH_MOTIV+;
            CH_DESTI+CH_CONTR+CH_CONDI+TIPO AS KEY_TIPO,  *;
		FROM &dbf_ine ;
		WHERE  	!(ch_opera $"56") ;
			AND empresa = m.empresa ;
			AND data >= dt_inicio ;
			AND data <= dt_fim ;		
	    INTO TABLE &dbf_ineTMP

	*---------------------------------------------------------------*

     SELECT CH_OPERA+CH_PRODU+CH_MOTIV+;
              CH_DESTI+CH_CONTR+CH_CONDI+TIPO AS KEY_TIPO,;
            * FROM &dbf_TIP ;
	    INTO TABLE &dbf_TIPTMP

	*---------------------------------------------------------------*


	DO ULProcCVN6902 WITH ;
	    (m.empresa),(m.dt_inicio),(m.dt_fim)

	SET TALK off
	*---------------------------------------------------------------*
	IF USED("ITENSNEGOC")
		SELECT ITENSNEGOC
		USE
	ENDIF

	SELECT &als_NFSTMP
	USE

	SELECT &als_ITMTMP
	USE

	SELECT &als_INETMP
	USE

	SELECT &als_TIPTMP
	USE

	SHOW WINDOW SCT0310 TOP

RETURN

FUNCTION ULArq69Itens
	*---------------------------------------------------------*
	* Gerar Arq. Temporario para registrar itens vendidos
	*---------------------------------------------------------*
	LSarqtmp 	= "" 			&& EX: C:\TMP\TMP0001
	LSaliastmp 	= "TMP" 		&&     TMP001
	LSaliastmp = UPopentmp(wp_dirtmp,LSarqtmp,LSaliastmp,1)
	IF EMPTY(LSaliastmp)
 		WAIT WINDOW "Nao Foi Possivel Gerar Arq Temporario."
 		SELE notaent
		UNLOCK
 		RETURN(.F.)
 	ENDIF		
	*---------------------------------------------------------*
	IF USED("ITENSNEG")
		SELE ITENSNEGOC
		USE
	ENDIF

	SELE grupo
	WAIT WINDOW "AGUARDE. Gerando Arq. Temporario." NOWAIT

	COPY STRU TO &LSarqtmp WITH CDX

	KEYBOARD CHR(13)
	WAIT WINDOW " "
    SELE 0
	USE &LSarqtmp	ALIAS ITENSNEGOC	EXCLUSIVE	
	KEYBOARD CHR(13)
	WAIT WINDOW " "
RETURN(.T.)


*-------------------------------------------------------------------*

PROCEDURE ULProcCVN6902
PARAMETERS LNemp, LDper_ini, LDper_fim

	PRIVATE LSnome

	LSnome	 =	RIGHT(str(year(LDper_ini)),2)+;
				STR(MONTH(LDper_ini),2)+STR(LNemp,2)+"AG.DAT"
	LSnome	= 	"\SCGC\AGENFA\"+STRTRAN(LSnome," ","0")
	LNcontrol = FCREATE(LSnome)	
	PRIVATE LNctr_10,LNctr_11,LNctr_50,LNctr_53,LNctr_54,LNctr_60,;
			LNctr_70,LNctr_75
	STORE 0 TO LNctr_10,LNctr_11,LNctr_50,LNctr_53,LNctr_54,LNctr_60,;
			LNctr_70,LNctr_75

	=UL69R_10((LNemp),(LNcontrol),(LDper_ini),(LDper_fim),LNctr_10)
	=UL69R_11((LNemp),(LNcontrol),(LDper_ini),(LDper_fim),LNctr_11)
	=UL69R_50((LNemp),(LNcontrol),(LDper_ini),(LDper_fim),LNctr_50)
	=UL69R_53((LNemp),(LNcontrol),(LDper_ini),(LDper_fim),LNctr_53)
	=UL69R_54((LNemp),(LNcontrol),(LDper_ini),(LDper_fim),LNctr_54)
	=UL69R_60((LNemp),(LNcontrol),(LDper_ini),(LDper_fim),LNctr_60)
	=UL69R_70((LNemp),(LNcontrol),(LDper_ini),(LDper_fim),LNctr_70)
	=UL69R_75((LNemp),(LNcontrol),(LDper_ini),(LDper_fim),LNctr_75)
	=UL69R_90((LNemp),(LNcontrol),LNctr_10,LNctr_11,LNctr_50,;
				LNctr_53,LNctr_54,LNctr_60,LNctr_70,LNctr_75)
	=FCLOSE(LNcontrol)
RETURN

FUNCTION UL69R_10
	PARAMETERS LNemp, LNctrl, LDper_ini, LDper_fim, LN_Ctr

	SELE empresa
	SET ORDER TO TAG empresa
	SEEK LNemp
	
	LStipo  		= "10"                                   && 01-tipo
	LScgc			= CHRTRAN(STR(empresa.cgc,14)," ","0")   && 02-cnpj
	LSinsc			= CHRTRAN(empresa.inscricao," ","")      && 03-inscricao
	LSinsc			= CHRTRAN(LSinsc,".","")                 &&
	LSinsc			= CHRTRAN(LSinsc,"/","")                 &&
	LSinsc			= CHRTRAN(LSinsc,"-","")                 &&
	LSinsc			= LEFT(LSinsc+space(14),14)              && 03-inscricao
	LSnome			= LEFT(empresa.nome,35)                  && 04-nome
	LSmunicipio		= LEFT(empresa.cidade,30)                && 05-municipio
	LSestado		= empresa.estado                         && 06-uf
	LSfax			= REPLICATE("0",10)                      && 07-fax
	LSdtini			= STR(YEAR(LDper_ini),4)+;
					  STR(MONTH(LDper_ini),2)+;
					  STR(DAY(LDper_ini),2)
	LSdtini			= CHRTRAN(LSdtini," ","0")				 && 08-dt.inicio
	LSdtfim			= STR(YEAR(LDper_fim),4)+;
					  STR(MONTH(LDper_fim),2)+;
					  STR(DAY(LDper_fim),2)
	LSdtfim			= CHRTRAN(LSdtfim," ","0")				 && 09-dt.final
	LScod_id		= "23"                                   && 10/11-Cod.Id

	
	LScod_f			= str(LNfinalidade,1)                    && 12-Cod.Final
	

	LStmp1 			=LStipo+LScgc+LSinsc+LSnome+;
					 LSmunicipio+LSestado+LSfax+;
					 LSdtini+LSdtfim+LScod_id+LScod_f

	=FPUT(LNctrl,LStmp1,126)
	LN_Ctr	=	LN_Ctr + 1
RETURN

FUNCTION UL69R_11
	PARAMETERS LNemp, LNctrl, LDper_ini, LDper_fim, LN_Ctr

	SELE empresa
	SET ORDER TO TAG empresa
	SEEK LNemp
	
	LStipo  		= "11"								&& 01-tipo
	LSlogr			= LEFT(empresa.endereco,34)         && 02-logradouro

	IF TYPE("empresa.num") = "U"
		LSnum	= "00001"                       		&& 03-numero
	ELSE
		LSnum	= CHRTRAN(STR(empresa.num,5)," ","0") 	&& 03-numero
	ENDIF
	LScompl			= SPACE(22)                         && 04-complemento
	LSbairro		= LEFT(empresa.bairro,15)              && 05-cep
	LScep			= LEFT(CHRTRAN(empresa.cep," ","0"),8) && 06-bairro
	LScontato		= LEFT(empresa.contato,28)             && 07-contato

	LSfone			= CHRTRAN(UPPER(empresa.fone),"X","0")
	LSfone			= CHRTRAN(LSfone,"(","")
	LSfone			= CHRTRAN(LSfone,")","")
	LSfone			= CHRTRAN(LSfone,"-","")
	LSfone			= CHRTRAN(LSfone," ","")
	LSfone			= REPL("0",12-LEN(LSfone))+LSfone

	LSfone			= LEFT(LSfone,12)                      && 08-fone

	LStmp1 			= LStipo+LSlogr+LSnum+LScompl+LSbairro+LScep+;
					  LScontato+LSfone	
	=FPUT(LNctrl,LStmp1,126)
	LN_Ctr	=	LN_Ctr + 1
RETURN

FUNCTION UL69R_50
	PARAMETERS LNemp, LNctrl, LDper_ini, LDper_fim, LN_Ctr

	*-------------------------------------------------------------------*
	*	NOTAS DE SAIDA
	*-------------------------------------------------------------------*
    * vlr_icms =  (base_icms * aliq_icms/100) as vlr_icms,;
	*-------------------------------------------------------------------*
    *-----> NAO CANCELADAS
	*-------------------------------------------------------------------*

   SELECT NF.empresa,NF.nota,NF.serie,NF.cupom,;
          NF.favorecido,NF.tp_pessoa,NF.inscricao,NF.uf,;
		  NF.tipo,NF.data,NF.vlrfrete,NF.vlrseguro,NF.vlrdespes,NF.status,;
          NF.total_nota AS VlrNota,;
		  IIF(IT.tp_mercad <> 2 ,TP.cfo, TP.cfosubs) as SET_CFO,;
	  	  IT.aliq_icms,;
		  SUM(IT.vlrvenda+IT.icms_subs+IT.vlripi) AS TOTAL_NOTA,;
	  	  SUM(IT.base_subs) AS BASE_SUBS,;
	  	  SUM(IT.icms_subs) AS ICMS_SUBS,;
	  	  SUM(IT.base_calc) AS BASE_ICMS,;
	  	  SUM(IT.Base_calc * IT.aliq_icms/100) AS VLR_ICMS,;
	 	  SUM(IT.base_isent) AS BASE_ISENT ,;
		  SUM(IT.base_outr)  AS BASE_OUTR ;
   	FROM  &dbf_NFSTMP NF,;
   	      &dbf_TIPTMP TP,;
   	      &dbf_ITMTMP IT ;
    WHERE ;
              NF.status = 1 ;
   		  AND NF.operacao = "S" ;
   		  AND NF.CUPOM = 0 ;
   		  AND TP.KEY_TIPO = NF.KEY_TIPO ;
   	      AND TP.PROCESSO $ "Ss" ;
   		  AND LEFT(IT.OPERACAO,1) = "S" ;
   	 	  AND IT.EMPRESA = NF.EMPRESA ;
   		  AND IT.NOTA    = NF.NOTA ;
   		  AND IT.SERIE   = NF.SERIE ;
    ORDER BY NF.EMPRESA, NF.DATA, NF.NOTA, SET_CFO, IT.ALIQ_ICMS ;
    GROUP BY NF.EMPRESA, NF.DATA, NF.NOTA, SET_CFO, IT.ALIQ_ICMS ;
    INTO TABLE C:\TMP\TMP1

	*-------------------------------------------------------------------*
    *-----> CANCELADAS
	*-------------------------------------------------------------------*

SELECT 	NF.empresa, NF.nota,      NF.serie,  NF.cupom, ;
        NF.favorecido, NF.tp_pessoa, NF.inscricao,  NF.uf, ;
		NF.tipo,   NF.data,;
		NF.vlrfrete,   NF.vlrseguro,NF.vlrdespes, NF.status,;
        NF.total_nota  AS VlrNota,;
	    TP.cfo         AS SET_CFO,;
	  	NF.aliq_icms,;
		NF.TOTAL_NOTA,;
	  	NF.base_subs,;
	  	NF.icms_subs,;
	  	NF.base_icms,;
	  	(NF.Base_icms * NF.aliq_icms/100) AS VLR_ICMS,;
		NF.base_isent,;
		NF.base_outr ;
   	FROM  &dbf_NFSTMP  NF,;
   	      &dbf_TIPTMP  TP;
    WHERE ;
              NF.status = 2;
   		  AND NF.operacao =  "S"         ;
   		  AND NF.CUPOM = 0               ;
   		  AND TP.KEY_TIPO = NF.KEY_TIPO ;
    ORDER BY NF.EMPRESA, NF.DATA, NF.NOTA, SET_CFO, NF.ALIQ_ICMS ;
    INTO TABLE C:\TMP\TMP2

    SELE TMP1
    APPEND FROM C:\TMP\TMP2
	*-------------------------------------------------------------------*
    *-----> UNIAO CANCELADAS E NAO CANCELADAS
	*-------------------------------------------------------------------*

    SELECT * FROM C:\TMP\TMP1 ;
     ORDER BY EMPRESA, DATA, NOTA, SET_CFO, ALIQ_ICMS ;
    	INTO CURSOR LIVROSAI

*---------------------------------------------------------------------*

	GO TOP
	LStipo  		= "50"                             && 01-tipo
	DO WHILE !EOF()
		LSmsg = "Saidas (50) "+;
				 	DTOC(LIVROSAI.DATA)+;
					STR(LIVROSAI.NOTA,6)
		WAIT WINDOW LSmsg NOWAIT

		*----------------------------------------------------------*
		LScgc	=  CHRTRAN(STR(LIVROSAI.favorecido,14)," ","0")  && 02-cnpj
		*----------------------------------------------------------*
		*     Quando a inscricao que estiver na nota for invalida
		*  o prog buscara a inscricao do cadastro de clientes
		*  pode ocorrer que no momento da emissao da nota a inscricao
		*  estivesse errada.
		*----------------------------------------------------------*

		LSinsc	=  ALLTRIM(LIVROSAI.inscricao)			&& 03-inscricao

		LSdtemi		=	STR(YEAR(LIVROSAI.data),4)+;
						STR(MONTH(LIVROSAI.data),2)+;
						STR(DAY(LIVROSAI.data),2)
		LSdtemi		=   CHRTRAN(LSdtemi," ","0")		&& 04-dt.emissao						

		LSuf	=  LIVROSAI.uf							&& 05-uf

		IF !UPInscricao(LSuf,LSinsc,1,0,0,'')
			IF LIVROSAI.favorecido = 0
				LSinsc	=  "ISENTO"
			ELSE
				SELE clientes
				SET ORDER TO TAG cliente
				SEEK LIVROSAI.favorecido
				IF  FOUND() AND;
					UPInscricao(clientes.estado,clientes.INSCRICAO,1,0,0,'')
					&& CFOs Inciados em 5 o estado deve ser igual ao do
					&& informante
					DO CASE
						CASE LEFT(LIVROSAI.SET_CFO,1) = "5" ;
							AND clientes.estado = empresa.estado
							LSinsc	=  ALLTRIM(clientes.inscricao)
							LSuf	=	clientes.estado
						CASE LEFT(LIVROSAI.SET_CFO,1) <> "5" ;
							AND clientes.estado <> empresa.estado
							LSinsc	=  ALLTRIM(clientes.inscricao)
							LSuf	=	clientes.estado
					ENDCASE
				ELSE
					LSinsc	=  ALLTRIM(LIVROSAI.inscricao)
				ENDIF		
			ENDIF
		ENDIF
		SELE LIVROSAI
		*----------------------------------------------------------*
		IF "ISENTO" $ UPPER(LSinsc)
			LSinsc	=  "ISENTO"
			LScgc	=  CHRTRAN(STR(0,14)," ","0")
		ELSE
			LSinsc	=  CHRTRAN(LSinsc,".","")
			LSinsc	=  CHRTRAN(LSinsc,"/","")
			LSinsc	=  CHRTRAN(LSinsc,"-","")
			LSinsc	=  CHRTRAN(LSinsc,"(","")
			LSinsc	=  CHRTRAN(LSinsc,")","")
		ENDIF			
		LSinsc			= LEFT(LSinsc+space(14),14)
		IF LIVROSAI.TP_PESSOA = 1
			LScgc	=  CHRTRAN(STR(0,14)," ","0")
		ENDIF			


		LSmodelo 	=   "01" 							&& 06-modelo


		LSserie		=   LIVROSAI.serie+"  "				&& 07-serie

		*--> Obs: no conv69/02 o campo 08-subserie deixou de existir
		LSsubserie  = 	"  "							&& 08-subserie

		*--> Obs: no conv69/02 o campo 08-subserie fui trocado por..
		LSnumero 	= 	CHRTRAN(STR(LIVROSAI.NOTA,7)," ","0")
		LSnumero 	= 	SUBS(LSnumero,2,6)				&& 08-numero
		

		LScfo		=   CHRTRAN(LIVROSAI.SET_CFO,".","")	&& 09-cfo					
		LScfo		=   CHRTRAN(LScfo,".","")						
        LScfo	    =   LEFT(LScfo,4)
		LSemitente  =  "P"                             && 10-emitente

		SELE LIVROSAI
		*-----------------------------------------------------------------*
		*      Quando o registro se referenciar a uma copia de cupom
		* em NF os valores sao zerados devido aos mesmos serem relacio-
		* nados no registro tipo 61
		*-----------------------------------------------------------------*

		IF LIVROSAI.CUPOM = 0   && PORQUE SE <> 0 E NOTA REFERENTE A CUPOM
			LSvalor		=	str(LIVROSAI.total_nota,14,2)	  			
			LSbase_icms	=	str(LIVROSAI.base_icms,14,2)	
			LSvlr_icms	=	ROUND(base_icms*aliq_icms/100 ,2)
			LSbase_isent=	str(LIVROSAI.base_isent,14,2)	
			LSbase_outr	=	str(LIVROSAI.base_outr,14,2)	  					
			LSaliq_icms	=	str(LIVROSAI.aliq_icms,5,2)		  	
		ELSE
			LSvalor		=	str(0,14,2)						
			LSbase_icms	=	str(0,14,2)						
			LSvlr_icms	=	ROUND(0,2)
			LSbase_isent=	str(0,14,2)						
			LSbase_outr	=	str(0,14,2)						
			LSaliq_icms	=	str(LIVROSAI.aliq_icms,5,2)						
		ENDIF	

		LSvalor		=   CHRTRAN(LSvalor," ","0")	    && 11-valor					
		LSvalor		=   CHRTRAN(LSvalor,",","")						
		LSvalor		=   CHRTRAN(LSvalor,".","")						


		LSbase_icms	=   CHRTRAN(LSbase_icms," ","0")    && 12-Base
		LSbase_icms	=   CHRTRAN(LSbase_icms,",","")						
		LSbase_icms	=   CHRTRAN(LSbase_icms,".","")						


		LSvlr_icms	=	STR(LSvlr_icms,14,2)			&& 13-Icms
		LSvlr_icms	=   CHRTRAN(LSvlr_icms," ","0")						
		LSvlr_icms	=   CHRTRAN(LSvlr_icms,",","")						
		LSvlr_icms	=   CHRTRAN(LSvlr_icms,".","")						


		LSbase_isent=   CHRTRAN(LSbase_isent," ","0")	&& 14-isent	
		LSbase_isent=   CHRTRAN(LSbase_isent,",","")						
		LSbase_isent=   CHRTRAN(LSbase_isent,".","")						
		

		LSbase_outr	=   CHRTRAN(LSbase_outr," ","0")	&& 15-Outro
		LSbase_outr	=   CHRTRAN(LSbase_outr,",","")						
		LSbase_outr	=   CHRTRAN(LSbase_outr,".","")						


		LSaliq_icms	=   CHRTRAN(LSaliq_icms," ","0")	&& 16-Aliq			
		LSaliq_icms	=   CHRTRAN(LSaliq_icms,",","")			
		LSaliq_icms	=   CHRTRAN(LSaliq_icms,".","")						

		IF LIVROSAI.status = 2
			LSstatus = "S"								&& 17-situacao
		ELSE
			LSstatus = "N"
		ENDIF		
		************************************************************
		LStmp1		=	LStipo+LScgc+LSinsc+LSdtemi+LSuf+LSmodelo+;
						LSserie+LSnumero+LScfo+LSemitente+LSvalor+;
						LSbase_icms+LSvlr_icms+LSbase_isent+;
						LSbase_outr+LSaliq_icms+LSstatus
		************************************************************
		=FPUT(LNctrl,LStmp1,126)
		LN_Ctr	=	LN_Ctr + 1
		SKIP
	ENDDO

	*-------------------------------------------------------------------*
	*	NOTAS DE ENTRADA
    * 		WHERE  ch_produ <> "9"  FAZ COM QUE AS NOTAS DE CONHECIMENTO;
    *      DE TRANSP NAO SEJAM SELECIONADAS
	*-------------------------------------------------------------------*
	SELECT 	;
		NF.empresa,NF.nota,NF.serie,NF.CGC,NF.FAVORECIDO,;
        NF.codforn,NF.inscricao,NF.uf,NF.tipo,NF.data,NF.data_emi,;
		NF.vlrfrete,NF.vlrseguro,NF.vlrdespes,;
        (IT.vlrvenda+IT.vlripi+IT.icms_subs)  AS VlrNota,;
		IIF(IT.tp_mercad <> 2,TP.cfo,TP.cfosubs) as SET_CFO,;
	  	NF.aliq_icms,NF.TOTAL_NOTA,NF.base_subs,NF.icms_subs,;
	  	IIF(NF.BASE_SUBS = 0,NF.base_icms,NF.base_icms*0) AS BASE_ICMS,;
	  	IIF(NF.BASE_SUBS = 0,NF.VLR_ICMS,NF.VLR_ICMS*0) AS VLR_ICMS,;
		NF.BASE_ISENT,(NF.base_outr+NF.BASE_ISS)  AS BASE_OUTR ;
   	FROM  &dbf_NFETMP NF,;
   	      &dbf_TIPTMP TP,;
   	      &dbf_INETMP IT ;
    WHERE ;
            LEFT(NF.situacao,1) = "C" ;
		AND NF.ch_produ <> "9" ;
        AND NF.CH_OPERA <> "5" ;
   		AND NF.KEY_TIPO = TP.KEY_TIPO ;
   	    AND TP.PROCESSO $ "Ee" ;
   		AND IT.KEY_TIPO = NF.KEY_TIPO ;
   		AND IT.EMPRESA  = NF.EMPRESA    ;
   		AND IT.NOTA     = NF.NOTA         ;
   		AND IT.SERIE    = NF.SERIE        ;
   		AND IT.FAVORECIDO = NF.FAVORECIDO ;
    GROUP BY NF.EMPRESA, NF.DATA, NF.NOTA, SET_CFO, IT.ALIQ_ICMS ;
    INTO CURSOR TMPLIVR

    SELECT * FROM TMPLIVR NF;
	    ORDER BY NF.EMPRESA, NF.DATA, NF.NOTA, NF.SET_CFO, NF.ALIQ_ICMS ;
	    INTO CURSOR LIVROENT

*-----------------------------------------------------------------------*

	SELECT LIVROENT
	GO TOP

	LStipo  		= "50"							&& 01-TIPO

	DO WHILE !EOF()
		LSmsg = "Entradas (50) "+;
				 	DTOC(LIVROENT.DATA)+;
					STR(LIVROENT.NOTA,6)
		WAIT WINDOW LSmsg NOWAIT

		*-----------------------------------------------------------*
		SELE fornece
		SET ORDER TO TAG codigo
		SEEK LIVROENT.codforn

		IF FOUND()
			LSinsc	=  ALLTRIM(fornece.inscricao)
			LScgc	=  CHRTRAN(STR(fornece.cgc,14)," ","0")
		ELSE
			LSinsc	=  ALLTRIM(LIVROENT.inscricao)
			LScgc	=  CHRTRAN(STR(LIVROENT.favorecido,14)," ","0")
		ENDIF

		IF "ISENTO" $ UPPER(LSinsc)
			LSinsc	=  "ISENTO"
			LScgc	=  CHRTRAN(STR(0,14)," ","0")		&& 02-cnpj
		ELSE
			LSinsc	=  CHRTRAN(LSinsc,".","")
			LSinsc	=  CHRTRAN(LSinsc,"/","")
			LSinsc	=  CHRTRAN(LSinsc,"-","")
			LSinsc	=  CHRTRAN(LSinsc,"(","")
			LSinsc	=  CHRTRAN(LSinsc,")","")
		ENDIF			
		LSinsc			= LEFT(LSinsc+space(14),14)     && 03-inscricao
		*-----------------------------------------------------------*
		SELECT LIVROENT

		LSdtemi		=	STR(YEAR(LIVROENT.data),4)+;
						STR(MONTH(LIVROENT.data),2)+;
						STR(DAY(LIVROENT.data),2)
		LSdtemi		=   CHRTRAN(LSdtemi," ","0")		&& 04-dt.emissao
		LSuf		=	LIVROENT.uf						&& 05-uf
		LSmodelo 	=   "01" 							&& 06-modelo
		LSserie		=   LIVROENT.serie+"  "				&& 07-serie
		
		*--> Obs: no conv69/02 o campo 08-subserie deixou de existir
		LSsubserie  = 	"  "							&& 08-subserie

		*--> Obs: no conv69/02 o campo 08-subserie fui trocado por..

		LSnumero 	= 	CHRTRAN(STR(LIVROENT.NOTA,6)," ","0")  && 08-numero

		LScfo		=   CHRTRAN(LIVROENT.SET_CFO,".","")						
		LScfo		=   CHRTRAN(LScfo,".","")						

        LScfo	=   LEFT(LScfo,4)						&& 09-cfo

		IF LIVROENT.CGC = LIVROENT.FAVORECIDO
		   LSemitente = "P"
		ELSE
		   LSemitente = "T"
		ENDIF
		


		SELE LIVROENT

		LSvalor		=	str(LIVROENT.total_nota,14,2)	
		LSvalor		=   CHRTRAN(LSvalor," ","0")		 	
		LSvalor		=   CHRTRAN(LSvalor,",","")						
		LSvalor		=   CHRTRAN(LSvalor,".","")			&& 11-valor			

		LSbase_icms	=   IIF(LIVROENT.base_subs > 0, 0, LIVROENT.base_icms)

		LSbase_icms	=	str(LSbase_icms,14,2)						
		LSbase_icms	=   CHRTRAN(LSbase_icms," ","0")						
		LSbase_icms	=   CHRTRAN(LSbase_icms,",","")						
		LSbase_icms	=   CHRTRAN(LSbase_icms,".","")		&& 12-base icms

		LSvlr_icms	=	IIF(LIVROENT.base_subs > 0, 0, LIVROENT.vlr_icms)

		LSvlr_icms	=	str(LSvlr_icms,14,2)						
		LSvlr_icms	=   CHRTRAN(LSvlr_icms," ","0")						
		LSvlr_icms	=   CHRTRAN(LSvlr_icms,",","")						
		LSvlr_icms	=   CHRTRAN(LSvlr_icms,".","")		&& 13-vlr icms

		LSbase_isent=	str(LIVROENT.base_isent,14,2)						
		LSbase_isent=   CHRTRAN(LSbase_isent," ","0")						
		LSbase_isent=   CHRTRAN(LSbase_isent,",","")						
		LSbase_isent=   CHRTRAN(LSbase_isent,".","")	&& 14-isenta
		
		LSbase_outr	=	str(LIVROENT.base_outr,14,2)						
		LSbase_outr	=   CHRTRAN(LSbase_outr," ","0")						
		LSbase_outr	=   CHRTRAN(LSbase_outr,",","")						
		LSbase_outr	=   CHRTRAN(LSbase_outr,".","")		&& 15-outra

		LSaliq_icms	=	str(LIVROENT.aliq_icms,5,2)						
		LSaliq_icms	=   CHRTRAN(LSaliq_icms," ","0")						
		LSaliq_icms	=   CHRTRAN(LSaliq_icms,",","")						
		LSaliq_icms	=   CHRTRAN(LSaliq_icms,".","")		&& 16-aliquota

		LSstatus = "N"									&& 17-situacao
		************************************************************
		LStmp1		=	LStipo+LScgc+LSinsc+LSdtemi+LSuf+LSmodelo+;
						LSserie+LSnumero+LScfo+LSemitente+LSvalor+;
						LSbase_icms+LSvlr_icms+LSbase_isent+;
						LSbase_outr+LSaliq_icms+LSstatus
		************************************************************
		=FPUT(LNctrl,LStmp1,126)
		LN_Ctr	=	LN_Ctr + 1
		SKIP
	ENDDO
RETURN



FUNCTION UL69R_53
	PARAMETERS LNemp, LNctrl, LDper_ini, LDper_fim, LN_Ctr

	*-------------------------------------------------------------------*
	*	NOTAS DE SAIDA  =>
	*           icms_subs > 0   => Com Valor de Substituicao Tributaria
	*           tipo <> "CPM"   => Nao seja Cupom
	*           Operacao = "S" => Nao se NF de Entrada
	*-------------------------------------------------------------------*
	*-------------------------------------------------------------------*
	*	NOTAS DE SAIDA
	*-------------------------------------------------------------------*
	*-------------------------------------------------------------------*
    *-----> NAO CANCELADAS
	*-------------------------------------------------------------------*

   IF USED("TMP1")
      SELE TMP1
      USE
   ENDIF


   SELECT NF.empresa   , NF.nota,NF.serie,NF.cupom, ;
		  NF.CGC,NF.FAVORECIDO,;
          NF.tp_pessoa, NF.inscricao,NF.uf, ;
		  NF.tipo, NF.data,;
		  NF.vlrfrete, NF.vlrseguro,  NF.vlrdespes, NF.status,;
          NF.total_nota  AS VlrNota,;
		  IIF(IT.tp_mercad <> 2,TP.cfo, TP.cfosubs) as SET_CFO,;
	  	  IT.aliq_icms,;
		  SUM(IT.vlrvenda+IT.icms_subs+IT.vlripi)  AS TOTAL_NOTA,;
	  	  SUM(IT.base_subs) AS BASE_SUBS,;
	  	  SUM(IT.icms_subs) AS ICMS_SUBS,;
	  	  SUM(IT.base_calc) AS BASE_ICMS,;
	  	  SUM(IT.Base_calc * IT.aliq_icms/100) AS VLR_ICMS,;
	 	  SUM(IT.base_isent) AS BASE_ISENT ,;
		  SUM(IT.base_outr)  AS BASE_OUTR ;
   	FROM  &dbf_NFSTMP  NF,;
   	      &dbf_TIPTMP  TP,;
   	      &dbf_ITMTMP  IT ;
    WHERE ;
              NF.status = 1             ;
   		  AND NF.operacao =  "S"        ;
          AND NF.icms_subs > 0          ;
   		  AND TP.KEY_TIPO = NF.KEY_TIPO ;
   	      AND TP.PROCESSO $ "Ss"        ;
   		  AND LEFT(IT.OPERACAO,1) = "S" ;
   	 	  AND IT.EMPRESA = NF.EMPRESA   ;
   		  AND IT.NOTA    = NF.NOTA      ;
   		  AND IT.SERIE   = NF.SERIE     ;
          AND IT.icms_subs > 0          ;
    GROUP BY NF.EMPRESA, NF.DATA, NF.NOTA, SET_CFO, IT.ALIQ_ICMS ;
    INTO CURSOR CRSTMP1

    SELECT * FROM CRSTMP1 NF ;
       ORDER BY NF.EMPRESA, NF.DATA, NF.NOTA, NF.SET_CFO, NF.ALIQ_ICMS ;
       INTO TABLE C:\TMP\TMP1

	*-------------------------------------------------------------------*
    *-----> CANCELADAS
	*-------------------------------------------------------------------*

	SELECT 	;
		NF.empresa , NF.nota,NF.serie,NF.cupom, ;
		NF.CGC, NF.FAVORECIDO,;
        NF.tp_pessoa, NF.inscricao,NF.uf, ;
		NF.tipo, NF.data,;
		NF.vlrfrete, NF.vlrseguro,NF.vlrdespes, NF.status,;
        NF.total_nota AS VlrNota,;
	    TP.cfo  AS SET_CFO,NF.aliq_icms,NF.TOTAL_NOTA,;
	  	NF.base_subs,NF.icms_subs,NF.base_icms,;
	  	(NF.Base_icms * NF.aliq_icms/100) AS VLR_ICMS,;
		NF.base_isent, NF.base_outr ;
   	FROM  &dbf_NFSTMP  NF,;
   	      &dbf_TIPTMP  TP;
    WHERE ;
              NF.status = 2 ;
   		  AND NF.operacao = "S";
          AND NF.icms_subs > 0 ;
   		  AND TP.KEY_TIPO = NF.KEY_TIPO ;
    ORDER BY NF.EMPRESA, NF.DATA, NF.NOTA, SET_CFO, NF.ALIQ_ICMS ;
    INTO TABLE C:\TMP\TMP2

    SELE TMP1
    APPEND FROM C:\TMP\TMP2
	*-------------------------------------------------------------------*
    *-----> UNIAO CANCELADAS E NAO CANCELADAS
	*-------------------------------------------------------------------*

    SELECT * FROM C:\TMP\TMP1 ;
     ORDER BY EMPRESA, DATA, NOTA, SET_CFO, ALIQ_ICMS ;
    	INTO CURSOR LIVROSAI

*--------------------------------------------------------------------*

	LStipo  		= "53"
	DO WHILE !EOF()
		LSmsg = "Subst.Saida (53) "+;
				 	DTOC(LIVROSAI.DATA)+;
					STR(LIVROSAI.NOTA,6)
		WAIT WINDOW LSmsg NOWAIT

		*----------------------------------------------------------*
		LScgc	=  CHRTRAN(STR(LIVROSAI.favorecido,14)," ","0")

		LSinsc	=  ALLTRIM(LIVROSAI.inscricao)
		LSuf	=	LIVROSAI.uf
		IF !UPInscricao(LSuf,LSinsc,1,0,0,'')
			IF LIVROSAI.favorecido = 0
				LSinsc	=  "ISENTO"
			ELSE
				SELE clientes
				SET ORDER TO TAG cliente
				SEEK LIVROSAI.favorecido
				IF  FOUND() AND ;
				   UPInscricao(clientes.estado,clientes.INSCRICAO,1,0,0,'')
					&& CFOs Inciados em 5 o estado deve ser igual ao do
					&& informante
					DO CASE
						CASE LEFT(LIVROSAI.SET_CFO,1) = "5" ;
							AND clientes.estado = empresa.estado
							LSinsc	=  ALLTRIM(clientes.inscricao)
							LSuf	=	clientes.estado
						CASE LEFT(LIVROSAI.SET_CFO,1) <> "5" ;
							AND clientes.estado <> empresa.estado
							LSinsc	=  ALLTRIM(clientes.inscricao)
							LSuf	=	clientes.estado
					ENDCASE
				ELSE
					LSinsc	=  ALLTRIM(LIVROSAI.inscricao)
				ENDIF		
			ENDIF
		ENDIF
		SELE LIVROSAI

		IF "ISENTO" $ UPPER(LSinsc)
			LSinsc	=  "ISENTO"
			LScgc	=  CHRTRAN(STR(0,14)," ","0")
		ELSE
			LSinsc	=  CHRTRAN(LSinsc,".","")
			LSinsc	=  CHRTRAN(LSinsc,"/","")
			LSinsc	=  CHRTRAN(LSinsc,"-","")
			LSinsc	=  CHRTRAN(LSinsc,"(","")
			LSinsc	=  CHRTRAN(LSinsc,")","")
		ENDIF			
		IF LIVROSAI.TP_PESSOA = 1
			LScgc	=  CHRTRAN(STR(0,14)," ","0")
		ENDIF			


		LSinsc			= LEFT(LSinsc+space(14),14)
		LSdtemi		=	STR(YEAR(LIVROSAI.data),4)+;
						STR(MONTH(LIVROSAI.data),2)+;
						STR(DAY(LIVROSAI.data),2)
		LSdtemi		=   CHRTRAN(LSdtemi," ","0")						
		LSmodelo 	=   "01"

		LSserie		=   LIVROSAI.serie+"  "

		LSnumero 	= 	CHRTRAN(STR(LIVROSAI.NOTA,7)," ","0")
		LSnumero 	= 	SUBS(LSnumero,2,6)

		LScfo		=   CHRTRAN(LIVROSAI.SET_CFO,".","")						
		LScfo		=   CHRTRAN(LScfo,".","")						
        LScfo	    =   LEFT(LScfo,4)

		IF LIVROSAI.CGC = LIVROSAI.FAVORECIDO
		   LSemitente = "P"
		ELSE
		   LSemitente = "T"
		ENDIF


		SELE LIVROSAI


		*-- > Base de Substituicao
		LSbase_icms	=	str(LIVROSAI.base_subs,14,2)						
		LSbase_icms	=   CHRTRAN(LSbase_icms," ","0")						
		LSbase_icms	=   CHRTRAN(LSbase_icms,",","")						
		LSbase_icms	=   CHRTRAN(LSbase_icms,".","")						

		*-- > ICMS de Substituicao
		LSvlr_icms	=	STR(LIVROSAI.icms_subs,14,2)
		LSvlr_icms	=   CHRTRAN(LSvlr_icms," ","0")						
		LSvlr_icms	=   CHRTRAN(LSvlr_icms,",","")						
		LSvlr_icms	=   CHRTRAN(LSvlr_icms,".","")						

		*--- > Despesas acessorias
		LSdespesa=	LIVROSAI.vlrfrete+LIVROSAI.vlrseguro+LIVROSAI.vlrdespes
		LSdespesa=	 str(LSdespesa,14,2)						
		LSdespesa=   CHRTRAN(LSdespesa," ","0")						
		LSdespesa=   CHRTRAN(LSdespesa,",","")						
		LSdespesa=   CHRTRAN(LSdespesa,".","")						
		
		IF LIVROSAI.status = 2
			LSstatus = "S"
		ELSE
			LSstatus = "N"
		ENDIF		

		LSfiler  	=  space(30)
		************************************************************
		LStmp1		=	LStipo+LScgc+LSinsc+LSdtemi+LSuf+LSmodelo+;
						LSserie+LSnumero+LScfo+LSemitente+;
						LSbase_icms+LSvlr_icms+LSdespesa+;
						LSstatus+LSfiler
		************************************************************
		=FPUT(LNctrl,LStmp1,126)
		LN_Ctr	=	LN_Ctr + 1
		SKIP
	ENDDO

	*-------------------------------------------------------------------*
	*	NOTAS DE ENTRADA
	*-------------------------------------------------------------------*

	*-------------------------------------------------------------------*
	*	NOTAS DE ENTRADA
    * 		WHERE  ch_produ <> "9"  FAZ COM QUE AS NOTAS DE CONHECIMENTO;
    *      DE TRANSP NAO SEJAM SELECIONADAS
	*-------------------------------------------------------------------*


	SELECT 	;
		NF.empresa   , NF.nota,    NF.serie,  ;
		NF.CGC, NF.FAVORECIDO,;
        NF.codforn   , NF.inscricao,NF.uf, ;
		NF.tipo,     NF.data,    NF.data_emi,;
		NF.vlrfrete, NF.vlrseguro,  NF.vlrdespes,;
        NF.total_nota  AS VlrNota,;
		IIF(IT.tp_mercad <> 2,TP.cfo, TP.cfosubs) as SET_CFO,;
	  	NF.aliq_icms,NF.TOTAL_NOTA,NF.base_subs,NF.icms_subs,;
	  	IIF(NF.BASE_SUBS = 0,NF.base_icms,NF.base_icms*0) AS BASE_ICMS,;
	  	IIF(NF.BASE_SUBS = 0,NF.VLR_ICMS,NF.VLR_ICMS*0) AS VLR_ICMS,;
		NF.BASE_ISENT ,(NF.base_outr+NF.BASE_ISS)  AS BASE_OUTR ;
   	FROM  &dbf_NFETMP NF,;
   	      &dbf_TIPTMP TP,;
   	      &dbf_INETMP IT ;
    WHERE ;
            LEFT(NF.situacao,1) = "C" ;
		AND NF.ch_produ <> "9" ;
        AND NF.CH_OPERA <> "5" ;
   		AND NF.KEY_TIPO  = TP.KEY_TIPO ;
   	    AND TP.PROCESSO  $ "Ee" ;
   		AND IT.KEY_TIPO  = NF.KEY_TIPO ;
   		AND IT.EMPRESA   = NF.EMPRESA ;
   		AND IT.NOTA      = NF.NOTA ;
   		AND IT.SERIE     = NF.SERIE ;
   		AND IT.FAVORECIDO = NF.FAVORECIDO ;
    GROUP BY NF.EMPRESA, NF.DATA, NF.NOTA, SET_CFO, IT.ALIQ_ICMS ;
    INTO CURSOR TMPLIVR

    SELECT * FROM TMPLIVR NF;
      WHERE  NF.ICMS_SUBS > 0 ;
	    ORDER BY NF.EMPRESA, NF.DATA, NF.NOTA, NF.SET_CFO, NF.ALIQ_ICMS ;
	    INTO CURSOR LIVROENT

	GO TOP

	LStipo  		= "53"
	DO WHILE !EOF()
		LSmsg = "Subst.Entrada (53) "+;
				 	DTOC(LIVROENT.DATA)+;
					STR(LIVROENT.NOTA,6)
		WAIT WINDOW LSmsg NOWAIT


		*-----------------------------------------------------------*
		SELE fornece
		SET ORDER TO TAG codigo
		SEEK LIVROENT.codforn
		IF FOUND()
			LSinsc	=  ALLTRIM(fornece.inscricao)
			LScgc	=  CHRTRAN(STR(fornece.cgc,14)," ","0")
		ELSE
			LSinsc	=  ALLTRIM(LIVROENT.inscricao)
			LScgc	=  CHRTRAN(STR(LIVROENT.favorecido,14)," ","0")
		ENDIF

		IF "ISENTO" $ UPPER(LSinsc)
			LSinsc	=  "ISENTO"
			LScgc	=  CHRTRAN(STR(0,14)," ","0")
		ELSE
			LSinsc	=  CHRTRAN(LSinsc,".","")
			LSinsc	=  CHRTRAN(LSinsc,"/","")
			LSinsc	=  CHRTRAN(LSinsc,"-","")
			LSinsc	=  CHRTRAN(LSinsc,"(","")
			LSinsc	=  CHRTRAN(LSinsc,")","")
		ENDIF			
		LSinsc		= LEFT(LSinsc+space(14),14)
		SELECT LIVROENT

		LSdtemi		=	STR(YEAR(LIVROENT.data),4)+;
						STR(MONTH(LIVROENT.data),2)+;
						STR(DAY(LIVROENT.data),2)
		LSdtemi		=   CHRTRAN(LSdtemi," ","0")						

		LSuf		=	LIVROENT.uf
		LSmodelo 	=   "01"
*		LSserie		=   "  1"
*		LSsubserie  = 	"  "

		LSserie		=   LIVROENT.serie+"  "

		LSnumero 	= 	CHRTRAN(STR(LIVROENT.NOTA,6)," ","0")

		LScfo		=   CHRTRAN(LIVROENT.SET_CFO,".","")						
		LScfo		=   CHRTRAN(LScfo,".","")						
        LScfo	=   LEFT(LScfo,4)

		IF LIVROENT.CGC = LIVROENT.FAVORECIDO
		   LSemitente = "P"
		ELSE
		   LSemitente = "T"
		ENDIF

		SELE LIVROENT


		*-- > Base de Substituicao
		LSbase_icms	=	str(LIVROENT.base_subs,14,2)						
		LSbase_icms	=   CHRTRAN(LSbase_icms," ","0")						
		LSbase_icms	=   CHRTRAN(LSbase_icms,",","")						
		LSbase_icms	=   CHRTRAN(LSbase_icms,".","")						

		*-- > ICMS de Substituicao
		LSvlr_icms	=	STR(LIVROENT.icms_subs,14,2)
		LSvlr_icms	=   CHRTRAN(LSvlr_icms," ","0")						
		LSvlr_icms	=   CHRTRAN(LSvlr_icms,",","")						
		LSvlr_icms	=   CHRTRAN(LSvlr_icms,".","")						

		*--- > Despesas acessorias
		LSdespesa=	LIVROENT.vlrfrete+LIVROENT.vlrseguro+LIVROENT.vlrdespes
		LSdespesa=	 str(LSdespesa,14,2)						
		LSdespesa=   CHRTRAN(LSdespesa," ","0")						
		LSdespesa=   CHRTRAN(LSdespesa,",","")						
		LSdespesa=   CHRTRAN(LSdespesa,".","")						
		

		LSstatus = "N"
		LSfiler  	=  space(30)
		************************************************************
		LStmp1		=	LStipo+LScgc+LSinsc+LSdtemi+LSuf+LSmodelo+;
						LSserie+LSnumero+LScfo+LSemitente+;
						LSbase_icms+LSvlr_icms+LSdespesa+;
						LSstatus+LSfiler
		************************************************************
		=FPUT(LNctrl,LStmp1,126)
		LN_Ctr	=	LN_Ctr + 1
		SKIP
	ENDDO

RETURN

*****************************************************************
*  REGISTRO DE ITENS - 54 - ENTRADA E SAIDA
*****************************************************************

FUNCTION UL69R_54
	PARAMETERS LNemp, LNctrl, LDper_ini, LDper_fim, LN_Ctr
	PRIVATE LNctrOrdem

	*-------------------------------------------------------------------*
	*	ITENS DAS NOTAS DE SAIDA
	*-------------------------------------------------------------------*


	SELECT 	empresa,nota,serie, cupom, favorecido,tp_pessoa,;
			inscricao, uf, cfo AS SET_CFO ,tipo,;
	        data, total_nota,;
		    vlrfrete,vlrseguro,vlrdespes,;
	  		base_subs, icms_subs, base_icms, aliq_icms,;
	  		(base_icms * aliq_icms/100) as vlr_icms,;
		    base_isent,base_outr,status;
		FROM  &dbf_NFSTMP   ;
	    WHERE operacao =  "S" AND CUPOM = 0;
    ORDER BY DATA, NOTA ;
  	INTO CURSOR LIVROSAI

	GO TOP

	DO WHILE !EOF()
	
		LSmsg = "Produtos Saida (54) "+;
				 	DTOC(LIVROSAI.DATA)+;
					STR(LIVROSAI.NOTA,6)
		WAIT WINDOW LSmsg NOWAIT

		LStipo  	=   "54"

		
		*----------------------------------------------------------*
		LScgc	=  CHRTRAN(STR(LIVROSAI.favorecido,14)," ","0")
		*----------------------------------------------------------*

		LSinsc	=  ALLTRIM(LIVROSAI.inscricao)
		LSuf	=  LIVROSAI.uf

		IF !UPInscricao(LSuf,LSinsc,1,0,0,'')
			IF LIVROSAI.favorecido = 0
				LSinsc	=  "ISENTO"
			ELSE
				SELE clientes
				SET ORDER TO TAG cliente
				SEEK LIVROSAI.favorecido
				IF  FOUND() AND;
					UPInscricao(clientes.estado,clientes.INSCRICAO,1,0,0,'')
					&& CFOs Inciados em 5 o estado deve ser igual ao do
					&& informante
					DO CASE
						CASE LEFT(LIVROSAI.SET_CFO,1) = "5" ;
							AND clientes.estado = empresa.estado
							LSinsc	=  ALLTRIM(clientes.inscricao)
							LSuf	=	clientes.estado
						CASE LEFT(LIVROSAI.SET_CFO,1) <> "5" ;
							AND clientes.estado <> empresa.estado
							LSinsc	=  ALLTRIM(clientes.inscricao)
							LSuf	=	clientes.estado
					ENDCASE
				ELSE
					LSinsc	=  ALLTRIM(LIVROSAI.inscricao)
				ENDIF		
			ENDIF
		ENDIF

		SELE LIVROSAI
		IF "ISENTO" $ UPPER(LSinsc)
			LScgc	=  CHRTRAN(STR(0,14)," ","0")
		ENDIF			
		IF LIVROSAI.TP_PESSOA = 1
			LScgc	=  CHRTRAN(STR(0,14)," ","0")
		ENDIF			
			
		LSmodelo 	=   "01"
		LSserie		=   "  1"

		LSserie		=   LIVROSAI.serie+"  "


		LSnumero 	= 	CHRTRAN(STR(LIVROSAI.NOTA,7)," ","0")
		LSnumero 	= 	SUBS(LSnumero,2,6)

		SELE ITEMMOV
		SET ORDER TO TAG itensnota
		SET NEAR ON
		SEEK STR(LNemp,3)+"S"+STR(LIVROSAI.NOTA,7)
		SET NEAR OFF
		LNctrordem = 1		&& INDICAR ORDEM DO PRODUTO NA NOTA

		DO WHILE !EOF() AND LIVROSAI.NOTA = itemmov.nota ;
						AND LEFT(itemmov.operacao,1) = "S"
			*--------------------------------------------------*
			* 	Podem ser identificadas itens de sadida com
			* numero de nota conincidenter  com itens de uma
			*	SCA por isso e feito a verificacao do tipo
			*---------------------------------------------------*
			IF 	LIVROSAI.TIPO 	 <> itemmov.tipo
				SKIP
				LOOP
			ENDIF
			*---------------------------------------------------*
			DO ULitem_75  && REGISTRAR ITEM COMERCIALIZADO
			*---------------------------------------------------*			
			SELE ITEMMOV


			LScst   = CHRTRAN(STR(itemmov.origem,1)," ","0") + ;
					  itemmov.cst+ "0"

			LSordem = CHRTRAN(STR(LNctrordem,3)," ","0")
			LNctrordem	= LNctrordem + 1
			LScodigo=  LEFT(itemmov.codigo,10)+space(4)

			LSqtde	= STR(itemmov.qtde,12,3)			
			LSqtde  = CHRTRAN(LSqtde," ","0")
			LSqtde  = CHRTRAN(LSqtde,",","")
			LSqtde  = CHRTRAN(LSqtde,".","")

			LSvalor	= STR(itemmov.vlrvenda,13,2)			
			LSvalor = CHRTRAN(LSvalor," ","0")
			LSvalor = CHRTRAN(LSvalor,",","")
			LSvalor = CHRTRAN(LSvalor,".","")

			LSdesconto	= STR(0,13,2)			
			LSdesconto  = CHRTRAN(LSdesconto," ","0")
			LSdesconto  = CHRTRAN(LSdesconto,",","")
			LSdesconto  = CHRTRAN(LSdesconto,".","")

			LSbase_icms = STR(itemmov.base_calc,13,2)			
			LSbase_icms = CHRTRAN(LSbase_icms," ","0")
			LSbase_icms = CHRTRAN(LSbase_icms,",","")
			LSbase_icms = CHRTRAN(LSbase_icms,".","")

			LSbase_subs = (itemmov.base_calc*itemmov.iva)
			LSbase_subs = STR(LSbase_subs,13,2)			
			LSbase_subs = CHRTRAN(LSbase_subs," ","0")
			LSbase_subs = CHRTRAN(LSbase_subs,",","")
			LSbase_subs = CHRTRAN(LSbase_subs,".","")

			LSvlripi	= STR(0,13,2)			
			LSvlripi	= CHRTRAN(LSvlripi," ","0")
			LSvlripi 	= CHRTRAN(LSvlripi,",","")
			LSvlripi 	= CHRTRAN(LSvlripi,".","")

			LSaliq_icms	=	str(itemmov.aliq_icms,5,2)						
			LSaliq_icms	=   CHRTRAN(LSaliq_icms," ","0")						
			LSaliq_icms	=   CHRTRAN(LSaliq_icms,",","")						
			LSaliq_icms	=   CHRTRAN(LSaliq_icms,".","")						
			
			LScfo		=   CHRTRAN(LIVROSAI.SET_cfo,".","")						
	
			SELE TIPOOPER
			SET ORDER TO TAG TIPO
			SEEK "S"+LIVROSAI.tipo
			IF !FOUND()
  			    SEEK "s"+LIVROSAI.tipo
			ENDIF
			
            IF itemmov.tp_mercad = 2
   			    LScfo	= tipooper.cfosubs
   			else
   			    LScfo	= tipooper.cfo
			endif
			
   		    LScfo		=   CHRTRAN(LScfo,".","")						

            IF LScfo = ""
               set step on
            ENDIF


            LScfo	=   LEFT(LScfo,4)


			*******************************************************

			LStmp1		= LStipo+LScgc+LSmodelo+LSserie+;
						  LSnumero+LScfo+LScst+LSordem+;
						  LScodigo+LSqtde+LSvalor+LSdesconto+LSbase_icms+;
						  LSbase_subs+LSvlripi+LSaliq_icms
			=FPUT(LNctrl,LStmp1,126)
			LN_Ctr	=	LN_Ctr + 1
			*******************************************************			
            SELECT itemmov
			SKIP
		ENDDO
		SELECT LIVROSAI
		SKIP
	ENDDO

	*-------------------------------------------------------------------*
	*	NOTAS DE ENTRADA
	*-------------------------------------------------------------------*

	SELECT 	empresa,nota,serie,favorecido, codforn,;
			inscricao, data, uf, cfo AS SET_CFO,tipo,;
			total_nota, vlrfrete,vlrseguro,vlrdespes,;
			vlrfrete,vlrseguro,vlrdespes,;
            base_subs,icms_subs, base_icms, ;
	  		vlr_icms, base_isent,base_outr,aliq_icms,status;
		FROM &dbf_NFETMP ;
	 	WHERE  icms_subs > 0 	  ;
   			AND ch_produ <> "9"   ;
	    ORDER BY DATA, NOTA ;
   		INTO CURSOR LIVROENT
	GO TOP

	DO WHILE !EOF()
		LSmsg = "Produtos Entrada (54) "+;
				 	DTOC(LIVROENT.DATA)+;
					STR(LIVROENT.NOTA,6)
		WAIT WINDOW LSmsg NOWAIT

		LStipo  	= "54"

		*-----------------------------------------------------------*
		SELE fornece
		SET ORDER TO TAG codigo
		SEEK LIVROENT.codforn
		IF FOUND()
			LSinsc	=  ALLTRIM(fornece.inscricao)
			LScgc	=  CHRTRAN(STR(fornece.cgc,14)," ","0")
		ELSE
			LSinsc	=  ALLTRIM(LIVROENT.inscricao)
			LScgc	=  CHRTRAN(STR(LIVROENT.favorecido,14)," ","0")
		ENDIF
		*-----------------------------------------------------------*
		SELE LIVROENT

		IF "ISENTO" $ UPPER(LSinsc)
			LScgc	=  CHRTRAN(STR(0,14)," ","0")
		ENDIF
		LSmodelo 	=   "01"

		LSserie		=   LIVROENT.serie+"  "
		LSsubserie  = 	"  "


		LSnumero 	= 	CHRTRAN(STR(LIVROENT.NOTA,6)," ","0")

		SELE LIVROENT

        LScfo	=   LEFT(LScfo,4)


		SELE ITEMMOV
		SET ORDER TO TAG itensnota
		SET NEAR ON
		SEEK STR(LNemp,3)+"E"+STR(LIVROENT.NOTA,7)
		SET NEAR OFF
		LNctrordem	= 1

		DO WHILE !EOF() AND LIVROENT.NOTA = itemmov.nota ;
						AND LEFT(itemmov.operacao,1) = "E"
			*--------------------------------------------------*
			* 	Podem ser identificadas itens de entrada com mesmo
			* numero de nota por isso e feito a verificacao do tipo
			* e do codiforn
			*---------------------------------------------------*
			IF 	LIVROENT.TIPO 	 <> itemmov.tipo OR ;
				LIVROENT.CODFORN <> itemmov.codforn
				SKIP
				LOOP
			ENDIF
			*---------------------------------------------------*
			DO ULitem_75  && REGISTRAR ITEM COMERCIALIZADO
			*---------------------------------------------------*			

			*---------------------------------------------------*			
			*  ATENCAO : Definir Regra para Informar corretamente
			*           CST em NOTAS DE ENTRADA
			*---------------------------------------------------*			

			IF itemmov.cst <> " "
				LScst   = CHRTRAN(STR(itemmov.origem,1)," ","0") + ;
					  itemmov.cst+ "0"
			ELSE
				DO CASE
					CASE itemmov.tp_mercad = 1 ;
					    and itemmov.base_calc > 0 ;
					    and itemmov.base_calc <> itemmov.vlrvenda
					  	LScst = CHRTRAN(STR(itemmov.origem,1)," ","0") + ;
						  "4"  + "0"
					CASE itemmov.tp_mercad = 1 and itemmov.base_calc > 0
					  	LScst = CHRTRAN(STR(itemmov.origem,1)," ","0") + ;
						  "0"  + "0"
					CASE itemmov.tp_mercad = 1 and itemmov.base_calc = 0
					  	LScst = CHRTRAN(STR(itemmov.origem,1)," ","0") + ;
						  "4"  + "0"
					CASE   itemmov.tp_mercad = 2 ;
					   and itemmov.icms_subs > 0 ;
					   and itemmov.base_calc > 0
					  	LScst = CHRTRAN(STR(itemmov.origem,1)," ","0") + ;
						  "1"  + "0"
					CASE itemmov.tp_mercad = 2 and itemmov.icms_subs > 0
					  	LScst = CHRTRAN(STR(itemmov.origem,1)," ","0") + ;
						  "6"  + "0"
					CASE LEFT(itemmov.codigo,5) = "99999"
					  	LScst = CHRTRAN(STR(itemmov.origem,1)," ","0") + ;
						  "9"  + "0"
					OTHERWISE
						LScst = CHRTRAN(STR(itemmov.origem,1)," ","0") + ;
						  "4"  + "0"
				ENDCASE
			ENDIF
					
			LSordem = CHRTRAN(STR(LNctrordem,3)," ","0")
			LNctrordem	= LNctrordem + 1
			LScodigo=  LEFT(itemmov.codigo,10)+space(4)


			LSqtde	= STR(itemmov.qtde,12,3)			
			LSqtde  = CHRTRAN(LSqtde," ","0")
			LSqtde  = CHRTRAN(LSqtde,",","")
			LSqtde  = CHRTRAN(LSqtde,".","")

			LSvalor	= STR(itemmov.vlrvenda,13,2)			
			LSvalor = CHRTRAN(LSvalor," ","0")
			LSvalor = CHRTRAN(LSvalor,",","")
			LSvalor = CHRTRAN(LSvalor,".","")

			LSdesconto	= STR(0,13,2)			
			LSdesconto  = CHRTRAN(LSdesconto," ","0")
			LSdesconto  = CHRTRAN(LSdesconto,",","")
			LSdesconto  = CHRTRAN(LSdesconto,".","")

			LSbase_icms = STR(itemmov.base_calc,13,2)			
			LSbase_icms = CHRTRAN(LSbase_icms," ","0")
			LSbase_icms = CHRTRAN(LSbase_icms,",","")
			LSbase_icms = CHRTRAN(LSbase_icms,".","")

			LSbase_subs = (itemmov.base_calc+itemmov.vlripi)*itemmov.iva
			LSbase_subs = STR(LSbase_subs,13,2)			
			LSbase_subs = CHRTRAN(LSbase_subs," ","0")
			LSbase_subs = CHRTRAN(LSbase_subs,",","")
			LSbase_subs = CHRTRAN(LSbase_subs,".","")

			LSvlripi	= STR(itemmov.vlripi,13,2)			
			LSvlripi	= CHRTRAN(LSvlripi," ","0")
			LSvlripi 	= CHRTRAN(LSvlripi,",","")
			LSvlripi 	= CHRTRAN(LSvlripi,".","")

			LSaliq_icms	=	str(itemmov.aliq_icms,5,2)						
			LSaliq_icms	=   CHRTRAN(LSaliq_icms," ","0")						
			LSaliq_icms	=   CHRTRAN(LSaliq_icms,",","")						
			LSaliq_icms	=   CHRTRAN(LSaliq_icms,".","")						


			LScfo		=   CHRTRAN(LIVROENT.SET_cfo,".","")						
	
			SELE TIPOOPER
			SET ORDER TO TAG TIPO
			SEEK "E"+LIVROENT.tipo
			IF !FOUND()
  			    SEEK "e"+LIVROENT.tipo
			ENDIF
            IF itemmov.tp_mercad = 2
   			    LScfo	= tipooper.cfosubs
   			else
   			    LScfo	= tipooper.cfo
			endif
   		    LScfo		=   CHRTRAN(LScfo,".","")						

            LScfo	=   LEFT(LScfo,4)


			
			*******************************************************			
			LStmp1		= LStipo+LScgc+LSmodelo+LSserie+;
						  +LSnumero+LScfo+LScst+LSordem+;
						  LScodigo+LSqtde+LSvalor+LSdesconto+LSbase_icms+;
						  LSbase_subs+LSvlripi+LSaliq_icms
			=FPUT(LNctrl,LStmp1,126)
			LN_Ctr	=	LN_Ctr + 1
			*******************************************************			
            SELECT itemmov
			SKIP
		ENDDO
		SELECT LIVROENT
		SKIP
	ENDDO

RETURN

PROCEDURE ULitem_75
	*-----------------------------------------------------------*
	* REGISTRA ITENS COMERCIALIZADOS PARA REGISTRO TIPO 75
	*-----------------------------------------------------------*
	PRIVATE LSalias
	LSalias = ALIAS()

	SELE ITENSNEGOC
	SET ORDER TO TAG CODIGO
	m.codigo	= itemmov.codigo
	SEEK m.codigo
	IF !FOUND()
 		IF LEFT(m.codigo,5) <> "99999" AND EMPTY(itemmov.descricao)		
			SELE grupo
			SET ORDER TO TAG codigo
			SEEK m.codigo
			IF FOUND()
				m.descricao = grupo.descricao
			ELSE
				m.descricao = itemmov.descricao
			ENDIF
		ELSE
			m.descricao = itemmov.descricao
			IF empty(m.descricao)
				m.descricao = LEFT("SERVICO"+SPACE(25),25)
			ENDIF
		ENDIF
		*--------------------------------------------------------*
		SELE ITENSNEGOC
 		IF LEFT(m.codigo,5) <> "99999" AND EMPTY(itemmov.descricao)		
			m.classifica= itemmov.classifica
		ELSE
			m.classifica= "999999999999"
		ENDIF
		m.status	= 1
		m.cdg_tipo	= 4

 		IF LEFT(m.codigo,5) <> "99999" AND EMPTY(itemmov.descricao)		
			m.unidade 	= itemmov.unidade
		ELSE
			m.unidade 	= "UN"
		ENDIF

		m.aliq_ipi	= itemmov.aliq_ipi
		m.aliq_icms	= itemmov.aliq_icms
		m.iva		= itemmov.iva
		m.tp_mercad = itemmov.tp_mercad
		=edithand("SAVE")
	ENDIF
	IF !EMPTY(LSalias) AND USED(LSalias)
		SELECT &LSalias
	ENDIF
RETURN

*****************************************************************
*  REGISTRO CUPONS  - 60 -
*****************************************************************



FUNCTION UL69R_60
	PARAMETERS LNemp, LNctrl, LDper_ini, LDper_fim, LN_Ctr

	*-------------------------------------------------------------------*
	* PROCESSO SOBRE RESUMO DO MAPAECF
	*-------------------------------------------------------------------*

	*-------------------------------------------------------------------*

	*----------------------------------------------------------*
	*  TEMPORARIO PARA AGREGAR CUPONS NORMAIS
	*----------------------------------------------------------*
	LSarqtmp 	= "" 			&& EX: C:\TMP\TMP0001
	LSaliastmp 	= "STG" 		&&     TMP001
	LSaliastmp = UPopentmp(wp_dirtmp,LSarqtmp,LSaliastmp,1)
	IF EMPTY(LSaliastmp)
		DO OBJ_ALER.SPR  WITH ;
			"FALHA !!! NЖo Foi Possivel Definir Arquivo Temporario"
		RETURN
	ENDIF
	dbf_CPMTMP  = "C:"+wp_dirtmp+LSaliastmp+".DBF"
	als_CPMTMP  = LSaliastmp
	*----------------------------------------------------------*
	*  TEMPORARIO PARA AGREGAR CUPONS CANCELADOS
	*----------------------------------------------------------*
	LSarqtmp 	= "" 			&& EX: C:\TMP\TMP0001
	LSaliastmp 	= "CAN" 		&&     TMP001
	LSaliastmp = UPopentmp(wp_dirtmp,LSarqtmp,LSaliastmp,1)
	IF EMPTY(LSaliastmp)
		DO OBJ_ALER.SPR  WITH ;
			"FALHA !!! NЖo Foi Possivel Definir Arquivo Temporario"
		RETURN
	ENDIF
	dbf_CANTMP  = "C:"+wp_dirtmp+LSaliastmp+".DBF"
	als_CANTMP  = LSaliastmp
	*----------------------------------------------------------*
	*-------------------------------------------------------------------*
	* PROCESSO APURANDO CUPONS EMITIDOS E NAO CANCELADOS MAPAECF
	*-------------------------------------------------------------------*
 	SELECT  "5.00" AS CFO ,;
			DATA, ;
			ALIQ_ICMS, ;
			"XX"			 	AS UF, ;
		 	SUM(TOTAL_NOTA)  	AS TOTAL_NOTA,;
		 	SUM(BASE_ICMS)   	AS BASE_ICMS,;
			SUM(BASE_ISENT)  	AS BASE_ISENT,;
			SUM(BASE_OUTR)   	AS BASE_OUTR,;
			SUM(BASE_ISS)    	AS BASE_ISS,;
			SUM(BASE_SUBS)   	AS BASE_SUBS,;
			0*SUM(BASE_SUBS)      AS CANCELA,;
			SUM(BASE_ICMS+BASE_ISENT+BASE_OUTR+BASE_ISS+BASE_SUBS) ;
			              AS VNDABRUTA;
 	FROM &dbf_NFSTMP ;
		WHERE   status = 1 ;
			AND  operacao  = "S" ;
		   	AND  cupom > 0 ;
	GROUP BY DATA,ALIQ_ICMS;
   	INTO TABLE &dbf_CPMTMP

	*-------------------------------------------------------------------*
	* PROCESSO APURANDO CUPONS  CANCELADOS
	*-------------------------------------------------------------------*


 	SELECT  "5.00" AS CFO ,  ;
			DATA, ;
			ALIQ_ICMS, ;
			"XX"			 AS UF, ;
		 	0    AS TOTAL_NOTA,;
		 	0	 AS BASE_ICMS,;
			0	 AS BASE_ISENT,;
			0	 AS BASE_OUTR,;
			0	 AS BASE_ISS,;
			0	 AS BASE_SUBS,;
		 	SUM(TOTAL_NOTA)  AS CANCELA,;
			SUM(TOTAL_NOTA)  AS VNDABRUTA;
	FROM &dbf_NFSTMP ;
		WHERE   status = 2 ;
		    AND  operacao  = "S" ;
		    AND  cupom > 0 ;
	GROUP BY DATA,ALIQ_ICMS;
   	INTO TABLE &dbf_CANTMP

	*-------------------------------------------------------------------*
	* PROCESSO FUSAO CUPONS NORMAIS E CANCELADOS
	*-------------------------------------------------------------------*

   	SELECT  &als_CPMTMP
	append from   &dbf_CANTMP

	*-------------------------------------------------------------------*
	* PROCESSO AGRUPAMENTO DE CUPONS NORMAIS E CANCELADOS
	*-------------------------------------------------------------------*

 	SELECT  "5.00" AS CFO ,  ;
			DATA, ;
			ALIQ_ICMS, ;
			"XX"			 	AS UF, ;
		 	SUM(TOTAL_NOTA)  	AS TOTAL_NOTA,;
		 	SUM(BASE_ICMS)   	AS BASE_ICMS,;
			SUM(BASE_ISENT)  	AS BASE_ISENT,;
			SUM(BASE_OUTR)   	AS BASE_OUTR,;
			SUM(BASE_ISS)    	AS BASE_ISS,;
			SUM(BASE_SUBS)   	AS BASE_SUBS,;
			SUM(CANCELA)        AS CANCELA,;
			SUM(VNDABRUTA)      AS VNDABRUTA;
	FROM &dbf_CPMTMP ;
	GROUP BY DATA,ALIQ_ICMS;
   	INTO CURSOR LIVROSAI




	SELECT LIVROSAI

	go top


	DO WHILE !EOF()
		LSmsg = "Resum.Cupons (60) "+;
				 	DTOC(LIVROSAI.DATA)
		WAIT WINDOW LSmsg NOWAIT

		*---------------------------------------------------------
		*--> PROCESSAR SOMENTE O REGISTRO RESUMO DOS CUPONS
		* REGISTROS SAO GERADOS QUANDO PROCESSO O ARQUIVO LIVROSAI
		* RESUMINDO OS CUPONS POR DATA E ALIQUOTA

		LDtqbr		= 	LIVROSAI.data
		LSvalor		= 	0
		LSvlr_icms	= 	0
		LSnroini	=   0
		LSnrofim	=   0
		*--------------------------------------------------------------*
		=W_DEFPROC("NOTA.SPR")
		=NFEcfInforme((LNemp),(LDtqbr),(LDtqbr),LSnroIni,LSnroFim,;
					LSvalor, LSvlr_icms)
		*--------------------------------------------------------------*
		*	Identifica‡Жo do Equipamento
		*--------------------------------------------------------------*
		LStipo  	= "60"
		LSMestre	= "M"
		LSdtemi		=	STR(YEAR(LDtqbr),4)+;
						STR(MONTH(LDtqbr),2)+;
						STR(DAY(LDtqbr),2)
		LSdtemi		=   CHRTRAN(LSdtemi," ","0")						


		LSserie     =   LEFT(empresa.ecf_serie+SPACE(20),20)
		LSnumero 	= 	"001"
		LSmodelo	=	"2D"
		
		LSnroini	=   CHRTRAN(STR(LSnroini,6)," ","0")
		LSnrofim	=   CHRTRAN(STR(LSnrofim,6)," ","0")

		SELE mapaecf
		SET NEAR ON
		SET ORDER TO TAG mapa
		SEEK STR(LNemp,3)+DTOS(LDtqbr)+STR(1,4)+STR(17,5,2)	
		SET NEAR OFF
		IF mapaecf.empresa = LNemp AND ;
		   mapaecf.data    = LDtqbr AND ;
		   mapaecf.ecf		= 1 AND ;
		   mapaecf.aliquota = 17
				LSnroredZ		=	mapaecf.ctrreducao
				LSgtInivalor	=	mapaecf.gt_inicial
				LSgtFimvalor	=	mapaecf.gt_final
		ELSE
			SKIP -1
			DO WHILE !BOF() AND mapaecf.empresa = LNemp
				IF  mapaecf.aliquota = 17
					EXIT
				ENDIF
				SKIP -1
			ENDDO
			IF !BOF()
				LSnroredZ		=	mapaecf.ctrreducao
				LSgtInivalor	=	mapaecf.gt_inicial
				LSgtFimvalor	=	mapaecf.gt_final
			ELSE			
				LSnroredZ		=	0
				LSgtInivalor	=	0
				LSgtFimvalor	=	0
			ENDIF
		ENDIF


		LSctrredZ		=   CHRTRAN(STR(LSnroredZ,6)," ","0")

        LSctrReinic     =   CHRTRAN(STR(0,3)," ","0") && ate ter informacao

		SELECT LIVROSAI
		LNctrRegAnaliticos = 0
		LNvendaBruta = 0
		LNregistro = RECNO()
		DO WHILE !EOF() AND LDTqbr = LIVROSAI.data


			*-------------------------------------------------*
			LNvendaBruta =  LNvendaBruta  + VNDABRUTA
			*-------------------------------------------------*
			SKIP
		ENDDO

		GO LNregistro

		LSbranco_B	=  SPACE(37)

		LSgtVndBrt	=	STR(LNvendaBruta,17,2)
		LSgtVndBrt	=   CHRTRAN(LSgtVndBrt," ","0")						
		LSgtVndBrt	=   CHRTRAN(LSgtVndBrt,",","")						
		LSgtVndBrt	=   CHRTRAN(LSgtVndBrt,".","")						

		LSgtFimvalor	=	STR(LSgtFimvalor,17,2)
		LSgtFimvalor	=   CHRTRAN(LSgtFimvalor," ","0")						
		LSgtFimvalor	=   CHRTRAN(LSgtFimvalor,",","")						
		LSgtFimvalor	=   CHRTRAN(LSgtFimvalor,".","")						



		*******************************************************
		LStmp1		=  LStipo+"M"+LSdtemi+LSserie+LSnumero+;
					+LSmodelo+LSnroini+LSnrofim+LSctrredZ+;
					+LSctrReinic+LSgtVndBrt+LSgtFimValor+LSbranco_B

		=FPUT(LNctrl,LStmp1,126)
		LN_Ctr	=	LN_Ctr + 1
		*******************************************************			

		DO WHILE !EOF() AND LDTqbr = LIVROSAI.data

			IF (LIVROSAI.CANCELA) > 0

				LSaliq_icms	=	"CANC"
				LSvalor		=	STR(LIVROSAI.CANCELA,13,2)
				LSvalor		=   CHRTRAN(LSvalor," ","0")						
				LSvalor		=   CHRTRAN(LSvalor,",","")						
				LSvalor		=   CHRTRAN(LSvalor,".","")						
				LSbranco_B	=  SPACE(79)
				*******************************************************
				LStmp1		=  LStipo+"A"+LSdtemi+LSserie+LSaliq_icms+;
					+LSvalor+LSbranco_B
				=FPUT(LNctrl,LStmp1,126)
				LN_Ctr	=	LN_Ctr + 1
				*******************************************************			
			ENDIF
			*******************************************************			

			IF LIVROSAI.base_icms > 0

				LSaliq_icms	=	str(LIVROSAI.aliq_icms,5,2)						
				LSaliq_icms	=   CHRTRAN(LSaliq_icms," ","0")						
				LSaliq_icms	=   CHRTRAN(LSaliq_icms,",","")						
				LSaliq_icms	=   CHRTRAN(LSaliq_icms,".","")						

				LSvalor		=	STR(LIVROSAI.base_icms,13,2)
				LSvalor		=   CHRTRAN(LSvalor," ","0")						
				LSvalor		=   CHRTRAN(LSvalor,",","")						
				LSvalor		=   CHRTRAN(LSvalor,".","")						
		
				LSbranco_B	=  SPACE(79)
				LNctrRegAnaliticos = LNctrRegAnaliticos + 1
				*******************************************************
				LStmp1		=  LStipo+"A"+LSdtemi+LSserie+LSaliq_icms+;
						+LSvalor+LSbranco_B
				=FPUT(LNctrl,LStmp1,126)
				LN_Ctr	=	LN_Ctr + 1
				*******************************************************			
			ENDIF

			IF (LIVROSAI.BASE_ISS) > 0
				LSaliq_icms	=	"ISS "
				LSvalor		=	LIVROSAI.BASE_ISS

				LSvalor		=	STR(LSvalor,13,2)
				LSvalor		=   CHRTRAN(LSvalor," ","0")						
				LSvalor		=   CHRTRAN(LSvalor,",","")						
				LSvalor		=   CHRTRAN(LSvalor,".","")						
				LSbranco_B	=  SPACE(79)
				*******************************************************
				LStmp1		=  LStipo+"A"+LSdtemi+LSserie+LSaliq_icms+;
						+LSvalor+LSbranco_B
				=FPUT(LNctrl,LStmp1,126)
				LN_Ctr	=	LN_Ctr + 1
				*******************************************************			
			ENDIF
	
			*----------------------------------------------------------*
			* ATENЂЗO : NO RESUMO DO LIVRO O VALOR DE MERCADORIAS
			*          VENDIDAS COM RECOLHIMENTO EM REGIME DE
			*		   SUBSTITUIЂЗO SAO LANCADOS  EM "ISENTO"
			*          JA O SINTEGRA LANCA NA OPCAO "F" DE MERCADORIA
			*           EM REGIME SUBSTITUIЂЗO
			*----------------------------------------------------------*
			*   NESTE CASO E ATE SEGUNDA ORDEM ESTAMOS PASSANDO
			* A COLUNA ISENTAS PARA "F"
			*----------------------------------------------------------*

			IF (LIVROSAI.base_isent) > 0
				LSaliq_icms	=	"I   "
				LSvalor 	=	LIVROSAI.base_isent

				LSvalor		=	STR(LSvalor,13,2)
				LSvalor		=   CHRTRAN(LSvalor," ","0")						
				LSvalor		=   CHRTRAN(LSvalor,",","")						
				LSvalor		=   CHRTRAN(LSvalor,".","")						
				LSbranco_B	=  SPACE(79)
				*******************************************************
				LStmp1		=  LStipo+"A"+LSdtemi+LSserie+LSaliq_icms+;
						+LSvalor+LSbranco_B
				=FPUT(LNctrl,LStmp1,126)
				LN_Ctr	=	LN_Ctr + 1
				*******************************************************			
			ENDIF
	

			IF (LIVROSAI.BASE_SUBS) > 0
				LSaliq_icms	=	"F   "
				LSvalor 	=	LIVROSAI.BASE_SUBS

				LSvalor		=	STR(LSvalor,13,2)
				LSvalor		=   CHRTRAN(LSvalor," ","0")						
				LSvalor		=   CHRTRAN(LSvalor,",","")						
				LSvalor		=   CHRTRAN(LSvalor,".","")						
				LSbranco_B	=  SPACE(79)
				*******************************************************
				LStmp1		=  LStipo+"A"+LSdtemi+LSserie+LSaliq_icms+;
						+LSvalor+LSbranco_B
				=FPUT(LNctrl,LStmp1,126)
				LN_Ctr	=	LN_Ctr + 1
				*******************************************************			
			ENDIF
			*******************************************************			
			SKIP
		ENDDO



		SELECT LIVROSAI
		IF EOF()
			EXIT
		ENDIF
	ENDDO
RETURN



*---------------------------------------------------------------------*
*		Conhecimento de Tranporte
*---------------------------------------------------------------------*

FUNCTION UL69R_70
	PARAMETERS LNemp, LNctrl, LDper_ini, LDper_fim, LN_Ctr

	*-------------------------------------------------------------------*
	*	NOTAS DE ENTRADA
	*-------------------------------------------------------------------*
	SELECT 	empresa,nota,serie, codforn,inscricao, data, uf, cfo,tipo,;
	        total_nota, vlrfrete,vlrseguro,vlrdespes,;
            base_subs,icms_subs, base_icms, 	;
	  		vlr_icms, base_isent,base_outr,aliq_icms,status;
		FROM &dbf_NFETMP ;
		WHERE ch_produ = "9" 			;	
	    ORDER BY DATA, NOTA ;
	  	INTO CURSOR LIVROENT

	SELECT LIVROENT
	GO TOP

	LStipo  		= "70"

	DO WHILE !EOF()
		LSmsg = "Conh.Frete (70) "+;
				 	DTOC(LIVROENT.DATA)+;
					STR(LIVROENT.NOTA,6)
		WAIT WINDOW LSmsg NOWAIT
		&& SE NAO FOR CONHECIMENTO DE TRANSPORTE

		*-----------------------------------------------------------*
		SELE fornece
		SET ORDER TO TAG codigo
		SEEK LIVROENT.codforn

		IF FOUND()
			LSinsc	=  ALLTRIM(fornece.inscricao)
			LScgc	=  CHRTRAN(STR(fornece.cgc,14)," ","0")
		ELSE
			LSinsc	=  ALLTRIM(LIVROENT.inscricao)
			LScgc	=  CHRTRAN(STR(LIVROENT.favorecido,14)," ","0")
		ENDIF

		IF "ISENTO" $ UPPER(LSinsc)
			LSinsc	=  "ISENTO"
			LScgc	=  CHRTRAN(STR(0,14)," ","0")
		ELSE
			LSinsc	=  CHRTRAN(LSinsc,".","")
			LSinsc	=  CHRTRAN(LSinsc,"/","")
			LSinsc	=  CHRTRAN(LSinsc,"-","")
			LSinsc	=  CHRTRAN(LSinsc,"(","")
			LSinsc	=  CHRTRAN(LSinsc,")","")
		ENDIF			
		LSinsc			= LEFT(LSinsc+space(14),14)
		*-----------------------------------------------------------*
		SELECT LIVROENT

		LSdtemi		=	STR(YEAR(LIVROENT.data),4)+;
						STR(MONTH(LIVROENT.data),2)+;
						STR(DAY(LIVROENT.data),2)
		LSdtemi		=   CHRTRAN(LSdtemi," ","0")						
		LSuf		=	LIVROENT.uf
		LSmodelo 	=   "08"


		IF  LIVROENT.serie $ "1/2"
			LSserie		=   "U"
			LSsubserie  = 	LIVROENT.serie+" "
		ELSE
			LSserie		=   LIVROENT.serie
			LSsubserie  = 	"U "
		ENDIF

		LSnumero 	= 	CHRTRAN(STR(LIVROENT.NOTA,6)," ","0")

		SELE TIPOOPER
		SET ORDER TO TAG TIPO
		SEEK "E"+LIVROENT.tipo
		IF FOUND()
			LScfo	= tipooper.cfo
		ELSE	
			LScfo		=   CHRTRAN(LIVROENT.SET_cfo,".","")						
		ENDIF
		LScfo		=   CHRTRAN(LScfo,".","")						

        LScfo	=   LEFT(LScfo,4)



		SELE LIVROENT

		LSvalor		=	str(LIVROENT.total_nota,14,2)						
		LSvalor		=   CHRTRAN(LSvalor," ","0")						
		LSvalor		=   CHRTRAN(LSvalor,",","")						
		LSvalor		=   CHRTRAN(LSvalor,".","")						

		LSbase_icms	=   IIF(LIVROENT.base_subs > 0, 0, LIVROENT.base_icms)

		LSbase_icms	=	str(LSbase_icms,15,2)						
		LSbase_icms	=   CHRTRAN(LSbase_icms," ","0")						
		LSbase_icms	=   CHRTRAN(LSbase_icms,",","")						
		LSbase_icms	=   CHRTRAN(LSbase_icms,".","")						

		LSvlr_icms	=	IIF(LIVROENT.base_subs > 0, 0, LIVROENT.vlr_icms)

		LSvlr_icms	=	str(LSvlr_icms,15,2)						
		LSvlr_icms	=   CHRTRAN(LSvlr_icms," ","0")						
		LSvlr_icms	=   CHRTRAN(LSvlr_icms,",","")						
		LSvlr_icms	=   CHRTRAN(LSvlr_icms,".","")						

		LSbase_isent=	str(LIVROENT.base_isent,15,2)						
		LSbase_isent=   CHRTRAN(LSbase_isent," ","0")						
		LSbase_isent=   CHRTRAN(LSbase_isent,",","")						
		LSbase_isent=   CHRTRAN(LSbase_isent,".","")						
		
		LSbase_outr	=	str(LIVROENT.base_outr,15,2)						
		LSbase_outr	=   CHRTRAN(LSbase_outr," ","0")						
		LSbase_outr	=   CHRTRAN(LSbase_outr,",","")						
		LSbase_outr	=   CHRTRAN(LSbase_outr,".","")						

		LSCifFob	=	"2"

		LSstatus = "N"
		************************************************************
		LStmp1		=	LStipo+LScgc+LSinsc+LSdtemi+LSuf+LSmodelo+;
						LSserie+LSsubserie+LSnumero+LScfo+LSvalor+;
						LSbase_icms+LSvlr_icms+LSbase_isent+;
						LSbase_outr+LSCifFob+LSstatus
		************************************************************
		=FPUT(LNctrl,LStmp1,126)
		LN_Ctr	=	LN_Ctr + 1
		SKIP
	ENDDO
RETURN

*****************************************************************
*  CADASTRO SE PRODUTOS - 75 -
*****************************************************************

FUNCTION UL69R_75
	PARAMETERS LNemp, LNctrl, LDper_ini, LDper_fim, LN_Ctr

	*-------------------------------------------------------------------*
	*	CADASTRO DOS PRODUTOS COMERCIALIZADOS NO PERIODO
	*-------------------------------------------------------------------*
	SELECT EMPRESA
	SET ORDER TO TAG empresa
	SEEK LNemp
	IF !FOUND()
		RETURN(.F.)
	ENDIF	

	SELE ITENSNEGOC
	SET ORDER TO TAG CODIGO
	GO TOP
	
	DO WHILE !EOF()
		WAIT WINDOW ITENSNEGOC.codigo+ITENSNEGOC.descricao NOWAIT
		
		LStipo	= "75"
		LSdini		=	STR(YEAR(LDper_ini),4)+;
						STR(MONTH(LDper_ini),2)+;
						STR(DAY(LDper_ini),2)
		LSdini		=   CHRTRAN(LSdini," ","0")						

		LSdfim		=	STR(YEAR(LDper_fim),4)+;
						STR(MONTH(LDper_fim),2)+;
						STR(DAY(LDper_fim),2)
		LSdfim		=   CHRTRAN(LSdfim," ","0")						
	
		LScodigo= LEFT(ITENSNEGOC.codigo+SPACE(14),14)

		LSncm   = SPACE(8)

		LSnome	  = LEFT(ITENSNEGOC.descricao+SPACE(53),53)
		LSunidade = LEFT(ITENSNEGOC.unidade+SPACE(6),6)
		LNtab_cst = empresa.tab_cst
		*---------------------------------------------------------*
		*  Buscar CST para operacao mais comum (VLA)
		*---------------------------------------------------------*
		* =W_DEFPROC("ORCAMENT.SPR")
		* m.cst = ORdefcst((LNtab_cst),("VLA"),(ITENSNEGOC.tp_mercad),;
		*  			ITENSNEGOC.codigo)
		*---------------------------------------------------------*

		=W_DEFPROC("TRIBUTAR.SPR")
		M.cst = TRdefcst((LNtab_cst),("VLA"),(ITENSNEGOC.tp_mercad),;
					ITENSNEGOC.codigo)

		
		*------------------------------------------------------------*
		LScst     	=  	"0"+m.cst+"0"
		LScst		=   CHRTRAN(LScst," ","0")						

		LSaliq_ipi	=	str(ITENSNEGOC.aliq_ipi,5,2)						
		LSaliq_ipi	=   CHRTRAN(LSaliq_ipi," ","0")						
		LSaliq_ipi	=   CHRTRAN(LSaliq_ipi,",","")						
		LSaliq_ipi	=   CHRTRAN(LSaliq_ipi,".","")						

		LSaliq_icms	=	str(17,5,2)						
		LSaliq_icms	=   CHRTRAN(LSaliq_icms," ","0")						
		LSaliq_icms	=   CHRTRAN(LSaliq_icms,",","")						
		LSaliq_icms	=   CHRTRAN(LSaliq_icms,".","")						

		LSaliq_rdz	=	str(0,5,2)						
		LSaliq_rdz 	=   CHRTRAN(LSaliq_rdz ," ","0")						
		LSaliq_rdz 	=   CHRTRAN(LSaliq_rdz ,",","")						
		LSaliq_rdz 	=   CHRTRAN(LSaliq_rdz ,".","")						

		LSaliq_iva	=	str(ITENSNEGOC.iva,13,2)						
		LSaliq_iva	=   CHRTRAN(LSaliq_iva," ","0")						
		LSaliq_iva	=   CHRTRAN(LSaliq_iva,",","")						
		LSaliq_iva	=   CHRTRAN(LSaliq_iva,".","")						


		LSbranco  = SPACE(25)
		*******************************************************
		LStmp1	= LStipo+LSdini+LSdfim+LScodigo+LSncm+LSnome+;
					LSunidade+LScst+LSaliq_ipi+LSaliq_icms+;
					LSaliq_rdz+LSaliq_iva
		=FPUT(LNctrl,LStmp1,126)
		LN_Ctr	=	LN_Ctr + 1
		*******************************************************			
		SELE ITENSNEGOC
		SKIP
	ENDDO
			
RETURN

*****************************************************************
*  TOTALIZADORES  - 90 -
*****************************************************************

FUNCTION UL69R_90
	PARAMETERS LNemp,LNctrl,LNctr_10,LNctr_11,LNctr_50,LNctr_53,LNctr_54,;
				LNctr_60,LNctr_70,LNctr_75

	*-------------------------------------------------------------------*
	*	CADASTRO DOS PRODUTOS COMERCIALIZADOS NO PERIODO
	*-------------------------------------------------------------------*
	SELECT EMPRESA
	SET ORDER TO TAG empresa
	SEEK LNemp
	IF !FOUND()
		RETURN(.F.)
	ENDIF	

	LStipo	= "90"
	LScgc	= 	CHRTRAN(STR(empresa.cgc,14)," ","0")
	LSinsc	= 	CHRTRAN(empresa.inscricao," ","")
	LSinsc	= 	CHRTRAN(LSinsc,".","")
	LSinsc	= 	CHRTRAN(LSinsc,"/","")
	LSinsc	= 	CHRTRAN(LSinsc,"-","")
	LSinsc	= 	LEFT(LSinsc+space(14),14)


	LS_tp50	=	"50"
	LS_ct50	=	CHRTRAN(STR(LNctr_50,8)," ","0")

	LS_tp53	=	"53"
	LS_ct53	=	CHRTRAN(STR(LNctr_53,8)," ","0")

	LS_tp54	=	"54"
	LS_ct54	=	CHRTRAN(STR(LNctr_54,8)," ","0")

	LS_tp60	=	"60"
	LS_ct60	=	CHRTRAN(STR(LNctr_60,8)," ","0")

	LS_tp70	=	"70"
	LS_ct70	=	CHRTRAN(STR(LNctr_70,8)," ","0")

	LS_tp75	=	"75"
	LS_ct75	=	CHRTRAN(STR(LNctr_75,8)," ","0")

	LNctr_90=	1
	LS_tp90	=	"90"
	LS_ct90	=	CHRTRAN(STR(LNctr_90,8)," ","0")


	LSspaco =   SPACE(25)

	LS_ctgr	=	LNctr_10+LNctr_11+LNctr_50+LNctr_53+LNctr_54+;
				LNctr_60+LNctr_70+LNctr_75+LNctr_90

	LS_tpGR	=	"99"
	LS_ctgr	=	CHRTRAN(STR(LS_ctgr,8)," ","0")

	*******************************************************
	LStmp1	= LStipo+LScgc+LSinsc+;
			  LS_tp50+LS_ct50+LS_tp53+LS_ct53+LS_tp54+LS_ct54+;
			  LS_tp60+LS_ct60+LS_tp70+LS_ct70+LS_tp75+LS_ct75+;
			  LS_tpGr+LS_ctgr+ LSspaco+"1"

	=FPUT(LNctrl,LStmp1,126)
RETURN
