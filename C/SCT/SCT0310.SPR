*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ 03/15/16             SCT0310.SPR               15:24:02 ╨
*       ╨                                                         ╨
*       гддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╤
*       ╨                                                         ╨
*       ╨ Author's Name                                           ╨
*       ╨                                                         ╨
*       ╨ Copyright (c) 2016 Company Name                         ╨
*       ╨ Address                                                 ╨
*       ╨ City,     Zip                                           ╨
*       ╨                                                         ╨
*       ╨ Description:                                            ╨
*       ╨ This program was automatically generated by GENSCRN.    ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨          SCT0310/MS-DOS Setup Code - SECTION 1          ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*

#REGION 1
	*------------------------------------------------------------*
	* CLASSIFICACAO:  [?????]                           		 *
	*------------------------------------------------------------*
	* OBJETIVO....:GERAR  ARQ. SINTEGRA
	*------------------------------------------------------------*
	* COMENTARIO..:
	*------------------------------------------------------------*
	* OBS........ :
	*------------------------------------------------------------*
	* TABELAS....: EMPRESA,NOTA,NOTAENT,ITEMMOV
	*------------------------------------------------------------*
	* PARAMETROS..:
	*------------------------------------------------------------*
	* RETORNO.....:
	*------------------------------------------------------------*
	*<<<<<<<<<<<<<<<<<<<<<<<         >>>>>>>>>>>>>>>>>>>>>>>>>>>>*
	*------------------------------------------------------------*
	* Ambiente
	*------------------------------------------------------------*
	=W_DEFPROC("ROTINAS.SPR")
	ON KEY LABEL ESCAPE

	*------------------------------------------------------------*
	* Variaveis  Controlando Arquivos
	*------------------------------------------------------------*
	PRIVATE LSalias
	PRIVATE LFempresa,LFnota,LFnotaent,LFitemmov,LFfornece,LFgrupo
	PRIVATE LFgrfiscal
	PRIVATE LFtabnbm,LFclasnbm,LFmapaecf,LFtipooper
	PRIVATE LFCliente, LFTipo_50, LFTipo_60A
	PRIVATE LFLinha,LFxmlPrtcp,LFsaldo,LFAdgticms

	PRIVATE LSuf_destino
	PRIVATE LNCPFCNPJ

	LSalias			= ALIAS()
	LFempresa		= NetArq("empresa")
	LFnota			= NetArq("nota")
	LFnotaent		= NetArq("notaent")
	LFitemmov		= NetArq("itemmov")
	LFfornece		= NetArq("fornece")
	LFgrupo  		= NetArq("grupo")
	LFgrfiscal 		= NetArq("grfiscal")
	LFTabNbm  		= NetArq("tabnbm")
	LFClasNbm 		= NetArq("clasnbm")
	LFMapaEcf 		= NetArq("mapaecf")
	LFTipooper		= NetArq("tipooper")
	LFCliente		= NetArq("clientes")
	LFTipo_50		= NetArq("tipo_50",.t.)
	LFTipo_60A		= NetArq("tipo_60A",.t.)
	LFsaldo  		= NetArq("saldo")
	LFAdgticms 		= NetArq("ADGTICMS")


	LFLinha  		= NetArq("Linha",.t.)    && Para Arq.Digital
	LFxmlPrtcp		= NetArq("xmlPrtcp",.t.) && Para Arq.Digital

	
	IF (LFempresa+LFnota+LFnotaent+LFitemmov+;
		LFfornece+LFgrupo+LFgrfiscal+LFtabnbm+LFclasnbm+LFMapaEcf+;
		LFtipooper+LFcliente) > 100000
		*-----------------------------------------------------*
		* FALHA DE ABERTURA DE TABELAS
		*-----------------------------------------------------*
		DO ULfecha
		RETURN(0)
	ENDIF
	IF (LFtipo_50+LFtipo_60a++LFLinha+LFxmlPrtcp+LFsaldo+;
	    LFAdgticms) > 100000
		*-----------------------------------------------------*
		* FALHA DE ABERTURA DE TABELAS
		*-----------------------------------------------------*
		DO ULfecha
		RETURN(0)
	ENDIF



	*------------------------------------------------------------*
	* Variaveis  abientais com influencia na biblioteca
	*   deve-se adequar a biblioteca para recebelas via parametro
	*   e nao pelo ambiente com esta sendo feito
	*------------------------------------------------------------*
	PRIVATE wp_ref_local
	PRIVATE isediting
	wp_ref_local 	=  .f.     && NAO POSSUI CONTROLE DE REFRESH LOCAL
	m.isediting		=	.F.

	*------------------------------------------------------------*
	* Variaveis  de uso Especico no Formulario
	*------------------------------------------------------------*
	PRIVATE LFAnSaida,LFStSaida,LFResCfoS,LFResUfS,LNPagina
	PRIVATE LFAnEntrada,LFStEntrada,LFResCfoE,LFResUfE
	PRIVATE LFIpiEntrada,LFIpiSaida,LFIpiProd
	PRIVATE LFCr_ICMS,LFconv_3199
	PRIVATE LFICMProd

	STORE .F. TO LFAnSaida,LFStSaida,LFResCfoS,LFResUfS
	STORE 0   TO LNpagina
	STORE .F. TO LFAnEntrada,LFStEntrada,LFResCfoE,LFResUfE
	STORE .F. TO LFIpiEntrada,LFIpiSaida,LFIpiProd
	STORE .F. TO LFCr_ICMS,LFCRpc_ICMS,LFconv_3199
	STORE .F. TO LFICMProd
	LSinventario = "N"


	LSuf_destino = ""
	LNCPFCNPJ    = 0


#REGION 0
REGIONAL m.currarea, m.talkstat, m.compstat

IF SET("TALK") = "ON"
	SET TALK OFF
	m.talkstat = "ON"
ELSE
	m.talkstat = "OFF"
ENDIF
m.compstat = SET("COMPATIBLE")
SET COMPATIBLE FOXPLUS

*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨                MS-DOS Window definitions                ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*

IF NOT WEXIST("sct0310") ;
	OR UPPER(WTITLE("SCT0310")) == "SCT0310.PJX" ;
	OR UPPER(WTITLE("SCT0310")) == "SCT0310.SCX" ;
	OR UPPER(WTITLE("SCT0310")) == "SCT0310.MNX" ;
	OR UPPER(WTITLE("SCT0310")) == "SCT0310.PRG" ;
	OR UPPER(WTITLE("SCT0310")) == "SCT0310.FRX" ;
	OR UPPER(WTITLE("SCT0310")) == "SCT0310.QPR"
	DEFINE WINDOW sct0310 ;
		FROM 1, 1 ;
		TO 18,68 ;
		TITLE "GERAR ARQUIVO SINTEGRA" ;
		FOOTER "CT0310" ;
		FLOAT ;
		NOCLOSE ;
		SHADOW ;
		NOMINIMIZE ;
		NONE ;
		COLOR SCHEME 1
ENDIF

IF NOT WEXIST("sct0310a") ;
	OR UPPER(WTITLE("SCT0310A")) == "SCT0310A.PJX" ;
	OR UPPER(WTITLE("SCT0310A")) == "SCT0310A.SCX" ;
	OR UPPER(WTITLE("SCT0310A")) == "SCT0310A.MNX" ;
	OR UPPER(WTITLE("SCT0310A")) == "SCT0310A.PRG" ;
	OR UPPER(WTITLE("SCT0310A")) == "SCT0310A.FRX" ;
	OR UPPER(WTITLE("SCT0310A")) == "SCT0310A.QPR"
	DEFINE WINDOW sct0310a ;
		FROM INT((SROW()-60)/2),INT((SCOL()-70)/2) ;
		TO INT((SROW()-60)/2)+59,INT((SCOL()-70)/2)+69 ;
		TITLE "UNITE -GERAR ARQUIVO SINTEGRA" ;
		FOOTER "CT0310A" ;
		FLOAT ;
		NOCLOSE ;
		SHADOW ;
		NOMINIMIZE ;
		NONE ;
		COLOR SCHEME 1
ENDIF

IF NOT WEXIST("sct0310b") ;
	OR UPPER(WTITLE("SCT0310B")) == "SCT0310B.PJX" ;
	OR UPPER(WTITLE("SCT0310B")) == "SCT0310B.SCX" ;
	OR UPPER(WTITLE("SCT0310B")) == "SCT0310B.MNX" ;
	OR UPPER(WTITLE("SCT0310B")) == "SCT0310B.PRG" ;
	OR UPPER(WTITLE("SCT0310B")) == "SCT0310B.FRX" ;
	OR UPPER(WTITLE("SCT0310B")) == "SCT0310B.QPR"
	DEFINE WINDOW sct0310b ;
		FROM INT((SROW()-40)/2),INT((SCOL()-70)/2) ;
		TO INT((SROW()-40)/2)+39,INT((SCOL()-70)/2)+69 ;
		TITLE "UNITE -GERAR ARQUIVO DIGITAL" ;
		FOOTER "CT0310B" ;
		FLOAT ;
		NOCLOSE ;
		SHADOW ;
		NOMINIMIZE ;
		NONE ;
		COLOR SCHEME 1
ENDIF


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨          SCT0310/MS-DOS Setup Code - SECTION 2          ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*

#REGION 1




*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨              SCT0310/MS-DOS Screen Layout               ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*

#REGION 1
IF WVISIBLE("sct0310")
	ACTIVATE WINDOW sct0310 SAME
ELSE
	ACTIVATE WINDOW sct0310 NOSHOW
ENDIF
@ 0,0 TO 17,67 ;
	COLOR SCHEME 23
@ 1,67 TO 16,67 ;
	COLOR SCHEME 24
@ 17,1 TO 17,66 ;
	COLOR SCHEME 24
@ 0,67 SAY "©" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 17,67 SAY "ы" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 0,57 SAY "[CT0310]" ;
	SIZE 1,8, 0
@ 0,3 SAY "[ Gera Arquivo Para SINTEGRA ]" ;
	SIZE 1,30, 0
@ 1,5 TO 3,20 ;
	COLOR SCHEME 23
@ 3,6 TO 3,19 ;
	COLOR SCHEME 24
@ 3,20 SAY "ы" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 2,20 SAY "Ё" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 1,20 SAY "©" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 1,6 SAY "[Filial]" ;
	SIZE 1,8, 0
@ 2,9 SAY "-" ;
	SIZE 1,1, 0
@ 1,24 TO 3,52 ;
	COLOR SCHEME 23
@ 3,25 TO 3,51 ;
	COLOR SCHEME 24
@ 3,52 SAY "ы" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 2,52 SAY "Ё" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 1,52 SAY "©" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 1,26 SAY "[ Periodo ]" ;
	SIZE 1,11, 0
@ 4,1 TO 7,34 ;
	COLOR SCHEME 23
@ 7,2 TO 7,33 ;
	COLOR SCHEME 24
@ 7,34 SAY "ы" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 5,34 SAY "Ё" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 4,34 SAY "©" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 9,42 SAY "Finalidade :" ;
	SIZE 1,12, 0
@ 4,38 TO 6,66 ;
	COLOR SCHEME 23
@ 6,39 TO 6,65 ;
	COLOR SCHEME 24
@ 6,66 SAY "ы" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 5,66 SAY "Ё" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 4,66 SAY "©" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 5,39 SAY "Gerar Inventario S/N" ;
	SIZE 1,20, 0
@ 4,2 SAY "Filtrar:" ;
	SIZE 1,8, 0
@ 5,8 SAY "UF:" ;
	SIZE 1,3, 0
@ 6,2 SAY "CPF/CNPJ:" ;
	SIZE 1,9, 0
@ 6,34 SAY "Ё" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 2,6 GET m.empresa ;
	SIZE 1,3 ;
	DEFAULT 0 ;
	PICTURE "999" ;
	WHEN _4l70x0bm9() ;
	VALID _4l70x0bmj() ;
	ERROR "Empresa Nao Localizada. "
@ 2,10 GET m.nome_emp ;
	SIZE 1,7 ;
	DEFAULT " " ;
	PICTURE "@!K" ;
	WHEN _4l70x0bmk()
@ 2,26 GET m.dt_inicio ;
	SIZE 1,10 ;
	DEFAULT {  /  /  } ;
	WHEN _4l70x0bml() ;
	VALID _4l70x0bmm()
@ 2,40 GET m.dt_fim ;
	SIZE 1,10 ;
	DEFAULT {  /  /  } ;
	WHEN isediting ;
	VALID _4l70x0bnd() ;
	MESSAGE "Data Final deve ser maior ou igual a Inicial e deve pertencer ao meso mes"
@ 5,12 GET LSuf_destino ;
	SIZE 1,2 ;
	DEFAULT " " ;
	WHEN _4l70x0bnn()
@ 6,12 GET LNCPFCNPJ ;
	SIZE 1,20 ;
	DEFAULT 0 ;
	PICTURE "99999999999999" ;
	WHEN _4l70x0bnt() ;
	VALID _4l70x0bnz() ;
	ERROR _4l70x0bo0()
@ 5,61 GET LSinventario ;
	SIZE 1,1 ;
	DEFAULT " " ;
	PICTURE "@!" ;
	WHEN _4l70x0bo1()
@ 8,1 GET m.imp_btn ;
	PICTURE "@*HN \<1-Gerar Arq.SINTEGRA" ;
	SIZE 1,22,1 ;
	DEFAULT 1 ;
	WHEN _4l70x0bo2() ;
	VALID _4l70x0bo3() ;
	DISABLE
@ 9,1 GET m.LIV_btn ;
	PICTURE "@*HN \<2-Resumo CFO SINTEGRA" ;
	SIZE 1,23,1 ;
	DEFAULT 1 ;
	WHEN _4l70x0bou() ;
	VALID _4l70x0bp0() ;
	DISABLE
@ 10,1 GET m.exp_btn ;
	PICTURE "@*HN \<3-Exporta XML Arq.Digital - DF" ;
	SIZE 1,32,1 ;
	DEFAULT 1 ;
	WHEN _4l70x0bp7() ;
	VALID _4l70x0bpd() ;
	DISABLE
@ 12,3 GET m.gdfNFS_btn ;
	PICTURE "@*HN \<5-Cnvrt NFSai em Doc.Fiscal" ;
	SIZE 1,29,1 ;
	DEFAULT 1 ;
	WHEN _4l70x0bpj() ;
	VALID _4l70x0bpk() ;
	DISABLE
@ 13,3 GET m.gdfNFE_btn ;
	PICTURE "@*HN \<6-Cnvrt NFEnt em Doc.Fiscal" ;
	SIZE 1,29,1 ;
	DEFAULT 1 ;
	WHEN _4l70x0bpl() ;
	VALID _4l70x0bpm() ;
	DISABLE
@ 14,3 GET m.gxmldf_btn ;
	PICTURE "@*HN \<7-Gera XML Reg Documentos Fiscais" ;
	SIZE 1,35,1 ;
	DEFAULT 1 ;
	WHEN _4l70x0bpn() ;
	VALID _4l70x0bqe() ;
	DISABLE
@ 15,1 GET m.APURA_btn ;
	PICTURE "@*HN \<8-Apuracao EFD" ;
	SIZE 1,16,1 ;
	DEFAULT 1 ;
	WHEN _4l70x0bqk() ;
	VALID _4l70x0bqr() ;
	DISABLE
@ 10,43 GET LNfinalidade ;
	PICTURE "@*RVN Normal;Retifica┤фo Total;Retifica┤фo Aditiva;Desfasimento" ;
	SIZE 1,23,0 ;
	DEFAULT 1 ;
	WHEN _4l70x0bqw()
@ 17,52 GET m.edit_btn ;
	PICTURE "@*HN \<Edita" ;
	SIZE 1,7,1 ;
	DEFAULT 1 ;
	WHEN _4l70x0br2() ;
	VALID _4l70x0br3() ;
	MESSAGE 'Permite a alteracao de dados do registro corrente'
@ 17,60 GET m.canc_btn ;
	PICTURE "@*HN \<Saida" ;
	SIZE 1,7,1 ;
	DEFAULT 1 ;
	VALID _4l70x0br4()
@ 11,1 GET m.pct_EFD_btn ;
	PICTURE "@*HN \<4-Pacote EXPORTA EFD" ;
	SIZE 1,22,1 ;
	DEFAULT 1 ;
	WHEN _4l70x0br5() ;
	VALID _4l70x0br6() ;
	DISABLE
@ 16,1 GET m.EFDsimp_btn ;
	PICTURE "@*HN \<9-Exp EFD Simples(Mapa Res/Produtos/Invent)" ;
	SIZE 1,45,1 ;
	DEFAULT 1 ;
	WHEN _4l70x0brx() ;
	VALID _4l70x0bs3() ;
	DISABLE




*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨              SCT0310A/MS-DOS Screen Layout              ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*

#REGION 2
IF WVISIBLE("sct0310a")
	ACTIVATE WINDOW sct0310a SAME
ELSE
	ACTIVATE WINDOW sct0310a NOSHOW
ENDIF
@ 0,57 SAY "[CT0310U]" ;
	SIZE 1,9, 0
@ 0,3 SAY "[ Unit - Gera Arquivo Para SINTEGRA ]" ;
	SIZE 1,37, 0
@ 2,53 SAY "|" ;
	SIZE 1,1, 0
@ 3,53 SAY "|" ;
	SIZE 1,1, 0
@ 4,53 SAY "|" ;
	SIZE 1,1, 0
@ 5,53 SAY "|" ;
	SIZE 1,1, 0
@ 6,53 SAY "|" ;
	SIZE 1,1, 0
@ 15,54 SAY "--------------" ;
	SIZE 1,14, 0
@ 1,53 SAY "*--Auxiliares-*" ;
	SIZE 1,15, 0
@ 57,1 SAY "-----------------------------------------------------------" ;
	SIZE 1,59, 0
@ 7,53 SAY "|" ;
	SIZE 1,1, 0
@ 9,53 SAY "|" ;
	SIZE 1,1, 0
@ 8,53 SAY "|" ;
	SIZE 1,1, 0
@ 10,53 SAY "|" ;
	SIZE 1,1, 0
@ 11,53 SAY "|" ;
	SIZE 1,1, 0
@ 2,55 GET ULtp_Mercad ;
	PICTURE "@*HN ULtp_Mercad" ;
	SIZE 1,13,1 ;
	DEFAULT 1 ;
	WHEN .f. ;
	VALID _4l70x0bsa()
@ 1,0 GET ULArqItens ;
	PICTURE "@*HN ULArqItens" ;
	SIZE 1,12,1 ;
	DEFAULT 1 ;
	WHEN .f. ;
	VALID _4l70x0bsg()
@ 3,55 GET ULIPIProd ;
	PICTURE "@*HN ULIPIProd" ;
	SIZE 1,11,1 ;
	DEFAULT 1 ;
	WHEN .f. ;
	VALID _4l70x0bsn()
@ 3,0 GET ULgera_SIN ;
	PICTURE "@*HN ULgera_SIN" ;
	SIZE 1,12,1 ;
	DEFAULT 1 ;
	WHEN .f. ;
	VALID _4l70x0bso()
@ 3,31 GET resumo ;
	PICTURE "@*HN \<Resumo CFO SINTEGRA" ;
	SIZE 1,21,1 ;
	DEFAULT 1 ;
	WHEN .f. ;
	VALID _4l70x0bsp()
@ 4,55 GET ULALIQICMS ;
	PICTURE "@*HN ULALIQICMS" ;
	SIZE 1,12,1 ;
	DEFAULT 1 ;
	WHEN .f. ;
	VALID _4l70x0bsq()
@ 5,2 GET ULDefTmpArq ;
	PICTURE "@*HN ULDefTmpArq - Mapeia arquivos Temporarios" ;
	SIZE 1,43,1 ;
	DEFAULT 1 ;
	WHEN .f. ;
	VALID _4l70x0bti()
@ 5,55 GET ULIVA ;
	PICTURE "@*HN ULIVA" ;
	SIZE 1,7,1 ;
	DEFAULT 1 ;
	WHEN .f. ;
	VALID _4l70x0btr()
@ 6,2 GET ULFchTmpArq ;
	PICTURE "@*HN ULFchTmpArq - Fecha arquivos Temporarios" ;
	SIZE 1,43,1 ;
	DEFAULT 1 ;
	WHEN .f. ;
	VALID _4l70x0btx()
@ 6,55 GET ULdefCfo ;
	PICTURE "@*HN ULdefCfo" ;
	SIZE 1,10,1 ;
	DEFAULT 1 ;
	WHEN .f. ;
	VALID _4l70x0bu3()
@ 7,2 GET ULSelNFs ;
	PICTURE "@*HN ULSelNFs - Seleciona dados de NFS" ;
	SIZE 1,35,1 ;
	DEFAULT 1 ;
	WHEN .f. ;
	VALID _4l70x0bu4()
@ 8,55 GET ULCFOPS ;
	PICTURE "@*HN ULCFOPS" ;
	SIZE 1,9,1 ;
	DEFAULT 1 ;
	WHEN .f. ;
	VALID _4l70x0bu5()
@ 8,2 GET ULSelNFe ;
	PICTURE "@*HN ULSelNFe - Seleciona dados de NFe " ;
	SIZE 1,36,1 ;
	DEFAULT 1 ;
	WHEN .f. ;
	VALID _4l70x0bu6()
@ 9,55 GET ULCST_IPI ;
	PICTURE "@*HN ULCST_IPI" ;
	SIZE 1,11,1 ;
	DEFAULT 1 ;
	WHEN .f. ;
	VALID _4l70x0bu7()
@ 9,2 GET ULSelTipo ;
	PICTURE "@*HN ULSelTipo - Monta cursor com Tipo de Operacao" ;
	SIZE 1,47,1 ;
	DEFAULT 1 ;
	WHEN .f. ;
	VALID _4l70x0buz()
@ 10,55 GET ULCST_ISS ;
	PICTURE "@*HN ULCST_ISS" ;
	SIZE 1,11,1 ;
	DEFAULT 1 ;
	WHEN .f. ;
	VALID _4l70x0bv4()
@ 10,0 GET ULProcCVN6902 ;
	PICTURE "@*HN ULProcCVN6902" ;
	SIZE 1,15,1 ;
	DEFAULT 1 ;
	WHEN .f. ;
	VALID _4l70x0bva()
@ 11,55 GET ULGenero ;
	PICTURE "@*HN ULGenero" ;
	SIZE 1,10,1 ;
	DEFAULT 1 ;
	WHEN .f. ;
	VALID _4l70x0bvh()
@ 11,0 GET UL69R_10 ;
	PICTURE "@*HN UL69R_10 - Descricao de Finalidade" ;
	SIZE 1,36,1 ;
	DEFAULT 1 ;
	WHEN .f. ;
	VALID _4l70x0bvo()
@ 12,55 GET m.val_btn ;
	PICTURE "@*HN \<Validar" ;
	SIZE 1,9,1 ;
	DEFAULT 1 ;
	WHEN .f. ;
	VALID _4l70x0bvp() ;
	DISABLE
@ 12,0 GET UL69R_11 ;
	PICTURE "@*HN UL69R_11 - Dados Complementares do Informante" ;
	SIZE 1,47,1 ;
	DEFAULT 1 ;
	WHEN .f. ;
	VALID _4l70x0bvq()
@ 13,55 GET ULCST_Entrada ;
	PICTURE "@*HN ULCST_Entrada" ;
	SIZE 1,15,1 ;
	DEFAULT 1 ;
	WHEN .f. ;
	VALID _4l70x0bvr()
@ 13,0 GET UL69R_50 ;
	PICTURE "@*HN UL69R_50 - NFs Mod 01 ou 01-A// NFe Mod 03 Etc" ;
	SIZE 1,48,1 ;
	DEFAULT 1 ;
	WHEN .f. ;
	VALID _4l70x0bvs()
@ 14,0 GET UL69R_51 ;
	PICTURE "@*HN UL69R_51 - para contribuinte IPI --> IMPLEMENTAR" ;
	SIZE 1,50,1 ;
	DEFAULT 1 ;
	WHEN .f. ;
	VALID _4l70x0bws() ;
	DISABLE
@ 15,0 GET UL69R_53 ;
	PICTURE "@*HN UL69R_53 - Substituicao Tributaria" ;
	SIZE 1,36,1 ;
	DEFAULT 1 ;
	WHEN .f. ;
	VALID _4l70x0bwy()
@ 16,0 GET UL69R_54 ;
	PICTURE "@*HN UL69R_54 - Itens - 54 - ENTRADA E SAIDA" ;
	SIZE 1,41,1 ;
	DEFAULT 1 ;
	WHEN .f. ;
	VALID _4l70x0bx9()
@ 17,6 GET ULitem_6975 ;
	PICTURE "@*HN ULitem_6975-Grava Itens Comerc. Relacionados no TIPO 75" ;
	SIZE 1,57,1 ;
	DEFAULT 1 ;
	WHEN .f. ;
	VALID _4l70x0bxa()
@ 18,0 GET UL69R_60 ;
	PICTURE "@*HN UL69R_60 - Cupons" ;
	SIZE 1,19,1 ;
	DEFAULT 1 ;
	WHEN .f. ;
	VALID _4l70x0bxb()
@ 19,0 GET UL69R_70 ;
	PICTURE "@*HN UL69R_70 - Conhecimento de Tranporte" ;
	SIZE 1,38,1 ;
	DEFAULT 1 ;
	WHEN .f. ;
	VALID _4l70x0by4()
@ 20,0 GET UL69R_74 ;
	PICTURE "@*HN UL69R_74 - Inventario de Produtos" ;
	SIZE 1,35,1 ;
	DEFAULT 1 ;
	WHEN .f. ;
	VALID _4l70x0byc()
@ 21,0 GET UL69R_75 ;
	PICTURE "@*HN UL69R_75 - Cadastro de Produtos" ;
	SIZE 1,33,1 ;
	DEFAULT 1 ;
	WHEN .f. ;
	VALID _4l70x0byl()
@ 22,0 GET UL69R_90 ;
	PICTURE "@*HN UL69R_90 - *  TOTALIZADORES  - 90" ;
	SIZE 1,35,1 ;
	DEFAULT 1 ;
	WHEN .f. ;
	VALID _4l70x0bym()
@ 24,1 GET ERRULLvrSda50 ;
	PICTURE "@*HN ERRULLvrSda50 -Monta Cursor LIVRO SAIDAS-(LIVROSAI)" ;
	SIZE 1,53,1 ;
	DEFAULT 1 ;
	WHEN .f. ;
	VALID _4l70x0byn() ;
	DISABLE
@ 25,5 GET ERRULItmSda54 ;
	PICTURE "@*HN ERRULItmSda54 -Monta Cursor ITENS SAIDAS(ILIVROSAI) " ;
	SIZE 1,54,1 ;
	DEFAULT 1 ;
	WHEN .f. ;
	VALID _4l70x0byo() ;
	DISABLE
@ 26,1 GET ERRULLvrEnt50 ;
	PICTURE "@*HN ERRULLvrEnt50 -Monta Cursor LIVRO ENTRADAS(LIVROENT)" ;
	SIZE 1,54,1 ;
	DEFAULT 1 ;
	WHEN .f. ;
	VALID _4l70x0byp() ;
	DISABLE
@ 27,5 GET ERRULItmEnt54 ;
	PICTURE "@*HN ERRULItmEnt54 -Monta Cursor ITENS LIVRO ENTRADAS(ILIVROENT)" ;
	SIZE 1,61,1 ;
	DEFAULT 1 ;
	WHEN .f. ;
	VALID _4l70x0bzn() ;
	DISABLE
@ 37,1 GET ULLvrSda53 ;
	PICTURE "@*HN ULLvrSda53 -Monta Cursor LIVRO SAIDAS Subst.Trib.(SLIVROSAI)" ;
	SIZE 1,62,1 ;
	DEFAULT 1 ;
	WHEN .f. ;
	VALID _4l70x0bzt()
@ 38,1 GET ULLvrEnt53 ;
	PICTURE "@*HN ULLvrEnt53 -Monta Cursor LIVRO ENTRADAS Subst.Trib.(SLIVROENT)" ;
	SIZE 1,64,1 ;
	DEFAULT 1 ;
	WHEN .f. ;
	VALID _4l70x0c00()
@ 40,1 GET ULOLDLvrInvt ;
	PICTURE "@*HN ULOLDLvrInvt - Monta Cursor INVENTARIO (INVNTRIO) DESAB 11/07/2014" ;
	SIZE 1,68,1 ;
	DEFAULT 1 ;
	WHEN .f. ;
	VALID _4l70x0c08() ;
	DISABLE
@ 45,1 GET ULLvrICMS ;
	PICTURE "@*HN ULLvrICMS - Monta Cursor APURAICM" ;
	SIZE 1,35,1 ;
	DEFAULT 1 ;
	WHEN .f. ;
	VALID _4l70x0c09()
@ 47,1 GET ULLvrCopCpm ;
	PICTURE "@*HN ULLvrCopCpm-Cursor NFs Copias de Cupons-(LIVROCOP)" ;
	SIZE 1,52,1 ;
	DEFAULT 1 ;
	WHEN .f. ;
	VALID _4l70x0c0a()
@ 50,3 GET UL1cfoReducaoZ ;
	PICTURE "@*HN UL1cfoReducaoZ - Monta Cursor LVReducao" ;
	SIZE 1,41,1 ;
	DEFAULT 1 ;
	WHEN .f. ;
	VALID _4l70x0c0b()
@ 53,0 GET ULMapaResumoECF ;
	PICTURE "@*HN ULMapaResumoECF - Monta Cursor LVMapaResumo" ;
	SIZE 1,45,1 ;
	DEFAULT 1 ;
	WHEN .f. ;
	VALID _4l70x0c0c() ;
	DISABLE
@ 58,1 GET AULLvrCpm ;
	PICTURE "@*HN ULLvrCpm-ANTES ARQ. DIGITAL O CFOP ERA FIXADO EM 5.00 27/01/2007" ;
	SIZE 1,66,1 ;
	DEFAULT 1 ;
	WHEN .f. ;
	VALID _4l70x0c18() ;
	DISABLE
@ 59,1 GET ULLvrCpm ;
	PICTURE "@*HN ULLvrCpm -Monta Cursor LIVRO CUPONS(LIVROCPM) *RESUMO POR DIA*" ;
	SIZE 1,64,1 ;
	DEFAULT 1 ;
	WHEN .f. ;
	VALID _4l70x0c1h()
@ 48,1 GET ULLvrAnlCpm ;
	PICTURE "@*HN ULLvrAnlCpm-Cursor ANALITICO DE CUPONS LIVRO CUPONS -(LIVROCPA)" ;
	SIZE 1,65,1 ;
	DEFAULT 1 ;
	WHEN .f. ;
	VALID _4l70x0c1p()
@ 49,1 GET ULLvrStcoCpm ;
	PICTURE "@*HN ULLvrStcoCpm-Cursor SINTETICO DE CUPONS LIVRO CUPONS -(LCPMSINT)" ;
	SIZE 1,66,1 ;
	DEFAULT 1 ;
	WHEN .f. ;
	VALID _4l70x0c1q()
@ 52,0 GET ULReducaoZ ;
	PICTURE "@*HN ULReducaoZ - Monta Cursor LVReducao" ;
	SIZE 1,37,1 ;
	DEFAULT 1 ;
	WHEN .f. ;
	VALID _4l70x0c1r()
@ 56,3 GET ULcfoPreponderante ;
	PICTURE "@*HN ULcfoPreponderante-Cursor DEFCFOPs de CFOP Prepnderante cupons" ;
	SIZE 1,64,1 ;
	DEFAULT 1 ;
	WHEN .f. ;
	VALID _4l70x0c1s()
@ 46,1 GET ULLvrTrans ;
	PICTURE "@*HN ULLvrTrans -Monta Cursor LIVRO CONHECIMENTO TRANSPORTE LIVTRANS)" ;
	SIZE 1,66,1 ;
	DEFAULT 1 ;
	WHEN .f. ;
	VALID _4l70x0c1t()
@ 23,0 SAY "ROTINAS ALTERADAS PARA GERAR XML ARQDIGT POR ITEM (ERRO NO SINTEGRA)" ;
	SIZE 1,68, 0
@ 29,1 GET ULLvrSda50 ;
	PICTURE "@*HN ULLvrSda50 -Monta Cursor LIVRO SAIDAS-(LIVROSAI)" ;
	SIZE 1,50,1 ;
	DEFAULT 1 ;
	WHEN .f. ;
	VALID _4l70x0c2r()
@ 30,5 GET ULItmSda54 ;
	PICTURE "@*HN ULItmSda54 -Monta Cursor ITENS SAIDAS(ILIVROSAI) " ;
	SIZE 1,51,1 ;
	DEFAULT 1 ;
	WHEN .f. ;
	VALID _4l70x0c30()
@ 35,1 GET ULLvrEnt50 ;
	PICTURE "@*HN ULLvrEnt50 -Monta Cursor LIVRO ENTRADAS(LIVROENT)" ;
	SIZE 1,51,1 ;
	DEFAULT 1 ;
	WHEN .f. ;
	VALID _4l70x0c37()
@ 36,5 GET ULItmEnt54 ;
	PICTURE "@*HN ULItmEnt54 -Monta Cursor ITENS LIVRO ENTRADAS(ILIVROENT)" ;
	SIZE 1,58,1 ;
	DEFAULT 1 ;
	WHEN .f. ;
	VALID _4l70x0c38()
@ 28,0 SAY "ROTINAS ANTIGAS VOLTARAM PARA ATENDER SINTENGA 15/10/2008" ;
	SIZE 1,57, 0
@ 32,1 GET BKPULLvrSda50 ;
	PICTURE "@*HN BKPULLvrSda50 -Monta Cursor LIVRO SAIDAS-(LIVROSAI)" ;
	SIZE 1,53,1 ;
	DEFAULT 1 ;
	WHEN .f. ;
	VALID _4l70x0c39()
@ 33,5 GET BKPULItmSda54 ;
	PICTURE "@*HN BKPULItmSda54 -Monta Cursor ITENS SAIDAS(ILIVROSAI) " ;
	SIZE 1,54,1 ;
	DEFAULT 1 ;
	WHEN .f. ;
	VALID _4l70x0c3a()
@ 54,1 GET ULNVMapaResumoECF ;
	PICTURE "@*HN ULNVMapaResumoECF-Monta Cursor LVMapaResumo CORRG ERROS VRC ANTIGA" ;
	SIZE 1,68,1 ;
	DEFAULT 1 ;
	WHEN .f. ;
	VALID _4l70x0c3b()
@ 41,1 GET ULLvrInvt ;
	PICTURE "@*HN ULDESCARTELvrInvt - Monta Cursor INVENTARIO fiscal (INVNTRIO)" ;
	SIZE 1,63,1 ;
	DEFAULT 1 ;
	WHEN .f. ;
	VALID _4l70x0c49() ;
	DISABLE
@ 43,1 GET ULLvrInvt ;
	PICTURE "@*HN ULLvrInvt-Monta Cursor INVENTARIO (INVNTRIO) Novo revisao ivnt real" ;
	SIZE 1,69,1 ;
	DEFAULT 1 ;
	WHEN .f. ;
	VALID _4l70x0c4r()




*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨              SCT0310B/MS-DOS Screen Layout              ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*

#REGION 3
IF WVISIBLE("sct0310b")
	ACTIVATE WINDOW sct0310b SAME
ELSE
	ACTIVATE WINDOW sct0310b NOSHOW
ENDIF
@ 1,3 GET ADCmdLimpaCabXML ;
	PICTURE "@*HN ADCmdLimpaCabXML - Comando para Limpeza do Cabecalho XML" ;
	SIZE 1,58,1 ;
	DEFAULT 1 ;
	WHEN .f. ;
	VALID _4l70x0c4s()
@ 2,3 GET ADVld_TpPessoa ;
	PICTURE "@*HN ADVld_TpPessoa - Verifica Tipo Pessoa da nota" ;
	SIZE 1,47,1 ;
	DEFAULT 1 ;
	WHEN .f. ;
	VALID _4l70x0c4t()
@ 3,0 GET ADExpXMLDados ;
	PICTURE "@*HN ADExpXMLDados - Exporta Dados CML Para Arq. Digital" ;
	SIZE 1,53,1 ;
	DEFAULT 1 ;
	WHEN .f. ;
	VALID _4l70x0c4u() ;
	DISABLE
@ 4,2 GET ADClieParticipantes ;
	PICTURE "@*HN ADClieParticipantes - Exporta Participantes" ;
	SIZE 1,45,1 ;
	DEFAULT 1 ;
	WHEN .f. ;
	VALID _4l70x0c4v()
@ 5,4 GET ADfrmtIBGE ;
	PICTURE "@*HN ADfrmtIBGE" ;
	SIZE 1,12,1 ;
	DEFAULT 1 ;
	WHEN .f. ;
	VALID _4l70x0c5p()
@ 6,2 GET ADFRParticipantes ;
	PICTURE "@*HN ADFRParticipantes - Exporta Participantes" ;
	SIZE 1,43,1 ;
	DEFAULT 1 ;
	WHEN .f. ;
	VALID _4l70x0c5u()
@ 7,5 GET ADGraPrtcpntXML ;
	PICTURE "@*HN ADGraPrtcpntXML - Gera XML layoutr Participante" ;
	SIZE 1,49,1 ;
	DEFAULT 1 ;
	WHEN .f. ;
	VALID _4l70x0c61()
@ 9,2 GET ADItens ;
	PICTURE "@*HN ADItens - Exporta Itens" ;
	SIZE 1,25,1 ;
	DEFAULT 1 ;
	WHEN .f. ;
	VALID _4l70x0c67() ;
	DISABLE
@ 28,4 GET ADZLeitura ;
	PICTURE "@*HN ADZLeitura - Exporta Leitura Z" ;
	SIZE 1,32,1 ;
	DEFAULT 1 ;
	WHEN .f. ;
	VALID _4l70x0c6e()
@ 29,4 GET ADMapaResumoECF ;
	PICTURE "@*HN ADMapaResumoECF - Exporta Mapa Resumo ECF/ICMS" ;
	SIZE 1,48,1 ;
	DEFAULT 1 ;
	WHEN .f. ;
	VALID _4l70x0c6f()
@ 19,2 GET ADLivrosaida ;
	PICTURE "@*HN ADLivrosaida - Exporta Notas Fiscais MOD-01 LIVRO SAIDA" ;
	SIZE 1,57,1 ;
	DEFAULT 1 ;
	WHEN .f. ;
	VALID _4l70x0c6g()
@ 20,2 GET ADLivroEntrada ;
	PICTURE "@*HN ADLivroEntrada - Exporta Notas Fiscais MOD-01 LIVRO ENTRADA" ;
	SIZE 1,61,1 ;
	DEFAULT 1 ;
	WHEN .f. ;
	VALID _4l70x0c6h()
@ 21,2 GET ADLivroCupons ;
	PICTURE "@*HN ADLivroCupons - Exporta Cupons Fiscais MOD-2D LIVRO SAIDA" ;
	SIZE 1,59,1 ;
	DEFAULT 1 ;
	WHEN .f. ;
	VALID _4l70x0c79()
@ 22,2 GET ADInventario ;
	PICTURE "@*HN ADInventario - Exporta Inventario" ;
	SIZE 1,35,1 ;
	DEFAULT 1 ;
	WHEN .f. ;
	VALID _4l70x0c7j()
@ 23,2 GET ADApuraIcms ;
	PICTURE "@*HN ADApuraIcms  - Exporta APURACAO icms" ;
	SIZE 1,38,1 ;
	DEFAULT 1 ;
	WHEN .f. ;
	VALID _4l70x0c7q()
@ 25,4 GET ADModelaXML ;
	PICTURE "@*HN ADModelaXML - Modela XML anexando Cabecalho+Corpo+Rodape" ;
	SIZE 1,58,1 ;
	DEFAULT 1 ;
	WHEN .f. ;
	VALID _4l70x0c7r()
@ 30,0 SAY "*----------------------------------------------------------------*" ;
	SIZE 1,66, 0
@ 31,1 GET ADGerNFSaiDocFiscal ;
	PICTURE "@*HN ADGerNFSaiDocFiscal - Exporta Nfs para Doc Fiscal" ;
	SIZE 1,51,1 ;
	DEFAULT 1 ;
	WHEN .f. ;
	VALID _4l70x0c7s()
@ 34,1 GET ADGeraXMLDocFiscal ;
	PICTURE "@*HN ADGeraXMLDocFiscal - Exporta Nfs para Doc Fiscal" ;
	SIZE 1,50,1 ;
	DEFAULT 1 ;
	WHEN .f. ;
	VALID _4l70x0c8r()
@ 32,1 GET ADGerNFEntDocFiscal ;
	PICTURE "@*HN ADGerNFEntDocFiscal - Exporta Nfs para Doc Fiscal" ;
	SIZE 1,51,1 ;
	DEFAULT 1 ;
	WHEN .f. ;
	VALID _4l70x0c8y()
@ 26,7 GET ADLimpaString ;
	PICTURE "@*HN ADLimpaString - Elimina caracteres especiais da string xml" ;
	SIZE 1,60,1 ;
	DEFAULT 1 ;
	WHEN .f. ;
	VALID _4l70x0c94()
@ 36,1 GET ADEFDApuraICM ;
	PICTURE "@*HN ADEFDApuraICM - Apuracao ICMS com base DOCFISIT - EFD" ;
	SIZE 1,55,1 ;
	DEFAULT 1 ;
	WHEN .f. ;
	VALID _4l70x0c9c()
@ 12,2 GET ADItens ;
	PICTURE "@*HN ADItens - Exporta Itens" ;
	SIZE 1,25,1 ;
	DEFAULT 1 ;
	WHEN .f. ;
	VALID _4l70x0c9d()

IF NOT WVISIBLE("sct0310b")
	ACTIVATE WINDOW sct0310b
ENDIF
IF NOT WVISIBLE("sct0310a")
	ACTIVATE WINDOW sct0310a
ENDIF
IF NOT WVISIBLE("sct0310")
	ACTIVATE WINDOW sct0310
ENDIF


READ CYCLE ;
	ACTIVATE READACT() ;
	DEACTIVATE READDEAC() ;
	SHOW _4l70x0bs8()

RELEASE WINDOW sct0310
RELEASE WINDOW sct0310a
RELEASE WINDOW sct0310b

#REGION 0
IF m.talkstat = "ON"
	SET TALK ON
ENDIF
IF m.compstat = "ON"
	SET COMPATIBLE ON
ENDIF


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨               SCT0310/MS-DOS Cleanup Code               ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*

#REGION 1
DO ULfecha
RETURN

**************************************


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨   SCT0310/MS-DOS Supporting Procedures and Functions    ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*

#REGION 1
PROCEDURE ULfecha
	=UP_fecha("empresa" ,LFempresa)
	=UP_fecha("nota" ,LFnota)
	=UP_fecha("notaent" ,LFnotaent)
	=UP_fecha("itemmov" ,LFitemmov)
	=UP_fecha("fornece" ,LFfornece)
	=UP_fecha("grupo" ,LFgrupo)
	=UP_fecha("grfiscal" ,LFgrfiscal)
	=UP_fecha("tabnbm" ,LFTabNbm)
	=UP_fecha("grupo" ,LFClasNbm)
	=UP_fecha("mapaecf" ,LFMapaEcf)
	=UP_fecha("clientes" ,LFcliente)
	=UP_fecha("tipooper" ,LFtipooper)
	=UP_fecha("tipo_50" ,LFtipo_50)
	=UP_fecha("tipo_60a" ,LFtipo_60a)
	=UP_fecha("Linha" ,LFlinha)
	=UP_fecha("xmlPrtcp" ,LFxmlPrtcp)
	=UP_fecha("saldo" ,LFsaldo)
	=UP_fecha("Adgticms" ,LFAdgticms)

	IF !EMPTY(LSalias) AND USED(LSalias)
		SELECT &LSalias
	ENDIF
	ON KEY LABEL ESCAPE
	SET FORMAT TO
RETURN


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4L70X0BM9           m.empresa WHEN                     ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0310,     Record Number:   38   ╨
*       ╨ Variable:            m.empresa                          ╨
*       ╨ Called By:           WHEN Clause                        ╨
*       ╨ Object Type:         Field                              ╨
*       ╨ Snippet Number:      1                                  ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _4l70x0bm9     &&  m.empresa WHEN
#REGION 1
ON KEY LABEL ENTER
ON KEY LABEL ESCAPE	KEYBOARD "{END}"
IF LASTKEY() = 15 AND !(isediting)
	KEYBOARD "{ESCAPE}"
ENDIF
RETURN(isediting)

*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4L70X0BMJ           m.empresa VALID                    ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0310,     Record Number:   38   ╨
*       ╨ Variable:            m.empresa                          ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Field                              ╨
*       ╨ Snippet Number:      2                                  ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _4l70x0bmj     &&  m.empresa VALID
#REGION 1
SET PROCEDURE TO EMPRESA.spr
RETURN(UVerifEmp(m.empresa,m.nome_emp,LASTKEY()))




*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4L70X0BMK           m.nome_emp WHEN                    ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0310,     Record Number:   39   ╨
*       ╨ Variable:            m.nome_emp                         ╨
*       ╨ Called By:           WHEN Clause                        ╨
*       ╨ Object Type:         Field                              ╨
*       ╨ Snippet Number:      3                                  ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _4l70x0bmk     &&  m.nome_emp WHEN
#REGION 1
SHOW GET m.nome_emp
ON KEY LABEL ESCAPE KEYBOARD "{BACKTAB}"
RETURN(.f.)


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4L70X0BML           m.dt_inicio WHEN                   ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0310,     Record Number:   40   ╨
*       ╨ Variable:            m.dt_inicio                        ╨
*       ╨ Called By:           WHEN Clause                        ╨
*       ╨ Object Type:         Field                              ╨
*       ╨ Snippet Number:      4                                  ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _4l70x0bml     &&  m.dt_inicio WHEN
#REGION 1
IF isediting
	ON KEY LABEL ESCAPE	KEYBOARD "{END}"
ENDIF
RETURN(isediting)

*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4L70X0BMM           m.dt_inicio VALID                  ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0310,     Record Number:   40   ╨
*       ╨ Variable:            m.dt_inicio                        ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Field                              ╨
*       ╨ Snippet Number:      5                                  ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _4l70x0bmm     &&  m.dt_inicio VALID
#REGION 1
m.dt_fim = m.dt_inicio
SHOW GET m.dt_fim
ON KEY LABEL ESCAPE KEYBOARD "{BACKTAB}"
RETURN (.T.)


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4L70X0BND           m.dt_fim VALID                     ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0310,     Record Number:   41   ╨
*       ╨ Variable:            m.dt_fim                           ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Field                              ╨
*       ╨ Snippet Number:      6                                  ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*



* IF    m.dt_fim >= m.dt_inicio ;
*   AND MONTH(m.dt_inicio)= MONTH(m.dt_fim) ;
*   AND YEAR(m.dt_inicio) = YEAR(m.dt_fim)
*   RETURN(.T.)
*
* ENDIF


FUNCTION _4l70x0bnd     &&  m.dt_fim VALID
#REGION 1
 IF    m.dt_fim >= m.dt_inicio
   RETURN(.T.)
 ENDIF



 RETURN(.F.)

*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4L70X0BNN           LSuf_destino WHEN                  ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0310,     Record Number:   42   ╨
*       ╨ Variable:            LSuf_destino                       ╨
*       ╨ Called By:           WHEN Clause                        ╨
*       ╨ Object Type:         Field                              ╨
*       ╨ Snippet Number:      7                                  ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _4l70x0bnn     &&  LSuf_destino WHEN
#REGION 1
ON KEY LABEL ENTER
RETURN(isediting)

*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4L70X0BNT           LNCPFCNPJ WHEN                     ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0310,     Record Number:   43   ╨
*       ╨ Variable:            LNCPFCNPJ                          ╨
*       ╨ Called By:           WHEN Clause                        ╨
*       ╨ Object Type:         Field                              ╨
*       ╨ Snippet Number:      8                                  ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _4l70x0bnt     &&  LNCPFCNPJ WHEN
#REGION 1
ON KEY LABEL ENTER
RETURN(isediting)

*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4L70X0BNZ           LNCPFCNPJ VALID                    ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0310,     Record Number:   43   ╨
*       ╨ Variable:            LNCPFCNPJ                          ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Field                              ╨
*       ╨ Snippet Number:      9                                  ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _4l70x0bnz     &&  LNCPFCNPJ VALID
#REGION 1
	ON KEY LABEL ESCAPE KEYBOARD "{BACKTAB}"
	IF EMPTY(LNCPFCNPJ)		&& ACEITAR CADASTROS SEM DADOS DE CGC
		RETURN(.T.)
	ENDIF

*	wp_msg = "Numero de Docmento Invalido. <ENTER>"
*	=W_DEFPROC("CLIENTES.SPR")
*	LNtmp = Calc_cgc(LNCPFCNPJ)
*	IF LNtmp = "3"
*		RETURN .F.
*	ENDIF

RETURN(.T.)



*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4L70X0BO0           LNCPFCNPJ ERROR                    ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0310,     Record Number:   43   ╨
*       ╨ Variable:            LNCPFCNPJ                          ╨
*       ╨ Called By:           ERROR Clause                       ╨
*       ╨ Object Type:         Field                              ╨
*       ╨ Snippet Number:      10                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _4l70x0bo0     &&  LNCPFCNPJ ERROR
#REGION 1
=UPbeeps(.F.,wp_msg)


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4L70X0BO1           LSinventario WHEN                  ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0310,     Record Number:   44   ╨
*       ╨ Variable:            LSinventario                       ╨
*       ╨ Called By:           WHEN Clause                        ╨
*       ╨ Object Type:         Field                              ╨
*       ╨ Snippet Number:      11                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _4l70x0bo1     &&  LSinventario WHEN
#REGION 1
ON KEY LABEL ENTER
RETURN(isediting)

*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4L70X0BO2           m.imp_btn WHEN                     ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0310,     Record Number:   45   ╨
*       ╨ Variable:            m.imp_btn                          ╨
*       ╨ Called By:           WHEN Clause                        ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      12                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _4l70x0bo2     &&  m.imp_btn WHEN
#REGION 1
ON KEY LABEL ENTER
RETURN


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4L70X0BO3           m.imp_btn VALID                    ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0310,     Record Number:   45   ╨
*       ╨ Variable:            m.imp_btn                          ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      13                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*

FUNCTION _4l70x0bo3     &&  m.imp_btn VALID
#REGION 1
	do  ULgera_SIN with m.empresa,m.dt_inicio,m.dt_fim
	
RETURN


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4L70X0BOU           m.LIV_btn WHEN                     ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0310,     Record Number:   46   ╨
*       ╨ Variable:            m.LIV_btn                          ╨
*       ╨ Called By:           WHEN Clause                        ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      14                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _4l70x0bou     &&  m.LIV_btn WHEN
#REGION 1
ON KEY LABEL ENTER
RETURN


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4L70X0BP0           m.LIV_btn VALID                    ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0310,     Record Number:   46   ╨
*       ╨ Variable:            m.LIV_btn                          ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      15                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _4l70x0bp0     &&  m.LIV_btn VALID
#REGION 1
	DO ULRESUMO
RETURN


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4L70X0BP7           m.exp_btn WHEN                     ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0310,     Record Number:   47   ╨
*       ╨ Variable:            m.exp_btn                          ╨
*       ╨ Called By:           WHEN Clause                        ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      16                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _4l70x0bp7     &&  m.exp_btn WHEN
#REGION 1
ON KEY LABEL ENTER
RETURN


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4L70X0BPD           m.exp_btn VALID                    ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0310,     Record Number:   47   ╨
*       ╨ Variable:            m.exp_btn                          ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      17                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*


FUNCTION _4l70x0bpd     &&  m.exp_btn VALID
#REGION 1
	=ADExpXMLDados(m.empresa,m.dt_inicio,m.dt_fim,LSinventario,"SINTEGRA")

RETURN


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4L70X0BPJ           m.gdfNFS_btn WHEN                  ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0310,     Record Number:   48   ╨
*       ╨ Variable:            m.gdfNFS_btn                       ╨
*       ╨ Called By:           WHEN Clause                        ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      18                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _4l70x0bpj     &&  m.gdfNFS_btn WHEN
#REGION 1
ON KEY LABEL ENTER
RETURN


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4L70X0BPK           m.gdfNFS_btn VALID                 ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0310,     Record Number:   48   ╨
*       ╨ Variable:            m.gdfNFS_btn                       ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      19                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*


FUNCTION _4l70x0bpk     &&  m.gdfNFS_btn VALID
#REGION 1
	=ADGerNFSaiDocFiscal(m.empresa,m.dt_inicio,m.dt_fim)

RETURN


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4L70X0BPL           m.gdfNFE_btn WHEN                  ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0310,     Record Number:   49   ╨
*       ╨ Variable:            m.gdfNFE_btn                       ╨
*       ╨ Called By:           WHEN Clause                        ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      20                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _4l70x0bpl     &&  m.gdfNFE_btn WHEN
#REGION 1
ON KEY LABEL ENTER
RETURN


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4L70X0BPM           m.gdfNFE_btn VALID                 ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0310,     Record Number:   49   ╨
*       ╨ Variable:            m.gdfNFE_btn                       ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      21                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*


FUNCTION _4l70x0bpm     &&  m.gdfNFE_btn VALID
#REGION 1
	=ADGerNFEntDocFiscal(m.empresa,m.dt_inicio,m.dt_fim)

RETURN


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4L70X0BPN           m.gxmldf_btn WHEN                  ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0310,     Record Number:   50   ╨
*       ╨ Variable:            m.gxmldf_btn                       ╨
*       ╨ Called By:           WHEN Clause                        ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      22                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _4l70x0bpn     &&  m.gxmldf_btn WHEN
#REGION 1
ON KEY LABEL ENTER
RETURN


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4L70X0BQE           m.gxmldf_btn VALID                 ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0310,     Record Number:   50   ╨
*       ╨ Variable:            m.gxmldf_btn                       ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      23                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*


FUNCTION _4l70x0bqe     &&  m.gxmldf_btn VALID
#REGION 1
	=ADGeraXMLDocFiscal(m.empresa,m.dt_inicio,m.dt_fim,LSinventario,"EFD")

RETURN


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4L70X0BQK           m.APURA_btn WHEN                   ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0310,     Record Number:   51   ╨
*       ╨ Variable:            m.APURA_btn                        ╨
*       ╨ Called By:           WHEN Clause                        ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      24                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _4l70x0bqk     &&  m.APURA_btn WHEN
#REGION 1
ON KEY LABEL ENTER
RETURN


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4L70X0BQR           m.APURA_btn VALID                  ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0310,     Record Number:   51   ╨
*       ╨ Variable:            m.APURA_btn                        ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      25                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*


FUNCTION _4l70x0bqr     &&  m.APURA_btn VALID
#REGION 1
	=ADEFDApuraICM(m.empresa,m.dt_inicio,m.dt_fim)

RETURN


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4L70X0BQW           LNfinalidade WHEN                  ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0310,     Record Number:   52   ╨
*       ╨ Variable:            LNfinalidade                       ╨
*       ╨ Called By:           WHEN Clause                        ╨
*       ╨ Object Type:         Radio Button                       ╨
*       ╨ Snippet Number:      26                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _4l70x0bqw     &&  LNfinalidade WHEN
#REGION 1
ON KEY LABEL ENTER  KEYBOARD "{RIGHTARROW}"
RETURN(isediting)


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4L70X0BR2           m.edit_btn WHEN                    ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0310,     Record Number:   53   ╨
*       ╨ Variable:            m.edit_btn                         ╨
*       ╨ Called By:           WHEN Clause                        ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      27                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _4l70x0br2     &&  m.edit_btn WHEN
#REGION 1
ON KEY LABEL ENTER
RETURN


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4L70X0BR3           m.edit_btn VALID                   ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0310,     Record Number:   53   ╨
*       ╨ Variable:            m.edit_btn                         ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      28                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _4l70x0br3     &&  m.edit_btn VALID
#REGION 1
=btn_val1('EDIT')
RETURN

PROCEDURE BTN_VAL1
	PARAMETER tecla, m.chv_ler, m.chv_compara, m.chv_brow
	LN_prxobj = _CUROBJ
	ON KEY LABEL ENTER
    DO CASE
		CASE tecla = "EDIT" AND !isediting   && INICIA EDICAO
			LFArqSaida = .F.       && ARQ TMP DEVE SER GERADO AO PROCESSAR
			SHOW GET edit_btn,1 PROMPT "\<Ok"
			SHOW GET m.imp_btn  DISABLE
			SHOW GET m.LIV_btn  DISABLE
			SHOW GET m.exp_btn  DISABLE
			SHOW GET m.gdfNFS_btn  DISABLE
			SHOW GET m.gdfNFE_btn  DISABLE
			SHOW GET m.gxmldf_btn  DISABLE
			SHOW GET m.APURA_btn  DISABLE
			SHOW GET m.pct_EFD_btn  DISABLE
			SHOW GET m.EFDsimp_btn DISABLE
			isediting  = .t.
			_CUROBJ = 1	
		    ON KEY LABEL ESCAPE KEYBOARD "{BACKTAB}"
			ON KEY LABEL END DO BTN_VAL1 WITH 'DELETE'
		CASE tecla = "EDIT" AND isediting     && CONFIRMA EDICAO
			SHOW GET edit_btn,1 PROMPT "\<Edita"
			isediting = .f.
			_CUROBJ = 1	
			IF  m.dt_fim < m.dt_inicio
				SHOW GET m.imp_btn DISABLE
				SHOW GET m.LIV_btn  DISABLE
				SHOW GET m.exp_btn  DISABLE
				SHOW GET m.gdfNFS_btn  DISABLE
				SHOW GET m.gdfNFE_btn  DISABLE
				SHOW GET m.gxmldf_btn  DISABLE
				SHOW GET m.APURA_btn  DISABLE
				SHOW GET m.pct_EFD_btn  DISABLE
				SHOW GET m.EFDsimp_btn DISABLE
			ELSE
				SHOW GET m.imp_btn  ENABLE
				SHOW GET m.LIV_btn  ENABLE
				SHOW GET m.exp_btn  ENABLE
				SHOW GET m.gdfNFS_btn ENABLE
				SHOW GET m.gdfNFE_btn ENABLE
				SHOW GET m.gxmldf_btn ENABLE
				SHOW GET m.APURA_btn  ENABLE
				SHOW GET m.pct_EFD_btn  ENABLE
				SHOW GET m.EFDsimp_btn enable
		ENDIF
		    ON KEY LABEL ESCAPE
			ON KEY LABEL END
		CASE tecla = "DELETE" AND isediting     && CANCELA EDICAO
			SHOW GET edit_btn,1 PROMPT "\<Edita"
			isediting = .f.
			_CUROBJ = 1	
			SHOW GET m.imp_btn  DISABLE
			SHOW GET m.LIV_btn  DISABLE
			SHOW GET m.exp_btn  DISABLE
			SHOW GET m.gdfNFS_btn  DISABLE
			SHOW GET m.gdfNFE_btn  DISABLE
			SHOW GET m.gxmldf_btn  DISABLE
			SHOW GET m.APURA_btn  DISABLE
			SHOW GET m.pct_EFD_btn  DISABLE
			SHOW GET m.EFDsimp_btn DISABLE
		    ON KEY LABEL ESCAPE
			ON KEY LABEL END
	ENDCASE
RETURN

*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4L70X0BR4           m.canc_btn VALID                   ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0310,     Record Number:   54   ╨
*       ╨ Variable:            m.canc_btn                         ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      29                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _4l70x0br4     &&  m.canc_btn VALID
#REGION 1
ON KEY LABEL ENTER
CLEAR GETS
CLEAR READ
isediting = .f.
RETURN .T.

*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4L70X0BR5           m.pct_EFD_btn WHEN                 ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0310,     Record Number:   55   ╨
*       ╨ Variable:            m.pct_EFD_btn                      ╨
*       ╨ Called By:           WHEN Clause                        ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      30                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _4l70x0br5     &&  m.pct_EFD_btn WHEN
#REGION 1
ON KEY LABEL ENTER
RETURN


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4L70X0BR6           m.pct_EFD_btn VALID                ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0310,     Record Number:   55   ╨
*       ╨ Variable:            m.pct_EFD_btn                      ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      31                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*


FUNCTION _4l70x0br6     &&  m.pct_EFD_btn VALID
#REGION 1
	=ADGerNFSaiDocFiscal(m.empresa,m.dt_inicio,m.dt_fim)
	
	=ADGerNFEntDocFiscal(m.empresa,m.dt_inicio,m.dt_fim)
	
	=ADGeraXMLDocFiscal(m.empresa,m.dt_inicio,m.dt_fim,LSinventario,"EFD")


RETURN


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4L70X0BRX           m.EFDsimp_btn WHEN                 ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0310,     Record Number:   56   ╨
*       ╨ Variable:            m.EFDsimp_btn                      ╨
*       ╨ Called By:           WHEN Clause                        ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      32                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _4l70x0brx     &&  m.EFDsimp_btn WHEN
#REGION 1
ON KEY LABEL ENTER
RETURN


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4L70X0BS3           m.EFDsimp_btn VALID                ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0310,     Record Number:   56   ╨
*       ╨ Variable:            m.EFDsimp_btn                      ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      33                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*


FUNCTION _4l70x0bs3     &&  m.EFDsimp_btn VALID
#REGION 1
	=ADGeraXMLDocFiscal(m.empresa,m.dt_inicio,m.dt_fim,LSinventario,;
	"EFD-SIMPLES")


RETURN


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4L70X0BSA           ULtp_Mercad VALID                  ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0310A,     Record Number:   17  ╨
*       ╨ Variable:            ULtp_Mercad                        ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      34                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*

FUNCTION _4l70x0bsa     &&  ULtp_Mercad VALID
#REGION 2
RETURN

FUNCTION ULtp_Mercad
PARAMETERS PrmProduto,PrmUF
	PRIVATE LTp_Mercad

	= W_DEFPROC("TRIBUTAR.spr")
	LTp_Mercad = TRDef_RgTrbMercad(PrmUF,PrmProduto)
RETURN(LTp_Mercad)


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4L70X0BSG           ULArqItens VALID                   ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0310A,     Record Number:   18  ╨
*       ╨ Variable:            ULArqItens                         ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      35                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _4l70x0bsg     &&  ULArqItens VALID
#REGION 2
RETURN

FUNCTION ULArqItens
	*---------------------------------------------------------*
	* Gerar Arq. Temporario para registrar itens vendidos
	*---------------------------------------------------------*
	LSarqtmp 	= "" 			&& EX: C:\TMP\TMP0001
	LSaliastmp 	= "TMP" 		&&     TMP001
	LSarqtmp = UPopentmp(wp_dirtmp,LSarqtmp,LSaliastmp,1)
	IF EMPTY(LSaliastmp)
 		WAIT WINDOW "Nao Foi Possivel Gerar Arq Temporario."
 		SELE notaent
		UNLOCK
 		RETURN(.F.)
 	ENDIF		
	*---------------------------------------------------------*
	IF USED("ITENSNEG")
		SELE ITENSNEGOC
		USE
	ENDIF

	SELE grupo
	WAIT WINDOW "AGUARDE. Gerando Arq. Temporario." NOWAIT

	COPY STRU TO &LSarqtmp WITH CDX

	KEYBOARD CHR(13)
	WAIT WINDOW " "
    SELE 0
	USE &LSarqtmp	ALIAS ITENSNEGOC	EXCLUSIVE	
	KEYBOARD CHR(13)
	WAIT WINDOW " "
RETURN(.T.)


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4L70X0BSN           ULIPIProd VALID                    ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0310A,     Record Number:   19  ╨
*       ╨ Variable:            ULIPIProd                          ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      36                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*

FUNCTION _4l70x0bsn     &&  ULIPIProd VALID
#REGION 2
RETURN

FUNCTION ULIPIProd
PARAMETERS PrmCodigo

	PRIVATE Lretorno
	=W_DEfPROC("TRIBUTAR.SPR")
	Lretorno = TRGet_IPIProd(PrmCodigo)

RETURN(Lretorno)

*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4L70X0BSO           ULgera_SIN VALID                   ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0310A,     Record Number:   20  ╨
*       ╨ Variable:            ULgera_SIN                         ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      37                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _4l70x0bso     &&  ULgera_SIN VALID
#REGION 2
RETURN

PROCEDURE ULgera_SIN
PARAMETERS PrmEmp,PrmDtIni,PrmDtFin

	do  ULDefTmpArq with  PrmEmp,PrmDtIni,PrmDtFin

	ACTIVATE WINDOW SCT0310A
	SHOW WINDOW SCT0310A TOP
	CLEAR

	SET TALK ON
	*----------------------------------------------------------*
	*    GERAR ARQ. RESUMO CONTENDO SO AS NOTAS DO PERIODO E DA
	* EMPRESA SELECIONADA PARA ACELERAR OS OUTROS SELECTs
	*----------------------------------------------------------*
	DO ULSelNFs with PrmEmp,PrmDtIni,PrmDtFin
	*----------------------------------------------------------*
	*  SELECIONANDO REGISTROS DE ENTRADA
	*----------------------------------------------------------*
	DO ULSelNFe with PrmEmp,PrmDtIni,PrmDtFin
	*----------------------------------------------------------*
	*  MONTA CURSOR DE TIPO DE OPERACAO
	*----------------------------------------------------------*
	DO ULSelTipo
	*----------------------------------------------------------*
	DO ULProcCVN6902 WITH  (PrmEmp),(PrmDtIni),(PrmDtFin)
	*----------------------------------------------------------*
	SET TALK off
	*---------------------------------------------------------------*
	do  ULFchTmpArq
	SHOW WINDOW SCT0310 TOP

RETURN



*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4L70X0BSP           resumo VALID                       ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0310A,     Record Number:   21  ╨
*       ╨ Variable:            resumo                             ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      38                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _4l70x0bsp     &&  resumo VALID
#REGION 2

PRIVATE dbf_NFSTMP,dbf_NFS
PRIVATE dbf_NFETMP,dbf_NFE

PRIVATE	dbf_NFE

	*---------------------------------------------------------------*

	DO ULLivro3199 WITH ;
	    (m.empresa),(m.dt_inicio),(m.dt_fim)

	SHOW WINDOW SCT0310 TOP

RETURN



*-------------------------------------------------------------------*

PROCEDURE ULLivro3199
PARAMETERS LNemp, LDper_ini, LDper_fim

	PRIVATE LSnome

	LSnome	 =	RIGHT(str(year(LDper_ini)),2)+;
				STR(MONTH(LDper_ini),2)+STR(LNemp,2)+"AG.DAT"
	LSnome	= 	"\SCGC\AGENFA\"+STRTRAN(LSnome," ","0")



	SELECT tipo_50
	zap
	pack
	append from &LSnome ;
			FOR 	TIPO = 50 ;
				AND CFOP > 400 ;
				AND SITUACAO  = "N" TYPE SDF
	

	SELECT tipo_60A
	zap
	pack

	append from &LSnome ;
				FOR 	TIPO = 60 ;
					AND ANALITICO = "A"  TYPE SDF


	SELECT  CFOP 			 AS CFO,  ;
			0				 AS TOTSERVICO, ;
			0			   	 AS BASE_ISS,;
			0			 	 AS VLR_ISS, ;
			SUM(BASE_ICMS/100) 	 AS BASE_ICMS,;
			SUM(VALOR_ICMS/100)  AS VLR_ICMS, ;
			0				 AS BASE_SBBRT,;
			0				 AS BASE_SUBS, ;
			0                AS ICMS_SUBS,;
			SUM(ISENTAS/100) AS BASE_ISENT,;
			SUM(OUTRAS/100)	 AS BASE_OUTR, ;
			0				 AS BASE_ISIPI,;
			0				 AS BASE_IPI,  ;
			0				 AS VLR_IPI,   ;
			0				 AS TOTPRODUTO, ;
			0				 AS VLRFRETE,  ;
			0				 AS VLRSEGURO,;
			0				 AS VLRDESPES, ;
			SUM(VALOR_TOTAL/100) AS TOTAL_NOTA ;	
		FROM tipo_50 ;
	    ORDER BY CFOP ;
	    GROUP BY CFOP ;
    	INTO CURSOR TMP1LIVR

    	
	SELECT  500  			 AS CFO,  ;
			0				 AS TOTSERVICO, ;
			0			   	 AS BASE_ISS,;
			0			 	 AS VLR_ISS, ;
			0			 	 AS BASE_ICMS,;
			0				 AS VLR_ICMS, ;
			0				 AS BASE_SBBRT,;
			0				 AS BASE_SUBS, ;
			0                AS ICMS_SUBS,;
			0				 AS BASE_ISENT,;
			0				 AS BASE_OUTR, ;
			0				 AS BASE_ISIPI,;
			0				 AS BASE_IPI,  ;
			0				 AS VLR_IPI,   ;
			0				 AS TOTPRODUTO, ;
			0				 AS VLRFRETE,  ;
			0				 AS VLRSEGURO,;
			0				 AS VLRDESPES, ;
			SUM(VALOR/100)   AS TOTAL_NOTA ;	
		FROM tipo_60A ;
		WHERE ALIQUOTA $ "I   /F   /ISS " ;
    	INTO CURSOR TMP2LIVR

	SELECT * FROM   TMP2LIVR ;
	UNION ;
	SELECT  500  			 AS CFO,  ;
			0				 AS TOTSERVICO, ;
			0			   	 AS BASE_ISS,;
			0			 	 AS VLR_ISS, ;
			0			 	 AS BASE_ICMS,;
			0				 AS VLR_ICMS, ;
			0				 AS BASE_SBBRT,;
			0				 AS BASE_SUBS, ;
			0                AS ICMS_SUBS,;
			SUM(VALOR/100) 	 AS BASE_ISENT,;
			0				 AS BASE_OUTR, ;
			0				 AS BASE_ISIPI,;
			0				 AS BASE_IPI,  ;
			0				 AS VLR_IPI,   ;
			0				 AS TOTPRODUTO, ;
			0				 AS VLRFRETE,  ;
			0				 AS VLRSEGURO,;
			0				 AS VLRDESPES, ;
			0				 AS TOTAL_NOTA ;	
		FROM tipo_60A ;
		WHERE ALIQUOTA $ "I   " ;
    	INTO CURSOR TMP3LIVR

	SELECT * FROM   TMP3LIVR ;
	UNION ;
	SELECT  500  			 AS CFO,  ;
			SUM(VALOR/100)	 AS TOTSERVICO, ;
			SUM(VALOR/100) 	 AS BASE_ISS,;
			0			 	 AS VLR_ISS, ;
			0			 	 AS BASE_ICMS,;
			0				 AS VLR_ICMS, ;
			0				 AS BASE_SBBRT,;
			0				 AS BASE_SUBS, ;
			0                AS ICMS_SUBS,;
			0			 	 AS BASE_ISENT,;
			0				 AS BASE_OUTR, ;
			0				 AS BASE_ISIPI,;
			0				 AS BASE_IPI,  ;
			0				 AS VLR_IPI,   ;
			0				 AS TOTPRODUTO, ;
			0				 AS VLRFRETE,  ;
			0				 AS VLRSEGURO,;
			0				 AS VLRDESPES, ;
			0				 AS TOTAL_NOTA ;	
		FROM tipo_60A ;
		WHERE ALIQUOTA $ "ISS " ;
    	INTO CURSOR TMP4LIVR


	SELECT * FROM   TMP4LIVR ;
	UNION ;
	SELECT  500  			 AS CFO,  ;
			0				 AS TOTSERVICO, ;
			0				 AS BASE_ISS,;
			0			 	 AS VLR_ISS, ;
			0			 	 AS BASE_ICMS,;
			0				 AS VLR_ICMS, ;
			0				 AS BASE_SBBRT,;
			0				 AS BASE_SUBS, ;
			0                AS ICMS_SUBS,;
			0			 	 AS BASE_ISENT,;
			SUM(VALOR/100)	 AS BASE_OUTR, ;
			0				 AS BASE_ISIPI,;
			0				 AS BASE_IPI,  ;
			0				 AS VLR_IPI,   ;
			0				 AS TOTPRODUTO, ;
			0				 AS VLRFRETE,  ;
			0				 AS VLRSEGURO,;
			0				 AS VLRDESPES, ;
			0				 AS TOTAL_NOTA ;	
		FROM tipo_60A ;
		WHERE ALIQUOTA $ "F   " ;
    	INTO CURSOR TMP5LIVR



	SELECT * FROM   TMP1LIVR ;
	UNION ;
	SELECT  CFO,  ;
			SUM(TOTSERVICO)	 AS TOTSERVICO, ;
			SUM(BASE_ISS)	 AS BASE_ISS,;
			SUM(VLR_ISS) 	 AS VLR_ISS, ;
			SUM(BASE_ISS) 	 AS BASE_ICMS,;
			SUM(VLR_ICMS)	 AS VLR_ICMS, ;
			SUM(BASE_SBBRT)	 AS BASE_SBBRT,;
			SUM(BASE_SUBS)	 AS BASE_SUBS, ;
			SUM(ICMS_SUBS)   AS ICMS_SUBS,;
			SUM(BASE_ISENT)	 AS BASE_ISENT,;
			SUM(BASE_OUTR)	 AS BASE_OUTR, ;
			SUM(BASE_ISIPI)	 AS BASE_ISIPI,;
			SUM(BASE_IPI)	 AS BASE_IPI,  ;
			SUM(VLR_IPI)	 AS VLR_IPI,   ;
			SUM(TOTPRODUTO)	 AS TOTPRODUTO, ;
			SUM(VLRFRETE)	 AS VLRFRETE,  ;
			SUM(VLRSEGURO)	 AS VLRSEGURO,;
			SUM(VLRDESPES)	 AS VLRDESPES, ;
			SUM(TOTAL_NOTA)	 AS TOTAL_NOTA ;		
		FROM TMP5LIVR ;
	    	GROUP BY CFO;
    	INTO CURSOR TMP6LIVR


		SELECT * FROM  TMP6LIVR ;
		    ORDER BY CFO;
    	INTO CURSOR LIVROSAI


	SELECT LIVROSAI
	GO TOP
	
	IF EOF()
 		SELE nota
		UNLOCK
 		RETURN
 	ENDIF		
	GO TOP

	LFLdireciona  = .F. && Ativa PRTSETUP para direcionar impressao DEF(.T.)
	LFLagrega 	  = .F. && Agrega o ??.REL em ??.AGR			    DEF(.F.)
	LFLfimagrega  = .F. && Qdo. Estiver agregando => encerra        DEF(.F.)

*******************
*---->   (INICIALIZACAO DO CONTROLE DE STATUS IMPRESSAO)
*******************	
	DO RELINIC.PRG          && INICIA VAR P/ TERMOMETRO
	LFsegue = .t.
	LNregistro = RECNO()
    COUNT  TO LNimpressao
	LNimpressos = 0
	GO LNregistro
*******************
*---->   (COMPLETADO PREPARACAO DO CONTROLE DE STATUS IMPRESSAO)
**************************>>> REGISTRO DE SAIDAS
    LSrel = "REL220A"      && relatorio padrao p/ impressoras ex: epson

    LSorienta = " WHILE  LFsegue "

	DO UPimpressao WITH 	(LFLdireciona), (LFLagrega), (LFLfimagrega)
	LFcontinua = LFsegue
************
	DO RELFIM.PRG          && FIM VAR P/ TERMOMETRO
	LNpagina = LNpagina + _PAGENO - 1   && DAR SEQU AO N. PAGINA
RETURN




*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4L70X0BSQ           ULALIQICMS VALID                   ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0310A,     Record Number:   22  ╨
*       ╨ Variable:            ULALIQICMS                         ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      39                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*

FUNCTION _4l70x0bsq     &&  ULALIQICMS VALID
#REGION 2
RETURN

FUNCTION ULALIQICMS
PARAMETERS PrmUf

	PRIVATE Lretorno
	=W_DEfPROC("TRIBUTAR.SPR")
	Lretorno = TRAlqIcmInUF(PrmUf)

RETURN(Lretorno)


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4L70X0BTI           ULDefTmpArq VALID                  ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0310A,     Record Number:   23  ╨
*       ╨ Variable:            ULDefTmpArq                        ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      40                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _4l70x0bti     &&  ULDefTmpArq VALID
#REGION 2
RETURN

PROCEDURE ULDefTmpArq
PARAMETERS PrmEmp,PrmDtIni,PrmDtFin

	PUBLIC  dbf_NFSTMP, als_NFSTMP, dbf_NFS
	PUBLIC  dbf_ITMTMP, als_ITMTMP, dbf_ITM
	PUBLIC  dbf_TIPTMP, als_TIPTMP, dbf_TIP

	PUBLIC  dbf_NFETMP, als_NFETMP, dbf_NFE		
								&& NOTA FISCAL DE ENTRADA
	PUBLIC TO  dbf_INETMP, als_INETMP, dbf_INE
								 && ITENS DA NF DE ENTRADA

	PUBLIC TO  dbf_MAPA                && MAPAECF


	PUBLIC  dbf_Saldo, als_saldo, dbf_SLD
	PUBLIC  dbf_Grupo, als_Grupo, dbf_ITM


	LSuf_origem = LSuf_destino


	IF !ULArqItens()
		RETURN(.F.)
	ENDIF

	*
	* LOCALIZACAO DO ARQUIVO DE NOTA PARA OPERCAO SELECT ??? FROM <>
	*

	dbf_NFS  		= wp_dirdat+'NOTA.DBF'
	dbf_ITM  		= wp_dirdat+"ITEMMOV.DBF"


	dbf_NFE  		= wp_dirdat+"NOTAENT.DBF"

	dbf_INE  		= wp_dirdat+"NOTAITE.DBF"

	dbf_MAPA  		= wp_dirdat+"MAPAECF.DBF"

	dbf_SALDO  		= wp_dirdat+"SALDO.DBF"

	dbf_GRUPO  		= UPobterPath("GRUPO",.F.)+"GRUPO.DBF"

    IF PrmDtfin < {01.01.2003}
		dbf_TIP  		= "L:\TMP\CFO\TIPOOPER.DBF"
	ELSE
		dbf_TIP         =  UPobterPath("TIPOOPER",.F.)+"TIPOOPER.DBF"
	ENDIF



	*----------------------------------------------------------*
	LSarqtmp 	= "" 			&& EX: C:\TMP\TMP0001
	LSaliastmp 	= "NFS" 		&&     TMP001
	LSarqtmp = UPopentmp(wp_dirtmp,LSarqtmp,LSaliastmp,1)
	IF EMPTY(LSaliastmp)
		WAIT WINDOW 'Nфo Foi Possivel Definir Arquivo Temporario'
		RETURN
	ENDIF
	dbf_NFSTMP  = wp_dirtmp+LSaliastmp+".DBF"
	als_NFSTMP  = LSaliastmp






	*----------------------------------------------------------*

	LSarqtmp 	= "" 			&& EX: C:\TMP\TMP0001
	LSaliastmp 	= "ITM" 		&&     TMP001
	LSarqtmp = UPopentmp(wp_dirtmp,LSarqtmp,LSaliastmp,1)
	IF EMPTY(LSaliastmp)
		WAIT WINDOW 'Nфo Foi Possivel Definir Arquivo Temporario'
		RETURN
	ENDIF
	dbf_ITMTMP  = wp_dirtmp+LSaliastmp+".DBF"
	als_ITMTMP  = LSaliastmp

	*----------------------------------------------------------*
	*----------------------------------------------------------*

	LSarqtmp 	= "" 			&& EX: C:\TMP\TMP0001
	LSaliastmp 	= "NFE" 		&&     TMP001
	LSarqtmp = UPopentmp(wp_dirtmp,LSarqtmp,LSaliastmp,1)
	IF EMPTY(LSaliastmp)
		WAIT WINDOW 'Nфo Foi Possivel Definir Arquivo Temporario'
		RETURN
	ENDIF
	dbf_NFETMP  = wp_dirtmp+LSaliastmp+".DBF"
	als_NFETMP  = LSaliastmp

	*----------------------------------------------------------*

	LSarqtmp 	= "" 			&& EX: C:\TMP\TMP0001
	LSaliastmp 	= "INE" 		&&     TMP001
	LSarqtmp = UPopentmp(wp_dirtmp,LSarqtmp,LSaliastmp,1)
	IF EMPTY(LSaliastmp)
		WAIT WINDOW 'Nфo Foi Possivel Definir Arquivo Temporario'
		RETURN
	ENDIF
	dbf_INETMP  = wp_dirtmp+LSaliastmp+".DBF"
	als_INETMP  = LSaliastmp
	*----------------------------------------------------------*

	LSarqtmp 	= "" 			&& EX: C:\TMP\TMP0001
	LSaliastmp 	= "TIP" 		&&     TMP001
	LSarqtmp = UPopentmp(wp_dirtmp,LSarqtmp,LSaliastmp,1)
	IF EMPTY(LSaliastmp)
		WAIT WINDOW 'Nфo Foi Possivel Definir Arquivo Temporario'
		RETURN
	ENDIF
	dbf_TIPTMP  = wp_dirtmp+LSaliastmp+".DBF"
	als_TIPTMP  = LSaliastmp

	*----------------------------------------------------------*
	*---------------------------------------------------------------*

RETURN



*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4L70X0BTR           ULIVA VALID                        ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0310A,     Record Number:   24  ╨
*       ╨ Variable:            ULIVA                              ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      41                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*

FUNCTION _4l70x0btr     &&  ULIVA VALID
#REGION 2
RETURN

FUNCTION ULIVA
PARAMETERS PrmUFOrigem,PrmCodigo,PrmUFDestino,PrmData



	PRIVATE Lretorno
	=W_DEfPROC("TRIBUTAR.SPR")
	Lretorno = TRGet_IVA(PrmUFOrigem,PrmCodigo,PrmUFDestino,PrmData)

RETURN(Lretorno)


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4L70X0BTX           ULFchTmpArq VALID                  ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0310A,     Record Number:   25  ╨
*       ╨ Variable:            ULFchTmpArq                        ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      42                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _4l70x0btx     &&  ULFchTmpArq VALID
#REGION 2
RETURN

PROCEDURE ULFchTmpArq

	*---------------------------------------------------------------*
	IF USED("ITENSNEGOC")
		SELECT ITENSNEGOC
		USE
	ENDIF

*	SELECT &als_NFSTMP
*	USE
*
*	SELECT &als_ITMTMP
*	USE
*
*	SELECT &als_INETMP
*	USE
*
*	SELECT &als_TIPTMP
*	USE
*
RETURN



*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4L70X0BU3           ULdefCfo VALID                     ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0310A,     Record Number:   26  ╨
*       ╨ Variable:            ULdefCfo                           ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      43                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*

FUNCTION _4l70x0bu3     &&  ULdefCfo VALID
#REGION 2
RETURN

FUNCTION ULdefCfo
PARAMETERS PrmEmpresa, PrmTipo, PrmTp_mercad,PrmOperacao
PRIVATE LScfo
	=W_DEFPROC("TRIBUTAR.SPR")
	LScfo = TRCFO(PrmEmpresa, PrmTipo, PrmTp_mercad, PrmOperacao)
RETURN(LScfo)


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4L70X0BU4           ULSelNFs VALID                     ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0310A,     Record Number:   27  ╨
*       ╨ Variable:            ULSelNFs                           ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      44                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*

FUNCTION _4l70x0bu4     &&  ULSelNFs VALID
#REGION 2
RETURN

PROCEDURE ULSelNFs
PARAMETERS PrmEmp,PrmDtIni,PrmDtFim

	*----------------------------------------------------------*
	*  SELECIONANDO REGISTROS DE SAIDA
	*----------------------------------------------------------*

	PRIVATE LSFiltro
	LSFiltro = ""
	
	IF !EMPTY(LSuf_destino)
		LSFiltro = " AND NF.UF = LSuf_destino "
	ENDIF

	IF TYPE("LNCPFCNPJ") <> "U" AND !EMPTY(LNCPFCNPJ)
		LSFiltro = LSFiltro + " AND NF.FAVORECIDO = LNCPFCNPJ "
	ENDIF
	SELE NOTA
	SET ORDER TO TAG DATA
	SET NEAR ON
	SEEK STR(PrmEmp,3)+DTOS(PrmDtIni)
    COPY TO L:\TMP\RGNFTMP ;
		WHILE   empresa = PrmEmp ;
			AND data 	>= PrmDtIni ;
			AND data 	<= PrmDtFim


		SELECT  ;
            NF.CH_OPERA+NF.CH_PRODU+NF.CH_MOTIV+;
            NF.CH_DESTI+NF.CH_CONTR+"1"+NF.TIPO AS KEY_TIPO,;
			NF.EMPRESA,EMP.CGC,NF.NOTA,NF.SERIE,NF.DATA,NF.HORA,;
			NF.REFERENCIA,NF.UF,NF.CIDADE,;
			EMP.ESTADO AS UFOrig,EMP.cidade AS MunOrig,;
			NF.UF AS UFDstn,NF.cidade AS MunDstn,;
			NF.CFO,NF.STATUS,NF.OPERACAO,NF.CUPOM,NF.TIPO,NF.FAVORECIDO,;
			NF.TP_PESSOA,NF.INSCRICAO,NF.TOTSERVICO,NF.BASE_ISS,;
			NF.ALIQ_ISS,NF.VLR_ISS,NF.BASE_ICMS,NF.ALIQ_ICMS,NF.VLR_ICMS, ;
			NF.BASE_SBBRT,NF.BASE_SUBS,NF.ICMS_SUBS,NF.BASE_ISENT,;
			NF.BASE_OUTR,NF.BASE_ISIPI,NF.BASE_IPI,NF.VLR_IPI,;
			NF.TOTPRODUTO,NF.VLRFRETE,NF.VLRSEGURO,NF.VLRDESPES, ;
			NF.TOTAL_NOTA ;	
		FROM L:\TMP\RGNFTMP NF, empresa EMP;
		WHERE   emp.empresa = PrmEmp ;
			AND NF.empresa = emp.EMPRESA;
			AND NF.data 	>= PrmDtIni ;
			AND NF.data 	<= PrmDtFim ;
			AND NF.ch_opera <> "5" ;
			&LSFiltro ;
	    INTO TABLE &dbf_NFSTMP

	*----------------------------------------------------------*
	*  SELECIONANDO ITENS DO MOVIMENTO  E ITENS DA NF DE SAIDA
	*  somente os faturados (LEFT(situacao,1) = "O")
	*----------------------------------------------------------*


	LSFiltro = ""
	
	IF TYPE("LNCPFCNPJ") <> "U" AND !EMPTY(LNCPFCNPJ)
		LSFiltro = LSFiltro + " AND FAVORECIDO = LNCPFCNPJ "
	ENDIF
	SELE ITEMMOV
	SET ORDER TO TAG DT_MOV
	SET NEAR ON
	SEEK STR(PrmEmp,3)+DTOS(PrmDtIni)
    COPY TO L:\TMP\RGITTMP ;
		WHILE   empresa = PrmEmp ;
			AND data 	>= PrmDtIni ;
			AND data 	<= PrmDtFim
	


	SELECT   CH_OPERA+CH_PRODU+CH_MOTIV+;
              CH_DESTI+CH_CONTR+"1"+TIPO AS KEY_TIPO,;
			EMPRESA, NOTA , SERIE, DATA,;
			ORDEM, CODIGO,TP_MERCAD, VLRVENDA,QTDE,;
            CFO, OPERACAO, FAVORECIDO,;
			TIPO,BASE_ISS,  ALIQ_ISS, VLR_ISS, ;
			BASE_CALC,	ALIQ_ICMS, VLR_ICMS, ;
			BASE_SBBRT, BASE_SUBS, ICMS_SUBS, ;
			BASE_ISENT, BASE_OUTR, BASE_ISIPI, BASE_IPI,  VLRIPI, ;
	  	    CLASSIFICA,;
	  	    DESCRICAO,;
	  	    UNIDADE,;
		    ORIGEM,;
		    CST,;
	  	    ALIQ_IPI,;
	  	    IVA;
		FROM L:\TMP\RGITTMP ;
		WHERE  	!(ch_opera $"56") ;
			AND empresa = PrmEmp ;
			AND data 	>= PrmDtIni ;
			AND data 	<= PrmDtFim ;
			AND LEFT(situacao,1) = "O" ;		
			&LSFiltro ;
	    INTO TABLE &dbf_ITMTMP


	

	SELE RGITTMP
	USE
	SELE RGNFTMP
	USE

	*---------------------------------------------------------------*
RETURN


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4L70X0BU5           ULCFOPS VALID                      ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0310A,     Record Number:   28  ╨
*       ╨ Variable:            ULCFOPS                            ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      45                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*

FUNCTION _4l70x0bu5     &&  ULCFOPS VALID
#REGION 2
RETURN

*-------------------------------------------------------*
*-----> DEFINECFOP PARA SERVICO
*-------------------------------------------------------*

FUNCTION ULCFPS
PARAMETERS PrmUFOrgn, PrmMuniOrgn,PrmUFDstn, PrmMuniDstn,PrmTp_mercad,;
           PrmOperacao

	PRIVATE LScfps


	=W_DEFPROC("TRIBUTAR.SPR")
    LScfps = TRCFOPServico(PrmUFOrgn, PrmMuniOrgn,PrmUFDstn,;
    					   PrmMuniDstn,PrmTp_mercad,PrmOperacao)
RETURN(LScfps)


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4L70X0BU6           ULSelNFe VALID                     ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0310A,     Record Number:   29  ╨
*       ╨ Variable:            ULSelNFe                           ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      46                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*

FUNCTION _4l70x0bu6     &&  ULSelNFe VALID
#REGION 2
RETURN

PROCEDURE ULSelNFe
PARAMETERS  PrmEmp, PrmDtIni, PrmDtFim

	PRIVATE LSFiltro
	LSFiltro = ""
	
	IF !EMPTY(LSuf_destino)
		LSFiltro = " AND N.UF = LSuf_destino "
	ENDIF

	IF TYPE("LNCPFCNPJ") <> "U" AND !EMPTY(LNCPFCNPJ)
		LSFiltro = LSFiltro + " AND N.FAVORECIDO = LNCPFCNPJ "
	ENDIF




	   SELECT ;
	   	    N.CH_OPERA+N.CH_PRODU+N.CH_MOTIV+;
            N.CH_DESTI+N.CH_CONTR+"1"+N.TIPO AS KEY_TIPO,;
			N.EMPRESA, E.CGC,;
			N.NOTA,N.SERIE,N.DATA,N.DATA_EMI,N.CODFORN,N.HORA,N.UF,N.CFO,;
			N.FAVORECIDO,N.TP_PESSOA,N.INSCRICAO,N.TIPO,N.CH_OPERA,;
			N.CH_PRODU,E.ESTADO AS UFDstn,E.cidade AS MunDstn,;
			N.UF AS UFOrig,N.cidade AS MunOrig,;
	        N.STATUS,N.SITUACAO , ;
			N.TOTSERVICO,N.BASE_ISS,N.ALIQ_ISS, ;
			N.BASE_ICMS,N.ALIQ_ICMS,N.VLR_ICMS, ;
			N.BASE_SBBRT,N.BASE_SUBS,N.ICMS_SUBS, ;
			N.BASE_ISENT,N.BASE_OUTR,N.BASE_ISIPI,N.BASE_IPI,N.VLR_IPI, ;
			N.TOTPRODUTO,N.VLRFRETE,N.VLRSEGURO,N.VLRDESPES, ;
			N.TOTAL_NOTA ;	
		FROM &dbf_NFE N, empresa E ;
		WHERE  	!(N.ch_opera $"56") ;
			AND LEFT(N.situacao,1) = "C" ;
			AND e.empresa = PrmEmp ;
			AND N.data 	>= PrmDtIni ;
			AND N.data 	<= PrmDtFim ;
			&LSFiltro ;
	    INTO TABLE &dbf_NFETMP



	*----------------------------------------------------------*
	*  SELECIONANDO ITENS DA NF DE ENTRADA
	*----------------------------------------------------------*
	SELECT  ;
			CH_OPERA+CH_PRODU+CH_MOTIV+;
            CH_DESTI+CH_CONTR+"1"+TIPO AS KEY_TIPO,  *;
		FROM &dbf_ine ;
		WHERE  	!(ch_opera $"56") ;
			AND empresa = PrmEmp ;
			AND data 	>= PrmDtIni ;
			AND data 	<= PrmDtFim ;
	    INTO TABLE &dbf_ineTMP

	*---------------------------------------------------------------*
RETURN


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4L70X0BU7           ULCST_IPI VALID                    ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0310A,     Record Number:   30  ╨
*       ╨ Variable:            ULCST_IPI                          ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      47                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*

FUNCTION _4l70x0bu7     &&  ULCST_IPI VALID
#REGION 2
RETURN

FUNCTION ULCST_IPI
PARAMETERS PrmVlrIPI,PrmOperacao
	PRIVATE LScstIPI



	=W_DEFPROC("TRIBUTAR.SPR")
    LScstIPI = TRCST_IPI(PrmVlrIPI,PrmOperacao)

RETURN(LScstIPI)


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4L70X0BUZ           ULSelTipo VALID                    ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0310A,     Record Number:   31  ╨
*       ╨ Variable:            ULSelTipo                          ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      48                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*

FUNCTION _4l70x0buz     &&  ULSelTipo VALID
#REGION 2
RETURN

PROCEDURE ULSelTipo

    SELECT CH_OPERA+CH_PRODU+CH_MOTIV+;
              CH_DESTI+CH_CONTR+"1"+TIPO AS KEY_TIPO,;
            TP.* FROM &dbf_TIP TP ;
	    INTO TABLE &dbf_TIPTMP ;
	    group by KEY_TIPO
	
	*---------------------------------------------------------------*
RETURN


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4L70X0BV4           ULCST_ISS VALID                    ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0310A,     Record Number:   32  ╨
*       ╨ Variable:            ULCST_ISS                          ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      49                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*

FUNCTION _4l70x0bv4     &&  ULCST_ISS VALID
#REGION 2
RETURN

FUNCTION ULCST_ISS
PARAMETERS PrmVlrISS,PrmOperacao
	PRIVATE LScstISS


	=W_DEFPROC("TRIBUTAR.SPR")
    LScstISS = TRCST_ISS(PrmVlrISS,PrmOperacao)
RETURN(LScstISS)


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4L70X0BVA           ULProcCVN6902 VALID                ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0310A,     Record Number:   33  ╨
*       ╨ Variable:            ULProcCVN6902                      ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      50                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _4l70x0bva     &&  ULProcCVN6902 VALID
#REGION 2
RETURN

*-------------------------------------------------------------------*

PROCEDURE ULProcCVN6902
PARAMETERS LNemp, LDper_ini, LDper_fim

	PRIVATE LSnome

	LSnome	 =	RIGHT(str(year(LDper_ini)),2)+;
				STR(MONTH(LDper_ini),2)+STR(LNemp,2)+"AG.DAT"
	LSnome	= 	"\SCGC\AGENFA\"+STRTRAN(LSnome," ","0")
	LNcontrol = FCREATE(LSnome)	
	PRIVATE LNctr_10,LNctr_11,LNctr_50,LNctr_53,LNctr_54,LNctr_60,;
			LNctr_70,LNctr_74,LNctr_75
	STORE 0 TO LNctr_10,LNctr_11,LNctr_50,LNctr_53,LNctr_54,LNctr_60,;
			LNctr_70,LNctr_74,LNctr_75

	=UL69R_10((LNemp),(LNcontrol),(LDper_ini),(LDper_fim),LNctr_10)
	=UL69R_11((LNemp),(LNcontrol),(LDper_ini),(LDper_fim),LNctr_11)
	=UL69R_50((LNemp),(LNcontrol),(LDper_ini),(LDper_fim),LNctr_50)
	=UL69R_53((LNemp),(LNcontrol),(LDper_ini),(LDper_fim),LNctr_53)
	=UL69R_54((LNemp),(LNcontrol),(LDper_ini),(LDper_fim),LNctr_54)
	=UL69R_60((LNemp),(LNcontrol),(LDper_ini),(LDper_fim),LNctr_60)
	=UL69R_70((LNemp),(LNcontrol),(LDper_ini),(LDper_fim),LNctr_70)

	IF LSinventario = "S"
		=UL69R_74((LNemp),(LNcontrol),(LDper_ini),(LDper_fim),LNctr_74)
	endif
	=UL69R_75((LNemp),(LNcontrol),(LDper_ini),(LDper_fim),LNctr_75)


	=UL69R_90((LNemp),(LNcontrol),LNctr_10,LNctr_11,LNctr_50,;
				LNctr_53,LNctr_54,LNctr_60,LNctr_70,LNctr_74,LNctr_75)
	=FCLOSE(LNcontrol)
RETURN



*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4L70X0BVH           ULGenero VALID                     ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0310A,     Record Number:   34  ╨
*       ╨ Variable:            ULGenero                           ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      51                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*

FUNCTION _4l70x0bvh     &&  ULGenero VALID
#REGION 2
RETURN

FUNCTION ULGenero
PARAMETERS PrmTp_mercad,PrmClassifica,PrmOperacao
	PRIVATE LSgenero

	=W_DEFPROC("TRIBUTAR.SPR")
    LSgenero = TRGenero(PrmTp_mercad,PrmClassifica,PrmOperacao)

RETURN(LSgenero)


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4L70X0BVO           UL69R_10 VALID                     ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0310A,     Record Number:   35  ╨
*       ╨ Variable:            UL69R_10                           ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      52                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*

FUNCTION _4l70x0bvo     &&  UL69R_10 VALID
#REGION 2
RETURN

FUNCTION UL69R_10
	PARAMETERS LNemp, LNctrl, LDper_ini, LDper_fim, LN_Ctr

	SELE empresa
	SET ORDER TO TAG empresa
	SEEK LNemp
	
	LStipo  		= "10"                                   && 01-tipo
	LScgc			= CHRTRAN(STR(empresa.cgc,14)," ","0")   && 02-cnpj
	LSinsc			= CHRTRAN(empresa.inscricao," ","")      && 03-inscricao
	LSinsc			= CHRTRAN(LSinsc,".","")                 &&
	LSinsc			= CHRTRAN(LSinsc,"/","")                 &&
	LSinsc			= CHRTRAN(LSinsc,"-","")                 &&
	LSinsc			= LEFT(LSinsc+space(14),14)              && 03-inscricao
	LSnome			= LEFT(empresa.nome,35)                  && 04-nome
	LSmunicipio		= LEFT(empresa.cidade,30)                && 05-municipio
	LSestado		= empresa.estado                         && 06-uf
	LSfax			= REPLICATE("0",10)                      && 07-fax
	LSdtini			= STR(YEAR(LDper_ini),4)+;
					  STR(MONTH(LDper_ini),2)+;
					  STR(DAY(LDper_ini),2)
	LSdtini			= CHRTRAN(LSdtini," ","0")				 && 08-dt.inicio
	LSdtfim			= STR(YEAR(LDper_fim),4)+;
					  STR(MONTH(LDper_fim),2)+;
					  STR(DAY(LDper_fim),2)
	LSdtfim			= CHRTRAN(LSdtfim," ","0")				 && 09-dt.final

	IF YEAR(LDper_ini) >= 2004
		LScod_id= "33"                                   && 10/11-Cod.Id
	ELSE
		LScod_id= "23"                                   && 10/11-Cod.Id
	ENDIF
	
	LScod_f			= str(LNfinalidade,1)                    && 12-Cod.Final
	

	LStmp1 			=LStipo+LScgc+LSinsc+LSnome+;
					 LSmunicipio+LSestado+LSfax+;
					 LSdtini+LSdtfim+LScod_id+LScod_f

	=FPUT(LNctrl,LStmp1,126)
	LN_Ctr	=	LN_Ctr + 1
RETURN


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4L70X0BVP           m.val_btn VALID                    ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0310A,     Record Number:   36  ╨
*       ╨ Variable:            m.val_btn                          ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      53                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _4l70x0bvp     &&  m.val_btn VALID
#REGION 2
PRIVATE dbf_NFSTMP,dbf_NFS
PRIVATE dbf_REZTMP

	LSuf_origem = LSuf_destino


	*
	* LOCALIZACAO DO ARQUIVO DE NOTA PARA OPERCAO SELECT ??? FROM <>
	*

	dbf_NFS  		= wp_dirdat+'NOTA.DBF'
	dbf_MAPA  		= wp_dirdat+"MAPAECF.DBF"



	*----------------------------------------------------------*
	*  TEMPORARIO PARA NOTA DO PERIODO
	*----------------------------------------------------------*
	LSarqtmp 	= "" 			&& EX: C:\TMP\TMP0001
	LSaliastmp 	= "NFS" 		&&     TMP001
	LSaliastmp = UPopentmp(wp_dirtmp,LSarqtmp,LSaliastmp,1)
	IF EMPTY(LSaliastmp)
		WAIT WINDOW 'Nфo Foi Possivel Definir Arquivo Temporario'
		RETURN
	ENDIF
	dbf_NFSTMP  = wp_dirtmp+LSaliastmp+".DBF"
	als_NFSTMP  = LSaliastmp
	*----------------------------------------------------------*
	*  TEMPORARIO PARA AGREGAR CUPONS NORMAIS
	*----------------------------------------------------------*
	LSarqtmp 	= "" 			&& EX: C:\TMP\TMP0001
	LSaliastmp 	= "CPM" 		&&     TMP001
	LSaliastmp = UPopentmp(wp_dirtmp,LSarqtmp,LSaliastmp,1)
	IF EMPTY(LSaliastmp)
		WAIT WINDOW 'Nфo Foi Possivel Definir Arquivo Temporario'
		RETURN
	ENDIF
	dbf_CPMTMP  = wp_dirtmp+LSaliastmp+".DBF"
	als_CPMTMP  = LSaliastmp
	*----------------------------------------------------------*
	*  TEMPORARIO PARA AGREGAR CUPONS CANCELADOS
	*----------------------------------------------------------*
	LSarqtmp 	= "" 			&& EX: C:\TMP\TMP0001
	LSaliastmp 	= "CAN" 		&&     TMP001
	LSaliastmp = UPopentmp(wp_dirtmp,LSarqtmp,LSaliastmp,1)
	IF EMPTY(LSaliastmp)
		WAIT WINDOW 'Nфo Foi Possivel Definir Arquivo Temporario'
		RETURN
	ENDIF
	dbf_CANTMP  = wp_dirtmp+LSaliastmp+".DBF"
	als_CANTMP  = LSaliastmp
	*----------------------------------------------------------*


	*----------------------------------------------------------*
	*  SELECIONANDO REGISTROS DE SAIDA
	*----------------------------------------------------------*

	IF !EMPTY(LSuf_destino)
		SELECT  NOTA , SERIE, DATA, HORA, UF, CFO, ;
			TIPO,FAVORECIDO,TP_PESSOA,INSCRICAO,;
	        STATUS, OPERACAO, CUPOM, ;
			TOTSERVICO, BASE_ISS,  ALIQ_ISS, VLR_ISS, ;
			BASE_ICMS,	ALIQ_ICMS, VLR_ICMS, ;
			BASE_SBBRT, BASE_SUBS, ICMS_SUBS, ;
			BASE_ISENT, BASE_OUTR, BASE_ISIPI, BASE_IPI,  VLR_IPI, ;
			TOTPRODUTO, VLRFRETE, VLRSEGURO, VLRDESPES, ;
			TOTAL_NOTA ;	
		FROM &dbf_NFS ;
		WHERE   	empresa = M.EMPRESA;
			AND data >= M.dt_inicio AND  data <= M.dt_fim ;
			AND ch_opera <> "5" ;
			AND UF = LSuf_destino ;
	    INTO TABLE &dbf_NFSTMP
	ELSE
		SELECT  NOTA , SERIE, DATA, HORA, UF, CFO, ;
	        STATUS, OPERACAO, CUPOM, ;
			TIPO,FAVORECIDO,TP_PESSOA,INSCRICAO,;
			TOTSERVICO, BASE_ISS,  ALIQ_ISS, VLR_ISS, ;
			BASE_ICMS,	ALIQ_ICMS, VLR_ICMS, ;
			BASE_SBBRT, BASE_SUBS, ICMS_SUBS, ;
			BASE_ISENT, BASE_OUTR, BASE_ISIPI, BASE_IPI,  VLR_IPI, ;
			TOTPRODUTO, VLRFRETE, VLRSEGURO, VLRDESPES, ;
			TOTAL_NOTA ;	
		FROM &dbf_NFS ;
		WHERE   	empresa = M.EMPRESA;
			AND data >= M.dt_inicio AND  data <= M.dt_fim ;
			AND ch_opera <> "5" ;
	    INTO TABLE &dbf_NFSTMP
	ENDIF

	*---------------------------------------------------------------*

	DO ULval31R_60 WITH ;
	    (m.empresa),(m.dt_inicio),(m.dt_fim)

	*---------------------------------------------------------------*
	SELECT &als_CPMTMP
	USE

	SELECT &als_CANTMP
	USE

	SELECT &als_NFSTMP
	USE

RETURN

*-------------------------------------------------------------------*

PROCEDURE ULval31R_60
PARAMETERS LNemp, LDper_ini, LDper_fim


	*****************************************************************
	*  REGISTRO CUPONS  - 60 -
	*****************************************************************
	*-------------------------------------------------------------------*
	* PROCESSO SOBRE RESUMO DO MAPAECF
	*-------------------------------------------------------------------*
	
	SELECT  "5.00"   AS CFO ,      ;
			DATA,ALIQUOTA AS ALIQ_ICMS,;
			"XX" AS UF, ;
		 	VLRCONTAB 	    						  AS TOTAL_NOTA,;
		 	(VLRCONTAB-VLRISENT-VLRSERVICO-VLRSUBST)  AS BASE_ICMS,;
			VLRISENT								  AS BASE_ISENT,;
			VLROUTRO								  AS BASE_OUTR,;
			VLRSERVICO      						  AS BASE_ISS,;
			VLRSUBST 								  AS BASE_SUBS,;
			CANCELA;
		FROM &dbf_MAPA ;
		WHERE    data >= LDper_ini;
		   	AND  data <= LDper_fim;
		GROUP BY DATA,ALIQ_ICMS,UF;
    	INTO CURSOR TMP_MAPA

	*-------------------------------------------------------------------*
	* PROCESSO APURANDO CUPONS EMITIDOS E NAO CANCELADOS MAPAECF
	*-------------------------------------------------------------------*

 	SELECT  "5.00" AS CFO ,  ;
			DATA, ;
			ALIQ_ICMS, ;
			"XX"			 	AS UF, ;
		 	SUM(TOTAL_NOTA)  	AS TOTAL_NOTA,;
		 	SUM(BASE_ICMS)   	AS BASE_ICMS,;
			SUM(BASE_ISENT)  	AS BASE_ISENT,;
			SUM(BASE_OUTR)   	AS BASE_OUTR,;
			SUM(BASE_ISS)    	AS BASE_ISS,;
			SUM(BASE_SUBS)   	AS BASE_SUBS,;
			0*SUM(BASE_SUBS)      AS CANCELA;
	FROM &dbf_NFSTMP ;
		WHERE   status = 1 ;
			AND  operacao  = "S" ;
		   	AND  cupom > 0 ;
	GROUP BY DATA,ALIQ_ICMS;
   	INTO TABLE &dbf_CPMTMP

	*-------------------------------------------------------------------*
	* PROCESSO APURANDO CUPONS  CANCELADOS
	*-------------------------------------------------------------------*


 	SELECT  "5.00" AS CFO ,  ;
			DATA, ;
			ALIQ_ICMS, ;
			"XX"			 AS UF, ;
		 	0     AS TOTAL_NOTA,;
		 	0	 AS BASE_ICMS,;
			0	 AS BASE_ISENT,;
			0	 AS BASE_OUTR,;
			0	 AS BASE_ISS,;
			0	 AS BASE_SUBS,;
		 	SUM(TOTAL_NOTA)  AS CANCELA;
	FROM &dbf_NFSTMP ;
		WHERE   status = 2 ;
		    AND  operacao  = "S" ;
		    AND  cupom > 0 ;
	GROUP BY DATA,ALIQ_ICMS;
   	INTO TABLE &dbf_CANTMP

	*-------------------------------------------------------------------*
	* PROCESSO FUSAO CUPONS NORMAIS E CANCELADOS
	*-------------------------------------------------------------------*

   	SELECT  &als_CPMTMP
	append from   &dbf_CANTMP

	*-------------------------------------------------------------------*
	* PROCESSO AGRUPAMENTO DE CUPONS NORMAIS E CANCELADOS
	*-------------------------------------------------------------------*

 	SELECT  "5.00" AS CFO ,  ;
			DATA, ;
			ALIQ_ICMS, ;
			"XX"			 	AS UF, ;
		 	SUM(TOTAL_NOTA)  	AS TOTAL_NOTA,;
		 	SUM(BASE_ICMS)   	AS BASE_ICMS,;
			SUM(BASE_ISENT)  	AS BASE_ISENT,;
			SUM(BASE_OUTR)   	AS BASE_OUTR,;
			SUM(BASE_ISS)    	AS BASE_ISS,;
			SUM(BASE_SUBS)   	AS BASE_SUBS,;
			SUM(CANCELA)        AS CANCELA;
	FROM &dbf_CPMTMP ;
	GROUP BY DATA,ALIQ_ICMS;
   	INTO CURSOR TMP_FATU



	*-------------------------------------------------------------------*
	* PROCESSO TIPO "60" COM BASE NO  MAPA ECF
	*-------------------------------------------------------------------*

	SELECT  M1.CFO ,  ;
			M1.DATA, M1.ALIQ_ICMS, ;
			M1.UF, ;
		 	M1.TOTAL_NOTA 	AS M_TOTAL_NOTA,;
		 	F1.TOTAL_NOTA   AS F_TOTAL_NOTA,;
		 	M1.BASE_ICMS  	AS M_BASE_ICMS,;
		 	F1.BASE_ICMS    AS F_BASE_ICMS,;
			M1.BASE_ISENT	AS M_BASE_ISENT,;
			F1.BASE_ISENT	AS F_BASE_ISENT,;
			M1.BASE_OUTR    AS M_BASE_OUTR,;
			F1.BASE_OUTR    AS F_BASE_OUTR,;
			M1.BASE_ISS     AS M_BASE_ISS,;
			F1.BASE_ISS     AS F_BASE_ISS,;
			M1.BASE_SUBS    AS M_BASE_SUBS,;
			F1.BASE_SUBS    AS F_BASE_SUBS,;
			M1.CANCELA      AS M_CANCELA,;
			F1.CANCELA      AS F_CANCELA;
	 FROM TMP_MAPA  M1, TMP_FATU F1;
		WHERE 	 F1.DATA = M1.DATA;
		     AND F1.ALIQ_ICMS = M1.ALIQ_ICMS ;
   	INTO CURSOR TMP_DIFE

    SELECT * FROM TMP_DIFE ;
     UNION ;
	SELECT  "TOTA"  		AS CFO ,  ;
			{12.12.9999}    AS DATA,;
			0 				AS ALIQ_ICMS, ;
			"XX"            AS UF, ;
		 	SUM(M1.TOTAL_NOTA) 	AS M_TOTAL_NOTA,;
		 	SUM(F1.TOTAL_NOTA)   AS F_TOTAL_NOTA,;
		 	SUM(M1.BASE_ICMS)  	AS M_BASE_ICMS,;
		 	SUM(F1.BASE_ICMS)    AS F_BASE_ICMS,;
			SUM(M1.BASE_ISENT)	AS M_BASE_ISENT,;
			SUM(F1.BASE_ISENT)	AS F_BASE_ISENT,;
			SUM(M1.BASE_OUTR)    AS M_BASE_OUTR,;
			SUM(F1.BASE_OUTR)    AS F_BASE_OUTR,;
			SUM(M1.BASE_ISS)     AS M_BASE_ISS,;
			SUM(F1.BASE_ISS)     AS F_BASE_ISS,;
			SUM(M1.BASE_SUBS)    AS M_BASE_SUBS,;
			SUM(F1.BASE_SUBS)    AS F_BASE_SUBS,;
			SUM(M1.CANCELA)      AS M_CANCELA,;
			SUM(F1.CANCELA)      AS F_CANCELA;
	 FROM TMP_MAPA  M1, TMP_FATU F1;
		WHERE 	 F1.DATA = M1.DATA;
		     AND F1.ALIQ_ICMS = M1.ALIQ_ICMS ;
   	INTO CURSOR TMP_RESU

	LSnome	 =	RIGHT(str(year(LDper_ini)),2)+;
				STR(MONTH(LDper_ini),2)+STR(LNemp,2)+"VL.DBF"
	LSnome	= 	"\SCGC\AGENFA\"+STRTRAN(LSnome," ","0")

	COPY TO &LSnome

	SELE TMP_RESU
	GO BOTT
	
	IF M_TOTAL_NOTA <> F_TOTAL_NOTA
	
		DO OBJ_ALER.SPR  WITH ;
			"CRITICA !!! Use Planilha EXCEL e Verifique o Arq.:"+;
	         LSnome
	ENDIF
	go top
RETURN


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4L70X0BVQ           UL69R_11 VALID                     ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0310A,     Record Number:   37  ╨
*       ╨ Variable:            UL69R_11                           ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      54                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*

FUNCTION _4l70x0bvq     &&  UL69R_11 VALID
#REGION 2
RETURN

FUNCTION UL69R_11
	PARAMETERS LNemp, LNctrl, LDper_ini, LDper_fim, LN_Ctr

	SELE empresa
	SET ORDER TO TAG empresa
	SEEK LNemp
	
	LStipo  		= "11"								&& 01-tipo
	LSlogr			= LEFT(empresa.endereco,34)         && 02-logradouro

	IF TYPE("empresa.num") = "U"
		LSnum	= "00001"                       		&& 03-numero
	ELSE
		LSnum	= CHRTRAN(STR(empresa.num,5)," ","0") 	&& 03-numero
	ENDIF
	LScompl			= SPACE(22)                         && 04-complemento
	LSbairro		= LEFT(empresa.bairro,15)              && 05-cep
	LScep			= LEFT(CHRTRAN(empresa.cep," ","0"),8) && 06-bairro
	LScontato		= LEFT(empresa.contato,28)             && 07-contato

	LSfone			= CHRTRAN(UPPER(empresa.fone),"X","0")
	LSfone			= CHRTRAN(LSfone,"(","")
	LSfone			= CHRTRAN(LSfone,")","")
	LSfone			= CHRTRAN(LSfone,"-","")
	LSfone			= CHRTRAN(LSfone," ","")
	LSfone			= REPL("0",12-LEN(LSfone))+LSfone

	LSfone			= LEFT(LSfone,12)                      && 08-fone

	LStmp1 			= LStipo+LSlogr+LSnum+LScompl+LSbairro+LScep+;
					  LScontato+LSfone	
	=FPUT(LNctrl,LStmp1,126)
	LN_Ctr	=	LN_Ctr + 1
RETURN


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4L70X0BVR           ULCST_Entrada VALID                ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0310A,     Record Number:   38  ╨
*       ╨ Variable:            ULCST_Entrada                      ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      55                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*



FUNCTION _4l70x0bvr     &&  ULCST_Entrada VALID
#REGION 2
RETURN


FUNCTION ULCST_Entrada
PARAMETERS PrmCstInfo,PrmOrigem,PrmTp_Mercad,Prmbase_calc,PrmVlrvenda,;
		Prmicms_subs, PrmCodigo,PrmTipo


	PRIVATE LScst

	=W_DEFPROC("TRIBUTAR.SPR")
	LScst = TRCST_Entrada(PrmCstInfo, PrmOrigem, ;
						  PrmTp_Mercad, Prmbase_calc, PrmVlrvenda,;
					  	  Prmicms_subs, PrmCodigo,PrmTipo)
RETURN(LScst)


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4L70X0BVS           UL69R_50 VALID                     ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0310A,     Record Number:   39  ╨
*       ╨ Variable:            UL69R_50                           ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      56                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _4l70x0bvs     &&  UL69R_50 VALID
#REGION 2
return

FUNCTION UL69R_50
	PARAMETERS LNemp, LNctrl, LDper_ini, LDper_fim, LN_Ctr

	*-------------------------------------------------------------------*
	*	NOTAS DE SAIDA
	*-------------------------------------------------------------------*
	DO ULLvrSda50
	*---------------------------------------------------------------------*

   	SELE LIVROSAI
	GO TOP
	LStipo  		= "50"                             && 01-tipo
	DO WHILE !EOF()
		LSmsg = "Saidas (50) "+;
				 	DTOC(LIVROSAI.DATA)+;
					STR(LIVROSAI.NOTA,6)
		WAIT WINDOW LSmsg NOWAIT

		
		*----------------------------------------------------------*
		LScgc	=  CHRTRAN(STR(LIVROSAI.favorecido,14)," ","0")  && 02-cnpj
		*----------------------------------------------------------*
		*     Quando a inscricao que estiver na nota for invalida
		*  o prog buscara a inscricao do cadastro de clientes
		*  pode ocorrer que no momento da emissao da nota a inscricao
		*  estivesse errada.
		*----------------------------------------------------------*

		LSinsc	=  ALLTRIM(LIVROSAI.inscricao)			&& 03-inscricao

		LSdtemi		=	STR(YEAR(LIVROSAI.data),4)+;
						STR(MONTH(LIVROSAI.data),2)+;
						STR(DAY(LIVROSAI.data),2)
		LSdtemi		=   CHRTRAN(LSdtemi," ","0")		&& 04-dt.emissao						

		LSuf	=  LIVROSAI.uf							&& 05-uf

		=W_DEFPROC("CLIENTES.SPR")
		IF !CLInscricao(LSuf,LSinsc,1,0,0,'')
			IF LIVROSAI.favorecido = 0
				LSinsc	=  "ISENTO"
			ELSE
				SELE clientes
				SET ORDER TO TAG cliente
				SEEK LIVROSAI.favorecido
				=W_DEFPROC("CLIENTES.SPR")
				IF  FOUND() AND;
					CLInscricao(clientes.estado,clientes.INSCRICAO,1,0,0,'')
					&& CFOs Inciados em 5 o estado deve ser igual ao do
					&& informante
					DO CASE
						CASE LEFT(LIVROSAI.SET_CFO,1) = "5" ;
							AND clientes.estado = empresa.estado
							LSinsc	=  ALLTRIM(clientes.inscricao)
							LSuf	=	clientes.estado
						CASE LEFT(LIVROSAI.SET_CFO,1) <> "5" ;
							AND clientes.estado <> empresa.estado
							LSinsc	=  ALLTRIM(clientes.inscricao)
							LSuf	=	clientes.estado
					ENDCASE
				ELSE
					LSinsc	=  ALLTRIM(LIVROSAI.inscricao)
				ENDIF		
			ENDIF
		ENDIF
		SELE LIVROSAI
		*----------------------------------------------------------*
		IF "ISENTO" $ UPPER(LSinsc)
			LSinsc	=  "ISENTO"
			LScgc	=  CHRTRAN(STR(0,14)," ","0")
		ELSE
			LSinsc	=  CHRTRAN(LSinsc,".","")
			LSinsc	=  CHRTRAN(LSinsc,"/","")
			LSinsc	=  CHRTRAN(LSinsc,"-","")
			LSinsc	=  CHRTRAN(LSinsc,"(","")
			LSinsc	=  CHRTRAN(LSinsc,")","")
		ENDIF			
		LSinsc			= LEFT(LSinsc+space(14),14)
		IF LIVROSAI.TP_PESSOA = 1
			LScgc	=  CHRTRAN(STR(0,14)," ","0")
		ENDIF			


		LSmodelo 	=   "01" 							&& 06-modelo

		DO CASE
	
		CASE LIVROSAI.NOTA > 1000000 AND LIVROSAI.NOTA < 2000000
		    RtnMOD_DOC    =   "2D"  && CUPOM
		    RtnNro_Doc    =   LIVROSAI.NOTA - 1000000

		CASE LIVROSAI.NOTA > 2000000 AND LIVROSAI.NOTA < 3000000
		    RtnMOD_DOC    =   "03"  && NF SERVICO
		    RtnNro_Doc    =   LIVROSAI.NOTA - 2000000

		CASE LIVROSAI.NOTA > 3000000 AND LIVROSAI.NOTA < 4000000
		    RtnMOD_DOC    =   "55"  && NFe
		    RtnNro_Doc    =   LIVROSAI.NOTA - 3000000


		CASE LIVROSAI.NOTA > 4000000 AND LIVROSAI.NOTA < 5000000
		    RtnMOD_DOC    =   "01"  && NFSe
		    RtnNro_Doc    =   LIVROSAI.NOTA - 4000000
		
		OTHERWISE			
			=W_DEFPROC("TIPOOPER.SPR")
			LFieldTmp    = ;
				TPGetFieldValue("S",  LIVROSAI.Tipo ,"Cod_Mod_Rf")
		    RtnMOD_DOC    = LFieldTmp

		    RtnNro_Doc    =   LIVROSAI.NOTA
		ENDCASE


		LSmodelo 	=   RtnMOD_DOC 							&& 06-modelo
		LSserie		=   LEFT(LIVROSAI.serie+"  ",3)			&& 07-serie

		LSserie		=   LEFT("1"+"  ",3)			&& 07-serie




		LSnumero 	= 	CHRTRAN(STR(RtnNro_Doc ,7)," ","0")
		LSnumero 	= 	SUBS(LSnumero,2,6)				    && 08-numero


		*--> Obs: no conv69/02 o campo 08-subserie deixou de existir
		LSsubserie  = 	"  "							&& 08-subserie

		*--> Obs: no conv69/02 o campo 08-subserie fui trocado por..
		*LSnumero 	= 	CHRTRAN(STR(LIVROSAI.NOTA,7)," ","0")
		*LSnumero 	= 	SUBS(LSnumero,2,6)				&& 08-numero




		

		LScfo		=   CHRTRAN(LIVROSAI.SET_CFO,".","")	&& 09-cfo					
		LScfo		=   CHRTRAN(LScfo,".","")						
        LScfo	    =   LEFT(LScfo,4)
		LSemitente  =  "P"                             && 10-emitente

		SELE LIVROSAI
		*-----------------------------------------------------------------*
		*      Quando o registro se referenciar a uma copia de cupom
		* em NF os valores sao zerados devido aos mesmos serem relacio-
		* nados no registro tipo 61
		*-----------------------------------------------------------------*

		IF LIVROSAI.CUPOM > 0  ;
		   OR LIVROSAI.TIPO $ "ETE/ETI"
		                && PORQUE SE > 0 E NOTA REFERENTE A CUPOM
		                && ETI/ETE SAO NOTAS DE DEVOLUCAO
			LSvalor		=	str(0,14,2)						
			LSbase_icms	=	str(0,14,2)						
			LSvlr_icms	=	ROUND(0,2)
			LSbase_isent=	str(0,14,2)						
			LSbase_outr	=	str(0,14,2)						
			LSaliq_icms	=	str(LIVROSAI.aliq_icms,5,2)						
		ELSE
		
			LSvalor		=	str(LIVROSAI.total_nota,14,2)	  			
			LSbase_icms	=	str(LIVROSAI.base_icms,14,2)	
			LSvlr_icms	=	ROUND(base_icms*aliq_icms/100 ,2)
			LSbase_isent=	str(LIVROSAI.base_isent,14,2)	
			LSbase_outr	=	str(LIVROSAI.base_outr,14,2)	  					
			LSaliq_icms	=	str(LIVROSAI.aliq_icms,5,2)		  	
		ENDIF	



		LSvalor		=   CHRTRAN(LSvalor," ","0")	    && 11-valor					
		LSvalor		=   CHRTRAN(LSvalor,",","")						
		LSvalor		=   CHRTRAN(LSvalor,".","")						


		LSbase_icms	=   CHRTRAN(LSbase_icms," ","0")    && 12-Base
		LSbase_icms	=   CHRTRAN(LSbase_icms,",","")						
		LSbase_icms	=   CHRTRAN(LSbase_icms,".","")						


		LSvlr_icms	=	STR(LSvlr_icms,14,2)			&& 13-Icms
		LSvlr_icms	=   CHRTRAN(LSvlr_icms," ","0")						
		LSvlr_icms	=   CHRTRAN(LSvlr_icms,",","")						
		LSvlr_icms	=   CHRTRAN(LSvlr_icms,".","")						


		LSbase_isent=   CHRTRAN(LSbase_isent," ","0")	&& 14-isent	
		LSbase_isent=   CHRTRAN(LSbase_isent,",","")						
		LSbase_isent=   CHRTRAN(LSbase_isent,".","")						
		

		LSbase_outr	=   CHRTRAN(LSbase_outr," ","0")	&& 15-Outro
		LSbase_outr	=   CHRTRAN(LSbase_outr,",","")						
		LSbase_outr	=   CHRTRAN(LSbase_outr,".","")						


		LSaliq_icms	=   CHRTRAN(LSaliq_icms," ","0")	&& 16-Aliq			
		LSaliq_icms	=   CHRTRAN(LSaliq_icms,",","")			
		LSaliq_icms	=   CHRTRAN(LSaliq_icms,".","")						

		IF LIVROSAI.status = 2
			LSstatus = "S"								&& 17-situacao
		ELSE
			LSstatus = "N"
		ENDIF		
		************************************************************
		LStmp1		=	LStipo+LScgc+LSinsc+LSdtemi+LSuf+LSmodelo+;
						LSserie+LSnumero+LScfo+LSemitente+LSvalor+;
						LSbase_icms+LSvlr_icms+LSbase_isent+;
						LSbase_outr+LSaliq_icms+LSstatus
		************************************************************
		=FPUT(LNctrl,LStmp1,126)
		LN_Ctr	=	LN_Ctr + 1
		SKIP
	ENDDO
	*-------------------------------------------------------------------*
	*	NOTAS DE ENTRADA
	*-------------------------------------------------------------------*
	DO ULLvrEnt50
	*-------------------------------------------------------------------*

	SELECT LIVROENT
	GO TOP

	LStipo  		= "50"							&& 01-TIPO


	DO WHILE !EOF()
		LSmsg = "Entradas (50) "+;
				 	DTOC(LIVROENT.DATA)+;
					STR(LIVROENT.NOTA,6)
		WAIT WINDOW LSmsg NOWAIT

		*-----------------------------------------------------------*
		SELE fornece
		SET ORDER TO TAG codigo
		SEEK LIVROENT.codforn

		IF FOUND()
			LSinsc	=  ALLTRIM(fornece.inscricao)
			LScgc	=  CHRTRAN(STR(fornece.cgc,14)," ","0")
		ELSE
			LSinsc	=  ALLTRIM(LIVROENT.inscricao)
			LScgc	=  CHRTRAN(STR(LIVROENT.favorecido,14)," ","0")
		ENDIF

		IF "ISENTO" $ UPPER(LSinsc)
			LSinsc	=  "ISENTO"
			LScgc	=  CHRTRAN(STR(0,14)," ","0")		&& 02-cnpj
		ELSE
			LSinsc	=  CHRTRAN(LSinsc,".","")
			LSinsc	=  CHRTRAN(LSinsc,"/","")
			LSinsc	=  CHRTRAN(LSinsc,"-","")
			LSinsc	=  CHRTRAN(LSinsc,"(","")
			LSinsc	=  CHRTRAN(LSinsc,")","")
		ENDIF			
		LSinsc			= LEFT(LSinsc+space(14),14)     && 03-inscricao
		*-----------------------------------------------------------*
		SELECT LIVROENT

		LSdtemi		=	STR(YEAR(LIVROENT.data),4)+;
						STR(MONTH(LIVROENT.data),2)+;
						STR(DAY(LIVROENT.data),2)
		LSdtemi		=   CHRTRAN(LSdtemi," ","0")		&& 04-dt.emissao
		LSuf		=	LIVROENT.uf						&& 05-uf
		LSmodelo 	=   "01" 							&& 06-modelo
***		LSserie		=   LIVROENT.serie+"  "				&& 07-serie

		LSserie		=   LEFT(LIVROENT.serie+"  ",3)			&& 07-serie





		
		*--> Obs: no conv69/02 o campo 08-subserie deixou de existir
		LSsubserie  = 	"  "							&& 08-subserie

		*--> Obs: no conv69/02 o campo 08-subserie fui trocado por..

		LSnumero 	= 	CHRTRAN(STR(LIVROENT.NOTA,6)," ","0")  && 08-numero

		LScfo		=   CHRTRAN(LIVROENT.SET_CFO,".","")						
		LScfo		=   CHRTRAN(LScfo,".","")						

        LScfo	=   LEFT(LScfo,4)						&& 09-cfo

		IF LIVROENT.CGC = LIVROENT.FAVORECIDO
		   LSemitente = "P"
		ELSE
		   LSemitente = "T"
		ENDIF
		


		SELE LIVROENT

		LSvalor		=	str(LIVROENT.total_nota,14,2)	
		LSvalor		=   CHRTRAN(LSvalor," ","0")		 	
		LSvalor		=   CHRTRAN(LSvalor,",","")						
		LSvalor		=   CHRTRAN(LSvalor,".","")			&& 11-valor			

		LSbase_icms	=   IIF(LIVROENT.base_subs > 0, 0, LIVROENT.base_icms)

		LSbase_icms	=	str(LSbase_icms,14,2)						
		LSbase_icms	=   CHRTRAN(LSbase_icms," ","0")						
		LSbase_icms	=   CHRTRAN(LSbase_icms,",","")						
		LSbase_icms	=   CHRTRAN(LSbase_icms,".","")		&& 12-base icms

		LSvlr_icms	=	IIF(LIVROENT.base_subs > 0, 0, LIVROENT.vlr_icms)

		LSvlr_icms	=	str(LSvlr_icms,14,2)						
		LSvlr_icms	=   CHRTRAN(LSvlr_icms," ","0")						
		LSvlr_icms	=   CHRTRAN(LSvlr_icms,",","")						
		LSvlr_icms	=   CHRTRAN(LSvlr_icms,".","")		&& 13-vlr icms

		LSbase_isent=	str(LIVROENT.base_isent,14,2)						
		LSbase_isent=   CHRTRAN(LSbase_isent," ","0")						
		LSbase_isent=   CHRTRAN(LSbase_isent,",","")						
		LSbase_isent=   CHRTRAN(LSbase_isent,".","")	&& 14-isenta
		
		LSbase_outr	=	str(LIVROENT.base_outr,14,2)						
		LSbase_outr	=   CHRTRAN(LSbase_outr," ","0")						
		LSbase_outr	=   CHRTRAN(LSbase_outr,",","")						
		LSbase_outr	=   CHRTRAN(LSbase_outr,".","")		&& 15-outra

		LSaliq_icms	=	str(LIVROENT.aliq_icms,5,2)						
		LSaliq_icms	=   CHRTRAN(LSaliq_icms," ","0")						
		LSaliq_icms	=   CHRTRAN(LSaliq_icms,",","")						
		LSaliq_icms	=   CHRTRAN(LSaliq_icms,".","")		&& 16-aliquota

		LSstatus = "N"									&& 17-situacao
		************************************************************
		LStmp1		=	LStipo+LScgc+LSinsc+LSdtemi+LSuf+LSmodelo+;
						LSserie+LSnumero+LScfo+LSemitente+LSvalor+;
						LSbase_icms+LSvlr_icms+LSbase_isent+;
						LSbase_outr+LSaliq_icms+LSstatus
		************************************************************
		=FPUT(LNctrl,LStmp1,126)
		LN_Ctr	=	LN_Ctr + 1
		SKIP
	ENDDO
RETURN





*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4L70X0BWS           UL69R_51 VALID                     ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0310A,     Record Number:   40  ╨
*       ╨ Variable:            UL69R_51                           ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      57                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*

FUNCTION _4l70x0bws     &&  UL69R_51 VALID
#REGION 2
RETURN

FUNCTION UL69R_51
RETURN

*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4L70X0BWY           UL69R_53 VALID                     ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0310A,     Record Number:   41  ╨
*       ╨ Variable:            UL69R_53                           ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      58                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*

FUNCTION _4l70x0bwy     &&  UL69R_53 VALID
#REGION 2
RETURN

FUNCTION UL69R_53
	PARAMETERS LNemp, LNctrl, LDper_ini, LDper_fim, LN_Ctr


	*----------------------------------------------------------------*
	*  NOTAS DE SAIDA - COM SUBSTITUICAO TRIBUTARIA
	*----------------------------------------------------------------*
	DO ULLvrSda53
    SELE  SLIVROSAI
	*----------------------------------------------------------------*

	LStipo  		= "53"
	DO WHILE !EOF()
		LSmsg = "Subst.Saida (53) "+;
				 	DTOC(SLIVROSAI.DATA)+;
					STR(SLIVROSAI.NOTA,6)
		WAIT WINDOW LSmsg NOWAIT

		*----------------------------------------------------------*
		LScgc	=  CHRTRAN(STR(SLIVROSAI.favorecido,14)," ","0")

		LSinsc	=  ALLTRIM(SLIVROSAI.inscricao)
		LSuf	=	SLIVROSAI.uf
		=W_DEFPROC("CLIENTES.SPR")
		IF !CLInscricao(LSuf,LSinsc,1,0,0,'')
			IF SLIVROSAI.favorecido = 0
				LSinsc	=  "ISENTO"
			ELSE
				SELE clientes
				SET ORDER TO TAG cliente
				SEEK SLIVROSAI.favorecido

				=W_DEFPROC("CLIENTES.SPR")
				IF  FOUND() AND ;
				   CLInscricao(clientes.estado,clientes.INSCRICAO,1,0,0,'')
					&& CFOs Inciados em 5 o estado deve ser igual ao do
					&& informante
					DO CASE
						CASE LEFT(SLIVROSAI.SET_CFO,1) = "5" ;
							AND clientes.estado = empresa.estado
							LSinsc	=  ALLTRIM(clientes.inscricao)
							LSuf	=	clientes.estado
						CASE LEFT(SLIVROSAI.SET_CFO,1) <> "5" ;
							AND clientes.estado <> empresa.estado
							LSinsc	=  ALLTRIM(clientes.inscricao)
							LSuf	=	clientes.estado
					ENDCASE
				ELSE
					LSinsc	=  ALLTRIM(SLIVROSAI.inscricao)
				ENDIF		
			ENDIF
		ENDIF
		SELE SLIVROSAI

		IF "ISENTO" $ UPPER(LSinsc)
			LSinsc	=  "ISENTO"
			LScgc	=  CHRTRAN(STR(0,14)," ","0")
		ELSE
			LSinsc	=  CHRTRAN(LSinsc,".","")
			LSinsc	=  CHRTRAN(LSinsc,"/","")
			LSinsc	=  CHRTRAN(LSinsc,"-","")
			LSinsc	=  CHRTRAN(LSinsc,"(","")
			LSinsc	=  CHRTRAN(LSinsc,")","")
		ENDIF			
		IF SLIVROSAI.TP_PESSOA = 1
			LScgc	=  CHRTRAN(STR(0,14)," ","0")
		ENDIF			


		LSinsc			= LEFT(LSinsc+space(14),14)
		LSdtemi		=	STR(YEAR(SLIVROSAI.data),4)+;
						STR(MONTH(SLIVROSAI.data),2)+;
						STR(DAY(SLIVROSAI.data),2)
		LSdtemi		=   CHRTRAN(LSdtemi," ","0")						



		*---------------------------------------------------*

		LSmodelo 	=   "01"
		LSserie		=   SLIVROSAI.serie+"  "
		LSnumero 	= 	CHRTRAN(STR(SLIVROSAI.NOTA,7)," ","0")
		LSnumero 	= 	SUBS(LSnumero,2,6)



		DO CASE
	
		CASE SLIVROSAI.NOTA > 1000000 AND SLIVROSAI.NOTA < 2000000
		    RtnMOD_DOC    =   "2D"  && CUPOM
		    RtnNro_Doc    =   SLIVROSAI.NOTA - 1000000

		CASE SLIVROSAI.NOTA > 2000000 AND SLIVROSAI.NOTA < 3000000
		    RtnMOD_DOC    =   "03"  && NF SERVICO
		    RtnNro_Doc    =   SLIVROSAI.NOTA - 2000000

		CASE SLIVROSAI.NOTA > 3000000 AND SLIVROSAI.NOTA < 4000000
		    RtnMOD_DOC    =   "55"  && NFe
		    RtnNro_Doc    =   SLIVROSAI.NOTA - 3000000


		CASE SLIVROSAI.NOTA > 4000000 AND SLIVROSAI.NOTA < 5000000
		    RtnMOD_DOC    =   "01"  && NFSe
		    RtnNro_Doc    =   SLIVROSAI.NOTA - 4000000
		
		OTHERWISE			
			=W_DEFPROC("TIPOOPER.SPR")
			LFieldTmp    = ;
				TPGetFieldValue("S",  SLIVROSAI.Tipo ,"Cod_Mod_Rf")
		    RtnMOD_DOC    =   LFieldTmp

		    RtnNro_Doc    =   SLIVROSAI.NOTA
		ENDCASE


		LSmodelo 	=   RtnMOD_DOC 							&& 06-modelo
		LSserie		=   LEFT(SLIVROSAI.serie+"  ",3)			&& 07-serie

		LSnumero 	= 	CHRTRAN(STR(RtnNro_Doc ,7)," ","0")
		LSnumero 	= 	SUBS(LSnumero,2,6)				    && 08-numero

		*---------------------------------------------------*




		LScfo		=   CHRTRAN(SLIVROSAI.SET_CFO,".","")						
		LScfo		=   CHRTRAN(LScfo,".","")						
        LScfo	    =   LEFT(LScfo,4)

		IF SLIVROSAI.CGC = SLIVROSAI.FAVORECIDO
		   LSemitente = "P"
		ELSE
		   LSemitente = "T"
		ENDIF


		SELE SLIVROSAI


		*-- > Base de Substituicao
		LSbase_icms	=	str(SLIVROSAI.base_subs,14,2)						
		LSbase_icms	=   CHRTRAN(LSbase_icms," ","0")						
		LSbase_icms	=   CHRTRAN(LSbase_icms,",","")						
		LSbase_icms	=   CHRTRAN(LSbase_icms,".","")						

		*-- > ICMS de Substituicao
		LSvlr_icms	=	STR(SLIVROSAI.icms_subs,14,2)
		LSvlr_icms	=   CHRTRAN(LSvlr_icms," ","0")						
		LSvlr_icms	=   CHRTRAN(LSvlr_icms,",","")						
		LSvlr_icms	=   CHRTRAN(LSvlr_icms,".","")						

		*--- > Despesas acessorias
		LSdespesa=	SLIVROSAI.vlrfrete+SLIVROSAI.vlrseguro+SLIVROSAI.vlrdespes
		LSdespesa=	 str(LSdespesa,14,2)						
		LSdespesa=   CHRTRAN(LSdespesa," ","0")						
		LSdespesa=   CHRTRAN(LSdespesa,",","")						
		LSdespesa=   CHRTRAN(LSdespesa,".","")						
		
		IF SLIVROSAI.status = 2
			LSstatus = "S"
		ELSE
			LSstatus = "N"
		ENDIF		

		LSfiler  	=  space(30)
		************************************************************
		LStmp1		=	LStipo+LScgc+LSinsc+LSdtemi+LSuf+LSmodelo+;
						LSserie+LSnumero+LScfo+LSemitente+;
						LSbase_icms+LSvlr_icms+LSdespesa+;
						LSstatus+LSfiler
		************************************************************
		=FPUT(LNctrl,LStmp1,126)
		LN_Ctr	=	LN_Ctr + 1
		SKIP
	ENDDO



	*-------------------------------------------------------------------*
	*	NOTAS DE ENTRADA
	*-------------------------------------------------------------------*

	DO ULLvrEnt53

	*-------------------------------------------------------------------*

	SELE SLIVROENT
	GO TOP

	LStipo  		= "53"
	DO WHILE !EOF()
		LSmsg = "Subst.Entrada (53) "+;
				 	DTOC(SLIVROENT.DATA)+;
					STR(SLIVROENT.NOTA,6)
		WAIT WINDOW LSmsg NOWAIT


		*-----------------------------------------------------------*
		SELE fornece
		SET ORDER TO TAG codigo
		SEEK SLIVROENT.codforn
		IF FOUND()
			LSinsc	=  ALLTRIM(fornece.inscricao)
			LScgc	=  CHRTRAN(STR(fornece.cgc,14)," ","0")
		ELSE
			LSinsc	=  ALLTRIM(SLIVROENT.inscricao)
			LScgc	=  CHRTRAN(STR(SLIVROENT.favorecido,14)," ","0")
		ENDIF

		IF "ISENTO" $ UPPER(LSinsc)
			LSinsc	=  "ISENTO"
			LScgc	=  CHRTRAN(STR(0,14)," ","0")
		ELSE
			LSinsc	=  CHRTRAN(LSinsc,".","")
			LSinsc	=  CHRTRAN(LSinsc,"/","")
			LSinsc	=  CHRTRAN(LSinsc,"-","")
			LSinsc	=  CHRTRAN(LSinsc,"(","")
			LSinsc	=  CHRTRAN(LSinsc,")","")
		ENDIF			
		LSinsc		= LEFT(LSinsc+space(14),14)
		SELECT SLIVROENT

		LSdtemi		=	STR(YEAR(SLIVROENT.data),4)+;
						STR(MONTH(SLIVROENT.data),2)+;
						STR(DAY(SLIVROENT.data),2)
		LSdtemi		=   CHRTRAN(LSdtemi," ","0")						

		LSuf		=	SLIVROENT.uf
		LSmodelo 	=   "01"
*		LSserie		=   "  1"
*		LSsubserie  = 	"  "

*		LSserie		=   SLIVROENT.serie+"  "

		LSserie		=   "1"+"  "

		LSnumero 	= 	CHRTRAN(STR(SLIVROENT.NOTA,6)," ","0")

		LScfo		=   CHRTRAN(SLIVROENT.SET_CFO,".","")						
		LScfo		=   CHRTRAN(LScfo,".","")						
        LScfo	=   LEFT(LScfo,4)

		IF SLIVROENT.CGC = SLIVROENT.FAVORECIDO
		   LSemitente = "P"
		ELSE
		   LSemitente = "T"
		ENDIF

		SELE SLIVROENT


		*-- > Base de Substituicao
		LSbase_icms	=	str(SLIVROENT.base_subs,14,2)						
		LSbase_icms	=   CHRTRAN(LSbase_icms," ","0")						
		LSbase_icms	=   CHRTRAN(LSbase_icms,",","")						
		LSbase_icms	=   CHRTRAN(LSbase_icms,".","")						

		*-- > ICMS de Substituicao
		LSvlr_icms	=	STR(SLIVROENT.icms_subs,14,2)
		LSvlr_icms	=   CHRTRAN(LSvlr_icms," ","0")						
		LSvlr_icms	=   CHRTRAN(LSvlr_icms,",","")						
		LSvlr_icms	=   CHRTRAN(LSvlr_icms,".","")						

		*--- > Despesas acessorias
		LSdespesa=;
			SLIVROENT.vlrfrete+SLIVROENT.vlrseguro+SLIVROENT.vlrdespes
		LSdespesa=	 str(LSdespesa,14,2)						
		LSdespesa=   CHRTRAN(LSdespesa," ","0")						
		LSdespesa=   CHRTRAN(LSdespesa,",","")						
		LSdespesa=   CHRTRAN(LSdespesa,".","")						
		

		LSstatus = "N"
		LSfiler  	=  space(30)
		************************************************************
		LStmp1		=	LStipo+LScgc+LSinsc+LSdtemi+LSuf+LSmodelo+;
						LSserie+LSnumero+LScfo+LSemitente+;
						LSbase_icms+LSvlr_icms+LSdespesa+;
						LSstatus+LSfiler
		************************************************************
		=FPUT(LNctrl,LStmp1,126)
		LN_Ctr	=	LN_Ctr + 1
		SKIP
	ENDDO

RETURN





*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4L70X0BX9           UL69R_54 VALID                     ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0310A,     Record Number:   42  ╨
*       ╨ Variable:            UL69R_54                           ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      59                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*

FUNCTION _4l70x0bx9     &&  UL69R_54 VALID
#REGION 2
RETURN

*****************************************************************
*  REGISTRO DE ITENS - 54 - ENTRADA E SAIDA
*****************************************************************
FUNCTION UL69R_54
	PARAMETERS LNemp, LNctrl, LDper_ini, LDper_fim, LN_Ctr
	PRIVATE LNctrOrdem

	*-------------------------------------------------------------------*
	*	ITENS DAS NOTAS DE SAIDA
	*-------------------------------------------------------------------*

	DO ULItmSda54

	*-------------------------------------------------------------------*
	SELE ILIVROSAI
	GO TOP

	DO WHILE !EOF()
	
		LSmsg = "Produtos Saida (54) "+;
				 	DTOC(ILIVROSAI.DATA)+;
					STR(ILIVROSAI.NOTA,6)
		WAIT WINDOW LSmsg NOWAIT

		LStipo  	=   "54"

		
		*----------------------------------------------------------*
		LScgc	=  CHRTRAN(STR(ILIVROSAI.favorecido,14)," ","0")
		*----------------------------------------------------------*

		LSinsc	=  ALLTRIM(ILIVROSAI.inscricao)
		LSuf	=  ILIVROSAI.uf
		=W_DEFPROC("CLIENTES.SPR")
		IF !CLInscricao(LSuf,LSinsc,1,0,0,'')
			IF ILIVROSAI.favorecido = 0
				LSinsc	=  "ISENTO"
			ELSE
				SELE clientes
				SET ORDER TO TAG cliente
				SEEK ILIVROSAI.favorecido
				=W_DEFPROC("CLIENTES.SPR")
				IF  FOUND() AND;
					CLInscricao(clientes.estado,clientes.INSCRICAO,1,0,0,'')
					&& CFOs Inciados em 5 o estado deve ser igual ao do
					&& informante
					DO CASE
						CASE LEFT(ILIVROSAI.SET_CFO,1) = "5" ;
							AND clientes.estado = empresa.estado
							LSinsc	=  ALLTRIM(clientes.inscricao)
							LSuf	=	clientes.estado
						CASE LEFT(ILIVROSAI.SET_CFO,1) <> "5" ;
							AND clientes.estado <> empresa.estado
							LSinsc	=  ALLTRIM(clientes.inscricao)
							LSuf	=	clientes.estado
					ENDCASE
				ELSE
					LSinsc	=  ALLTRIM(ILIVROSAI.inscricao)
				ENDIF		
			ENDIF
		ENDIF

		SELE ILIVROSAI
		IF "ISENTO" $ UPPER(LSinsc)
			LScgc	=  CHRTRAN(STR(0,14)," ","0")
		ENDIF			
		IF ILIVROSAI.TP_PESSOA = 1
			LScgc	=  CHRTRAN(STR(0,14)," ","0")
		ENDIF			
			
		LSmodelo 	=   "01"







		LSnumero 	= 	CHRTRAN(STR(ILIVROSAI.NOTA,7)," ","0")
		LSnumero 	= 	SUBS(LSnumero,2,6)





		*---------------------------------------------------*

		LSmodelo 	=   "01"





		LSnumero 	= 	CHRTRAN(STR(ILIVROSAI.NOTA,7)," ","0")
		LSnumero 	= 	SUBS(LSnumero,2,6)



		DO CASE
	
		CASE ILIVROSAI.NOTA > 1000000 AND ILIVROSAI.NOTA < 2000000
		    RtnMOD_DOC    =   "2D"  && CUPOM
		    RtnNro_Doc    =   ILIVROSAI.NOTA - 1000000

		CASE ILIVROSAI.NOTA > 2000000 AND ILIVROSAI.NOTA < 3000000
		    RtnMOD_DOC    =   "03"  && NF SERVICO
		    RtnNro_Doc    =   ILIVROSAI.NOTA - 2000000

		CASE ILIVROSAI.NOTA > 3000000 AND ILIVROSAI.NOTA < 4000000
		    RtnMOD_DOC    =   "55"  && NFe
		    RtnNro_Doc    =   ILIVROSAI.NOTA - 3000000


		CASE ILIVROSAI.NOTA > 4000000 AND ILIVROSAI.NOTA < 5000000
		    RtnMOD_DOC    =   "01"  && NFSe
		    RtnNro_Doc    =   ILIVROSAI.NOTA - 4000000
		
		OTHERWISE			
			=W_DEFPROC("TIPOOPER.SPR")
			LFieldTmp    = ;
				TPGetFieldValue("S",  ILIVROSAI.Tipo ,"Cod_Mod_Rf")
		    RtnMOD_DOC    =   LFieldTmp

		    RtnNro_Doc    =   ILIVROSAI.NOTA
		ENDCASE


		LSmodelo 	=   RtnMOD_DOC 							&& 06-modelo
		LSserie		=   LEFT(ILIVROSAI.serie+"  ",3)			&& 07-serie


*--> AJUSTE MAI/11  SERGIO -
		LSserie		=   LEFT("1"+"  ",3)			&& 07-serie




		LSnumero 	= 	CHRTRAN(STR(RtnNro_Doc ,7)," ","0")
		LSnumero 	= 	SUBS(LSnumero,2,6)				    && 08-numero

		*---------------------------------------------------*










		QBR_NOTA   = ILIVROSAI.NOTA
		LNctrordem = 1		&& INDICAR ORDEM DO PRODUTO NA NOTA

		DO WHILE !EOF() AND QBR_NOTA = ILIVROSAI.NOTA
			*---------------------------------------------------*
			&& REGISTRAR ITEM COMERCIALIZADO

			DO ULitem_6975  with ;
			    ILIVROSAI.Codigo,ILIVROSAI.classifica,;
			    ILIVROSAI.descricao,ILIVROSAI.Unidade,ILIVROSAI.Aliq_ipi,;
			     ILIVROSAI.aliq_icms, ILIVROSAI.iva,ILIVROSAI.tp_mercad

			*---------------------------------------------------*			


			LScst   = CHRTRAN(STR(ILIVROSAI.origem,1)," ","0") + ;
					  ILIVROSAI.cst+ "0"

			LSordem = CHRTRAN(STR(LNctrordem,3)," ","0")
			LNctrordem	= LNctrordem + 1
			LScodigo=  LEFT(ILIVROSAI.codigo,10)+space(4)

			LSqtde	= STR(ILIVROSAI.qtde,12,3)			
			LSqtde  = CHRTRAN(LSqtde," ","0")
			LSqtde  = CHRTRAN(LSqtde,",","")
			LSqtde  = CHRTRAN(LSqtde,".","")

			LSvalor	= STR(ILIVROSAI.vlrvenda,13,2)			
			LSvalor = CHRTRAN(LSvalor," ","0")
			LSvalor = CHRTRAN(LSvalor,",","")
			LSvalor = CHRTRAN(LSvalor,".","")

			LSdesconto	= STR(0,13,2)			
			LSdesconto  = CHRTRAN(LSdesconto," ","0")
			LSdesconto  = CHRTRAN(LSdesconto,",","")
			LSdesconto  = CHRTRAN(LSdesconto,".","")

			LSbase_icms = STR(ILIVROSAI.base_calc,13,2)			
			LSbase_icms = CHRTRAN(LSbase_icms," ","0")
			LSbase_icms = CHRTRAN(LSbase_icms,",","")
			LSbase_icms = CHRTRAN(LSbase_icms,".","")

			LSbase_subs = (ILIVROSAI.BASE_SUBS)
			LSbase_subs = STR(LSbase_subs,13,2)			
			LSbase_subs = CHRTRAN(LSbase_subs," ","0")
			LSbase_subs = CHRTRAN(LSbase_subs,",","")
			LSbase_subs = CHRTRAN(LSbase_subs,".","")

			LSvlripi	= STR(ILIVROSAI.vlripi,13,2)			
			LSvlripi	= CHRTRAN(LSvlripi," ","0")
			LSvlripi 	= CHRTRAN(LSvlripi,",","")
			LSvlripi 	= CHRTRAN(LSvlripi,".","")

			LSaliq_icms	=	str(ILIVROSAI.aliq_icms,5,2)						
			LSaliq_icms	=   CHRTRAN(LSaliq_icms," ","0")						
			LSaliq_icms	=   CHRTRAN(LSaliq_icms,",","")						
			LSaliq_icms	=   CHRTRAN(LSaliq_icms,".","")						
			
			LScfo		=   CHRTRAN(ILIVROSAI.SET_cfo,".","")						
   		    LScfo		=   CHRTRAN(LScfo,".","")						
            LScfo	=   LEFT(LScfo,4)

			*******************************************************

			LStmp1		= LStipo+LScgc+LSmodelo+LSserie+;
						  LSnumero+LScfo+LScst+LSordem+;
						  LScodigo+LSqtde+LSvalor+LSdesconto+LSbase_icms+;
						  LSbase_subs+LSvlripi+LSaliq_icms
			=FPUT(LNctrl,LStmp1,126)
			LN_Ctr	=	LN_Ctr + 1
			*******************************************************			
			SKIP
		ENDDO
	ENDDO

	*-------------------------------------------------------------------*
	*	NOTAS DE ENTRADA
	*-------------------------------------------------------------------*
	DO ULItmEnt54
	*-------------------------------------------------------------------*

	SELE ILIVROENT
	GO TOP



	DO WHILE !EOF()
		LSmsg = "Produtos Entrada (54) "+;
				 	DTOC(ILIVROENT.DATA)+;
					STR(ILIVROENT.NOTA,6)
		WAIT WINDOW LSmsg NOWAIT

		LStipo  	= "54"

		*-----------------------------------------------------------*
		SELE fornece
		SET ORDER TO TAG codigo
		SEEK ILIVROENT.codforn
		IF FOUND()
			LSinsc	=  ALLTRIM(fornece.inscricao)
			LScgc	=  CHRTRAN(STR(fornece.cgc,14)," ","0")
		ELSE
			LSinsc	=  ALLTRIM(ILIVROENT.inscricao)
			LScgc	=  CHRTRAN(STR(ILIVROENT.favorecido,14)," ","0")
		ENDIF
		*-----------------------------------------------------------*
		SELE ILIVROENT

		IF "ISENTO" $ UPPER(LSinsc)
			LScgc	=  CHRTRAN(STR(0,14)," ","0")
		ENDIF
		LSmodelo 	=   "01"

		LSsubserie  = 	"  "



*--> AJUSTE MAI/11  SERGIO -

***		LSserie		=   LEFT(ILIVROENT.serie+"  ",3)			&& 07-serie

*--> AJUSTE MAI/11  SERGIO -
		LSserie		=   LEFT("1"+"  ",3)			&& 07-serie



		LSnumero 	= 	CHRTRAN(STR(ILIVROENT.NOTA,6)," ","0")

		SELE ILIVROENT

		LScfo	=   CHRTRAN(ILIVROENT.SET_cfo,".","")						
	    LScfo	=   CHRTRAN(LScfo,".","")						
        LScfo	=   LEFT(LScfo,4)



		QBR_NOTA   = ILIVROENT.NOTA
		QBR_FORN   = ILIVROENT.CODFORN
		LNctrordem = 1		&& INDICAR ORDEM DO PRODUTO NA NOTA

		DO WHILE !EOF() AND QBR_NOTA = ILIVROENT.NOTA ;
		                AND QBR_FORN = ILIVROENT.CODFORN
		

			*--------------------------------------------------*
			* 	Podem ser identificadas itens de entrada com mesmo
			* numero de nota por isso e feito a verificacao do tipo
			* e do codiforn
			*---------------------------------------------------*
			*---------------------------------------------------*
			DO ULitem_6975  with ;
			    ILIVROENT.Codigo,ILIVROENT.classifica,;
			    ILIVROENT.descricao,ILIVROENT.Unidade,ILIVROENT.Aliq_ipi,;
			     ILIVROENT.aliq_icms, ILIVROENT.iva,ILIVROENT.tp_mercad
			*---------------------------------------------------*			




			LScst   = ILIVROENT.cst

					




			LSordem = CHRTRAN(STR(LNctrordem,3)," ","0")
			LNctrordem	= LNctrordem + 1
			LScodigo=  LEFT(ILIVROENT.codigo,10)+space(4)


			LSqtde	= STR(ILIVROENT.qtde,12,3)			
			LSqtde  = CHRTRAN(LSqtde," ","0")
			LSqtde  = CHRTRAN(LSqtde,",","")
			LSqtde  = CHRTRAN(LSqtde,".","")

			LSvalor	= STR(ILIVROENT.vlrvenda,13,2)			
			LSvalor = CHRTRAN(LSvalor," ","0")
			LSvalor = CHRTRAN(LSvalor,",","")
			LSvalor = CHRTRAN(LSvalor,".","")

			LSdesconto	= STR(0,13,2)			
			LSdesconto  = CHRTRAN(LSdesconto," ","0")
			LSdesconto  = CHRTRAN(LSdesconto,",","")
			LSdesconto  = CHRTRAN(LSdesconto,".","")

			LSbase_icms = STR(ILIVROENT.base_calc,13,2)			
			LSbase_icms = CHRTRAN(LSbase_icms," ","0")
			LSbase_icms = CHRTRAN(LSbase_icms,",","")
			LSbase_icms = CHRTRAN(LSbase_icms,".","")

			LSbase_subs = (ILIVROENT.base_calc+ILIVROENT.vlripi)*ILIVROENT.iva
			LSbase_subs = STR(LSbase_subs,13,2)			
			LSbase_subs = CHRTRAN(LSbase_subs," ","0")
			LSbase_subs = CHRTRAN(LSbase_subs,",","")
			LSbase_subs = CHRTRAN(LSbase_subs,".","")

			LSvlripi	= STR(ILIVROENT.vlripi,13,2)			
			LSvlripi	= CHRTRAN(LSvlripi," ","0")
			LSvlripi 	= CHRTRAN(LSvlripi,",","")
			LSvlripi 	= CHRTRAN(LSvlripi,".","")

			LSaliq_icms	=	str(ILIVROENT.aliq_icms,5,2)						
			LSaliq_icms	=   CHRTRAN(LSaliq_icms," ","0")						
			LSaliq_icms	=   CHRTRAN(LSaliq_icms,",","")						
			LSaliq_icms	=   CHRTRAN(LSaliq_icms,".","")						


			LScfo		=   CHRTRAN(ILIVROENT.SET_cfo,".","")						
            LScfo	    =   LEFT(LScfo,4)


			
			*******************************************************			
			LStmp1		= LStipo+LScgc+LSmodelo+LSserie+;
						  +LSnumero+LScfo+LScst+LSordem+;
						  LScodigo+LSqtde+LSvalor+LSdesconto+LSbase_icms+;
						  LSbase_subs+LSvlripi+LSaliq_icms
			=FPUT(LNctrl,LStmp1,126)
			LN_Ctr	=	LN_Ctr + 1
			*******************************************************			
			SKIP
		ENDDO
	ENDDO

RETURN


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4L70X0BXA           ULitem_6975 VALID                  ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0310A,     Record Number:   43  ╨
*       ╨ Variable:            ULitem_6975                        ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      60                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*

FUNCTION _4l70x0bxa     &&  ULitem_6975 VALID
#REGION 2
RETURN

PROCEDURE ULitem_6975
PARAMETERS PrmCodigo,Prmclassifica,Prmdescricao,PrmUnidade,PrmAliq_ipi,;
     Prmaliq_icms, Prmiva,Prmtp_mercad
	*-----------------------------------------------------------*
	* REGISTRA ITENS COMERCIALIZADOS PARA REGISTRO TIPO 75
	*-----------------------------------------------------------*
	PRIVATE LSalias
	LSalias = ALIAS()

	SELE ITENSNEGOC
	SET ORDER TO TAG CODIGO
	m.codigo	= PrmCodigo
	SEEK m.codigo
	IF !FOUND()
 		IF LEFT(m.codigo,5) <> "99999" AND EMPTY(Prmdescricao)		
			SELE grupo
			SET ORDER TO TAG codigo
			SEEK m.codigo
			IF FOUND()
				m.descricao = grupo.descricao
			ELSE
				m.descricao = Prmdescricao
			ENDIF
		ELSE
			m.descricao = Prmdescricao
			IF empty(m.descricao)
				m.descricao = LEFT("SERVICO"+SPACE(25),25)
			ENDIF
		ENDIF
		*--------------------------------------------------------*
		SELE ITENSNEGOC
 		IF LEFT(m.codigo,5) <> "99999" AND EMPTY(Prmdescricao)		
			m.classifica= Prmclassifica
		ELSE
			m.classifica= "999999999999"
		ENDIF
		m.status	= 1
		m.cdg_tipo	= 4

 		IF LEFT(m.codigo,5) <> "99999" AND EMPTY(Prmdescricao)		
			m.unidade 	= PrmUnidade
		ELSE
			m.unidade 	= "UN"
		ENDIF

		m.aliq_ipi	= PrmAliq_ipi
		m.aliq_icms	= Prmaliq_icms
		m.iva		= Prmiva
		m.tp_mercad = Prmtp_mercad
		=edithand("SAVE")
	ENDIF
	IF !EMPTY(LSalias) AND USED(LSalias)
		SELECT &LSalias
	ENDIF
RETURN


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4L70X0BXB           UL69R_60 VALID                     ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0310A,     Record Number:   44  ╨
*       ╨ Variable:            UL69R_60                           ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      61                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*

FUNCTION _4l70x0bxb     &&  UL69R_60 VALID
#REGION 2
RETURN

*****************************************************************
*  REGISTRO CUPONS  - 60 -
*****************************************************************
FUNCTION UL69R_60
	PARAMETERS LNemp, LNctrl, LDper_ini, LDper_fim, LN_Ctr

	*-------------------------------------------------------------------*
	* PROCESSO SOBRE RESUMO DO MAPAECF
	*-------------------------------------------------------------------*

	=ULLvrCpm()
	
	*-------------------------------------------------------------------*
	SELECT LIVROCPM
	go top


	DO WHILE !EOF()
		LSmsg = "Resum.Cupons (60) "+;
				 	DTOC(LIVROCPM.DATA)
		WAIT WINDOW LSmsg NOWAIT

		*---------------------------------------------------------
		*--> PROCESSAR SOMENTE O REGISTRO RESUMO DOS CUPONS
		* REGISTROS SAO GERADOS QUANDO PROCESSO O ARQUIVO LIVROSAI
		* RESUMINDO OS CUPONS POR DATA E ALIQUOTA

		LDtqbr		= 	LIVROCPM.data
		LSvalor		= 	0
		LSvlr_icms	= 	0
		LSnroini	=   0
		LSnrofim	=   0
		*--------------------------------------------------------------*
		=W_DEFPROC("NOTA.SPR")
		=NFEcfInforme((LNemp),(LDtqbr),(LDtqbr),LSnroIni,LSnroFim,;
					LSvalor, LSvlr_icms)
		*--------------------------------------------------------------*
		*	Identifica┤фo do Equipamento
		*--------------------------------------------------------------*
		LStipo  	= "60"
		LSMestre	= "M"
		LSdtemi		=	STR(YEAR(LDtqbr),4)+;
						STR(MONTH(LDtqbr),2)+;
						STR(DAY(LDtqbr),2)
		LSdtemi		=   CHRTRAN(LSdtemi," ","0")						


		LSserie     =   LEFT(empresa.ecf_serie+SPACE(20),20)
		LSnumero 	= 	"001"
		LSmodelo	=	"2D"
		
		LSnroini	=   CHRTRAN(STR(LSnroini,6)," ","0")
		LSnrofim	=   CHRTRAN(STR(LSnrofim,6)," ","0")

		SELE mapaecf
		SET NEAR ON
		SET ORDER TO TAG mapa
		SEEK STR(LNemp,3)+DTOS(LDtqbr)+STR(1,4)+STR(17,5,2)	
		SET NEAR OFF
		IF mapaecf.empresa = LNemp AND ;
		   mapaecf.data    = LDtqbr AND ;
		   mapaecf.ecf		= 1 AND ;
		   mapaecf.aliquota = 17
				LSnroredZ		=	mapaecf.ctrreducao
				LSgtInivalor	=	mapaecf.gt_inicial
				LSgtFimvalor	=	mapaecf.gt_final
		ELSE
			SKIP -1
			DO WHILE !BOF() AND mapaecf.empresa = LNemp
				IF  mapaecf.aliquota = 17
					EXIT
				ENDIF
				SKIP -1
			ENDDO
			IF !BOF()
				LSnroredZ		=	mapaecf.ctrreducao
				LSgtInivalor	=	mapaecf.gt_inicial
				LSgtFimvalor	=	mapaecf.gt_final
			ELSE			
				LSnroredZ		=	0
				LSgtInivalor	=	0
				LSgtFimvalor	=	0
			ENDIF
		ENDIF


		LSctrredZ		=   CHRTRAN(STR(LSnroredZ,6)," ","0")

        LSctrReinic     =   CHRTRAN(STR(0,3)," ","0") && ate ter informacao

		SELECT LIVROCPM
		LNctrRegAnaliticos = 0
		LNvendaBruta = 0
		LNregistro = RECNO()
		DO WHILE !EOF() AND LDTqbr = LIVROCPM.data


			*-------------------------------------------------*
			LNvendaBruta =  LNvendaBruta  + VNDABRUTA
			*-------------------------------------------------*
			SKIP
		ENDDO

		GO LNregistro

		LSbranco_B	=  SPACE(37)

		LSgtVndBrt	=	STR(LNvendaBruta,17,2)
		LSgtVndBrt	=   CHRTRAN(LSgtVndBrt," ","0")						
		LSgtVndBrt	=   CHRTRAN(LSgtVndBrt,",","")						
		LSgtVndBrt	=   CHRTRAN(LSgtVndBrt,".","")						

		LSgtFimvalor	=	STR(LSgtFimvalor,17,2)
		LSgtFimvalor	=   CHRTRAN(LSgtFimvalor," ","0")						
		LSgtFimvalor	=   CHRTRAN(LSgtFimvalor,",","")						
		LSgtFimvalor	=   CHRTRAN(LSgtFimvalor,".","")						



		*******************************************************
		LStmp1		=  LStipo+"M"+LSdtemi+LSserie+LSnumero;
					+LSmodelo+LSnroini+LSnrofim+LSctrredZ+;
					+LSctrReinic+LSgtVndBrt+LSgtFimValor+LSbranco_B

		=FPUT(LNctrl,LStmp1,126)
		LN_Ctr	=	LN_Ctr + 1
		*******************************************************			

		DO WHILE !EOF() AND LDTqbr = LIVROCPM.data

			IF (LIVROCPM.CANCELA) > 0

				LSaliq_icms	=	"CANC"
				LSvalor		=	STR(LIVROCPM.CANCELA,13,2)
				LSvalor		=   CHRTRAN(LSvalor," ","0")						
				LSvalor		=   CHRTRAN(LSvalor,",","")						
				LSvalor		=   CHRTRAN(LSvalor,".","")						
				LSbranco_B	=  SPACE(79)
				*******************************************************
				LStmp1		=  LStipo+"A"+LSdtemi+LSserie+LSaliq_icms+;
					+LSvalor+LSbranco_B
				=FPUT(LNctrl,LStmp1,126)
				LN_Ctr	=	LN_Ctr + 1
				*******************************************************			
			ENDIF
			*******************************************************			

			IF LIVROCPM.base_icms > 0

				LSaliq_icms	=	str(LIVROCPM.aliq_icms,5,2)						
				LSaliq_icms	=   CHRTRAN(LSaliq_icms," ","0")						
				LSaliq_icms	=   CHRTRAN(LSaliq_icms,",","")						
				LSaliq_icms	=   CHRTRAN(LSaliq_icms,".","")						

				LSvalor		=	STR(LIVROCPM.base_icms,13,2)
				LSvalor		=   CHRTRAN(LSvalor," ","0")						
				LSvalor		=   CHRTRAN(LSvalor,",","")						
				LSvalor		=   CHRTRAN(LSvalor,".","")						
		
				LSbranco_B	=  SPACE(79)
				LNctrRegAnaliticos = LNctrRegAnaliticos + 1
				*******************************************************
				LStmp1		=  LStipo+"A"+LSdtemi+LSserie+LSaliq_icms+;
						+LSvalor+LSbranco_B
				=FPUT(LNctrl,LStmp1,126)
				LN_Ctr	=	LN_Ctr + 1
				*******************************************************			
			ENDIF

			IF (LIVROCPM.BASE_ISS) > 0
				LSaliq_icms	=	"ISS "
				LSvalor		=	LIVROCPM.BASE_ISS

				LSvalor		=	STR(LSvalor,13,2)
				LSvalor		=   CHRTRAN(LSvalor," ","0")						
				LSvalor		=   CHRTRAN(LSvalor,",","")						
				LSvalor		=   CHRTRAN(LSvalor,".","")						
				LSbranco_B	=  SPACE(79)
				*******************************************************
				LStmp1		=  LStipo+"A"+LSdtemi+LSserie+LSaliq_icms+;
						+LSvalor+LSbranco_B
				=FPUT(LNctrl,LStmp1,126)
				LN_Ctr	=	LN_Ctr + 1
				*******************************************************			
			ENDIF
	
			*----------------------------------------------------------*
			* ATEN─гO : NO RESUMO DO LIVRO O VALOR DE MERCADORIAS
			*          VENDIDAS COM RECOLHIMENTO EM REGIME DE
			*		   SUBSTITUI─гO SAO LANCADOS  EM "ISENTO"
			*          JA O SINTEGRA LANCA NA OPCAO "F" DE MERCADORIA
			*           EM REGIME SUBSTITUI─гO
			*----------------------------------------------------------*
			*   NESTE CASO E ATE SEGUNDA ORDEM ESTAMOS PASSANDO
			* A COLUNA ISENTAS PARA "F"
			*----------------------------------------------------------*

			IF (LIVROCPM.base_isent) > 0
				LSaliq_icms	=	"I   "
				LSvalor 	=	LIVROCPM.base_isent

				LSvalor		=	STR(LSvalor,13,2)
				LSvalor		=   CHRTRAN(LSvalor," ","0")						
				LSvalor		=   CHRTRAN(LSvalor,",","")						
				LSvalor		=   CHRTRAN(LSvalor,".","")						
				LSbranco_B	=  SPACE(79)
				*******************************************************
				LStmp1		=  LStipo+"A"+LSdtemi+LSserie+LSaliq_icms+;
						+LSvalor+LSbranco_B
				=FPUT(LNctrl,LStmp1,126)
				LN_Ctr	=	LN_Ctr + 1
				*******************************************************			
			ENDIF
	

			IF (LIVROCPM.BASE_SUBS) > 0
				LSaliq_icms	=	"F   "
				LSvalor 	=	LIVROCPM.BASE_SUBS

				LSvalor		=	STR(LSvalor,13,2)
				LSvalor		=   CHRTRAN(LSvalor," ","0")						
				LSvalor		=   CHRTRAN(LSvalor,",","")						
				LSvalor		=   CHRTRAN(LSvalor,".","")						
				LSbranco_B	=  SPACE(79)
				*******************************************************
				LStmp1		=  LStipo+"A"+LSdtemi+LSserie+LSaliq_icms+;
						+LSvalor+LSbranco_B
				=FPUT(LNctrl,LStmp1,126)
				LN_Ctr	=	LN_Ctr + 1
				*******************************************************			
			ENDIF
			*******************************************************			
			SELECT LIVROCPM
			SKIP
		ENDDO
		SELECT LIVROCPM
		IF EOF()
			EXIT
		ENDIF
	ENDDO
		SELECT LIVROCPM
	use

RETURN


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4L70X0BY4           UL69R_70 VALID                     ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0310A,     Record Number:   45  ╨
*       ╨ Variable:            UL69R_70                           ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      62                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*

FUNCTION _4l70x0by4     &&  UL69R_70 VALID
#REGION 2
RETURN

*---------------------------------------------------------------------*
*		Conhecimento de Tranporte
*---------------------------------------------------------------------*
FUNCTION UL69R_70
	PARAMETERS LNemp, LNctrl, LDper_ini, LDper_fim, LN_Ctr

	*-------------------------------------------------------------------*
	*	NOTAS DE ENTRADA
	*-------------------------------------------------------------------*
	SELECT 	NF.empresa,NF.nota,NF.serie, NF.codforn,NF.inscricao, ;
			NF.FAVORECIDO,;
	        NF.data, NF.uf, TP.cfo AS SET_CFO, NF.tipo,;
	        NF.total_nota, NF.vlrfrete, NF.vlrseguro, NF.vlrdespes,;
            NF.base_subs, NF.icms_subs, NF.base_icms, 	;
	  		NF.vlr_icms, NF.base_isent,NF.base_outr,;
	  		NF.aliq_icms,NF.status;
		FROM &dbf_NFETMP NF, ;
		     &dbf_TIPTMP TP ;
		WHERE NF.ch_produ = "9" ;
		      AND NF.KEY_TIPO = TP.KEY_TIPO ;	
	    ORDER BY NF.DATA, NF.NOTA ;
	  	INTO CURSOR LIVROENT

	SELECT LIVROENT
	GO TOP

	LStipo  		= "70"

	DO WHILE !EOF()
		LSmsg = "Conh.Frete (70) "+;
				 	DTOC(LIVROENT.DATA)+;
					STR(LIVROENT.NOTA,6)
		WAIT WINDOW LSmsg NOWAIT
		&& SE NAO FOR CONHECIMENTO DE TRANSPORTE

		*-----------------------------------------------------------*
		SELE fornece
		SET ORDER TO TAG codigo
		SEEK LIVROENT.codforn

		IF FOUND()
			LSinsc	=  ALLTRIM(fornece.inscricao)
			LScgc	=  CHRTRAN(STR(fornece.cgc,14)," ","0")
		ELSE
			LSinsc	=  ALLTRIM(LIVROENT.inscricao)
			LScgc	=  CHRTRAN(STR(LIVROENT.favorecido,14)," ","0")
		ENDIF

		IF "ISENTO" $ UPPER(LSinsc)
			LSinsc	=  "ISENTO"
			LScgc	=  CHRTRAN(STR(0,14)," ","0")
		ELSE
			LSinsc	=  CHRTRAN(LSinsc,".","")
			LSinsc	=  CHRTRAN(LSinsc,"/","")
			LSinsc	=  CHRTRAN(LSinsc,"-","")
			LSinsc	=  CHRTRAN(LSinsc,"(","")
			LSinsc	=  CHRTRAN(LSinsc,")","")
		ENDIF			
		LSinsc			= LEFT(LSinsc+space(14),14)
		*-----------------------------------------------------------*
		SELECT LIVROENT

		LSdtemi		=	STR(YEAR(LIVROENT.data),4)+;
						STR(MONTH(LIVROENT.data),2)+;
						STR(DAY(LIVROENT.data),2)
		LSdtemi		=   CHRTRAN(LSdtemi," ","0")						
		LSuf		=	LIVROENT.uf
		LSmodelo 	=   "08"


*		IF  LIVROENT.serie $ "1/2"
*			LSserie		=   "U"
*			LSsubserie  = 	LIVROENT.serie+" "
*		ELSE
*			LSserie		=   LIVROENT.serie
*			LSsubserie  = 	"U "
*		ENDIF
*
*
*----> AJUSTE SERIE - SERGIO MAIO DE 2011
		IF  LIVROENT.serie $ "1/2"
			LSserie		=   "U"
			LSsubserie  = 	" "+" "
		ELSE
			LSserie		=   "U"
			LSsubserie  = 	" "+" "
		ENDIF






		LSnumero 	= 	CHRTRAN(STR(LIVROENT.NOTA,6)," ","0")

	*	SELE TIPOOPER
	*	SET ORDER TO TAG TIPO
	*	SEEK "E"+LIVROENT.tipo
	*	IF FOUND()
	*		LScfo	= tipooper.cfo
    *	ELSE	
	*		LScfo		=   CHRTRAN(LIVROENT.SET_cfo,".","")						
	*	ENDIF

		LScfo		=   CHRTRAN(LIVROENT.SET_cfo,".","")						
		LScfo		=   CHRTRAN(LScfo,".","")						

        LScfo	=   LEFT(LScfo,4)



		SELE LIVROENT

		LSvalor		=	str(LIVROENT.total_nota,14,2)						
		LSvalor		=   CHRTRAN(LSvalor," ","0")						
		LSvalor		=   CHRTRAN(LSvalor,",","")						
		LSvalor		=   CHRTRAN(LSvalor,".","")						

		LSbase_icms	=   IIF(LIVROENT.base_subs > 0, 0, LIVROENT.base_icms)

		LSbase_icms	=	str(LSbase_icms,15,2)						
		LSbase_icms	=   CHRTRAN(LSbase_icms," ","0")						
		LSbase_icms	=   CHRTRAN(LSbase_icms,",","")						
		LSbase_icms	=   CHRTRAN(LSbase_icms,".","")						

		LSvlr_icms	=	IIF(LIVROENT.base_subs > 0, 0, LIVROENT.vlr_icms)

		LSvlr_icms	=	str(LSvlr_icms,15,2)						
		LSvlr_icms	=   CHRTRAN(LSvlr_icms," ","0")						
		LSvlr_icms	=   CHRTRAN(LSvlr_icms,",","")						
		LSvlr_icms	=   CHRTRAN(LSvlr_icms,".","")						

		LSbase_isent=	str(LIVROENT.base_isent,15,2)						
		LSbase_isent=   CHRTRAN(LSbase_isent," ","0")						
		LSbase_isent=   CHRTRAN(LSbase_isent,",","")						
		LSbase_isent=   CHRTRAN(LSbase_isent,".","")						
		
		LSbase_outr	=	str(LIVROENT.base_outr,15,2)						
		LSbase_outr	=   CHRTRAN(LSbase_outr," ","0")						
		LSbase_outr	=   CHRTRAN(LSbase_outr,",","")						
		LSbase_outr	=   CHRTRAN(LSbase_outr,".","")						

		LSCifFob	=	"2"

		LSstatus = "N"
		************************************************************
		LStmp1		=	LStipo+LScgc+LSinsc+LSdtemi+LSuf+LSmodelo+;
						LSserie+LSsubserie+LSnumero+LScfo+LSvalor+;
						LSbase_icms+LSvlr_icms+LSbase_isent+;
						LSbase_outr+LSCifFob+LSstatus
		************************************************************
		=FPUT(LNctrl,LStmp1,126)
		LN_Ctr	=	LN_Ctr + 1
		SKIP
	ENDDO
RETURN


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4L70X0BYC           UL69R_74 VALID                     ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0310A,     Record Number:   46  ╨
*       ╨ Variable:            UL69R_74                           ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      63                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*

FUNCTION _4l70x0byc     &&  UL69R_74 VALID
#REGION 2
RETURN

*****************************************************************
*  INVENTARIO PRODUTOS - 74 -
*****************************************************************
FUNCTION UL69R_74
	PARAMETERS LNemp, LNctrl, LDper_ini, LDper_fim, LN_Ctr

	PRIVATE LNtotreg, LNcount
	*-------------------------------------------------------------------*
	*	CADASTRO DOS PRODUTOS COMERCIALIZADOS NO PERIODO
	*-------------------------------------------------------------------*
	SELECT EMPRESA
	SET ORDER TO TAG empresa
	SEEK LNemp
	IF !FOUND()
		RETURN(.F.)
	ENDIF	

    wl_tmp =  STRTRAN(STR(LNemp,3),' ','0')
			COUNT FOR wl_tmp $ grupo.empresas ;


	SELECT SLD.CODIGO, SLD.SLD_ATU, SLD.VLR_ATU, ;
		    GRP.classifica,;
		    GRP.descricao, GRP.Unidade,	;
		     EMPRESA.cgc, ;
		     EMPRESA.inscricao,;
		     EMPRESA.estado ;
		FROM ;
		     EMPRESA, ;
		     &dbf_GRUPO GRP,;
			 &dbf_SALDO SLD;
		WHERE     ;
				 empresa.EMPRESA     = LNemp ;
			AND  empresa.empresa     = SLD.EMPRESA;
			AND  SLD.SLD_ATU         > 0 ;
			AND  YEAR(SLD.DTABERT)   = YEAR(LDper_fim) ;
			AND  MONTH(SLD.DTABERT)  = MONTH(LDper_fim) ;
			AND  GRP.CODIGO          = SLD.CODIGO ;
			AND  wl_tmp $ GRP.empresas ;
			AND  (STR(GRP.tp_control,1) $ "13" OR ;
			     ( LNemp = 10 AND STR(GRP.tp_control,1) $ "123"));
	ORDER BY SLD.CODIGO;
	INTO CURSOR CRSREG_74
	
	count to LNtotreg
	GO TOP

	DO WHILE !EOF()

		MSG = "TIPO 74 => "+ STR(LN_Ctr) + " de " + STR(LNtotreg)+;
		     "  Produto: "+CRSREG_74.codigo

		WAIT WINDOW MSG NOWAIT


		*---------------------------------------------------*
		&& REGISTRAR ITEM COMERCIALIZADO

		m.tp_mercad	= ULtp_Mercad(CRSREG_74.codigo,CRSREG_74.estado)
		m.Aliq_ipi  = ULIPIProd(CRSREG_74.codigo)
		m.Aliq_icms = ULALIQICMS(CRSREG_74.ESTADO)
		m.IVA		= ULiva(CRSREG_74.estado,CRSREG_74.codigo,;
		                    CRSREG_74.estado,DATE())





		DO ULitem_6975  with ;
		    CRSREG_74.Codigo,    CRSREG_74.classifica,;
		    CRSREG_74.descricao, CRSREG_74.Unidade, ;
		    m.Aliq_ipi,;
	        m.aliq_icms, ;
	        m.iva,;
	        m.tp_mercad
		*---------------------------------------------------*			



		
		LStipo	= "74"

		LSdfim		=	STR(YEAR(LDper_fim),4)+;
						STR(MONTH(LDper_fim),2)+;
						STR(DAY(LDper_fim),2)
		LSdfim		=   CHRTRAN(LSdfim," ","0")						
	
		LScodigo= LEFT(CRSREG_74.codigo+SPACE(14),14)

		LSqtde		=	str(CRSREG_74.SLD_ATU,14,3)						
		LSqtde		=   CHRTRAN(LSqtde," ","0")						
		LSqtde		=   CHRTRAN(LSqtde,",","")						
		LSqtde		=   CHRTRAN(LSqtde,".","")						

		LSvalor		=	str(CRSREG_74.vlr_ATU,14,2)						
		LSvalor		=   CHRTRAN(LSvalor," ","0")						
		LSvalor		=   CHRTRAN(LSvalor,",","")						
		LSvalor		=   CHRTRAN(LSvalor,".","")						

		LScdg_Posse = "1"
		LScgc	= CHRTRAN(STR(CRSREG_74.cgc,14)," ","0")   && 02-cnpj
		
		LScgc	= CHRTRAN(STR(0,14)," ","0")   && 02-cnpj

		LSinsc	= CHRTRAN(CRSREG_74.inscricao," ","")      && 03-inscricao

		LSinsc	= space(14)

		LSestado = CRSREG_74.estado                         && 06-uf

		*------------------------------------------------------------*
		LSbranco  = SPACE(45)
		*******************************************************
		LStmp1	= LStipo+LSdfim+LScodigo+LSqtde+LSvalor+;
					LScdg_posse+LScgc+LSinsc+LSestado+LSbranco
		=FPUT(LNctrl,LStmp1,126)
		LN_Ctr	=	LN_Ctr + 1
		*******************************************************			
		SELE CRSREG_74
		SKIP
	ENDDO

	=UP_FECHA("CRSREG_74")
RETURN


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4L70X0BYL           UL69R_75 VALID                     ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0310A,     Record Number:   47  ╨
*       ╨ Variable:            UL69R_75                           ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      64                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*

FUNCTION _4l70x0byl     &&  UL69R_75 VALID
#REGION 2
RETURN

*****************************************************************
*  CADASTRO SE PRODUTOS - 75 -
*****************************************************************
FUNCTION UL69R_75
	PARAMETERS LNemp, LNctrl, LDper_ini, LDper_fim, LN_Ctr

	*-------------------------------------------------------------------*
	*	CADASTRO DOS PRODUTOS COMERCIALIZADOS NO PERIODO
	*-------------------------------------------------------------------*
	SELECT EMPRESA
	SET ORDER TO TAG empresa
	SEEK LNemp
	IF !FOUND()
		RETURN(.F.)
	ENDIF	

	SELE ITENSNEGOC
	SET ORDER TO TAG CODIGO
	GO TOP
	
	DO WHILE !EOF()
		WAIT WINDOW ITENSNEGOC.codigo+ITENSNEGOC.descricao NOWAIT
		
		LStipo	= "75"
		LSdini		=	STR(YEAR(LDper_ini),4)+;
						STR(MONTH(LDper_ini),2)+;
						STR(DAY(LDper_ini),2)
		LSdini		=   CHRTRAN(LSdini," ","0")						

		LSdfim		=	STR(YEAR(LDper_fim),4)+;
						STR(MONTH(LDper_fim),2)+;
						STR(DAY(LDper_fim),2)
		LSdfim		=   CHRTRAN(LSdfim," ","0")						
	
		LScodigo= LEFT(ITENSNEGOC.codigo+SPACE(14),14)

		LSncm   = SPACE(8)

		LSnome	  = LEFT(ITENSNEGOC.descricao+SPACE(53),53)
		LSunidade = LEFT(ITENSNEGOC.unidade+SPACE(6),6)
		LNtab_cst = empresa.tab_cst
		*---------------------------------------------------------*
		*  Buscar CST para operacao mais comum (VLA)
		*---------------------------------------------------------*
		* =W_DEFPROC("ORCAMENT.SPR")
		* m.cst = ORdefcst((LNtab_cst),("VLA"),(ITENSNEGOC.tp_mercad),;
		*  			ITENSNEGOC.codigo)
		*---------------------------------------------------------*

		=W_DEFPROC("TRIBUTAR.SPR")
		M.cst = TRdefcst((LNtab_cst),("VLA"),(ITENSNEGOC.tp_mercad),;
					ITENSNEGOC.codigo)

		
		*------------------------------------------------------------*
		*LScst     	=  	"0"+m.cst+"0"
		*LScst		=   CHRTRAN(LScst," ","0")						

		LSaliq_ipi	=	str(ITENSNEGOC.aliq_ipi,6,2)						
		LSaliq_ipi	=   CHRTRAN(LSaliq_ipi," ","0")						
		LSaliq_ipi	=   CHRTRAN(LSaliq_ipi,",","")						
		LSaliq_ipi	=   CHRTRAN(LSaliq_ipi,".","")						

		LSaliq_icms	=	str(17,5,2)						
		LSaliq_icms	=   CHRTRAN(LSaliq_icms," ","0")						
		LSaliq_icms	=   CHRTRAN(LSaliq_icms,",","")						
		LSaliq_icms	=   CHRTRAN(LSaliq_icms,".","")						

		LSaliq_rdz	=	str(0,6,2)						
		LSaliq_rdz 	=   CHRTRAN(LSaliq_rdz ," ","0")						
		LSaliq_rdz 	=   CHRTRAN(LSaliq_rdz ,",","")						
		LSaliq_rdz 	=   CHRTRAN(LSaliq_rdz ,".","")						

		LSaliq_iva	=	str(ITENSNEGOC.iva,14,2)						
		LSaliq_iva	=   CHRTRAN(LSaliq_iva," ","0")						
		LSaliq_iva	=   CHRTRAN(LSaliq_iva,",","")						
		LSaliq_iva	=   CHRTRAN(LSaliq_iva,".","")						


		LSbranco  = SPACE(25)
		*******************************************************
		LStmp1	= LStipo+LSdini+LSdfim+LScodigo+LSncm+LSnome+;
					LSunidade+LSaliq_ipi+LSaliq_icms+;
					LSaliq_rdz+LSaliq_iva
		=FPUT(LNctrl,LStmp1,126)
		LN_Ctr	=	LN_Ctr + 1
		*******************************************************			
		SELE ITENSNEGOC
		SKIP
	ENDDO
			
RETURN



*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4L70X0BYM           UL69R_90 VALID                     ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0310A,     Record Number:   48  ╨
*       ╨ Variable:            UL69R_90                           ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      65                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*

FUNCTION _4l70x0bym     &&  UL69R_90 VALID
#REGION 2
RETURN

*****************************************************************
*  TOTALIZADORES  - 90 -
*****************************************************************
FUNCTION UL69R_90
	PARAMETERS LNemp,LNctrl,LNctr_10,LNctr_11,LNctr_50,LNctr_53,LNctr_54,;
				LNctr_60,LNctr_70,LNctr_74,LNctr_75

	*-------------------------------------------------------------------*
	*	CADASTRO DOS PRODUTOS COMERCIALIZADOS NO PERIODO
	*-------------------------------------------------------------------*
	SELECT EMPRESA
	SET ORDER TO TAG empresa
	SEEK LNemp
	IF !FOUND()
		RETURN(.F.)
	ENDIF	

	LStipo	= "90"
	LScgc	= 	CHRTRAN(STR(empresa.cgc,14)," ","0")
	LSinsc	= 	CHRTRAN(empresa.inscricao," ","")
	LSinsc	= 	CHRTRAN(LSinsc,".","")
	LSinsc	= 	CHRTRAN(LSinsc,"/","")
	LSinsc	= 	CHRTRAN(LSinsc,"-","")
	LSinsc	= 	LEFT(LSinsc+space(14),14)


	LS_tp50	=	"50"
	LS_ct50	=	CHRTRAN(STR(LNctr_50,8)," ","0")

	LS_tp53	=	"53"
	LS_ct53	=	CHRTRAN(STR(LNctr_53,8)," ","0")

	LS_tp54	=	"54"
	LS_ct54	=	CHRTRAN(STR(LNctr_54,8)," ","0")

	LS_tp60	=	"60"
	LS_ct60	=	CHRTRAN(STR(LNctr_60,8)," ","0")

	LS_tp70	=	"70"
	LS_ct70	=	CHRTRAN(STR(LNctr_70,8)," ","0")

	LS_tp74	=	"74"
	LS_ct74	=	CHRTRAN(STR(LNctr_74,8)," ","0")

	LS_tp75	=	"75"
	LS_ct75	=	CHRTRAN(STR(LNctr_75,8)," ","0")

	LNctr_90=	1
	LS_tp90	=	"90"
	LS_ct90	=	CHRTRAN(STR(LNctr_90,8)," ","0")


	LSspaco =   SPACE(15)

	LS_ctgr	=	LNctr_10+LNctr_11+LNctr_50+LNctr_53+LNctr_54+;
				LNctr_60+LNctr_70+LNctr_74+LNctr_75+LNctr_90

	LS_tpGR	=	"99"
	LS_ctgr	=	CHRTRAN(STR(LS_ctgr,8)," ","0")

	*******************************************************
	LStmp1	= LStipo+LScgc+LSinsc+;
			  LS_tp50+LS_ct50+LS_tp53+LS_ct53+LS_tp54+LS_ct54+;
			  LS_tp60+LS_ct60+LS_tp70+LS_ct70+LS_tp74+LS_ct74+;
			  LS_tp75+LS_ct75+LS_tpGr+LS_ctgr+ LSspaco+"1"

	=FPUT(LNctrl,LStmp1,126)
RETURN


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4L70X0BYN           ERRULLvrSda50 VALID                ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0310A,     Record Number:   49  ╨
*       ╨ Variable:            ERRULLvrSda50                      ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      66                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _4l70x0byn     &&  ERRULLvrSda50 VALID
#REGION 2
return

FUNCTION ERRULLvrSda50
    =UP_fecha("A1_TMP" ,.T.)
    =UP_fecha("A2_TMP" ,.T.)
    =UP_fecha("A3_TMP" ,.T.)
    =UP_fecha("TMP2" ,.T.)
	
	*-------------------------------------------------------------------*
	*	NOTAS DE SAIDA
	*-------------------------------------------------------------------*
    * vlr_icms =  (base_icms * aliq_icms/100) as vlr_icms,;
	*-------------------------------------------------------------------*
    *-----> NAO CANCELADAS
	*-------------------------------------------------------------------*
	* SQL DIVIDIDO EM DUAS PARTES POIS OCORRE ERRO DE COMANDO MUITO LONGO
	*-------------------------------------------------------------------*
	* PARTE - 1
	*-------------------------------------------------------------------*
	   SELECT ;
   		  N.CGC,;
		  N.empresa,N.nota,N.serie,;
          "1" AS IND_OPER,;
   		  "0" AS IND_EMIT,;
   		  T.COD_MOD_RF AS COD_MOD,;
   		  "00" AS COD_SIT,;
 		  N.cupom, N.favorecido,N.tp_pessoa,;
 		  IIF(N.tp_pessoa=1,STR(N.favorecido,11),STR(0,11)) AS CPF,;
		  IIF(N.tp_pessoa=2,STR(N.favorecido,14),STR(0,14)) AS CNPJ,;
          N.inscricao,;
		  N.UF,;
          N.UFOrig,N.MunOrig,;
          N.UFDstn,N.MunDstn,;
          N.tipo, N.data,N.vlrfrete,N.vlrseguro,;
          N.vlrdespes,N.status,;
          N.total_nota AS VlrNota;
   	FROM  &dbf_TIPTMP T, &dbf_NFSTMP N ;
    WHERE     N.status = 1 ;
          AND N.operacao = "S" ;
   		  AND N.CUPOM = 0 ;
   		  AND T.KEY_TIPO = N.KEY_TIPO ;
   	      AND T.PROCESSO $ "Ss" ;
    GROUP BY N.EMPRESA, N.DATA, N.NOTA ;
    INTO TABLE \TMP\A1_TMP

	*-------------------------------------------------------------------*
	* PARTE - 2 ==> JA UNIFICA COM PARTE - 1
	*-------------------------------------------------------------------*


   SELECT N.*,;
		  I.ORDEM,;
		  I.CODIGO,I.CLASSIFICA,I.DESCRICAO,I.UNIDADE,I.ORIGEM,;
          ULdefCfo(I.empresa,I.tipo,i.tp_mercad,"SAIDA") AS SET_CFO,;
	  	  I.aliq_icms,;
	  	  I.aliq_ISS,;
	  	  I.aliq_IPI,;
   		  CHRTRAN( STR(i.origem,1)+i.cst," ","0") AS CST,;
          ULCST_ISS(i.vlr_iss,"SAIDA") AS CST_ISS,;
          ULCST_IPI(i.vlripi,"SAIDA") AS CST_IPI,;
          ULGenero(i.tp_mercad,i.classifica,"SAIDA") AS GENERO,;
          ULCFPS(N.UFOrig,N.MunOrig,;
          	N.UFDstn,N.MunDstn,i.tp_mercad,"SAIDA") AS CFPS,;
		 "00" AS CLSCOMNC,;
		 "00" AS CLSGAS,;
		 "00" AS CLSAGUA,;
		 "00" AS CLSENRG;
   	FROM  \TMP\A1_TMP N, &dbf_ITMTMP I;
    WHERE N.NOTA = I.NOTA ;
    GROUP BY N.EMPRESA,N.DATA,N.NOTA,ORDEM ;
    INTO TABLE \TMP\A2_TMP



   SELECT N.*,;
		  SUM(I.base_ISS) AS TOTSERVICO,;
	  	  SUM(I.vlrvenda) AS TOTPRODUTO,;
 		  SUM(I.base_calc) AS BASE_ICMS,;
 		  SUM(I.Base_calc * I.aliq_icms/100) AS VLR_ICMS,;
		  SUM(I.base_isent) AS BASE_ISENT,SUM(I.base_outr) AS BASE_OUTR,;
		  SUM(I.base_sbbrt) AS BASE_SBBRT,;
		  SUM(I.base_subs) AS BASE_SUBS,SUM(I.icms_subs) AS ICMS_SUBS,;
		  SUM(I.base_ISS) AS BASE_ISS,SUM(I.vlr_iss) AS VLR_ISS,;
	  	  SUM(I.base_ipi) AS BASE_IPI,SUM(I.vlripi) AS VLR_IPI,;
	 	  SUM(I.base_isipi) AS BASE_ISIPI,0.00 AS VL_OUT_IPI,;
	  	  SUM(I.vlrvenda) AS VLR_ITEM,;
	  	  SUM(I.vlrvenda+I.icms_subs+I.vlripi) AS TOTAL_NOTA;
   	FROM  \TMP\A2_TMP N, &dbf_ITMTMP I;
    WHERE N.NOTA=I.NOTA  AND N.ORDEM=I.ORDEM ;
    GROUP BY N.EMPRESA,N.DATA,N.NOTA,N.SET_CFO,N.ALIQ_ICMS ;
    INTO TABLE \TMP\A3_TMP

    =UP_fecha("A2_TMP" ,.T.)


	*-------------------------------------------------------------------*
    *-----> CANCELADAS
	*-------------------------------------------------------------------*

	SELECT ;
		N.CGC,N.empresa,N.nota,N.serie,;
		"1"	AS IND_OPER,;
		"0"	AS IND_EMIT,;
		"01" AS COD_MOD,;
		"02" AS COD_SIT,;
		N.cupom,;
		N.favorecido,;
		N.tp_pessoa,;
		IIF(N.tp_pessoa=1,STR(N.favorecido,11),STR(0,11)) AS CPF,;
		IIF(N.tp_pessoa=2,STR(N.favorecido,14),STR(0,14)) AS CNPJ,;
		N.inscricao,N.UFOrig,N.MunOrig,;
		N.uf,N.UF AS UFDstn,N.cidade AS MunDstn,;
		N.tipo,N.data,;
		N.vlrfrete,N.vlrseguro,N.vlrdespes,;
		N.status,N.total_nota AS VlrNota,;
		N.aliq_icms,N.ALIQ_ISS,;
		N.cfo AS SET_CFO,"00" AS CST,"0000" AS CFPS,;
		"00" AS CST_ISS,"00" AS CST_IPI,"00" AS GENERO,"00" AS CLSCOMNC,;
		"00" AS CLSGAS,"00" AS CLSAGUA,"00" AS CLSENRG,;
		N.base_icms,(N.Base_icms * N.aliq_icms/100) AS VLR_ICMS,;
		N.TOTSERVICO,N.TOTPRODUTO,;
		N.base_isent,N.base_outr,N.base_sbbrt,N.base_subs,N.icms_subs,;
		N.base_iss,N.vlr_iss,N.base_ipi,N.VLR_IPI,;
		N.base_isipi,0.00 AS VL_OUT_IPI,0.00 AS VLR_ITEM,;
		N.TOTAL_NOTA;
	FROM &dbf_NFSTMP N, &dbf_TIPTMP T;
	WHERE     N.status=2 AND N.operacao="S";
   		  AND N.CUPOM=0 AND T.KEY_TIPO=N.KEY_TIPO ;
    INTO TABLE \TMP\TMP2


    SELE A3_TMP
    APPEND FROM \TMP\TMP2
	*-------------------------------------------------------------------*
    *-----> UNIAO CANCELADAS E NAO CANCELADAS
	*-------------------------------------------------------------------*
    =UP_fecha("TMP2" ,.T.)


    SELECT * FROM \TMP\A3_TMP ;
     ORDER BY EMPRESA, DATA, NOTA, SET_CFO, ALIQ_ICMS ;
    	INTO TABLE  \TMP\LIVROSAI
*---------------------------------------------------------------------*
	GO TOP
    =UP_fecha("A3_TMP" ,.T.)

	
RETURN





*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4L70X0BYO           ERRULItmSda54 VALID                ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0310A,     Record Number:   50  ╨
*       ╨ Variable:            ERRULItmSda54                      ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      67                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _4l70x0byo     &&  ERRULItmSda54 VALID
#REGION 2
return

FUNCTION ERRULItmSda54
	*-------------------------------------------------------------------*
	*	ITENS DAS NOTAS DE SAIDA
	*-------------------------------------------------------------------*





* 		  IIF(N.tp_pessoa=1,STR(N.favorecido,11),STR(0,11)) AS CPF,;
*		  IIF(N.tp_pessoa=2,STR(N.favorecido,14),STR(0,14)) AS CNPJ,;


   SELECT ;
          N.CGC,;
          N.EMPRESA,N.NOTA,N.SERIE,;
          "1"  AS IND_OPER,;
          "0"  AS IND_EMIT,;
   		  T.COD_MOD_RF AS COD_MOD,;
   		  "00"  AS COD_SIT,;
   		  N.CUPOM,N.FAVORECIDO,N.TP_PESSOA,;
   		  N.INSCRICAO,;
          N.UF,;
          N.UFOrig,N.MunOrig,;
          N.UFDstn,N.MunDstn,;
          N.tipo, N.data, N.vlrfrete,;
		  N.vlrseguro, N.vlrdespes, N.status,;
          N.total_nota AS VlrNota,;
		  ULdefCfo(N.empresa,N.tipo,I.tp_mercad,"SAIDA") AS SET_CFO,;
	  	  I.codigo, I.CLASSIFICA, I.DESCRICAO, I.UNIDADE,;
	  	  I.ORIGEM,;
	  	  CHRTRAN( STR(i.origem,1)+i.cst," ","0") AS CST,;
	  	  I.ALIQ_IPI, I.ALIQ_ICMS,;
	  	  I.IVA, I.TP_MERCAD, I.QTDE, I.VLRVENDA, I.BASE_CALC,;
	  	  I.BASE_SUBS,;
	 	  I.base_isent,;
		  I.base_outr, ;
	  	  I.base_ipi,;
	  	  I.vlripi,;
	 	  I.base_isipi,;
		  0,00  AS VL_OUT_IPI;
   	FROM  &dbf_NFSTMP N,;
   	      &dbf_TIPTMP T,;
   	      &dbf_ITMTMP I ;
    WHERE ;
              N.status = 1 ;
   		  AND N.operacao = "S" ;
   		  AND N.CUPOM = 0 ;
   		  AND T.KEY_TIPO = N.KEY_TIPO ;
   	      AND T.PROCESSO $ "Ss" ;
   		  AND LEFT(I.OPERACAO,1) = "S" ;
   	 	  AND I.EMPRESA = N.EMPRESA ;
   		  AND I.NOTA    = N.NOTA ;
   		  AND I.SERIE   = N.SERIE ;
    ORDER BY N.EMPRESA, N.DATA, N.NOTA, I.CODIGO ;
  	INTO CURSOR ILIVROSAI

RETURN



*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4L70X0BYP           ERRULLvrEnt50 VALID                ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0310A,     Record Number:   51  ╨
*       ╨ Variable:            ERRULLvrEnt50                      ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      68                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _4l70x0byp     &&  ERRULLvrEnt50 VALID
#REGION 2
return

FUNCTION ERRULLvrEnt50

	*-------------------------------------------------------------------*
	*	NOTAS DE ENTRADA
	*		where ch_produ <> "9" faz com que as notas de conhecimento
    *     de transp nao sejam selecionadas
	*-------------------------------------------------------------------*

	SELECT 	;
		N.CGC,;
		N.empresa,N.nota,N.serie,;
        "0" AS IND_OPER,;
 		"0" AS IND_EMIT,;
   		T.COD_MOD_RF AS COD_MOD,;
   		"00" AS COD_SIT,;
        "000000" AS CUPOM,;
		N.FAVORECIDO,n.tp_pessoa,;
	    IIF(N.tp_pessoa=1,STR(N.favorecido,11),STR(0,11)) AS CPF,;
		IIF(N.tp_pessoa=2,STR(N.favorecido,14),STR(0,14)) AS CNPJ,;
        N.codforn,N.inscricao,;
        N.UFOrig,N.MunOrig,;
        N.UFDstn,N.MunDstn,;
        N.uf,;
        N.tipo,N.data,N.data_emi,;
		N.vlrfrete,N.vlrseguro,N.vlrdespes,;
        N.status,;
        (I.vlrvenda+I.vlripi+I.icms_subs) AS VlrNota,;
		N.aliq_icms,;
		ULdefCfo(N.empresa,N.tipo,i.tp_mercad,"ENTRADA") AS SET_CFO;
   	FROM  &dbf_NFETMP N,;
   	      &dbf_TIPTMP T,;
   	      &dbf_INETMP I ;
    WHERE ;
            LEFT(N.situacao,1) = "C";
		AND N.ch_produ <> "9";
        AND N.CH_OPERA <> "5";
   		AND N.KEY_TIPO = T.KEY_TIPO;
   	    AND T.PROCESSO $ "Ee";
   		AND I.KEY_TIPO = N.KEY_TIPO;
   		AND I.EMPRESA = N.EMPRESA;
   		AND I.NOTA = N.NOTA ;
   		AND I.SERIE = N.SERIE;
   		AND I.FAVORECIDO = N.FAVORECIDO ;
    GROUP BY N.EMPRESA,N.DATA,N.NOTA,SET_CFO,I.ALIQ_ICMS;
    INTO CURSOR TMPLIVR


	SELECT 	;
		L.*,;
		 ULCST_Entrada(I.cst, I.origem, I.tp_mercad,I.base_calc,;
			 I.vlrvenda,I.icms_subs, I.codigo) AS CST,;
         ULCFPS(N.UFOrig,N.MunOrig,;
          	N.UFDstn,N.MunDstn,i.tp_mercad,"ENTRADA") AS CFPS,;
         ULCST_ISS(i.vlr_iss,"ENTRADA") AS CST_ISS,;
         ULCST_IPI(i.vlripi,"ENTRADA") AS CST_IPI,;
         ULGenero(i.tp_mercad,i.classifica,"ENTRADA") AS GENERO,;
		 "00" AS CLSCOMNC,;
		 "00" AS CLSGAS,;
		 "00" AS CLSAGUA,;
		 "00" AS CLSENRG;
   	FROM  ;
		  TMPLIVR L,;
   	      &dbf_NFETMP N,;
   	      &dbf_TIPTMP T,;
   	      &dbf_INETMP I ;
    WHERE ;
            LEFT(N.situacao,1) = "C";
		AND N.ch_produ <> "9";
        AND N.CH_OPERA <> "5";
   		AND N.KEY_TIPO = T.KEY_TIPO;
   	    AND T.PROCESSO $ "Ee";
   		AND I.KEY_TIPO = N.KEY_TIPO;
   		AND I.EMPRESA = N.EMPRESA;
   		AND I.NOTA = N.NOTA ;
   		AND I.SERIE = N.SERIE;
   		AND I.FAVORECIDO = N.FAVORECIDO;
   		AND L.EMPRESA = N.EMPRESA;
   		AND L.NOTA = N.NOTA ;
   		AND L.SERIE = N.SERIE;
   		AND L.FAVORECIDO = N.FAVORECIDO ;
    GROUP BY N.EMPRESA,N.DATA,N.NOTA,SET_CFO,I.ALIQ_ICMS;
    INTO CURSOR TMPLIVR




	SELECT 	;
		L.*,;
	  	IIF(N.BASE_SUBS = 0,N.base_icms,N.base_icms*0.00) AS BASE_ICMS,;
	  	IIF(N.BASE_SUBS = 0,N.VLR_ICMS,N.VLR_ICMS*0.00) AS VLR_ICMS,;
		N.BASE_ISENT,(N.base_outr+N.BASE_ISS)  AS BASE_OUTR, ;
		N.base_subs,N.icms_subs,;
		N.base_ISS,(N.base_subs*N.aliq_iss/100) AS VLR_ISS,;
		N.base_ipi,N.vlr_ipi,N.base_isipi,0.00 as VL_OUT_IPI,;
        I.vlrvenda AS Vlr_Item,;
	  	N.TOTAL_NOTA;
   	FROM  ;
		  TMPLIVR L,;
   	      &dbf_NFETMP N,;
   	      &dbf_TIPTMP T,;
   	      &dbf_INETMP I ;
    WHERE ;
            LEFT(N.situacao,1) = "C";
		AND N.ch_produ <> "9";
        AND N.CH_OPERA <> "5";
   		AND N.KEY_TIPO = T.KEY_TIPO;
   	    AND T.PROCESSO $ "Ee";
   		AND I.KEY_TIPO = N.KEY_TIPO;
   		AND I.EMPRESA = N.EMPRESA;
   		AND I.NOTA = N.NOTA ;
   		AND I.SERIE = N.SERIE;
   		AND I.FAVORECIDO = N.FAVORECIDO;
   		AND L.EMPRESA = N.EMPRESA;
   		AND L.NOTA = N.NOTA ;
   		AND L.SERIE = N.SERIE;
   		AND L.FAVORECIDO = N.FAVORECIDO ;
    GROUP BY N.EMPRESA,N.DATA,N.NOTA,SET_CFO,I.ALIQ_ICMS;
    INTO CURSOR TMPLIVR

    SELECT * FROM TMPLIVR NF;
	    ORDER BY NF.EMPRESA, NF.DATA, NF.NOTA, NF.SET_CFO, NF.ALIQ_ICMS ;
	    INTO CURSOR LIVROENT
*---------------------------------------------------------------------*
RETURN





*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4L70X0BZN           ERRULItmEnt54 VALID                ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0310A,     Record Number:   52  ╨
*       ╨ Variable:            ERRULItmEnt54                      ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      69                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _4l70x0bzn     &&  ERRULItmEnt54 VALID
#REGION 2
return

FUNCTION ERRULItmEnt54
	*-------------------------------------------------------------------*
	*	NOTAS DE ENTRADA
	*-------------------------------------------------------------------*
     SELECT ;
  	  	  N.empresa, N.nota, N.serie, N.CGC,;
  	  	  N.FAVORECIDO,N.codforn, N.TP_PESSOA, N.INSCRICAO,;
          N.UF, N.tipo, N.data, N.vlrfrete, N.vlrseguro,;
		  N.vlrdespes,N.status,(I.vlrvenda+I.vlripi+I.icms_subs)  AS VlrNota,;
		  ULdefCfo(N.empresa,N.tipo,I.tp_mercad,"ENTRADA") AS SET_CFO,;
	  	  I.codigo, I.CLASSIFICA, I.DESCRICAO, I.UNIDADE,;
		  I.ORIGEM,ULCST_Entrada(I.cst, I.origem, I.tp_mercad,I.base_calc,;
		  I.vlrvenda,I.icms_subs, I.codigo) AS CST,I.ALIQ_IPI,I.ALIQ_ICMS,;
	  	  I.IVA, I.TP_MERCAD,I.QTDE,I.VLRVENDA,I.BASE_CALC,;
 	  	  IIF(N.BASE_SUBS = 0,I.base_calc,I.base_calc*0) AS BASE_ICMS,;
  	  	  IIF(N.BASE_SUBS = 0,I.VLR_ICMS,I.VLR_ICMS*0) AS VLR_ICMS,;
	  	  I.BASE_SUBS,I.ICMS_SUBS,  I.VLRIPI;
   	FROM  &dbf_NFETMP N, &dbf_TIPTMP T, &dbf_INETMP I;
    WHERE ;
            LEFT(N.situacao,1)="C";
		AND N.ch_produ<>"9";
        AND N.CH_OPERA<> "5" ;
   		AND N.KEY_TIPO= T.KEY_TIPO ;
   	    AND T.PROCESSO$ "Ee" ;
   		AND I.KEY_TIPO= N.KEY_TIPO ;
   		AND I.EMPRESA= N.EMPRESA ;
   		AND I.NOTA= N.NOTA ;
   		AND I.SERIE=N.SERIE;
   		AND I.FAVORECIDO= N.FAVORECIDO ;
    ORDER BY N.EMPRESA,N.DATA,N.NOTA,I.CODIGO;
	INTO CURSOR ILIVROENT





*---------------------------------------------------------------------*
RETURN





*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4L70X0BZT           ULLvrSda53 VALID                   ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0310A,     Record Number:   53  ╨
*       ╨ Variable:            ULLvrSda53                         ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      70                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _4l70x0bzt     &&  ULLvrSda53 VALID
#REGION 2
return

FUNCTION ULLvrSda53

	*-------------------------------------------------------------------*
	*	NOTAS DE SAIDA  =>
	*           icms_subs > 0   => Com Valor de Substituicao Tributaria
	*           tipo <> "CPM"   => Nao seja Cupom
	*           Operacao = "S" => Nao se NF de Entrada
	*-------------------------------------------------------------------*
	*-------------------------------------------------------------------*
	*	NOTAS DE SAIDA
	*-------------------------------------------------------------------*
	*-------------------------------------------------------------------*
    *-----> NAO CANCELADAS
	*-------------------------------------------------------------------*

   IF USED("TMP1")
      SELE TMP1
      USE
   ENDIF


   SELECT ;
   		 "01"  AS COD_MOD,;
   		  NF.empresa   , NF.nota,NF.serie,NF.cupom, ;
		  NF.CGC,NF.FAVORECIDO,;
          NF.tp_pessoa, NF.inscricao,NF.uf, ;
		  NF.tipo, NF.data,;
		  NF.vlrfrete, NF.vlrseguro,  NF.vlrdespes, NF.status,;
          NF.total_nota  AS VlrNota,;
		  ULdefCfo(NF.empresa,NF.tipo,it.tp_mercad,"SAIDA") AS SET_CFO,;
	  	  IT.aliq_icms,;
		  SUM(IT.vlrvenda+IT.icms_subs+IT.vlripi)  AS TOTAL_NOTA,;
	  	  SUM(IT.base_subs) AS BASE_SUBS,;
	  	  SUM(IT.icms_subs) AS ICMS_SUBS,;
	  	  SUM(IT.base_calc) AS BASE_ICMS,;
	  	  SUM(IT.Base_calc * IT.aliq_icms/100) AS VLR_ICMS,;
	 	  SUM(IT.base_isent) AS BASE_ISENT ,;
		  SUM(IT.base_outr)  AS BASE_OUTR ;
   	FROM  &dbf_NFSTMP  NF,;
   	      &dbf_TIPTMP  TP,;
   	      &dbf_ITMTMP  IT ;
    WHERE ;
              NF.status = 1             ;
   		  AND NF.operacao =  "S"        ;
          AND NF.icms_subs > 0          ;
   		  AND TP.KEY_TIPO = NF.KEY_TIPO ;
   	      AND TP.PROCESSO $ "Ss"        ;
   		  AND LEFT(IT.OPERACAO,1) = "S" ;
   	 	  AND IT.EMPRESA = NF.EMPRESA   ;
   		  AND IT.NOTA    = NF.NOTA      ;
   		  AND IT.SERIE   = NF.SERIE     ;
          AND IT.icms_subs > 0          ;
    GROUP BY NF.EMPRESA, NF.DATA, NF.NOTA, SET_CFO, IT.ALIQ_ICMS ;
    INTO CURSOR CRSTMP1

    SELECT * FROM CRSTMP1 NF ;
       ORDER BY NF.EMPRESA, NF.DATA, NF.NOTA, NF.SET_CFO, NF.ALIQ_ICMS ;
       INTO TABLE \TMP\TMP1

	*-------------------------------------------------------------------*
    *-----> CANCELADAS
	*-------------------------------------------------------------------*

	SELECT 	;
   		 "01"  AS COD_MOD,;
		NF.empresa , NF.nota,NF.serie,NF.cupom, ;
		NF.CGC, NF.FAVORECIDO,;
        NF.tp_pessoa, NF.inscricao,NF.uf, ;
		NF.tipo, NF.data,;
		NF.vlrfrete, NF.vlrseguro,NF.vlrdespes, NF.status,;
        NF.total_nota AS VlrNota,;
	    TP.cfo  AS SET_CFO,NF.aliq_icms,NF.TOTAL_NOTA,;
	  	NF.base_subs,NF.icms_subs,NF.base_icms,;
	  	(NF.Base_icms * NF.aliq_icms/100) AS VLR_ICMS,;
		NF.base_isent, NF.base_outr ;
   	FROM  &dbf_NFSTMP  NF,;
   	      &dbf_TIPTMP  TP;
    WHERE ;
              NF.status = 2 ;
   		  AND NF.operacao = "S";
          AND NF.icms_subs > 0 ;
   		  AND TP.KEY_TIPO = NF.KEY_TIPO ;
    ORDER BY NF.EMPRESA, NF.DATA, NF.NOTA, SET_CFO, NF.ALIQ_ICMS ;
    INTO TABLE \TMP\TMP2

    SELE TMP1
    APPEND FROM \TMP\TMP2
	*-------------------------------------------------------------------*
    *-----> UNIAO CANCELADAS E NAO CANCELADAS
	*-------------------------------------------------------------------*

    SELECT * FROM \TMP\TMP1 ;
     ORDER BY EMPRESA, DATA, NOTA, SET_CFO, ALIQ_ICMS ;
    	INTO CURSOR SLIVROSAI

	*---------------------------------------------------------------------*
	GO TOP
RETURN





*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4L70X0C00           ULLvrEnt53 VALID                   ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0310A,     Record Number:   54  ╨
*       ╨ Variable:            ULLvrEnt53                         ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      71                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _4l70x0c00     &&  ULLvrEnt53 VALID
#REGION 2
return

FUNCTION ULLvrEnt53

	*-------------------------------------------------------------------*
	*	NOTAS DE ENTRADA
	*-------------------------------------------------------------------*

	*-------------------------------------------------------------------*
	*	NOTAS DE ENTRADA
	*		where ch_produ <> "9" faz com que as notas de conhecimento
    *     de transp nao sejam selecionadas
	*-------------------------------------------------------------------*


	SELECT 	;
		NF.empresa   , NF.nota,    NF.serie,  ;
		NF.CGC, NF.FAVORECIDO,;
        NF.codforn   , NF.inscricao,NF.uf, ;
		NF.tipo,     NF.data,    NF.data_emi,;
		NF.vlrfrete, NF.vlrseguro,  NF.vlrdespes,;
        NF.total_nota  AS VlrNota,;
	    ULdefCfo(NF.empresa,NF.tipo,it.tp_mercad,"ENTRADA") AS SET_CFO,;
	  	NF.aliq_icms,NF.TOTAL_NOTA,NF.base_subs,NF.icms_subs,;
	  	IIF(NF.BASE_SUBS = 0,NF.base_icms,NF.base_icms*0) AS BASE_ICMS,;
	  	IIF(NF.BASE_SUBS = 0,NF.VLR_ICMS,NF.VLR_ICMS*0) AS VLR_ICMS,;
		NF.BASE_ISENT ,(NF.base_outr+NF.BASE_ISS)  AS BASE_OUTR ;
   	FROM  &dbf_NFETMP NF,;
   	      &dbf_TIPTMP TP,;
   	      &dbf_INETMP IT ;
    WHERE ;
            LEFT(NF.situacao,1) = "C" ;
		AND NF.ch_produ <> "9" ;
        AND NF.CH_OPERA <> "5" ;
   		AND NF.KEY_TIPO  = TP.KEY_TIPO ;
   	    AND TP.PROCESSO  $ "Ee" ;
   		AND IT.KEY_TIPO  = NF.KEY_TIPO ;
   		AND IT.EMPRESA   = NF.EMPRESA ;
   		AND IT.NOTA      = NF.NOTA ;
   		AND IT.SERIE     = NF.SERIE ;
   		AND IT.FAVORECIDO = NF.FAVORECIDO ;
    GROUP BY NF.EMPRESA, NF.DATA, NF.NOTA, SET_CFO, IT.ALIQ_ICMS ;
    INTO CURSOR TMPLIVR

    SELECT * FROM TMPLIVR NF;
      WHERE  NF.ICMS_SUBS > 0 ;
	    ORDER BY NF.EMPRESA, NF.DATA, NF.NOTA, NF.SET_CFO, NF.ALIQ_ICMS ;
	    INTO CURSOR SLIVROENT
*---------------------------------------------------------------------*
RETURN





*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4L70X0C08           ULOLDLvrInvt VALID                 ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0310A,     Record Number:   55  ╨
*       ╨ Variable:            ULOLDLvrInvt                       ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      72                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*

FUNCTION _4l70x0c08     &&  ULOLDLvrInvt VALID
#REGION 2
RETURN

*****************************************************************
*  INVENTARIO
*****************************************************************
FUNCTION ULOLDLvrInvt
PARAMETERS PrmEmp,PrmDtFim

	*-------------------------------------------------------------------*
	*-------------------------------------------------------------------*
	SELECT 	;
			PrmEmp AS EMPRESA,;
			PrmDtFim AS DATA,;			
			"0" AS IND_PROP,;
	        "00000000000" AS CPF,;
	        "00000000000000" AS CNPJ,;
	        "0" AS IND_INV,;
	        GR.COD_NCM,;
			GR.CODIGO AS COD_ITEM,;	
			gr.unidade as unid,;
			IIF(SL.SLD_ATU=0,SL.SLD_ATU*0,SL.VLR_ATU/SL.SLD_ATU);
			     AS VL_UNIT,;
			SL.SLD_ATU AS QTD,;
			SL.VLR_ATU AS VL_ITEM,;
			GR.CTA_CONTAB, ;
			GR.DESCRICAO ;
    FROM GRUPO GR,;
         SALDO SL;
    WHERE ;
        	gr.cdg_tipo = 4;
        AND (gr.tp_control = 1 or gr.tp_control = 4);
        AND STRTRAN(STR(PrmEmp,3),' ','0') $ gr.empresas ;
        AND SL.EMPRESA = PrmEmp ;
     	AND SL.CODIGO = GR.CODIGO ;
        AND YEAR(SL.DTABERT) = YEAR(PrmDtFim);
        AND MONTH(DTABERT) = MONTH(PrmDtFim) ;
    ORDER BY GR.CODIGO;
   	INTO TABLE  \TMP\INVNTRIO

*---------------------------------------------------------------------*
	GO TOP

	
RETURN





*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4L70X0C09           ULLvrICMS VALID                    ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0310A,     Record Number:   56  ╨
*       ╨ Variable:            ULLvrICMS                          ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      73                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*

FUNCTION _4l70x0c09     &&  ULLvrICMS VALID
#REGION 2
RETURN

*****************************************************************
*  ULLvrICMS
*****************************************************************
FUNCTION ULLvrICMS
PARAMETERS PrmEmp,PrmDtFim
	*-----------------------------------------------------------------*
	SELECT  *	;
    FROM ADGTICMS AP;
    WHERE ;
            AP.EMPRESA = PrmEmp ;
        AND ANO = YEAR(PrmDtFim);
        AND MES = MONTH(PrmDtFim) ;
   	INTO TABLE  \TMP\LIVROICM
	*------------------------------------------------------------------*
	GO TOP
RETURN






*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4L70X0C0A           ULLvrCopCpm VALID                  ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0310A,     Record Number:   57  ╨
*       ╨ Variable:            ULLvrCopCpm                        ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      74                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _4l70x0c0a     &&  ULLvrCopCpm VALID
#REGION 2
return

FUNCTION ULLvrCopCpm
    =UP_fecha("A1_TMP" ,.T.)
    =UP_fecha("A2_TMP" ,.T.)
    =UP_fecha("A3_TMP" ,.T.)
    =UP_fecha("TMP2" ,.T.)
	
	*-------------------------------------------------------------------*
	*	COPIAS DE CUPONS
	*-------------------------------------------------------------------*
	*  Os cupons titeram duas fasa em que os tratamentos foram diferenciados
	*
	* 1╕ Fase : Quando era uma operacao que emitiria CUPOM e NFS:
	*         a) Gerava-se um registro de NOTA MOD-01 a qual tinha o
	*            numero do cupom no referido campo CUPOM
	*         b) Essa nota servia de referencia para imprimir o
	*            CUPOM na ECF e o FORMULARIO na impressora
	*         c) Logo, a NOTA ja era a copia do cupom com o tipo nativo
	*            VLA,VLB... e nao o tipo "CPM"A
	*      ou seja:
	*        PRIMEIRO:  A copia do cupom e a nota em que :
	*		  		 NOTA  < 1000000
	*            AND CUPOM > 0
	*            AND TIPO <> "CPM"
	*        SEGUNDO:  O Cupom e o registro em que :
	*                NOTA < 1000000
	*			 AND CUPOM > 0
	*
	* 2╕ Fase : Quando era uma operacao que emitiria CUPOM e NFS:
	*         a) Gerava-se um registro de cupom (1000000< NOTA <2000000)
	*            numero do cupom no referido campo CUPOM
	*         b) Essa registro  servia de referencia para imprimir o
	*            CUPOM na ECF
	*		  c) Para a NOTA e entao gerado uma registro especifico
	*            de copia de cupom (TIPO = "CPM") que orienta a impressao
	*			 da NOTA (COPIA)
	*         c) Logo, a NOTA (copia) tem um registro e o cupom outro
	*      ou seja:
	*        PRIMEIRO:  O Cupom e o registro em que :
	*                1000000< NOTA < 1000000
	*			 AND CUPOM > 0
	*        SEGUNDO:  A copia do cupom e a nota em que :
	*		  		 NOTA  < 1000000
	*            AND CUPOM > 0
	*            AND TIPO = "CPM"
	*-------------------------------------------------------------------*



    SELECT ;
   		  N.CGC,;
		  N.empresa,N.nota,N.serie,;
          "1" AS IND_OPER,;
   		  "0" AS IND_EMIT,;
   		  "01" AS COD_MOD,;
		  IIF(N.STATUS=2,"02","00") AS COD_SIT,;
 		  N.cupom, N.favorecido,N.tp_pessoa,;
 		  IIF(N.tp_pessoa=1,STR(N.favorecido,11),STR(0,11)) AS CPF,;
		  IIF(N.tp_pessoa=2,STR(N.favorecido,14),STR(0,14)) AS CNPJ,;
          N.inscricao,;
		  N.UF,;
          N.UFOrig,N.MunOrig,;
          N.UFDstn,N.MunDstn,;
          IIF(N.tipo<>"ENT","CPM","ENT") AS TIPO,;
          N.data,N.vlrfrete,N.vlrseguro,;
          N.vlrdespes,N.status,;
          N.total_nota AS VlrNota;
   	FROM  &dbf_TIPTMP T, &dbf_NFSTMP N ;
    WHERE   ;
			(N.NOTA < 1000000 AND N.CUPOM > 0 AND N.TIPO <> "CPM") ;
    	  OR ;
    	    (N.tipo $ "CPM/ENT") ;	
    GROUP BY N.EMPRESA, N.DATA, N.NOTA ;
    INTO TABLE \TMP\A1_TMP

	*-------------------------------------------------------------------*
	* PARTE - 2 ==> JA UNIFICA COM PARTE - 1
	*-------------------------------------------------------------------*

   SELECT T.*,;
	  	  N.aliq_icms,;
	  	  N.aliq_ISS,;
          (LEFT(N.CFO,2)+"929") AS SET_CFO,;
   		  "0" AS CST,;
          "0000" AS CFPS,;
          "00" AS CST_ISS,;
          "53" AS CST_IPI,;
          "87" AS GENERO,;
		  "00" AS CLSCOMNC,;
		  "00" AS CLSGAS,;
		  "00" AS CLSAGUA,;
		  "00" AS CLSENRG,;
		  N.TOTSERVICO*0 AS TOTSERVICO,;
	  	  N.TOTPRODUTO*0 AS TOTPRODUTO,;
 		  N.base_ICMS*0 AS BASE_ICMS,;
 		  N.VLR_ICMS*0  AS VLR_ICMS,;
		  N.base_isent*0 AS BASE_ISENT,;
		  N.base_outr*0 AS BASE_OUTR,;
		  N.base_sbbrt*0 AS BASE_SBBRT,;
		  N.base_subs*0 AS BASE_SUBS0,;
		  N.icms_subs*0 AS ICMS_SUBS,;
		  N.base_ISS*0 AS BASE_ISS,;
		  N.vlr_iss*0  AS VLR_ISS,;
	  	  N.base_ipi*0 AS BASE_IPI,;
	  	  N.vlr_ipi*0 AS VLR_IPI,;
	 	  N.base_isipi*0 AS BASE_ISIPI,;
	 	  0.00 AS VL_OUT_IPI,;
	  	  0.00 AS VLR_ITEM,;
	  	  N.TOTAL_NOTA*0 AS TOTAL_NOTA;
   	FROM  \TMP\A1_TMP T,  &dbf_NFSTMP N ;
    WHERE  T.EMPRESA=N.EMPRESA AND T.NOTA=N.NOTA ;
   		  AND T.SERIE=N.SERIE ;
    GROUP BY T.EMPRESA,T.DATA,T.NOTA,SET_CFO;
    INTO TABLE \TMP\A3_TMP

    =UP_fecha("A2_TMP" ,.T.)


	*-------------------------------------------------------------------*
    *-----> UNIAO CANCELADAS E NAO CANCELADAS
	*-------------------------------------------------------------------*
    =UP_fecha("TMP2" ,.T.)


    SELECT * FROM \TMP\A3_TMP ;
     ORDER BY EMPRESA, DATA, NOTA, SET_CFO, ALIQ_ICMS ;
    	INTO TABLE  \TMP\LIVROCOP
*---------------------------------------------------------------------*
	GO TOP
    =UP_fecha("A3_TMP" ,.T.)

	
RETURN



*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4L70X0C0B           UL1cfoReducaoZ VALID               ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0310A,     Record Number:   58  ╨
*       ╨ Variable:            UL1cfoReducaoZ                     ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      75                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*

FUNCTION _4l70x0c0b     &&  UL1cfoReducaoZ VALID
#REGION 2
RETURN

*****************************************************************
FUNCTION UL1cfoReducaoZ
PARAMETERS PrmEmp,PrmDtIni,PrmDtFin


	*-------------------------------------------------------------------*

	=ULLvrAnlCpm()
	*-------------------------------------------------------------------*


	*-------------------------------------------------------------------*
	*  INICIO - DEFININDO CFOP PREPONDERANTE
	*-------------------------------------------------------------------*

	SELECT  ;
	     CP.CGC,CP.EMPRESA,CP.DATA,CP.ALIQ_ICMS,CP.SET_CFO,;
		 COUNT(1) AS QTDE ;
	FROM \TMP\LIVROCPA CP;
	WHERE SUBS(CP.SET_CFO,2,4) <> ".933" ;
	GROUP BY  CP.CGC,CP.EMPRESA,CP.DATA,CP.ALIQ_ICMS,CP.SET_CFO ;
	INTO CURSOR QTDECFOPs




	SELECT  ;
	     CTR.CGC,CTR.EMPRESA,CTR.DATA,CTR.ALIQ_ICMS,;
		 MAX(QTDE) AS MAIS;
	FROM QTDECFOPs CTR;
	GROUP BY  CTR.CGC,CTR.EMPRESA,CTR.DATA,CTR.ALIQ_ICMS ;
	INTO CURSOR MAXQTDE


	SELECT  ;
	     CT.CGC,CT.EMPRESA,CT.DATA,CT.ALIQ_ICMS,CT.SET_CFO;
	FROM QTDECFOPs CT,;
		 MAXQTDE  MX ;
	WHERE ;
 		    MX.CGC 	     = CT.CGC ;
	 	AND MX.EMPRESA   = CT.EMPRESA ;
 		AND MX.DATA      = CT.DATA ;
	 	AND MX.ALIQ_ICMS = CT.ALIQ_ICMS ;
		AND MX.MAIS = CT.QTDE ;
	GROUP BY  CT.CGC,CT.EMPRESA,CT.DATA,CT.ALIQ_ICMS,CT.SET_CFO ;
	INTO CURSOR CFOPs
	


	SELECT  ;
	     CT.CGC,CT.EMPRESA,CT.DATA,CT.ALIQ_ICMS,;
	       MAX(CT.SET_CFO) AS SET_CFO;
	FROM CFOPs CT;
	GROUP BY  CT.CGC,CT.EMPRESA,CT.DATA,CT.ALIQ_ICMS ;
	INTO CURSOR DEFCFOPs



	*-------------------------------------------------------------------*
	*  FINAL - DEFININDO CFOP PREPONDERANTE
	*-------------------------------------------------------------------*




	SELECT ;
	   STR(EMP.CGC,14) 			AS UNEM_CNPJ,;
	   "0"                 	AS IND_MR,;
	   LEFT(EMP.ecf_serie+SPACE(15),15)	AS ECF_FAB,;
	   "2D"                 	AS COD_MOD,;
	   STR(MP.ECF,4)   			AS ECF_CX,;
	   STR(MP.ALIQUOTA,5,2)		AS ALIQUOTA,;
	   DEF.SET_CFO,;	
	   STR(MP.CTRREINICI,6)		AS CRO,;
	   STR(MP.CTRREDUCAO,6) 	AS CRZ,;
	   CHRTRAN(DTOC(MP.DATA),"/","") AS DT_DOC,;
	   STR(MP.CTO_INICIO,6) 	AS NUM_DOC_INI,;
	   STR(MP.CTO_FIM,6)		AS NUM_DOC_FIN,;
	   STR(MP.GT_INICIAL,12,2) 	AS GT_INI,;
	   STR(MP.GT_FINAL,12,2)   	AS GT_FIN,;
	   STR(MP.VLRCONTAB,12,2)	AS VL_BRT,;
	   STR(MP.CANC_ISSQN,12,2)	AS VLCANISSQN,;
	   STR(MP.CANC_ICMS,12,2)	AS VLCANICMS,;
	   STR(MP.CANCELA,12,2)		AS VLCAN,;
	   STR(MP.DESC_ISSQN,12,2)	AS VLDSCISSQN,;
	   STR(MP.DESC_ICMS,12,2)	AS VLDSCICMS,;
	   STR(MP.DESCONTO,12,2)	AS VLDSC,;
	   STR(MP.ACMO_ISSQN,12,2)	AS VLACMISSQN,;
	   STR(MP.ACMO_ICMS,12,2)	AS VLACMICMS,;
	   STR(MP.ACRESCIMO,12,2)	AS VLACM,;
	   STR(MP.VLRSERVICO,12,2)	AS VL_ISSQN,;
	   STR((MP.VLRCONTAB-MP.VLRSERVICO),12,2) AS VL_LIQ,;
	   STR((MP.BASE_ALIQ),12,2)	AS VL_BC_ICMS,;
	   STR((MP.BASE_ALIQ*MP.ALIQUOTA/100),12,2)  AS VL_ICMS,;
	   STR(MP.VLRISENT,12,2)			AS VL_ISEN,;
	   STR(MP.VLROUTRO,12,2)			AS VL_NT,;
	   STR(MP.VLRSUBST,12,2)			AS VL_ST,;
	   "0"	AS COD_INF_OBS;
	  FROM 	EMPRESA  EMP, ;
			DEFCFOPs DEF,;
	       	MAPAECF  MP ;
	  WHERE EMP.EMPRESA = PrmEmp ;
	  	AND MP.EMPRESA = PrmEmp ;
	  	AND MP.DATA >= PrmDtIni ;
	  	AND MP.DATA <= PrmDtFin ;
	 	AND MP.EMPRESA = DEF.EMPRESA ;
 		AND MP.DATA = DEF.DATA ;
	 	AND MP.ALIQUOTA = DEF.ALIQ_ICMS ;
	  GROUP BY UNEM_CNPJ,;
  			COD_MOD,;
  			DT_DOC,;
  			ECF_CX,;
  			ALIQUOTA;
	  ORDER  BY UNEM_CNPJ,;
  			COD_MOD,;
  			DT_DOC,;
  			ECF_CX,;
  			ALIQUOTA;
	  INTO TABLE  \TMP\LVReducao

	*-------------------------------------------------------------------*

RETURN


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4L70X0C0C           ULMapaResumoECF VALID              ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0310A,     Record Number:   59  ╨
*       ╨ Variable:            ULMapaResumoECF                    ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      76                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*


FUNCTION _4l70x0c0c     &&  ULMapaResumoECF VALID
#REGION 2
RETURN

*****************************************************************
FUNCTION ULMapaResumoECF
PARAMETERS PrmEmp,PrmDtIni,PrmDtFin


    SET STEP ON

	=ULLvrAnlCpm()

	=ULcfoPreponderante()


   * "0"                 		AS IND_MR,;
   *   LEFT(EMP.ecf_serie+SPACE(15),15)	AS ECF_FAB,;


	SELECT ;
	   STR(EMP.CGC,14) 			AS UNEM_CNPJ,;
	   "1"                 		AS IND_MR,;
	   LEFT(EMP.ecf_serie+SPACE(20),20)	AS ECF_FAB,;
	   "2D"                 	AS COD_MOD,;
	   EMP.TIPO_ECF             AS ECF_MOD,;
       STR(MP.ECF,4)   			AS ECF_CX,;
	   STR(MP.CTRREINICI,6)		AS CRO,;
	   STR(MP.CTRREDUCAO,6) 	AS CRZ,;
	   STR(MP.CTO_INICIO,6) 	AS NUM_DOC_INI,;
	   STR(MP.CTO_FIM,6)		AS NUM_DOC_FIN,;
	   STR(MP.GT_INICIAL,12,2) 	AS GT_INI,;
	   STR(MP.GT_FINAL,12,2)   	AS GT_FIN,;
	   MP.DATA AS DT_DOC;
	  FROM 	EMPRESA  EMP, ;
	       	MAPAECF  MP ;
	  WHERE EMP.EMPRESA = PrmEmp ;
	  	AND MP.EMPRESA = PrmEmp ;
	  	AND MP.DATA >= PrmDtIni ;
	  	AND MP.DATA <= PrmDtFin ;
	  GROUP BY UNEM_CNPJ,;
  			DT_DOC,;
  			ECF_CX;
	  ORDER  BY UNEM_CNPJ,;
  			DT_DOC,;
  			ECF_CX;
	  INTO CURSOR  TMPReducao







	*-------------------------------------------------------------------*
	* VALORES RELACIONADOS AOS CANCELAMENTOS
	*-------------------------------------------------------------------*

	SELECT  ;
    	 CP.CGC,CP.EMPRESA,CP.DATA,CP.SET_CFO ,CP.ALIQ_ICMS,;
		 SUM(CP.TOTAL_NOTA) AS VL_BRT,;
    	 SUM(vlr_iss) 		AS VLCANISSQN,;
	     SUM(vlr_icms) 		AS VLCANICMS,;
		 SUM(CP.TOTAL_NOTA) AS VL_CAN,;
    	 SUM(0.00)			AS VLDSCISSQN,;
	   	 SUM(0.00)		   	AS VLDSCICMS,;
    	 SUM(0.00)			AS VLDSC,;
	     SUM(0.00)		   	AS VLACMISSQN,;
		 SUM(0.00)		   	AS VLACMICMS,;
		 SUM(0.00)		   	AS VLACM,;
    	 SUM(0.00)			AS VL_ISSQN,;
	     SUM(0.00)			AS VL_CONT,;
   		 SUM(0.00)			AS VL_BC_ICMS,;
	   	 SUM(0.00)  		AS VL_ICMS,;
   		 SUM(0.00)	 		AS VL_ISEN,;
		 SUM(0.00)			AS VL_LIQ,;
		 SUM(0.00)			AS VL_NT,;
	   	 SUM(0.00)			AS VL_ST;
	FROM \TMP\LIVROCPA CP;
	WHERE CP.COD_SIT = "02";
	GROUP BY  CP.CGC,CP.EMPRESA,CP.DATA,CP.SET_CFO,CP.ALIQ_ICMS ;
	INTO CURSOR CPsCANC


**		 SUM(CP.TOTAL_NOTA-CP.BASE_ISS)	AS VL_LIQ,;

	SELECT  ;
	     CP.CGC,CP.EMPRESA,CP.DATA,CP.SET_CFO ,CP.ALIQ_ICMS,;
		 SUM(CP.TOTAL_NOTA) AS VL_BRT,;
	     SUM(0.00) 		AS VLCANISSQN,;
    	 SUM(0.00) 		AS VLCANICMS,;
		 SUM(0.00) 		AS VL_CAN,;
    	 SUM(0.00)		AS VLDSCISSQN,;
	   	 SUM(0.00)	   	AS VLDSCICMS,;
	     SUM(0.00)		AS VLDSC,;
    	 SUM(0.00)	   	AS VLACMISSQN,;
		 SUM(0.00)	   	AS VLACMICMS,;
		 SUM(0.00)	   	AS VLACM,;
	     SUM(CP.BASE_ISS)	AS VL_ISSQN,;
    	 SUM(CP.TOTAL_NOTA)	AS VL_CONT,;
	   	 SUM(CP.BASE_ICMS)	AS VL_BC_ICMS,;
   		 SUM(CP.VLR_ICMS) 	AS VL_ICMS,;
	   	 SUM(CP.BASE_ISENT)	AS VL_ISEN,;
		 SUM(CP.TOTAL_NOTA)	AS VL_LIQ,;
		 SUM(CP.BASE_OUTR)	AS VL_NT,;
   		 SUM(CP.BASE_SBBRT)	AS VL_ST;
	FROM \TMP\LIVROCPA CP ;
	WHERE CP.COD_SIT = "00";
	GROUP BY  CP.CGC,CP.EMPRESA,CP.DATA,CP.SET_CFO,CP.ALIQ_ICMS ;
	INTO CURSOR CPsATIVOS

	SELECT * FROM CPsCANC ;
		UNION ;
	SELECT * FROM CPsATIVOS ;
		INTO CURSOR CPsTODOS


	SELECT ;
   		CP.CGC,;
	   	"1"     AS NUM_MR,;
   		" "     AS NUM_LCTO,;
	   	CP.EMPRESA,;
   		CP.DATA,;
		CP.SET_CFO,;
   		CP.ALIQ_ICMS,;
		SUM(VL_BRT)  AS VL_BRT,;
    	SUM(VLCANISSQN)	AS VLCANISSQN,;
    	SUM(VLCANICMS)	AS VLCANICMS,;
		SUM(VL_CAN) 	AS VL_CAN,;
    	SUM(VLDSCISSQN)	AS VLDSCISSQN,;
		SUM(VLDSCICMS) 	AS VLDSCICMS,;
    	SUM(VLDSC)		AS VLDSC,;
    	SUM(VLACMISSQN)	AS VLACMISSQN,;
		SUM(VLACMICMS)	AS VLACMICMS,;
		SUM(VLACM)	   	AS VLACM,;
		SUM(CP.VL_ISSQN) AS VL_ISSQN,;
    	SUM(CP.VL_CONT)	AS VL_CONT,;
  		SUM(CP.VL_BC_ICMS) AS VL_BC_ICMS,;
   		SUM(CP.VL_ICMS) AS VL_ICMS,;
   		SUM(CP.VL_ISEN)	AS VL_ISEN,;
		SUM(CP.VL_LIQ)	AS VL_LIQ,;
		SUM(CP.VL_NT)	AS VL_NT,;
   		SUM(CP.VL_ST)	AS VL_ST,;
    	"0"			AS COD_INF_OBS;
	FROM CPsTODOS CP, ;
 	 	EMPRESA EMP ;
  	WHERE EMP.EMPRESA = CP.EMPRESA ;
	GROUP BY  CP.CGC,CP.EMPRESA,CP.DATA,CP.SET_CFO,CP.ALIQ_ICMS ;
		INTO CURSOR CPsTODOS


	SELECT CP.*, ;
		MP.UNEM_CNPJ,;
	   	MP.IND_MR,;
	   	MP.ECF_FAB,;
	   	MP.COD_MOD,;
	    MP.ECF_MOD,;
	   	MP.ECF_CX,;
	   	MP.CRO,;
	   	MP.CRZ,;
	   	MP.NUM_DOC_INI,;
	   	MP.NUM_DOC_FIN,;
	   	MP.GT_INI,;
	   	MP.GT_FIN;
	FROM TMPReducao MP, CPsTODOS CP;
	WHERE MP.DT_DOC = CP.DATA ;
		INTO CURSOR ANXO_1
	


	SELECT  CP.*,;
	        CFO.SET_CFO AS CFO_PREP;
	FROM ANXO_1 CP, DEFCFOPs CFO ;
	WHERE CP.DATA = CFO.DATA ;
	INTO TABLE  \TMP\LVMapaECF

	*-------------------------------------------------------------------*

RETURN




*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4L70X0C18           AULLvrCpm VALID                    ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0310A,     Record Number:   60  ╨
*       ╨ Variable:            AULLvrCpm                          ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      77                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*

FUNCTION _4l70x0c18     &&  AULLvrCpm VALID
#REGION 2
RETURN

*****************************************************************
*  REGISTRO CUPONS  - 60 -
*****************************************************************
FUNCTION AULLvrCpm

	*-------------------------------------------------------------------*
	* PROCESSO SOBRE RESUMO DO MAPAECF
	*-------------------------------------------------------------------*

	*-------------------------------------------------------------------*

	*----------------------------------------------------------*
	*  TEMPORARIO PARA AGREGAR CUPONS NORMAIS
	*----------------------------------------------------------*
	LSarqtmp 	= "" 			&& EX: \TMP\TMP0001
	LSaliastmp 	= "STG" 		&&     TMP001
	LSaliastmp = UPopentmp(wp_dirtmp,LSarqtmp,LSaliastmp,1)
	IF EMPTY(LSaliastmp)
		DO OBJ_ALER.SPR  WITH ;
			"FALHA !!! Nфo Foi Possivel Definir Arquivo Temporario"
		RETURN
	ENDIF
	dbf_CPMTMP  = wp_dirtmp+LSaliastmp+".DBF"
	als_CPMTMP  = LSaliastmp
	*----------------------------------------------------------*
	*  TEMPORARIO PARA AGREGAR CUPONS CANCELADOS
	*----------------------------------------------------------*
	LSarqtmp 	= "" 			&& EX: C:\TMP\TMP0001
	LSaliastmp 	= "CAN" 		&&     TMP001
	LSaliastmp = UPopentmp(wp_dirtmp,LSarqtmp,LSaliastmp,1)
	IF EMPTY(LSaliastmp)
		DO OBJ_ALER.SPR  WITH ;
			"FALHA !!! Nфo Foi Possivel Definir Arquivo Temporario"
		RETURN
	ENDIF
	dbf_CANTMP  = wp_dirtmp+LSaliastmp+".DBF"
	als_CANTMP  = LSaliastmp
	*----------------------------------------------------------*
	*-------------------------------------------------------------------*
	* PROCESSO APURANDO CUPONS EMITIDOS E NAO CANCELADOS MAPAECF
	*-------------------------------------------------------------------*
 	SELECT  "5.00" AS CFO ,;
			DATA, ;
			ALIQ_ICMS, ;
			"XX"			 	AS UF, ;
		 	SUM(TOTAL_NOTA)  	AS TOTAL_NOTA,;
		 	SUM(BASE_ICMS)   	AS BASE_ICMS,;
			SUM(BASE_ISENT)  	AS BASE_ISENT,;
			SUM(BASE_OUTR)   	AS BASE_OUTR,;
			SUM(BASE_ISS)    	AS BASE_ISS,;
			SUM(BASE_SUBS)   	AS BASE_SUBS,;
			0*SUM(BASE_SUBS)      AS CANCELA,;
			SUM(BASE_ICMS+BASE_ISENT+BASE_OUTR+BASE_ISS+BASE_SUBS) ;
			              AS VNDABRUTA;
 	FROM &dbf_NFSTMP ;
		WHERE   status = 1 ;
			AND  operacao  = "S" ;
		   	AND  cupom > 0 ;
	GROUP BY DATA,ALIQ_ICMS;
   	INTO TABLE &dbf_CPMTMP

	*-------------------------------------------------------------------*
	* PROCESSO APURANDO CUPONS  CANCELADOS
	*-------------------------------------------------------------------*
 	SELECT  "5.00" AS CFO ,  ;
			DATA, ;
			ALIQ_ICMS, ;
			"XX"			 AS UF, ;
		 	0    AS TOTAL_NOTA,;
		 	0	 AS BASE_ICMS,;
			0	 AS BASE_ISENT,;
			0	 AS BASE_OUTR,;
			0	 AS BASE_ISS,;
			0	 AS BASE_SUBS,;
		 	SUM(TOTAL_NOTA)  AS CANCELA,;
			SUM(TOTAL_NOTA)  AS VNDABRUTA;
	FROM &dbf_NFSTMP ;
		WHERE   status = 2 ;
		    AND  operacao  = "S" ;
		    AND  cupom > 0 ;
	GROUP BY DATA,ALIQ_ICMS;
   	INTO TABLE &dbf_CANTMP

	*-------------------------------------------------------------------*
	* PROCESSO FUSAO CUPONS NORMAIS E CANCELADOS
	*-------------------------------------------------------------------*

   	SELECT  &als_CPMTMP
	append from   &dbf_CANTMP

	*-------------------------------------------------------------------*
	* PROCESSO AGRUPAMENTO DE CUPONS NORMAIS E CANCELADOS
	*-------------------------------------------------------------------*

 	SELECT  "5.00" AS CFO ,  ;
			DATA, ;
			ALIQ_ICMS, ;
			"XX"			 	AS UF, ;
		 	SUM(TOTAL_NOTA)  	AS TOTAL_NOTA,;
		 	SUM(BASE_ICMS)   	AS BASE_ICMS,;
			SUM(BASE_ISENT)  	AS BASE_ISENT,;
			SUM(BASE_OUTR)   	AS BASE_OUTR,;
			SUM(BASE_ISS)    	AS BASE_ISS,;
			SUM(BASE_SUBS)   	AS BASE_SUBS,;
			SUM(CANCELA)        AS CANCELA,;
			SUM(VNDABRUTA)      AS VNDABRUTA;
	FROM &dbf_CPMTMP ;
	GROUP BY DATA,ALIQ_ICMS;
   	INTO CURSOR LIVROCPM

RETURN


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4L70X0C1H           ULLvrCpm VALID                     ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0310A,     Record Number:   61  ╨
*       ╨ Variable:            ULLvrCpm                           ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      78                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*

FUNCTION _4l70x0c1h     &&  ULLvrCpm VALID
#REGION 2
RETURN

*****************************************************************
*  REGISTRO CUPONS  - 60 -
*****************************************************************
FUNCTION ULLvrCpm

	*-------------------------------------------------------------------*
	* PROCESSO SOBRE RESUMO DO MAPAECF
	*-------------------------------------------------------------------*

	*-------------------------------------------------------------------*

	*----------------------------------------------------------*
	*  TEMPORARIO PARA AGREGAR CUPONS NORMAIS
	*----------------------------------------------------------*
	LSarqtmp 	= "" 			&& EX: \TMP\TMP0001
	LSaliastmp 	= "STG" 		&&     TMP001
	LSarqtmp = UPopentmp(wp_dirtmp,LSarqtmp,LSaliastmp,1)
	IF EMPTY(LSaliastmp)
		DO OBJ_ALER.SPR  WITH ;
			"FALHA !!! Nфo Foi Possivel Definir Arquivo Temporario"
		RETURN
	ENDIF
	dbf_CPMTMP  = wp_dirtmp+LSaliastmp+".DBF"
	als_CPMTMP  = LSaliastmp
	*----------------------------------------------------------*
	*  TEMPORARIO PARA AGREGAR CUPONS CANCELADOS
	*----------------------------------------------------------*
	LSarqtmp 	= "" 			&& EX: C:\TMP\TMP0001
	LSaliastmp 	= "CAN" 		&&     TMP001
	LSarqtmp = UPopentmp(wp_dirtmp,LSarqtmp,LSaliastmp,1)
	IF EMPTY(LSaliastmp)
		DO OBJ_ALER.SPR  WITH ;
			"FALHA !!! Nфo Foi Possivel Definir Arquivo Temporario"
		RETURN
	ENDIF
	dbf_CANTMP  = wp_dirtmp+LSaliastmp+".DBF"
	als_CANTMP  = LSaliastmp
	*----------------------------------------------------------*
	*-------------------------------------------------------------------*
	* PROCESSO APURANDO CUPONS EMITIDOS E NAO CANCELADOS MAPAECF
	*-------------------------------------------------------------------*
 	SELECT  ALLTRIM(CFO) AS CFO ,;
			DATA, ;
			ALIQ_ICMS, ;
			"XX"			 	AS UF, ;
		 	SUM(TOTAL_NOTA)  	AS TOTAL_NOTA,;
		 	SUM(BASE_ICMS)   	AS BASE_ICMS,;
			SUM(BASE_ISENT)  	AS BASE_ISENT,;
			SUM(BASE_OUTR)   	AS BASE_OUTR,;
			SUM(BASE_ISS)    	AS BASE_ISS,;
			SUM(BASE_SUBS)   	AS BASE_SUBS,;
			0*SUM(BASE_SUBS)      AS CANCELA,;
			SUM(BASE_ICMS+BASE_ISENT+BASE_OUTR+BASE_ISS+BASE_SUBS) ;
			              AS VNDABRUTA;
 	FROM &dbf_NFSTMP ;
		WHERE   status = 1 ;
			AND  operacao  = "S" ;
		   	AND  cupom > 0 ;
	GROUP BY DATA,ALIQ_ICMS;
   	INTO TABLE &dbf_CPMTMP

	*-------------------------------------------------------------------*
	* PROCESSO APURANDO CUPONS  CANCELADOS
	*-------------------------------------------------------------------*
 	SELECT  ALLTRIM(CFO) AS CFO ,;
			DATA, ;
			ALIQ_ICMS, ;
			"XX"			 AS UF, ;
		 	0    AS TOTAL_NOTA,;
		 	0	 AS BASE_ICMS,;
			0	 AS BASE_ISENT,;
			0	 AS BASE_OUTR,;
			0	 AS BASE_ISS,;
			0	 AS BASE_SUBS,;
		 	SUM(TOTAL_NOTA)  AS CANCELA,;
			SUM(TOTAL_NOTA)  AS VNDABRUTA;
	FROM &dbf_NFSTMP ;
		WHERE   status = 2 ;
		    AND  operacao  = "S" ;
		    AND  cupom > 0 ;
	GROUP BY DATA,ALIQ_ICMS;
   	INTO TABLE &dbf_CANTMP

	*-------------------------------------------------------------------*
	* PROCESSO FUSAO CUPONS NORMAIS E CANCELADOS
	*-------------------------------------------------------------------*

   	SELECT  &als_CPMTMP
	append from   &dbf_CANTMP

	*-------------------------------------------------------------------*
	* PROCESSO AGRUPAMENTO DE CUPONS NORMAIS E CANCELADOS
	*-------------------------------------------------------------------*

 	SELECT  ALLTRIM(CFO) AS CFO ,;
			DATA, ;
			ALIQ_ICMS, ;
			"XX"			 	AS UF, ;
		 	SUM(TOTAL_NOTA)  	AS TOTAL_NOTA,;
		 	SUM(BASE_ICMS)   	AS BASE_ICMS,;
			SUM(BASE_ISENT)  	AS BASE_ISENT,;
			SUM(BASE_OUTR)   	AS BASE_OUTR,;
			SUM(BASE_ISS)    	AS BASE_ISS,;
			SUM(BASE_SUBS)   	AS BASE_SUBS,;
			SUM(CANCELA)        AS CANCELA,;
			SUM(VNDABRUTA)      AS VNDABRUTA;
	FROM &dbf_CPMTMP ;
	GROUP BY DATA,ALIQ_ICMS;
   	INTO CURSOR LIVROCPM

**	GROUP BY DATA,CFO,ALIQ_ICMS;

RETURN


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4L70X0C1P           ULLvrAnlCpm VALID                  ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0310A,     Record Number:   62  ╨
*       ╨ Variable:            ULLvrAnlCpm                        ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      79                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*

FUNCTION _4l70x0c1p     &&  ULLvrAnlCpm VALID
#REGION 2
return

FUNCTION ULLvrAnlCpm
    =UP_fecha("A1_TMP" ,.T.)
    =UP_fecha("A2_TMP" ,.T.)
    =UP_fecha("A3_TMP" ,.T.)
    =UP_fecha("TMP2" ,.T.)
	
	*-------------------------------------------------------------------*
	*	CUPONS
	*-------------------------------------------------------------------*
	*  			Os cupons titeram duas fases em que os tratamentos foram
	*	 diferenciados
	*
	* 1╕ Fase : Quando era uma operacao que emitiria CUPOM e NFS:
	*         a) Gerava-se um registro de NOTA MOD-01 a qual tinha o
	*            numero do cupom no referido campo CUPOM
	*         b) Essa nota servia de referencia para imprimir o
	*            CUPOM na ECF e o FORMULARIO na impressora
	*         c) Logo, a NOTA ja era a copia do cupom com o tipo nativo
	*            VLA,VLB... e nao o tipo "CPM"A
	*      ou seja:
	*        PRIMEIRO:  A copia do cupom e a nota em que :
	*		  		 NOTA  < 1000000
	*            AND CUPOM > 0
	*            AND TIPO <> "CPM"
	*        SEGUNDO:  O Cupom e o registro em que :
	*                NOTA < 1000000
	*			 AND CUPOM > 0
	*
	* 2╕ Fase : Quando era uma operacao que emitiria CUPOM e NFS:
	*         a) Gerava-se um registro de cupom (1000000< NOTA <2000000)
	*            numero do cupom no referido campo CUPOM
	*         b) Essa registro  servia de referencia para imprimir o
	*            CUPOM na ECF
	*		  c) Para a NOTA e entao gerado uma registro especifico
	*            de copia de cupom (TIPO = "CPM") que orienta a impressao
	*			 da NOTA (COPIA)
	*         c) Logo, a NOTA (copia) tem um registro e o cupom outro
	*      ou seja:
	*        PRIMEIRO:  O Cupom e o registro em que :
	*                1000000< NOTA < 1000000
	*			 AND CUPOM > 0
	*        SEGUNDO:  A copia do cupom e a nota em que :
	*		  		 NOTA  < 1000000
	*            AND CUPOM > 0
	*            AND TIPO = "CPM"
	*-------------------------------------------------------------------*

    SELECT ;
   		  N.CGC,;
		  N.empresa,N.nota,N.serie,;
          "1" AS IND_OPER,;
   		  "0" AS IND_EMIT,;
   		  "2D" AS COD_MOD,;
   		  "00" AS COD_SIT,;
 		  N.cupom, N.favorecido,N.tp_pessoa,;
 		  IIF(N.tp_pessoa=1,STR(N.favorecido,11),STR(0,11)) AS CPF,;
		  IIF(N.tp_pessoa=2,STR(N.favorecido,14),STR(0,14)) AS CNPJ,;
          N.inscricao,;
		  N.UF,;
          N.UFOrig,N.MunOrig,;
          N.UFDstn,N.MunDstn,;
          N.tipo, N.data,N.vlrfrete,N.vlrseguro,;
          N.vlrdespes,N.status,;
          N.total_nota AS VlrNota;
   	FROM  &dbf_TIPTMP T, &dbf_NFSTMP N ;
    WHERE     N.status = 1 ;
          AND N.operacao = "S" ;
   		  AND (;
   		        (N.NOTA < 1000000 AND N.CUPOM > 0 AND N.TIPO <> "CPM") ;
   		  		or;
   		  	    (N.NOTA >= 1000000 AND N.NOTA <= 2000000 AND N.CUPOM > 0) ;
			  );
   		  AND T.KEY_TIPO = N.KEY_TIPO ;
   	      AND T.PROCESSO $ "Ss" ;
    GROUP BY N.EMPRESA, N.DATA, N.NOTA ;
    INTO TABLE \TMP\A1_TMP


	*-------------------------------------------------------------------*
	* PARTE - 2 ==> JA UNIFICA COM PARTE - 1
	*-------------------------------------------------------------------*


	SELECT N.*, ;
   		  I.ORDEM,;
          ULdefCfo(I.empresa,I.tipo,i.tp_mercad,"SAIDA") AS SET_CFO,;
	  	  I.aliq_icms,;
		  I.aliq_iss,;
   		  CHRTRAN( STR(i.origem,1)+i.cst," ","0") AS CST,;
          ULCST_ISS(i.vlr_iss,"SAIDA") AS CST_ISS,;
          ULCST_IPI(i.vlripi,"SAIDA") AS CST_IPI,;
          ULGenero(i.tp_mercad,i.classifica,"SAIDA") AS GENERO,;
          ULCFPS(N.UFOrig,N.MunOrig,;
             N.UFDstn,N.MunDstn,I.tp_mercad,"SAIDA") AS CFPS,;
		  "000" AS CLSCOMNC,;
		  "00" AS CLSGAS,;
		  "00" AS CLSAGUA,;
		  "00" AS CLSENRG;
   	FROM  \TMP\A1_TMP N, &dbf_ITMTMP I;
    WHERE N.NOTA = I.NOTA ;
    GROUP BY N.EMPRESA, N.DATA, N.NOTA,I.ORDEM ;
    INTO TABLE \TMP\A2_TMP

   SELECT N.*,;
		  SUM(I.base_ISS) AS TOTSERVICO,;
	  	  SUM(I.vlrvenda) AS TOTPRODUTO,;
 		  SUM(I.base_calc) AS BASE_ICMS,;
 		  SUM(I.Base_calc * I.aliq_icms/100) AS VLR_ICMS,;
		  SUM(I.base_isent) AS BASE_ISENT,SUM(I.base_outr) AS BASE_OUTR,;
		  SUM(I.base_sbbrt) AS BASE_SBBRT,;
		  SUM(I.base_subs) AS BASE_SUBS,SUM(I.icms_subs) AS ICMS_SUBS,;
		  SUM(I.base_ISS) AS BASE_ISS,SUM(I.vlr_iss) AS VLR_ISS,;
	  	  SUM(I.base_ipi) AS BASE_IPI,SUM(I.vlripi) AS VLR_IPI,;
	 	  SUM(I.base_isipi) AS BASE_ISIPI,0.00 AS VL_OUT_IPI,;
	  	  SUM(I.vlrvenda) AS VLR_ITEM,;
	  	  SUM(I.vlrvenda+I.icms_subs+I.vlripi) AS TOTAL_NOTA;
   	FROM  \TMP\A2_TMP N, &dbf_ITMTMP I;
    WHERE N.NOTA = I.NOTA AND N.ORDEM = I.ORDEM ;
    GROUP BY N.EMPRESA,N.DATA,N.NOTA,N.SET_CFO,N.ALIQ_ICMS ;
    INTO TABLE \TMP\A3_TMP

    =UP_fecha("A2_TMP" ,.T.)


	*-------------------------------------------------------------------*
    *-----> CANCELADAS
	*-------------------------------------------------------------------*


SELECT ;
	N.CGC,N.empresa,N.nota,N.serie,;
	"1"	AS IND_OPER,;
	"0"	AS IND_EMIT,;
	"2D" AS COD_MOD,;
	"02" AS COD_SIT,;
	N.cupom,;
	N.favorecido,;
	N.tp_pessoa,;
	IIF(N.tp_pessoa=1,STR(N.favorecido,11),;
	STR(0,11)) AS CPF,;
	IIF(N.tp_pessoa=2,STR(N.favorecido,14),STR(0,14)) AS CNPJ,;
	N.inscricao,N.UFOrig,N.MunOrig,;
	N.uf,N.UF AS UFDstn,N.cidade AS MunDstn,;
	N.tipo,N.data,;
	N.vlrfrete,N.vlrseguro,N.vlrdespes,;
	N.status,N.total_nota AS VlrNota,;
	N.aliq_icms,N.ALIQ_ISS,;
	N.cfo AS SET_CFO,"00" AS CST,"0000" AS CFPS,;
	"00" AS CST_ISS,"00" AS CST_IPI,"00" AS GENERO,"000" AS CLSCOMNC,;
	"00" AS CLSGAS,"00" AS CLSAGUA,"00" AS CLSENRG,;
	N.base_icms,(N.Base_icms * N.aliq_icms/100) AS VLR_ICMS,;
	N.TOTSERVICO,N.TOTPRODUTO,;
	N.base_isent,N.base_outr,N.base_sbbrt,N.base_subs,N.icms_subs,;
	N.base_iss,N.vlr_iss,N.base_ipi,N.VLR_IPI,;
	N.base_isipi,0.00 AS VL_OUT_IPI,0.00 AS VLR_ITEM,N.TOTAL_NOTA;
FROM &dbf_NFSTMP N;
WHERE    N.status=2 AND N.operacao="S" AND N.NOTA >= 1000000;
	 AND N.NOTA <= 2000000 AND N.CUPOM > 0;
INTO TABLE \TMP\TMP2


    SELE A3_TMP
    APPEND FROM \TMP\TMP2
	*-------------------------------------------------------------------*
    *-----> UNIAO CANCELADAS E NAO CANCELADAS
	*-------------------------------------------------------------------*
    =UP_fecha("TMP2" ,.T.)


    SELECT * FROM \TMP\A3_TMP ;
     ORDER BY EMPRESA, DATA, NOTA, SET_CFO, ALIQ_ICMS ;
    	INTO TABLE  \TMP\LIVROCPA
*---------------------------------------------------------------------*
	GO TOP
    =UP_fecha("A3_TMP" ,.T.)

	
RETURN





*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4L70X0C1Q           ULLvrStcoCpm VALID                 ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0310A,     Record Number:   63  ╨
*       ╨ Variable:            ULLvrStcoCpm                       ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      80                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*

FUNCTION _4l70x0c1q     &&  ULLvrStcoCpm VALID
#REGION 2
return

FUNCTION ULLvrStcoCpm
    =UP_fecha("A1_TMP" ,.T.)
    =UP_fecha("A2_TMP" ,.T.)
    =UP_fecha("A3_TMP" ,.T.)
    =UP_fecha("TMP2" ,.T.)
	
	*-------------------------------------------------------------------*
	*	CUPONS
	*-------------------------------------------------------------------*
    SELECT ;
   		  N.CGC,;
		  N.empresa,;
		  N.NOTA AS NRO_NOTA,;
		  IIF(N.vlr_ipi+N.icms_subs>0,N.nota,;
	          INT(VAL(CHRTRAN("2"+STR(DAY(N.data),2)+STR(MONTH(N.data),2);
	          +STR(0,2)," ","0")))) AS NFRESUMO,;
          N.SERIE,;
          "1" AS IND_OPER,;
   		  "0" AS IND_EMIT,;
   		  "2D" AS COD_MOD,;
   		  "00" AS COD_SIT,;
 		  N.cupom, N.favorecido,N.tp_pessoa,;
 		  IIF(N.tp_pessoa=1,STR(N.favorecido,11),STR(0,11)) AS CPF,;
		  IIF(N.tp_pessoa=2,STR(N.favorecido,14),STR(0,14)) AS CNPJ,;
          N.inscricao,;
		  N.UF,;
          N.UFOrig,N.MunOrig,;
          N.UFDstn,N.MunDstn,;
          N.tipo, N.data,N.vlrfrete,N.vlrseguro,;
          N.vlrdespes,N.status,;
          N.total_nota AS VlrNota;
   	FROM  &dbf_TIPTMP T, &dbf_NFSTMP N ;
    WHERE     N.status = 1 ;
          AND N.operacao = "S" ;
   		  AND (;
   		        (N.NOTA < 1000000 AND N.CUPOM > 0 AND N.TIPO <> "CPM") ;
   		  		or;
   		  	    (N.NOTA >= 1000000 AND N.NOTA <= 2000000 AND N.CUPOM > 0) ;
			  );
   		  AND T.KEY_TIPO = N.KEY_TIPO ;
   	      AND T.PROCESSO $ "Ss" ;
    GROUP BY N.EMPRESA, N.DATA, N.NOTA ;
    INTO TABLE \TMP\A1_TMP


	*-------------------------------------------------------------------*
	* PARTE - 2 ==> JA UNIFICA COM PARTE - 1
	*-------------------------------------------------------------------*


	SELECT N.*, ;
   		  I.ORDEM,;
          ULdefCfo(I.empresa,I.tipo,i.tp_mercad,"SAIDA") AS SET_CFO,;
	  	  I.aliq_icms,;
		  I.aliq_iss,;
   		  CHRTRAN( STR(i.origem,1)+i.cst," ","0") AS CST,;
          ULCST_ISS(i.vlr_iss,"SAIDA") AS CST_ISS,;
          ULCST_IPI(i.vlripi,"SAIDA") AS CST_IPI,;
          ULGenero(i.tp_mercad,i.classifica,"SAIDA") AS GENERO,;
          ULCFPS(N.UFOrig,N.MunOrig,;
             N.UFDstn,N.MunDstn,I.tp_mercad,"SAIDA") AS CFPS,;
		  "000" AS CLSCOMNC,;
		  "00" AS CLSGAS,;
		  "00" AS CLSAGUA,;
		  "00" AS CLSENRG;
   	FROM  \TMP\A1_TMP N, &dbf_ITMTMP I;
    WHERE ;
         N.NRO_NOTA = I.NOTA ;
    GROUP BY N.EMPRESA, N.DATA, N.NRO_NOTA,I.ORDEM ;
    INTO TABLE \TMP\A2_TMP

   SELECT N.*,;
		  NFRESUMO AS NOTA,;
		  SUM(I.base_ISS) AS TOTSERVICO,;
	  	  SUM(I.vlrvenda) AS TOTPRODUTO,;
 		  SUM(I.base_calc) AS BASE_ICMS,;
 		  SUM(I.Base_calc * I.aliq_icms/100) AS VLR_ICMS,;
		  SUM(I.base_isent) AS BASE_ISENT,SUM(I.base_outr) AS BASE_OUTR,;
		  SUM(I.base_sbbrt) AS BASE_SBBRT,;
		  SUM(I.base_subs) AS BASE_SUBS,SUM(I.icms_subs) AS ICMS_SUBS,;
		  SUM(I.base_ISS) AS BASE_ISS,SUM(I.vlr_iss) AS VLR_ISS,;
	  	  SUM(I.base_ipi) AS BASE_IPI,SUM(I.vlripi) AS VLR_IPI,;
	 	  SUM(I.base_isipi) AS BASE_ISIPI,0.00 AS VL_OUT_IPI,;
	  	  SUM(I.vlrvenda) AS VLR_ITEM,;
	  	  SUM(I.vlrvenda+I.icms_subs+I.vlripi) AS TOTAL_NOTA;
   	FROM  \TMP\A2_TMP N, &dbf_ITMTMP I;
    WHERE ;
        N.NRO_NOTA = I.NOTA ;
      	AND N.ORDEM = I.ORDEM ;
    GROUP BY N.EMPRESA,N.DATA,N.NFRESUMO,N.SET_CFO,N.ALIQ_ICMS ;
   	INTO TABLE  \TMP\LCPMSINT

    =UP_fecha("A2_TMP" ,.T.)

	*-------------------------------------------------------------------*

    =UP_fecha("TMP2" ,.T.)

*---------------------------------------------------------------------*
    =UP_fecha("A3_TMP" ,.T.)

RETURN





*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4L70X0C1R           ULReducaoZ VALID                   ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0310A,     Record Number:   64  ╨
*       ╨ Variable:            ULReducaoZ                         ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      81                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*

FUNCTION _4l70x0c1r     &&  ULReducaoZ VALID
#REGION 2
RETURN

*****************************************************************
FUNCTION ULReducaoZ
PARAMETERS PrmEmp,PrmDtIni,PrmDtFin


	*-------------------------------------------------------------------*

	=ULLvrAnlCpm()

	*-------------------------------------------------------------------*



	SELECT ;
	   STR(EMP.CGC,14) 			AS UNEM_CNPJ,;
	   "0"                 	AS IND_MR,;
	   LEFT(EMP.ecf_serie+SPACE(15),15)	AS ECF_FAB,;
	   "2D"                 	AS COD_MOD,;
	   STR(MP.ECF,4)   			AS ECF_CX,;
	   STR(MP.ALIQUOTA,5,2)		AS ALIQUOTA,;
	   DEF.SET_CFO,;	
	   STR(MP.CTRREINICI,6)		AS CRO,;
	   STR(MP.CTRREDUCAO,6) 	AS CRZ,;
	   CHRTRAN(DTOC(MP.DATA),"/","") AS DT_DOC,;
	   STR(MP.CTO_INICIO,6) 	AS NUM_DOC_INI,;
	   STR(MP.CTO_FIM,6)		AS NUM_DOC_FIN,;
	   STR(MP.GT_INICIAL,12,2) 	AS GT_INI,;
	   STR(MP.GT_FINAL,12,2)   	AS GT_FIN,;
	   STR(MP.VLRCONTAB,12,2)	AS VL_BRT,;
	   STR(MP.CANC_ISSQN,12,2)	AS VLCANISSQN,;
	   STR(MP.CANC_ICMS,12,2)	AS VLCANICMS,;
	   STR(MP.CANCELA,12,2)		AS VLCAN,;
	   STR(MP.DESC_ISSQN,12,2)	AS VLDSCISSQN,;
	   STR(MP.DESC_ICMS,12,2)	AS VLDSCICMS,;
	   STR(MP.DESCONTO,12,2)	AS VLDSC,;
	   STR(MP.ACMO_ISSQN,12,2)	AS VLACMISSQN,;
	   STR(MP.ACMO_ICMS,12,2)	AS VLACMICMS,;
	   STR(MP.ACRESCIMO,12,2)	AS VLACM,;
	   STR(MP.VLRSERVICO,12,2)	AS VL_ISSQN,;
	   STR((MP.VLRCONTAB-MP.VLRSERVICO),12,2) AS VL_LIQ,;
	   STR((MP.BASE_ALIQ),12,2)	AS VL_BC_ICMS,;
	   STR((MP.BASE_ALIQ*MP.ALIQUOTA/100),12,2)  AS VL_ICMS,;
	   STR(MP.VLRISENT,12,2)			AS VL_ISEN,;
	   STR(MP.VLROUTRO,12,2)			AS VL_NT,;
	   STR(MP.VLRSUBST,12,2)			AS VL_ST,;
	   "0"	AS COD_INF_OBS;
	  FROM 	EMPRESA  EMP, ;
			DEFCFOPs DEF,;
	       	MAPAECF  MP ;
	  WHERE EMP.EMPRESA = PrmEmp ;
	  	AND MP.EMPRESA = PrmEmp ;
	  	AND MP.DATA >= PrmDtIni ;
	  	AND MP.DATA <= PrmDtFin ;
	 	AND MP.EMPRESA = DEF.EMPRESA ;
 		AND MP.DATA = DEF.DATA ;
	 	AND MP.ALIQUOTA = DEF.ALIQ_ICMS ;
	  GROUP BY UNEM_CNPJ,;
  			COD_MOD,;
  			DT_DOC,;
  			ECF_CX,;
  			ALIQUOTA;
	  ORDER  BY UNEM_CNPJ,;
  			COD_MOD,;
  			DT_DOC,;
  			ECF_CX,;
  			ALIQUOTA;
	  INTO TABLE  \TMP\LVReducao

	*-------------------------------------------------------------------*

RETURN


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4L70X0C1S           ULcfoPreponderante VALID           ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0310A,     Record Number:   65  ╨
*       ╨ Variable:            ULcfoPreponderante                 ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      82                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*

FUNCTION _4l70x0c1s     &&  ULcfoPreponderante VALID
#REGION 2
RETURN

*****************************************************************
FUNCTION ULcfoPreponderante


	*-------------------------------------------------------------------*
	*  INICIO - DEFININDO CFOP PREPONDERANTE
	*-------------------------------------------------------------------*

*	SELECT  ;
*	     CP.CGC,CP.EMPRESA,CP.DATA,CP.SET_CFO,;
*		 COUNT(1) AS QTDE ;
*	FROM \TMP\LIVROCPA CP;
*	WHERE SUBS(CP.SET_CFO,2,4) <> ".933" ;
*	GROUP BY  CP.CGC,CP.EMPRESA,CP.DATA,CP.SET_CFO ;
*	INTO CURSOR QTDECFOPs

	*------------------------------------------------------------*
    * HOUVE DIAS EM QUE SO FORAM EMITIDOS CUPONS COM SERVICO
    * E ESTAVA ZERANDO A CAPA DA REDUCAO Z
    * HABILITEI PARA CONSIDERAR O CFOP MESMO Q DE SERVICO
	*------------------------------------------------------------*

	SELECT  ;
	     CP.CGC,CP.EMPRESA,CP.DATA,CP.SET_CFO,;
		 COUNT(1) AS QTDE ;
	FROM \TMP\LIVROCPA CP;
	GROUP BY  CP.CGC,CP.EMPRESA,CP.DATA,CP.SET_CFO ;
	INTO CURSOR QTDECFOPs


	SELECT  ;
	     CTR.CGC,CTR.EMPRESA,CTR.DATA,;
		 MAX(QTDE) AS MAIS;
	FROM QTDECFOPs CTR;
	GROUP BY  CTR.CGC,CTR.EMPRESA,CTR.DATA ;
	INTO CURSOR MAXQTDE


	SELECT  ;
	     CT.CGC,CT.EMPRESA,CT.DATA,CT.SET_CFO;
	FROM QTDECFOPs CT,;
		 MAXQTDE  MX ;
	WHERE ;
 		    MX.CGC 	     = CT.CGC ;
	 	AND MX.EMPRESA   = CT.EMPRESA ;
 		AND MX.DATA      = CT.DATA ;
		AND MX.MAIS = CT.QTDE ;
	GROUP BY  CT.CGC,CT.EMPRESA,CT.DATA,CT.SET_CFO ;
	INTO CURSOR CFOPs
	

	SELECT  ;
	     CT.CGC,CT.EMPRESA,CT.DATA,;
	       MAX(CT.SET_CFO) AS SET_CFO;
	FROM CFOPs CT;
	GROUP BY  CT.CGC,CT.EMPRESA,CT.DATA;
	INTO CURSOR DEFCFOPs
	*-------------------------------------------------------------------*

RETURN


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4L70X0C1T           ULLvrTrans VALID                   ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0310A,     Record Number:   66  ╨
*       ╨ Variable:            ULLvrTrans                         ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      83                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _4l70x0c1t     &&  ULLvrTrans VALID
#REGION 2
return

FUNCTION ULLvrTrans

	*-------------------------------------------------------------------*
	*	NOTAS DE ENTRADA
	*		where ch_produ = "9" faz com que as notas de conhecimento
    *     de transp nao sejam selecionadas
	*-------------------------------------------------------------------*

	SELECT 	;
		N.CGC,;
		N.empresa,N.nota,N.serie,;
        "0" AS IND_OPER,;
 		"0" AS IND_EMIT,;
   		T.COD_MOD_RF AS COD_MOD,;
   		"00" AS COD_SIT,;
        "000000" AS CUPOM,;
		N.FAVORECIDO,n.tp_pessoa,;
	    IIF(N.tp_pessoa=1,STR(N.favorecido,11),STR(0,11)) AS CPF,;
		IIF(N.tp_pessoa=2,STR(N.favorecido,14),STR(0,14)) AS CNPJ,;
        N.codforn,N.inscricao,;
        N.UFOrig,N.MunOrig,;
        N.UFDstn,N.MunDstn,;
        N.uf,;
        N.tipo,N.data,N.data_emi,;
		N.vlrfrete,N.vlrseguro,N.vlrdespes,;
        N.status,;
        (I.vlrvenda+I.vlripi+I.icms_subs) AS VlrNota,;
		N.aliq_icms,;
		ULdefCfo(N.empresa,N.tipo,i.tp_mercad,"ENTRADA") AS SET_CFO;
   	FROM  &dbf_NFETMP N,;
   	      &dbf_TIPTMP T,;
   	      &dbf_INETMP I ;
    WHERE ;
            LEFT(N.situacao,1) = "C";
		AND N.ch_produ = "9";
        AND N.CH_OPERA <> "5";
   		AND N.KEY_TIPO = T.KEY_TIPO;
   	    AND T.PROCESSO $ "Ee";
   		AND I.KEY_TIPO = N.KEY_TIPO;
   		AND I.EMPRESA = N.EMPRESA;
   		AND I.NOTA = N.NOTA ;
   		AND I.SERIE = N.SERIE;
   		AND I.FAVORECIDO = N.FAVORECIDO ;
    GROUP BY N.EMPRESA,N.DATA,N.NOTA,SET_CFO,I.ALIQ_ICMS;
    INTO CURSOR TMPLIVR


	SELECT 	;
		L.*,;
		 ULCST_Entrada(I.cst, I.origem, I.tp_mercad,I.base_calc,;
			 I.vlrvenda,I.icms_subs, I.codigo,N.TIPO) AS CST,;
         ULCFPS(N.UFOrig,N.MunOrig,;
          	N.UFDstn,N.MunDstn,i.tp_mercad,"ENTRADA") AS CFPS,;
         ULCST_ISS(i.vlr_iss,"ENTRADA") AS CST_ISS,;
         ULCST_IPI(i.vlripi,"ENTRADA") AS CST_IPI,;
         ULGenero(i.tp_mercad,i.classifica,"ENTRADA") AS GENERO,;
		 "00" AS CLSCOMNC,;
		 "00" AS CLSGAS,;
		 "00" AS CLSAGUA,;
		 "00" AS CLSENRG;
   	FROM  ;
		  TMPLIVR L,;
   	      &dbf_NFETMP N,;
   	      &dbf_TIPTMP T,;
   	      &dbf_INETMP I ;
    WHERE ;
            LEFT(N.situacao,1) = "C";
		AND N.ch_produ = "9";
        AND N.CH_OPERA <> "5";
   		AND N.KEY_TIPO = T.KEY_TIPO;
   	    AND T.PROCESSO $ "Ee";
   		AND I.KEY_TIPO = N.KEY_TIPO;
   		AND I.EMPRESA = N.EMPRESA;
   		AND I.NOTA = N.NOTA ;
   		AND I.SERIE = N.SERIE;
   		AND I.FAVORECIDO = N.FAVORECIDO;
   		AND L.EMPRESA = N.EMPRESA;
   		AND L.NOTA = N.NOTA ;
   		AND L.SERIE = N.SERIE;
   		AND L.FAVORECIDO = N.FAVORECIDO ;
    GROUP BY N.EMPRESA,N.DATA,N.NOTA,SET_CFO,I.ALIQ_ICMS;
    INTO CURSOR TMPLIVR



	SELECT 	;
		L.*,;
	  	IIF(N.BASE_SUBS = 0,N.base_icms,N.base_icms*0.00) AS BASE_ICMS,;
	  	IIF(N.BASE_SUBS = 0,N.VLR_ICMS,N.VLR_ICMS*0.00) AS VLR_ICMS,;
		N.BASE_ISENT,(N.base_outr+N.BASE_ISS)  AS BASE_OUTR, ;
		N.base_subs,N.icms_subs,;
		N.base_ISS,(N.base_subs*N.aliq_iss/100) AS VLR_ISS,;
		N.base_ipi,N.vlr_ipi,N.base_isipi,0.00 as VL_OUT_IPI,;
        I.vlrvenda AS Vlr_Item,;
	  	N.TOTAL_NOTA;
   	FROM  ;
		  TMPLIVR L,;
   	      &dbf_NFETMP N,;
   	      &dbf_TIPTMP T,;
   	      &dbf_INETMP I ;
    WHERE ;
            LEFT(N.situacao,1) = "C";
		AND N.ch_produ = "9";
        AND N.CH_OPERA <> "5";
   		AND N.KEY_TIPO = T.KEY_TIPO;
   	    AND T.PROCESSO $ "Ee";
   		AND I.KEY_TIPO = N.KEY_TIPO;
   		AND I.EMPRESA = N.EMPRESA;
   		AND I.NOTA = N.NOTA ;
   		AND I.SERIE = N.SERIE;
   		AND I.FAVORECIDO = N.FAVORECIDO;
   		AND L.EMPRESA = N.EMPRESA;
   		AND L.NOTA = N.NOTA ;
   		AND L.SERIE = N.SERIE;
   		AND L.FAVORECIDO = N.FAVORECIDO ;
    GROUP BY N.EMPRESA,N.DATA,N.NOTA,SET_CFO,I.ALIQ_ICMS;
    INTO CURSOR TMPLIVR

    SELECT * FROM TMPLIVR NF;
	    ORDER BY NF.EMPRESA, NF.DATA, NF.NOTA, NF.SET_CFO, NF.ALIQ_ICMS ;
	    INTO CURSOR LIVtrans
*---------------------------------------------------------------------*
RETURN





*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4L70X0C2R           ULLvrSda50 VALID                   ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0310A,     Record Number:   68  ╨
*       ╨ Variable:            ULLvrSda50                         ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      84                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _4l70x0c2r     &&  ULLvrSda50 VALID
#REGION 2
return

FUNCTION ULLvrSda50
    =UP_fecha("A1_TMP" ,.T.)
    =UP_fecha("A2_TMP" ,.T.)
    =UP_fecha("A3_TMP" ,.T.)
    =UP_fecha("TMP2" ,.T.)
	
	*-------------------------------------------------------------------*
	*	NOTAS DE SAIDA
	*-------------------------------------------------------------------*
    * vlr_icms =  (base_icms * aliq_icms/100) as vlr_icms,;
	*-------------------------------------------------------------------*
    *-----> NAO CANCELADAS
	*-------------------------------------------------------------------*
	* SQL DIVIDIDO EM DUAS PARTES POIS OCORRE ERRO DE COMANDO MUITO LONGO
	*-------------------------------------------------------------------*
	* PARTE - 1
	*-------------------------------------------------------------------*
	
	SELECT ;
   		  N.CGC,;
		  N.empresa,N.nota,N.serie,N.REFERENCIA,;
          "1" AS IND_OPER,;
   		  "0" AS IND_EMIT,;
   		  T.COD_MOD_RF AS COD_MOD,;
   		  "00" AS COD_SIT,;
 		  N.cupom, N.favorecido,N.tp_pessoa,;
 		  IIF(N.tp_pessoa=1,STR(N.favorecido,11),STR(0,11)) AS CPF,;
		  IIF(N.tp_pessoa=2,STR(N.favorecido,14),STR(0,14)) AS CNPJ,;
          N.inscricao,;
		  N.UF,;
          N.UFOrig,N.MunOrig,;
          N.UFDstn,N.MunDstn,;
          N.tipo, N.data,N.vlrfrete,N.vlrseguro,;
          N.vlrdespes,N.status,;
          N.total_nota AS VlrNota;
   	FROM  &dbf_TIPTMP T, &dbf_NFSTMP N ;
    WHERE     N.status = 1 ;
          AND ;
              (;
                ( N.operacao $ "S" AND N.CUPOM = 0 ) ;
			   OR;
                (N.operacao $ "C" AND N.CUPOM > 0 ) ;
              );
   		  AND T.KEY_TIPO = N.KEY_TIPO ;
   	      AND T.PROCESSO $ "Ss" ;
   	      AND !(N.TIPO $ "ETI/ETE") ;
    GROUP BY N.EMPRESA, N.DATA, N.NOTA ;
    INTO TABLE \TMP\A1_TMP

	*-------------------------------------------------------------------*
	* PARTE - 2 ==> JA UNIFICA COM PARTE - 1
	*-------------------------------------------------------------------*


   SELECT N.*,;
		  I.ORDEM,;
          ULdefCfo(I.empresa,N.tipo,i.tp_mercad,"SAIDA") AS SET_CFO,;
	  	  I.aliq_icms,;
	  	  I.aliq_ISS,;
	  	  I.aliq_IPI,;
   		  CHRTRAN( STR(i.origem,1)+i.cst," ","0") AS CST,;
          ULCST_ISS(i.vlr_iss,"SAIDA") AS CST_ISS,;
          ULCST_IPI(i.vlripi,"SAIDA") AS CST_IPI,;
          ULGenero(i.tp_mercad,i.classifica,"SAIDA") AS GENERO,;
          ULCFPS(N.UFOrig,N.MunOrig,;
          	N.UFDstn,N.MunDstn,i.tp_mercad,"SAIDA") AS CFPS,;
		 "00" AS CLSCOMNC,;
		 "00" AS CLSGAS,;
		 "00" AS CLSAGUA,;
		 "00" AS CLSENRG;
   	FROM  \TMP\A1_TMP N, &dbf_ITMTMP I;
    WHERE ;
    	N.NOTA = I.NOTA or  (N.CUPOM > 0 AND N.REFERENCIA = I.NOTA);
    GROUP BY N.EMPRESA,N.DATA,N.NOTA,ORDEM ;
    INTO TABLE \TMP\A2_TMP



   SELECT N.*,;
		  SUM(I.base_ISS) AS TOTSERVICO,;
	  	  SUM(I.vlrvenda) AS TOTPRODUTO,;
 		  SUM(I.base_calc) AS BASE_ICMS,;
 		  SUM(I.Base_calc * I.aliq_icms/100) AS VLR_ICMS,;
		  SUM(I.base_isent) AS BASE_ISENT,SUM(I.base_outr) AS BASE_OUTR,;
		  SUM(I.base_sbbrt) AS BASE_SBBRT,;
		  SUM(I.base_subs) AS BASE_SUBS,SUM(I.icms_subs) AS ICMS_SUBS,;
		  SUM(I.base_ISS) AS BASE_ISS,SUM(I.vlr_iss) AS VLR_ISS,;
	  	  SUM(I.base_ipi) AS BASE_IPI,SUM(I.vlripi) AS VLR_IPI,;
	 	  SUM(I.base_isipi) AS BASE_ISIPI,0.00 AS VL_OUT_IPI,;
	  	  SUM(I.vlrvenda) AS VLR_ITEM,;
	  	  SUM(I.vlrvenda+I.icms_subs+I.vlripi) AS TOTAL_NOTA;
   	FROM  \TMP\A2_TMP N, &dbf_ITMTMP I;
    WHERE ;
    	((N.NOTA = I.NOTA) or  (N.CUPOM > 0 AND N.REFERENCIA = I.NOTA));
    		AND N.ORDEM=I.ORDEM ;
    GROUP BY N.EMPRESA,N.DATA,N.NOTA,N.SET_CFO,N.ALIQ_ICMS ;
    INTO TABLE \TMP\A3_TMP

    =UP_fecha("A2_TMP" ,.T.)


	*-------------------------------------------------------------------*
    *-----> CANCELADAS
	*-------------------------------------------------------------------*

	SELECT ;
		N.CGC,N.empresa,N.nota,N.serie,;
		"1"	AS IND_OPER,;
		"0"	AS IND_EMIT,;
		"01" AS COD_MOD,;
		"02" AS COD_SIT,;
		N.cupom,;
		N.favorecido,;
		N.tp_pessoa,;
		IIF(N.tp_pessoa=1,STR(N.favorecido,11),STR(0,11)) AS CPF,;
		IIF(N.tp_pessoa=2,STR(N.favorecido,14),STR(0,14)) AS CNPJ,;
		N.inscricao,N.UFOrig,N.MunOrig,;
		N.uf,N.UF AS UFDstn,N.cidade AS MunDstn,;
		N.tipo,N.data,;
		N.vlrfrete,N.vlrseguro,N.vlrdespes,;
		N.status,N.total_nota AS VlrNota,;
		N.aliq_icms,N.ALIQ_ISS,;
		N.cfo AS SET_CFO,"00" AS CST,"0000" AS CFPS,;
		"00" AS CST_ISS,"00" AS CST_IPI,"00" AS GENERO,"00" AS CLSCOMNC,;
		"00" AS CLSGAS,"00" AS CLSAGUA,"00" AS CLSENRG,;
		N.base_icms,(N.Base_icms * N.aliq_icms/100) AS VLR_ICMS,;
		N.TOTSERVICO,N.TOTPRODUTO,;
		N.base_isent,N.base_outr,N.base_sbbrt,N.base_subs,N.icms_subs,;
		N.base_iss,N.vlr_iss,N.base_ipi,N.VLR_IPI,;
		N.base_isipi,0.00 AS VL_OUT_IPI,0.00 AS VLR_ITEM,;
		N.TOTAL_NOTA;
	FROM &dbf_NFSTMP N, &dbf_TIPTMP T;
	WHERE     N.status=2 AND N.operacao="SC";
   		  AND N.CUPOM=0 AND T.KEY_TIPO=N.KEY_TIPO ;
    INTO TABLE \TMP\TMP2


	*-------------------------------------------------------------------*
    *-----> NOTAS DE DEVOLUCAO
    *-------------------------------------------------------------------*

	SELECT ;
		N.CGC,N.empresa,N.nota,N.serie,;
		"1"	AS IND_OPER,;
		"0"	AS IND_EMIT,;
		"01" AS COD_MOD,;
		"00" AS COD_SIT,;
		N.cupom,;
		N.favorecido,;
		N.tp_pessoa,;
		IIF(N.tp_pessoa=1,STR(N.favorecido,11),STR(0,11)) AS CPF,;
		IIF(N.tp_pessoa=2,STR(N.favorecido,14),STR(0,14)) AS CNPJ,;
		N.inscricao,N.UFOrig,N.MunOrig,;
		N.uf,N.UF AS UFDstn,N.cidade AS MunDstn,;
		N.tipo,N.data,;
		0 AS vlrfrete,0 AS vlrseguro, 0 AS vlrdespes,;
		N.status, 0 AS VlrNota,;
		N.aliq_icms,N.ALIQ_ISS,;
		N.cfo AS SET_CFO,"00" AS CST,"0000" AS CFPS,;
		"00" AS CST_ISS,"00" AS CST_IPI,"00" AS GENERO,"00" AS CLSCOMNC,;
		"00" AS CLSGAS,"00" AS CLSAGUA,"00" AS CLSENRG,;
		0 AS base_icms,0 AS VLR_ICMS,;
		0 AS TOTSERVICO, 0 AS TOTPRODUTO,;
		0 AS base_isent,0 AS base_outr, 0 AS base_sbbrt,;
		0 AS base_subs,0 AS icms_subs,;
		0 AS base_iss, 0 AS vlr_iss, 0 AS base_ipi,0 AS VLR_IPI,;
		0 AS base_isipi,0.00 AS VL_OUT_IPI,0.00 AS VLR_ITEM,;
		0 AS TOTAL_NOTA;
	FROM &dbf_NFSTMP N;
	WHERE     N.status<>2 AND N.operacao="SC";
   	      AND (N.TIPO $ "ETI/ETE") ;
    INTO TABLE \TMP\TMP3





    SELE A3_TMP
    APPEND FROM \TMP\TMP2
    APPEND FROM \TMP\TMP3
	*-------------------------------------------------------------------*
    *-----> UNIAO CANCELADAS E NAO CANCELADAS
	*-------------------------------------------------------------------*
    =UP_fecha("TMP2" ,.T.)


    SELECT * FROM \TMP\A3_TMP ;
     ORDER BY EMPRESA, DATA, COD_MOD,NOTA, SET_CFO, ALIQ_ICMS ;
    	INTO TABLE  \TMP\LIVROSAI



	SELE LIVROSAI
	GO TOP
*	REPLACE all nota     with nota-2000000,;
*	        COD_MOD  WITH "03"  ;
*	   for    nota >= 2000000 ;
*	      AND nota <= 3000000
*
*
*	GO TOP
*	REPLACE all nota with nota-3000000, ;
*	        COD_MOD  WITH "55"  ;
*	   for    nota >= 3000000 ;
*	      AND nota <= 4000000
*
*	GO TOP
*	REPLACE all nota with nota-4000000,;
*	        COD_MOD  WITH "77"  ;
*	   for    nota >= 4000000 ;
*	      AND nota <= 5000000
*
*    GO TOP

*---------------------------------------------------------------------*
	GO TOP
    =UP_fecha("A3_TMP" ,.T.)

	
RETURN





*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4L70X0C30           ULItmSda54 VALID                   ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0310A,     Record Number:   69  ╨
*       ╨ Variable:            ULItmSda54                         ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      85                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _4l70x0c30     &&  ULItmSda54 VALID
#REGION 2
return

FUNCTION ULItmSda54
	*-------------------------------------------------------------------*
	*	ITENS DAS NOTAS DE SAIDA
	*-------------------------------------------------------------------*

   SELECT ;
          "1"  AS IND_OPER,;
          "0"  AS IND_EMIT,;
   		  "01"  AS COD_MOD,;
   		  "00"  AS COD_SIT,;
   		  NF.EMPRESA, NF.NOTA,;
   		  NF.SERIE, NF.CUPOM, NF.FAVORECIDO, NF.TP_PESSOA, NF.INSCRICAO,;
          NF.UF, NF.tipo, NF.data, NF.vlrfrete,;
		  NF.vlrseguro, NF.vlrdespes, NF.status,;
          NF.total_nota AS VlrNota,;
		  ULdefCfo(NF.empresa,NF.tipo,it.tp_mercad,"SAIDA") AS SET_CFO,;
	  	  IT.codigo, IT.CLASSIFICA, IT.DESCRICAO, IT.UNIDADE,;
	  	  IT.ORIGEM,IT.CST,IT.ALIQ_IPI, IT.ALIQ_ICMS,;
	  	  IT.IVA, IT.TP_MERCAD, IT.QTDE, IT.VLRVENDA, IT.BASE_CALC,;
	  	  IT.BASE_SUBS,;
	 	  IT.base_isent,;
		  IT.base_outr, ;
	  	  IT.base_ipi,;
	  	  IT.vlripi,;
	 	  IT.base_isipi,;
		  0,00  AS VL_OUT_IPI;
   	FROM  &dbf_NFSTMP NF,;
   	      &dbf_TIPTMP TP,;
   	      &dbf_ITMTMP IT ;
    WHERE ;
              NF.status = 1 ;
   		  AND NF.operacao = "S" AND NF.CUPOM = 0 ;
   		  AND TP.KEY_TIPO = NF.KEY_TIPO ;
   	      AND TP.PROCESSO $ "Ss" ;
   		  AND LEFT(IT.OPERACAO,1) = "S" ;
   	 	  AND IT.EMPRESA = NF.EMPRESA ;
   		  AND IT.NOTA    = NF.NOTA ;
   		  AND IT.SERIE   = NF.SERIE ;
    ORDER BY NF.EMPRESA, NF.DATA, NF.NOTA, IT.CODIGO ;
  	INTO CURSOR TMP_1LS


	*-------------------------------------------------------------------*
	*	ITENS DAS COPIAS DE CUPONS EM NOTAS DE SAIDA
	*-------------------------------------------------------------------*

	IF  1 = 9999    && PARA NAO ENVIAR ITENS DE COPIA CUPI TIPO = "CPM"
	   SELECT * FROM TMP_1LS ;
	   UNION ;
	   SELECT ;
          "1"  AS IND_OPER,;
          "0"  AS IND_EMIT,;
   		  "01"  AS COD_MOD,;
   		  "00"  AS COD_SIT,;
   		  CP.EMPRESA, CP.NOTA,;
   		  CP.SERIE, CP.CUPOM, CP.FAVORECIDO, CP.TP_PESSOA, CP.INSCRICAO,;
          CP.UF, CP.tipo, CP.data, CP.vlrfrete,;
		  CP.vlrseguro, CP.vlrdespes, CP.status,;
          CP.total_nota AS VlrNota,;
		  ULdefCfo(CP.empresa,CP.tipo,it.tp_mercad,"SAIDA") AS SET_CFO,;
	  	  IT.codigo, IT.CLASSIFICA, IT.DESCRICAO, IT.UNIDADE,;
	  	  IT.ORIGEM,IT.CST,IT.ALIQ_IPI, IT.ALIQ_ICMS,;
	  	  IT.IVA, IT.TP_MERCAD, IT.QTDE, IT.VLRVENDA, IT.BASE_CALC,;
	  	  IT.BASE_SUBS,;
	 	  IT.base_isent,;
		  IT.base_outr, ;
	  	  IT.base_ipi,;
	  	  IT.vlripi,;
	 	  IT.base_isipi,;
		  0,00  AS VL_OUT_IPI;
   		FROM  &dbf_NFSTMP CP,;
   	      &dbf_NFSTMP NF,;
   	      &dbf_TIPTMP TP,;
   	      &dbf_ITMTMP IT ;
    	WHERE CP.status = 1 ;
   		  AND CP.operacao = "C" AND CP.CUPOM > 0 ;
   	 	  AND NF.EMPRESA = CP.EMPRESA ;
   		  AND NF.NOTA    = CP.REFERENCIA ;
   		  AND NF.SERIE   = CP.SERIE ;
   		  AND TP.KEY_TIPO = NF.KEY_TIPO ;
   	      AND TP.PROCESSO $ "Ss" ;
   		  AND LEFT(IT.OPERACAO,1) = "S" ;
   	 	  AND IT.EMPRESA = NF.EMPRESA ;
   		  AND IT.NOTA    = NF.NOTA ;
   		  AND IT.SERIE   = NF.SERIE ;
  		INTO CURSOR TMP_2LS
	
		SELECT * FROM TMP_2LS ;
    	ORDER BY EMPRESA, DATA, NOTA, CODIGO ;
		INTO TABLE \TMP\SAI001
		
	ELSE

		SELECT * FROM TMP_1LS ;
    	ORDER BY EMPRESA, DATA, NOTA, CODIGO ;
		INTO TABLE \TMP\SAI001
		
	ENDIF



	SELE SAI001
	GO TOP

*	REPLACE nota     with nota-2000000,;
*	        COD_MOD  WITH "03"  ;
*	   for    nota >= 2000000 ;
*	      AND nota <= 3000000
*
*
*	GO TOP
*	REPLACE nota with nota-3000000, ;
*	        COD_MOD  WITH "55"  ;
*	   for    nota >= 3000000 ;
*	      AND nota <= 4000000
*
*	GO TOP
*	REPLACE nota with nota-4000000,;
*	        COD_MOD  WITH "77"  ;
*	   for    nota >= 4000000 ;
*	      AND nota <= 5000000
*
*
	SELECT * FROM SAI001 ;
    	ORDER BY EMPRESA, DATA, NOTA, CODIGO ;
		INTO CURSOR	ILIVROSAI


RETURN


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4L70X0C37           ULLvrEnt50 VALID                   ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0310A,     Record Number:   70  ╨
*       ╨ Variable:            ULLvrEnt50                         ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      86                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _4l70x0c37     &&  ULLvrEnt50 VALID
#REGION 2
return

FUNCTION ULLvrEnt50

	*-------------------------------------------------------------------*
	*	NOTAS DE ENTRADA
	*		where ch_produ <> "9" faz com que as notas de conhecimento
    *     de transp nao sejam selecionadas
	*-------------------------------------------------------------------*

	SELECT 	;
		N.CGC,;
		N.empresa,N.nota,N.serie,;
        "0" AS IND_OPER,;
 		"0" AS IND_EMIT,;
   		T.COD_MOD_RF AS COD_MOD,;
   		"00" AS COD_SIT,;
        "000000" AS CUPOM,;
		N.FAVORECIDO,n.tp_pessoa,;
	    IIF(N.tp_pessoa=1,STR(N.favorecido,11),STR(0,11)) AS CPF,;
		IIF(N.tp_pessoa=2,STR(N.favorecido,14),STR(0,14)) AS CNPJ,;
        N.codforn,N.inscricao,;
        N.UFOrig,N.MunOrig,;
        N.UFDstn,N.MunDstn,;
        N.uf,;
        N.tipo,N.data,N.data_emi,;
		N.vlrfrete,N.vlrseguro,N.vlrdespes,;
        N.status,;
        (I.vlrvenda+I.vlripi+I.icms_subs) AS VlrNota,;
		N.aliq_icms,;
		ULdefCfo(N.empresa,N.tipo,i.tp_mercad,"ENTRADA") AS SET_CFO;
   	FROM  &dbf_NFETMP N,;
   	      &dbf_TIPTMP T,;
   	      &dbf_INETMP I ;
    WHERE ;
            LEFT(N.situacao,1) = "C";
		AND N.ch_produ <> "9";
        AND N.CH_OPERA <> "5";
   		AND N.KEY_TIPO = T.KEY_TIPO;
   	    AND T.PROCESSO $ "Ee";
   		AND I.KEY_TIPO = N.KEY_TIPO;
   		AND I.EMPRESA = N.EMPRESA;
   		AND I.NOTA = N.NOTA ;
   		AND I.SERIE = N.SERIE;
   		AND I.FAVORECIDO = N.FAVORECIDO ;
    GROUP BY N.EMPRESA,N.DATA,N.NOTA,SET_CFO,I.ALIQ_ICMS;
    INTO CURSOR TMPLIVR


	SELECT 	;
		L.*,;
		 ULCST_Entrada(I.cst, I.origem, I.tp_mercad,I.base_calc,;
			 I.vlrvenda,I.icms_subs, I.codigo,N.TIPO) AS CST,;
         ULCFPS(N.UFOrig,N.MunOrig,;
          	N.UFDstn,N.MunDstn,i.tp_mercad,"ENTRADA") AS CFPS,;
         ULCST_ISS(i.vlr_iss,"ENTRADA") AS CST_ISS,;
         ULCST_IPI(i.vlripi,"ENTRADA") AS CST_IPI,;
         ULGenero(i.tp_mercad,i.classifica,"ENTRADA") AS GENERO,;
		 "00" AS CLSCOMNC,;
		 "00" AS CLSGAS,;
		 "00" AS CLSAGUA,;
		 "00" AS CLSENRG;
   	FROM  ;
		  TMPLIVR L,;
   	      &dbf_NFETMP N,;
   	      &dbf_TIPTMP T,;
   	      &dbf_INETMP I ;
    WHERE ;
            LEFT(N.situacao,1) = "C";
		AND N.ch_produ <> "9";
        AND N.CH_OPERA <> "5";
   		AND N.KEY_TIPO = T.KEY_TIPO;
   	    AND T.PROCESSO $ "Ee";
   		AND I.KEY_TIPO = N.KEY_TIPO;
   		AND I.EMPRESA = N.EMPRESA;
   		AND I.NOTA = N.NOTA ;
   		AND I.SERIE = N.SERIE;
   		AND I.FAVORECIDO = N.FAVORECIDO;
   		AND L.EMPRESA = N.EMPRESA;
   		AND L.NOTA = N.NOTA ;
   		AND L.SERIE = N.SERIE;
   		AND L.FAVORECIDO = N.FAVORECIDO ;
    GROUP BY N.EMPRESA,N.DATA,N.NOTA,SET_CFO,I.ALIQ_ICMS;
    INTO CURSOR TMPLIVR




	SELECT 	;
		L.*,;
	  	IIF(N.BASE_SUBS = 0,N.base_icms,N.base_icms*0.00) AS BASE_ICMS,;
	  	IIF(N.BASE_SUBS = 0,N.VLR_ICMS,N.VLR_ICMS*0.00) AS VLR_ICMS,;
		N.BASE_ISENT,(N.base_outr+N.BASE_ISS)  AS BASE_OUTR, ;
		N.base_subs,N.icms_subs,;
		N.base_ISS,(N.base_subs*N.aliq_iss/100) AS VLR_ISS,;
		N.base_ipi,N.vlr_ipi,N.base_isipi,0.00 as VL_OUT_IPI,;
        I.vlrvenda AS Vlr_Item,;
	  	N.TOTAL_NOTA;
   	FROM  ;
		  TMPLIVR L,;
   	      &dbf_NFETMP N,;
   	      &dbf_TIPTMP T,;
   	      &dbf_INETMP I ;
    WHERE ;
            LEFT(N.situacao,1) = "C";
		AND N.ch_produ <> "9";
        AND N.CH_OPERA <> "5";
   		AND N.KEY_TIPO = T.KEY_TIPO;
   	    AND T.PROCESSO $ "Ee";
   		AND I.KEY_TIPO = N.KEY_TIPO;
   		AND I.EMPRESA = N.EMPRESA;
   		AND I.NOTA = N.NOTA ;
   		AND I.SERIE = N.SERIE;
   		AND I.FAVORECIDO = N.FAVORECIDO;
   		AND L.EMPRESA = N.EMPRESA;
   		AND L.NOTA = N.NOTA ;
   		AND L.SERIE = N.SERIE;
   		AND L.FAVORECIDO = N.FAVORECIDO ;
    GROUP BY N.EMPRESA,N.DATA,N.NOTA,SET_CFO,I.ALIQ_ICMS;
    INTO CURSOR TMPLIVR

    SELECT * FROM TMPLIVR NF;
	    ORDER BY NF.EMPRESA, NF.DATA, NF.NOTA, NF.SET_CFO, NF.ALIQ_ICMS ;
	    INTO TABLE \TMP\ENT001


	SELE ENT001
	GO TOP

	REPLACE nota     with nota-2000000,;
	        COD_MOD  WITH "03"  ;
	   for    nota >= 2000000 ;
	      AND nota <= 3000000


	GO TOP
	REPLACE nota with nota-3000000, ;
	        COD_MOD  WITH "55"  ;
	   for    nota >= 3000000 ;
	      AND nota <= 4000000

	GO TOP
	REPLACE nota with nota-4000000,;
	        COD_MOD  WITH "77"  ;
	   for    nota >= 4000000 ;
	      AND nota <= 5000000


	SELECT * FROM ENT001 ;
	    ORDER BY EMPRESA, DATA, NOTA, SET_CFO, ALIQ_ICMS ;
	    INTO CURSOR LIVROENT




*---------------------------------------------------------------------*
RETURN





*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4L70X0C38           ULItmEnt54 VALID                   ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0310A,     Record Number:   71  ╨
*       ╨ Variable:            ULItmEnt54                         ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      87                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _4l70x0c38     &&  ULItmEnt54 VALID
#REGION 2
return

FUNCTION ULItmEnt54
	*-------------------------------------------------------------------*
	*	NOTAS DE ENTRADA
	*-------------------------------------------------------------------*
     SELECT ;
  	  	  N.empresa, N.nota, N.serie, N.CGC,;
  	  	  N.FAVORECIDO,N.codforn, N.TP_PESSOA, N.INSCRICAO,;
          N.UF, N.tipo, N.data, N.vlrfrete, N.vlrseguro,;
		  N.vlrdespes,N.status,(I.vlrvenda+I.vlripi+I.icms_subs)  AS VlrNota,;
		  ULdefCfo(N.empresa,N.tipo,I.tp_mercad,"ENTRADA") AS SET_CFO,;
	  	  I.codigo, I.CLASSIFICA, I.DESCRICAO, I.UNIDADE,;
		  I.ORIGEM,ULCST_Entrada(I.cst, I.origem, I.tp_mercad,I.base_calc,;
    I.vlrvenda,I.icms_subs, I.codigo,N.TIPO) AS CST,I.ALIQ_IPI,I.ALIQ_ICMS,;
	  	  I.IVA, I.TP_MERCAD,I.QTDE,I.VLRVENDA,I.BASE_CALC,;
 	  	  IIF(N.BASE_SUBS = 0,I.base_calc,I.base_calc*0) AS BASE_ICMS,;
  	  	  IIF(N.BASE_SUBS = 0,I.VLR_ICMS,I.VLR_ICMS*0) AS VLR_ICMS,;
	  	  I.BASE_SUBS,I.ICMS_SUBS,  I.VLRIPI;
   	FROM  &dbf_NFETMP N, &dbf_TIPTMP T, &dbf_INETMP I;
    WHERE ;
            LEFT(N.situacao,1)="C";
		AND N.ch_produ<>"9";
        AND N.CH_OPERA<> "5" ;
   		AND N.KEY_TIPO= T.KEY_TIPO ;
   	    AND T.PROCESSO$ "Ee" ;
   		AND I.KEY_TIPO= N.KEY_TIPO ;
   		AND I.EMPRESA= N.EMPRESA ;
   		AND I.NOTA= N.NOTA ;
   		AND I.SERIE=N.SERIE;
   		AND I.FAVORECIDO= N.FAVORECIDO ;
    ORDER BY N.EMPRESA,N.DATA,N.NOTA,I.CODIGO;
	    INTO TABLE \TMP\ENT002



	SELE ENT002
	GO TOP

	REPLACE nota     with nota-2000000;
	   for    nota >= 2000000 ;
	      AND nota <= 3000000


	GO TOP
	REPLACE nota with nota-3000000 ;
	   for    nota >= 3000000 ;
	      AND nota <= 4000000

	GO TOP
	REPLACE nota with nota-4000000;
	   for    nota >= 4000000 ;
	      AND nota <= 5000000


    SELECT * FROM ENT002 NF;
	    ORDER BY EMPRESA,DATA,NOTA,CODIGO;
		INTO CURSOR ILIVROENT

*---------------------------------------------------------------------*
RETURN





*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4L70X0C39           BKPULLvrSda50 VALID                ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0310A,     Record Number:   73  ╨
*       ╨ Variable:            BKPULLvrSda50                      ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      88                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _4l70x0c39     &&  BKPULLvrSda50 VALID
#REGION 2
return

FUNCTION BKPULLvrSda50
    =UP_fecha("A1_TMP" ,.T.)
    =UP_fecha("A2_TMP" ,.T.)
    =UP_fecha("A3_TMP" ,.T.)
    =UP_fecha("TMP2" ,.T.)
	
	*-------------------------------------------------------------------*
	*	NOTAS DE SAIDA
	*-------------------------------------------------------------------*
    * vlr_icms =  (base_icms * aliq_icms/100) as vlr_icms,;
	*-------------------------------------------------------------------*
    *-----> NAO CANCELADAS
	*-------------------------------------------------------------------*
	* SQL DIVIDIDO EM DUAS PARTES POIS OCORRE ERRO DE COMANDO MUITO LONGO
	*-------------------------------------------------------------------*
	* PARTE - 1
	*-------------------------------------------------------------------*
	   SELECT ;
   		  N.CGC,;
		  N.empresa,N.nota,N.serie,;
          "1" AS IND_OPER,;
   		  "0" AS IND_EMIT,;
   		  T.COD_MOD_RF AS COD_MOD,;
   		  "00" AS COD_SIT,;
 		  N.cupom, N.favorecido,N.tp_pessoa,;
 		  IIF(N.tp_pessoa=1,STR(N.favorecido,11),STR(0,11)) AS CPF,;
		  IIF(N.tp_pessoa=2,STR(N.favorecido,14),STR(0,14)) AS CNPJ,;
          N.inscricao,;
		  N.UF,;
          N.UFOrig,N.MunOrig,;
          N.UFDstn,N.MunDstn,;
          N.tipo, N.data,N.vlrfrete,N.vlrseguro,;
          N.vlrdespes,N.status,;
          N.total_nota AS VlrNota;
   	FROM  &dbf_TIPTMP T, &dbf_NFSTMP N ;
    WHERE     N.status = 1 ;
          AND N.operacao $ "S" ;
   		  AND N.CUPOM = 0 ;
   		  AND T.KEY_TIPO = N.KEY_TIPO ;
   	      AND T.PROCESSO $ "Ss" ;
    GROUP BY N.EMPRESA, N.DATA, N.NOTA ;
    INTO TABLE \TMP\A1_TMP

	*-------------------------------------------------------------------*
	* PARTE - 2 ==> JA UNIFICA COM PARTE - 1
	*-------------------------------------------------------------------*


   SELECT N.*,;
		  I.ORDEM,;
          ULdefCfo(I.empresa,I.tipo,i.tp_mercad,"SAIDA") AS SET_CFO,;
	  	  I.aliq_icms,;
	  	  I.aliq_ISS,;
	  	  I.aliq_IPI,;
   		  CHRTRAN( STR(i.origem,1)+i.cst," ","0") AS CST,;
          ULCST_ISS(i.vlr_iss,"SAIDA") AS CST_ISS,;
          ULCST_IPI(i.vlripi,"SAIDA") AS CST_IPI,;
          ULGenero(i.tp_mercad,i.classifica,"SAIDA") AS GENERO,;
          ULCFPS(N.UFOrig,N.MunOrig,;
          	N.UFDstn,N.MunDstn,i.tp_mercad,"SAIDA") AS CFPS,;
		 "00" AS CLSCOMNC,;
		 "00" AS CLSGAS,;
		 "00" AS CLSAGUA,;
		 "00" AS CLSENRG;
   	FROM  \TMP\A1_TMP N, &dbf_ITMTMP I;
    WHERE N.NOTA = I.NOTA ;
    GROUP BY N.EMPRESA,N.DATA,N.NOTA,ORDEM ;
    INTO TABLE \TMP\A2_TMP



   SELECT N.*,;
		  SUM(I.base_ISS) AS TOTSERVICO,;
	  	  SUM(I.vlrvenda) AS TOTPRODUTO,;
 		  SUM(I.base_calc) AS BASE_ICMS,;
 		  SUM(I.Base_calc * I.aliq_icms/100) AS VLR_ICMS,;
		  SUM(I.base_isent) AS BASE_ISENT,SUM(I.base_outr) AS BASE_OUTR,;
		  SUM(I.base_sbbrt) AS BASE_SBBRT,;
		  SUM(I.base_subs) AS BASE_SUBS,SUM(I.icms_subs) AS ICMS_SUBS,;
		  SUM(I.base_ISS) AS BASE_ISS,SUM(I.vlr_iss) AS VLR_ISS,;
	  	  SUM(I.base_ipi) AS BASE_IPI,SUM(I.vlripi) AS VLR_IPI,;
	 	  SUM(I.base_isipi) AS BASE_ISIPI,0.00 AS VL_OUT_IPI,;
	  	  SUM(I.vlrvenda) AS VLR_ITEM,;
	  	  SUM(I.vlrvenda+I.icms_subs+I.vlripi) AS TOTAL_NOTA;
   	FROM  \TMP\A2_TMP N, &dbf_ITMTMP I;
    WHERE N.NOTA=I.NOTA  AND N.ORDEM=I.ORDEM ;
    GROUP BY N.EMPRESA,N.DATA,N.NOTA,N.SET_CFO,N.ALIQ_ICMS ;
    INTO TABLE \TMP\A3_TMP

    =UP_fecha("A2_TMP" ,.T.)


	*-------------------------------------------------------------------*
    *-----> CANCELADAS
	*-------------------------------------------------------------------*

	SELECT ;
		N.CGC,N.empresa,N.nota,N.serie,;
		"1"	AS IND_OPER,;
		"0"	AS IND_EMIT,;
		"01" AS COD_MOD,;
		"02" AS COD_SIT,;
		N.cupom,;
		N.favorecido,;
		N.tp_pessoa,;
		IIF(N.tp_pessoa=1,STR(N.favorecido,11),STR(0,11)) AS CPF,;
		IIF(N.tp_pessoa=2,STR(N.favorecido,14),STR(0,14)) AS CNPJ,;
		N.inscricao,N.UFOrig,N.MunOrig,;
		N.uf,N.UF AS UFDstn,N.cidade AS MunDstn,;
		N.tipo,N.data,;
		N.vlrfrete,N.vlrseguro,N.vlrdespes,;
		N.status,N.total_nota AS VlrNota,;
		N.aliq_icms,N.ALIQ_ISS,;
		N.cfo AS SET_CFO,"00" AS CST,"0000" AS CFPS,;
		"00" AS CST_ISS,"00" AS CST_IPI,"00" AS GENERO,"00" AS CLSCOMNC,;
		"00" AS CLSGAS,"00" AS CLSAGUA,"00" AS CLSENRG,;
		N.base_icms,(N.Base_icms * N.aliq_icms/100) AS VLR_ICMS,;
		N.TOTSERVICO,N.TOTPRODUTO,;
		N.base_isent,N.base_outr,N.base_sbbrt,N.base_subs,N.icms_subs,;
		N.base_iss,N.vlr_iss,N.base_ipi,N.VLR_IPI,;
		N.base_isipi,0.00 AS VL_OUT_IPI,0.00 AS VLR_ITEM,;
		N.TOTAL_NOTA;
	FROM &dbf_NFSTMP N, &dbf_TIPTMP T;
	WHERE     N.status=2 AND N.operacao="S";
   		  AND N.CUPOM=0 AND T.KEY_TIPO=N.KEY_TIPO ;
    INTO TABLE \TMP\TMP2


    SELE A3_TMP
    APPEND FROM \TMP\TMP2
	*-------------------------------------------------------------------*
    *-----> UNIAO CANCELADAS E NAO CANCELADAS
	*-------------------------------------------------------------------*
    =UP_fecha("TMP2" ,.T.)


    SELECT * FROM \TMP\A3_TMP ;
     ORDER BY EMPRESA, DATA, NOTA, SET_CFO, ALIQ_ICMS ;
    	INTO TABLE  \TMP\LIVROSAI
*---------------------------------------------------------------------*
	GO TOP
    =UP_fecha("A3_TMP" ,.T.)

	
RETURN





*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4L70X0C3A           BKPULItmSda54 VALID                ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0310A,     Record Number:   74  ╨
*       ╨ Variable:            BKPULItmSda54                      ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      89                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _4l70x0c3a     &&  BKPULItmSda54 VALID
#REGION 2
return

FUNCTION BKPULItmSda54
	*-------------------------------------------------------------------*
	*	ITENS DAS NOTAS DE SAIDA
	*-------------------------------------------------------------------*

   SELECT ;
          "1"  AS IND_OPER,;
          "0"  AS IND_EMIT,;
   		  "01"  AS COD_MOD,;
   		  "00"  AS COD_SIT,;
   		  NF.EMPRESA, NF.NOTA,;
   		  NF.SERIE, NF.CUPOM, NF.FAVORECIDO, NF.TP_PESSOA, NF.INSCRICAO,;
          NF.UF, NF.tipo, NF.data, NF.vlrfrete,;
		  NF.vlrseguro, NF.vlrdespes, NF.status,;
          NF.total_nota AS VlrNota,;
		  ULdefCfo(NF.empresa,NF.tipo,it.tp_mercad,"SAIDA") AS SET_CFO,;
	  	  IT.codigo, IT.CLASSIFICA, IT.DESCRICAO, IT.UNIDADE,;
	  	  IT.ORIGEM,IT.CST,IT.ALIQ_IPI, IT.ALIQ_ICMS,;
	  	  IT.IVA, IT.TP_MERCAD, IT.QTDE, IT.VLRVENDA, IT.BASE_CALC,;
	  	  IT.BASE_SUBS,;
	 	  IT.base_isent,;
		  IT.base_outr, ;
	  	  IT.base_ipi,;
	  	  IT.vlripi,;
	 	  IT.base_isipi,;
		  0,00  AS VL_OUT_IPI;
   	FROM  &dbf_NFSTMP NF,;
   	      &dbf_TIPTMP TP,;
   	      &dbf_ITMTMP IT ;
    WHERE ;
              NF.status = 1 ;
   		  AND NF.operacao = "S" AND NF.CUPOM = 0 ;
   		  AND TP.KEY_TIPO = NF.KEY_TIPO ;
   	      AND TP.PROCESSO $ "Ss" ;
   		  AND LEFT(IT.OPERACAO,1) = "S" ;
   	 	  AND IT.EMPRESA = NF.EMPRESA ;
   		  AND IT.NOTA    = NF.NOTA ;
   		  AND IT.SERIE   = NF.SERIE ;
    ORDER BY NF.EMPRESA, NF.DATA, NF.NOTA, IT.CODIGO ;
  	INTO CURSOR ILIVROSAI



RETURN



*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4L70X0C3B           ULNVMapaResumoECF VALID            ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0310A,     Record Number:   75  ╨
*       ╨ Variable:            ULNVMapaResumoECF                  ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      90                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*


FUNCTION _4l70x0c3b     &&  ULNVMapaResumoECF VALID
#REGION 2
RETURN

*****************************************************************
FUNCTION ULNVMapaResumoECF
PARAMETERS PrmEmp,PrmDtIni,PrmDtFin



	=ULLvrAnlCpm()

	=ULcfoPreponderante()


   * "0"                 		AS IND_MR,;
   *   LEFT(EMP.ecf_serie+SPACE(15),15)	AS ECF_FAB,;




	SELECT ;
	   STR(EMP.CGC,14) 			AS UNEM_CNPJ,;
	   MP.DATA AS DATA,;
	   STR(EMP.CGC,14) 			AS CGC,;
	   STR(EMP.CGC,14) 			AS EMPRESA,;
	   "1"                 		AS IND_MR,;
	   LEFT(EMP.ecf_serie+SPACE(20),20)	AS ECF_FAB,;
	   "2D"                 	AS COD_MOD,;
	   EMP.TIPO_ECF             AS ECF_MOD,;
       STR(MP.ECF,4)   			AS ECF_CX,;
	   STR(MP.CTRREINICI,6)		AS CRO,;
	   STR(MP.CTRREDUCAO,6) 	AS CRZ,;
	   STR(MP.CTO_INICIO,6) 	AS NUM_DOC_INI,;
	   STR(MP.CTO_FIM,6)		AS NUM_DOC_FIN,;
	   STR(MP.GT_INICIAL,12,2) 	AS GT_INI,;
	   STR(MP.GT_FINAL,12,2)   	AS GT_FIN,;
	   MP.DATA AS DT_DOC,;
      "5403"	        AS CFO_PREP,;
	  MP.ALIQUOTA       AS  ALIQ_ICMS,;
	  MP.VLRCONTAB      AS VL_BRT,;
      MP.CANC_ISSQN     AS VLCANISSQN,;
      MP.CANC_ICMS  	AS VLCANICMS,;
	  MP.CANCELA     	AS VL_CAN,;
      MP.DESC_ISSQN	    AS VLDSCISSQN,;
	  MP.DESC_ICMS 	    AS VLDSCICMS,;
      MP.DESCONTO		AS VLDSC,;
      MP.ACMO_ISSQN	    AS VLACMISSQN,;
	  MP.ACMO_ICMS	    AS VLACMICMS,;
	  MP.ACRESCIMO	   	AS VLACM,;
	  MP.VLRSERVICO     AS VL_ISSQN,;
      MP.VLRCONTAB 	    AS VL_CONT,;
  	  0    AS VL_BC_ICMS,;
   	  0    AS VL_ICMS,;
   	  MP.VLRISENT	AS VL_ISEN,;
   	  MP.BASE_ALIQ	AS VL_LIQ,;
	  0          	AS VL_NT,;
   	  MP.VLRSUBST	AS VL_ST,;
      "0"			AS COD_INF_OBS;
	  FROM 	EMPRESA  EMP, ;
	       	MAPAECF  MP ;
	  WHERE EMP.EMPRESA = PrmEmp ;
	  	AND MP.EMPRESA = PrmEmp ;
	  	AND MP.DATA >= PrmDtIni ;
	  	AND MP.DATA <= PrmDtFin ;
	  GROUP BY UNEM_CNPJ,;
  			DT_DOC,;
  			ECF_CX;
	  ORDER  BY UNEM_CNPJ,;
  			DT_DOC,;
  			ECF_CX;
	  INTO CURSOR  TMPReducao





	


	SELECT  *;
	FROM TMPReducao ;
	INTO TABLE  \TMP\LVMapaECF

	*-------------------------------------------------------------------*

RETURN




*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4L70X0C49           ULLvrInvt VALID                    ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0310A,     Record Number:   76  ╨
*       ╨ Variable:            ULLvrInvt                          ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      91                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*

FUNCTION _4l70x0c49     &&  ULLvrInvt VALID
#REGION 2
RETURN

*****************************************************************
*  INVENTARIO
*****************************************************************
FUNCTION ULDESCARTELvrInvt
PARAMETERS PrmEmp,PrmDtFim


    LNzera = val("0000000000000000000000,00")








IF PrmDtFim < {01.01.2013}
    =ULOLDLvrInvt(PrmEmp,PrmDtFim)
ELSE
	 LSdirCOMUM = "Q:\SCGC\COMUM\"

     IF YEAR(PrmDtFim) <> YEAR(WP_DTOPER)
		 DO CASE
			CASE YEAR(PrmDtFim) = 2012
				 LSdir      = "O:\SCGC2012\CENTRAL\"
			CASE YEAR(PrmDtFim) = 2013
				 LSdir      = "O:\SCGC2013\CENTRAL\"
			CASE YEAR(PrmDtFim) = 2014
				 LSdir      = "O:\SCGC2014\CENTRAL\"
			CASE YEAR(PrmDtFim) = 2015
				 LSdir      = "O:\SCGC2015\CENTRAL\"
			CASE YEAR(PrmDtFim) = 2016
				 LSdir      = "O:\SCGC2016\CENTRAL\"
	
		 ENDCASE
	ELSE
		 LSdir      = wp_diroper

	ENDIF


*======================================= *

	 LSFileSaldo   = LSdir + "SALDO"
	 LSFileItemmov = LSdir + "ITEMMOV"
	 LSFileEmpresa = LSdir + "EMPRESA"


*======================================= *

	IF USED("SALDO")
	  SELE SALDO
	  USE
	ENDIF	


*	IF USED("GRUPO")
*	  SELE GRUPO
*	  USE
*	ENDIF	



	IF USED("ITEMMOV")
	  SELE ITEMMOV
	  USE
	ENDIF	

	 sele 0
	 use &LSFileSaldo alias saldo
	

*
*	 sele 0
*	 use &LSFileGrupo alias grupo
*




	 sele 0
	 use &LSFileItemmov alias ITEMMOV

	=IV_INVT(PrmEmp,PrmDtFim)
	

	IF USED("SALDO")
	  SELE SALDO
	  USE
	ENDIF	

*
*	IF USED("GRUPO")
*	  SELE GRUPO
*	  USE
*	ENDIF	
*


	IF USED("ITEMMOV")
	  SELE ITEMMOV
	  USE
	ENDIF	
	
ENDIF



RETURN

* ======================================= *
* ======================================= *
* ======================================= *
* ======================================= *
* ======================================= *


* ======================================= *
* ======================================= *
* ======================================= *
* ======================================= *
* ======================================= *


FUNCTION IV_INVT
PARAMETERS LNemp,LDdataInventario


 IF FILE("\TMP\TMP_MOV.DBF")
    DELETE FILE "\TMP\TMP_MOV.DBF"
 ENDIF


 IF FILE("\TMP\INVNTRIO.DBF")
    DELETE FILE "\TMP\INVNTRIO.DBF"
 ENDIF


 IF FILE("\TMP\QLA.DBF")
    DELETE FILE "\TMP\QLA.DBF"
 ENDIF


 IF FILE("\TMP\SCA.DBF")
    DELETE FILE "\TMP\SCA.DBF"
 ENDIF




 IF FILE("\TMP\SLD_ANTE.DBF")
    DELETE FILE "\TMP\SLD_ANTE.DBF"
 ENDIF


 IF FILE("\TMP\ENTRADAS.DBF")
    DELETE FILE "\TMP\ENTRADAS.DBF"
 ENDIF


 IF FILE("\TMP\SAIDAS.DBF")
    DELETE FILE "\TMP\SAIDAS.DBF"
 ENDIF


 IF FILE("\TMP\SLD_ATU.DBF")
    DELETE FILE "\TMP\SLD_ATU.DBF"
 ENDIF


 IF FILE("\TMP\COMPLE.DBF")
    DELETE FILE "\TMP\COMPLE.DBF"
 ENDIF


 IF FILE("\TMP\TMPINVT.DBF")
    DELETE FILE "\TMP\TMPINVT.DBF"
 ENDIF


 IF FILE("\TMP\TMPINVT2.DBF")
    DELETE FILE "\TMP\TMPINVT2.DBF"
 ENDIF

 IF FILE("\TMP\TMPINVT3.DBF")
    DELETE FILE "\TMP\TMPINVT3.DBF"
 ENDIF

 IF FILE("\TMP\TMPRESUM.DBF")
    DELETE FILE "\TMP\TMPRESUM.DBF"
 ENDIF





 =IV_TMPMOV(LNemp,LDdataInventario)  && FILTRA ITEMMOV


 *==================================*


 =IV_SLDANT(LNemp,LDdataInventario)


 *==================================*


 =IV_ENTRADAS(LNemp,LDdataInventario)


 =IV_SAIDAS(LNemp,LDdataInventario)


 *==================================*


 =IV_SLDATU(LNemp,LDdataInventario)


 =IV_QLA(LNemp,LDdataInventario)

 =IV_SCA(LNemp,LDdataInventario)


 =IV_COMPLE(LNemp,LDdataInventario)

 *==================================*

 =IV_Union()

 *==================================*

 =IV_SomaInvt()

 =IV_InvtFinal(LNemp,LDdataInventario)

* =IV_InvtResumido(LNemp,LDdataInventario)


 =IV_NvLvrInvt(LNemp,LDdataInventario)


return


FUNCTION IV_TMPMOV
PARAMETERS PrmEmp,PrmDtFim

	*-------------------------------------------------------------------*
	*-------------------------------------------------------------------*
	SELECT 	;
           IT.EMPRESA,;
           IT.CODIGO,;
           IT.QTDE,;
           IT.TIPO,;
           IT.OPERACAO,;
           IT.DATA,;
           IT.MOVESTQ;
    FROM GRUPO GR,;
         ITEMMOV IT;
    WHERE ;
        	gr.cdg_tipo = 4;
        AND (gr.tp_control = 1 or gr.tp_control = 4);
        AND STRTRAN(STR(PrmEmp,3),' ','0') $ gr.empresas ;
        AND IT.EMPRESA = PrmEmp ;
     	AND IT.CODIGO = GR.CODIGO ;
        AND YEAR(IT.DATA) = YEAR(PrmDtFim);
    ORDER BY GR.CODIGO;
   	INTO TABLE  \TMP\TMP_MOV

*---------------------------------------------------------------------*
	GO TOP

	
RETURN



FUNCTION IV_SldANT
PARAMETERS PrmEmp,PrmDtFim

	*-------------------------------------------------------------------*
	SELECT 	;
			PrmEmp           AS EMPRESA,;
			GR.CODIGO        AS COD_ITEM,;	
		    SUM(SL.VLR_ATU)  AS VL_ITEM,;
			SUM(SL.SLD_ANTE) AS SLD_ANTE,;
			SUM(LNzera)      AS ENTRADAS,;
			SUM(LNzera)      AS SAIDAS,;
			SUM(LNzera)      AS SLD_ATU,;
			SUM(LNzera)      AS VLR_ATU,;
			SUM(LNzera)      AS QLA,;
			SUM(LNzera)      AS SCA,;
			SUM(LNzera)      AS COMPLE;
    FROM GRUPO GR,;
         SALDO SL;
    WHERE ;
        	gr.cdg_tipo = 4;
        AND (gr.tp_control = 1 or gr.tp_control = 4);
        AND STRTRAN(STR(PrmEmp,3),' ','0') $ gr.empresas ;
        AND SL.EMPRESA = PrmEmp ;
     	AND SL.CODIGO = GR.CODIGO ;
        AND YEAR(SL.DTABERT) = YEAR(PrmDtFim);
        AND MONTH(DTABERT) = 1 ;
    ORDER BY GR.CODIGO;
    GROUP BY GR.CODIGO;
   	INTO TABLE  \TMP\SLD_ANTE

*---------------------------------------------------------------------*
	GO TOP

	
RETURN








FUNCTION IV_ENTRADAS
PARAMETERS PrmEmp,PrmDtFim

	*-------------------------------------------------------------------*
	*-------------------------------------------------------------------*
	SELECT 	;
			PrmEmp           AS EMPRESA,;
			GR.CODIGO        AS COD_ITEM,;	
		    SUM(LNzera)      AS VL_ITEM,;
			SUM(LNzera)      AS SLD_ANTE,;
			SUM(IT.QTDE)     AS ENTRADAS,;
			SUM(LNzera)      AS SAIDAS,;
			SUM(LNzera)      AS SLD_ATU,;
			SUM(LNzera)      AS VLR_ATU,;
			SUM(LNzera)      AS QLA,;
			SUM(LNzera)      AS SCA,;
			SUM(LNzera)      AS COMPLE;
    FROM GRUPO GR,;
         TMP_MOV IT;
    WHERE ;
        	gr.cdg_tipo = 4;
        AND (gr.tp_control = 1 or gr.tp_control = 4);
        AND STRTRAN(STR(PrmEmp,3),' ','0') $ gr.empresas ;
        AND IT.EMPRESA = PrmEmp ;
     	AND IT.CODIGO = GR.CODIGO ;
     	AND IT.TIPO <> "QLA" ;
     	AND IT.MOVESTQ = "S" ;
     	AND LEFT(IT.OPERACAO,1) = "E";
        AND YEAR(IT.DATA) = YEAR(PrmDtFim);
    ORDER BY GR.CODIGO;
    GROUP BY GR.CODIGO;
   	INTO TABLE  \TMP\ENTRADAS

*---------------------------------------------------------------------*
	GO TOP

	
RETURN


FUNCTION IV_SAIDAS
PARAMETERS PrmEmp,PrmDtFim

	*-------------------------------------------------------------------*
	*-------------------------------------------------------------------*
	SELECT 	;
			PrmEmp           AS EMPRESA,;
			GR.CODIGO        AS COD_ITEM,;	
		    SUM(LNzera)      AS VL_ITEM,;
			SUM(LNzera)      AS SLD_ANTE,;
			SUM(LNzera)      AS ENTRADAS,;
			SUM(IT.QTDE)     AS SAIDAS,;
			SUM(LNzera)      AS SLD_ATU,;
			SUM(LNzera)      AS VLR_ATU,;
			SUM(LNzera)      AS QLA,;
			SUM(LNzera)      AS SCA,;
			SUM(LNzera)      AS COMPLE;
    FROM GRUPO GR,;
         TMP_MOV IT;
    WHERE ;
        	gr.cdg_tipo = 4;
        AND (gr.tp_control = 1 or gr.tp_control = 4);
        AND STRTRAN(STR(PrmEmp,3),' ','0') $ gr.empresas ;
        AND IT.EMPRESA = PrmEmp ;
     	AND IT.CODIGO = GR.CODIGO ;
     	AND IT.TIPO <> "SCA" ;
     	AND IT.MOVESTQ = "S" ;
     	AND LEFT(IT.OPERACAO,1) = "S";
        AND YEAR(IT.DATA) = YEAR(PrmDtFim);
    ORDER BY GR.CODIGO;
    GROUP BY GR.CODIGO;
   	INTO TABLE  \TMP\SAIDAS

*---------------------------------------------------------------------*
	GO TOP

	
RETURN


FUNCTION IV_SldATU
PARAMETERS PrmEmp,PrmDtFim

	*-------------------------------------------------------------------*
	SELECT 	;
			PrmEmp           AS EMPRESA,;
			GR.CODIGO        AS COD_ITEM,;	
		    SUM(SL.VLR_ATU)  AS VL_ITEM,;
			SUM(LNzera)      AS SLD_ANTE,;
			SUM(LNzera)      AS ENTRADAS,;
			SUM(LNzera)      AS SAIDAS,;
			SUM(SL.SLD_ATU)  AS SLD_ATU,;
			SUM(SL.VLR_ATU)  AS VLR_ATU,;
			SUM(LNzera)      AS QLA,;
			SUM(LNzera)      AS SCA,;
			SUM(LNzera)      AS COMPLE;
    FROM GRUPO GR,;
         SALDO SL;
    WHERE ;
        	gr.cdg_tipo = 4;
        AND (gr.tp_control = 1 or gr.tp_control = 4);
        AND STRTRAN(STR(PrmEmp,3),' ','0') $ gr.empresas ;
        AND SL.EMPRESA = PrmEmp ;
     	AND SL.CODIGO = GR.CODIGO ;
        AND YEAR(SL.DTABERT) = YEAR(PrmDtFim);
        AND MONTH(DTABERT) = MONTH(PrmDtFim) ;
    ORDER BY GR.CODIGO;
    GROUP BY GR.CODIGO;
   	INTO TABLE  \TMP\SLD_ATU

*---------------------------------------------------------------------*
	GO TOP

	
RETURN


FUNCTION IV_QLA
PARAMETERS PrmEmp,PrmDtFim

	*-------------------------------------------------------------------*
	*-------------------------------------------------------------------*
	SELECT 	;
			PrmEmp           AS EMPRESA,;
			GR.CODIGO        AS COD_ITEM,;	
		    SUM(LNzera)      AS VL_ITEM,;
			SUM(LNzera)      AS SLD_ANTE,;
			SUM(LNzera)      AS ENTRADAS,;
			SUM(LNzera)      AS SAIDAS,;
			SUM(LNzera)      AS SLD_ATU,;
			SUM(LNzera)      AS VLR_ATU,;
			SUM(IT.QTDE)     AS QLA,;
			SUM(LNzera)      AS SCA,;
			SUM(LNzera)      AS COMPLE;
    FROM GRUPO GR,;
         TMP_MOV IT;
    WHERE ;
        	gr.cdg_tipo = 4;
        AND (gr.tp_control = 1 or gr.tp_control = 4);
        AND STRTRAN(STR(PrmEmp,3),' ','0') $ gr.empresas ;
        AND IT.EMPRESA = PrmEmp ;
     	AND IT.CODIGO = GR.CODIGO ;
     	AND IT.TIPO = "QLA" ;
        AND YEAR(IT.DATA) = YEAR(PrmDtFim);
        AND MONTH(IT.DATA) <= MONTH(PrmDtFim) ;
    ORDER BY GR.CODIGO;
    GROUP BY GR.CODIGO;
   	INTO TABLE  \TMP\QLA

*---------------------------------------------------------------------*
	GO TOP

	
RETURN



FUNCTION IV_SCA
PARAMETERS PrmEmp,PrmDtFim

	*-------------------------------------------------------------------*
	*-------------------------------------------------------------------*
	SELECT 	;
			PrmEmp           AS EMPRESA,;
			GR.CODIGO        AS COD_ITEM,;	
		    SUM(LNzera)      AS VL_ITEM,;
			SUM(LNzera)      AS SLD_ANTE,;
			SUM(LNzera)      AS ENTRADAS,;
			SUM(LNzera)      AS SAIDAS,;
			SUM(LNzera)      AS SLD_ATU,;
			SUM(LNzera)      AS VLR_ATU,;
			SUM(LNzera)      AS QLA,;
			SUM(IT.QTDE)     AS SCA,;
			SUM(LNzera)      AS COMPLE;
    FROM GRUPO GR,;
         TMP_MOV IT;
    WHERE ;
        	gr.cdg_tipo = 4;
        AND (gr.tp_control = 1 or gr.tp_control = 4);
        AND STRTRAN(STR(PrmEmp,3),' ','0') $ gr.empresas ;
        AND IT.EMPRESA = PrmEmp ;
     	AND IT.CODIGO = GR.CODIGO ;
     	AND IT.TIPO = "SCA" ;
        AND YEAR(IT.DATA) = YEAR(PrmDtFim);
        AND MONTH(IT.DATA) <= MONTH(PrmDtFim) ;
    ORDER BY GR.CODIGO;
    GROUP BY GR.CODIGO;
   	INTO TABLE  \TMP\SCA

*---------------------------------------------------------------------*
	GO TOP

	
RETURN


FUNCTION IV_COMPLE
PARAMETERS PrmEmp,PrmDtFim

	*-------------------------------------------------------------------*
	*-------------------------------------------------------------------*
	SELECT 	;
			PrmEmp           AS EMPRESA,;
			GR.CODIGO        AS COD_ITEM,;	
		    SUM(LNzera)      AS VL_ITEM,;
			SUM(LNzera)      AS SLD_ANTE,;
			SUM(LNzera)      AS ENTRADAS,;
			SUM(LNzera)      AS SAIDAS,;
			SUM(LNzera)      AS SLD_ATU,;
			SUM(LNzera)      AS VLR_ATU,;
			SUM(LNzera)      AS QLA,;
			SUM(LNzera)      AS SCA,;
			SUM(IT.QTDE)     AS COMPLE;
    FROM GRUPO GR,;
         TMP_MOV IT;
    WHERE ;
        	gr.cdg_tipo = 4;
        AND (gr.tp_control = 1 or gr.tp_control = 4);
        AND STRTRAN(STR(PrmEmp,3),' ','0') $ gr.empresas ;
        AND IT.EMPRESA = PrmEmp ;
     	AND IT.CODIGO = GR.CODIGO ;
     	AND IT.TIPO $ "VFN/VFO/VFP/VLG/VLH/VLI/VLJ" ;
        AND YEAR(IT.DATA) = YEAR(PrmDtFim);
        AND MONTH(IT.DATA) <= MONTH(PrmDtFim) ;
    ORDER BY GR.CODIGO;
    GROUP BY GR.CODIGO;
   	INTO TABLE  \TMP\COMPLE

*---------------------------------------------------------------------*
	GO TOP

	
RETURN




FUNCTION IV_Union

	*-------------------------------------------------------------------*
	*-------------------------------------------------------------------*
	SELECT  	;
	  * ;
      FROM SLD_ANTE ;
    UNION ;
	SELECT  	;
	  * ;
      FROM ENTRADAS ;
    UNION ;
	SELECT  	;
	  * ;
      FROM SAIDAS ;
    UNION ;
	SELECT  	;
	  * ;
      FROM SLD_ATU ;
    UNION ;
	SELECT  	;
	  * ;
      FROM QLA ;
    UNION ;
	SELECT  	;
	  * ;
      FROM SCA ;
    UNION ;
	SELECT  	;
	  * ;
      FROM COMPLE ;
   	INTO TABLE  \TMP\TMPINVT


*---------------------------------------------------------------------*
	GO TOP

	
RETURN



FUNCTION IV_SomaInvt
	SELECT  	;
	  EMPRESA, ;
	  COD_ITEM,;
      SUM(VL_ITEM)          AS VL_ITEM,;
      SUM(SLD_ANTE)         AS SLD_ANTE,;
 	  SUM(ENTRADAS)         AS ENTRADAS,;
	  SUM(SAIDAS)           AS SAIDAS,;
	  SUM(SLD_ATU)          AS SLD_FINAL, ;
	  SUM(SLD_ATU)          AS SLD_ATU, ;
	  SUM(VLR_ATU)          AS VLR_ATU,;
	  SUM(QLA)              AS QLA, ;
 	  SUM(SCA)              AS SCA, ;
 	  SUM(COMPLE)           AS COMPLE, ;
 	  SUM(QLA-SCA)          AS MOV_N_FISCAL;
    FROM TMPINVT ;
    GROUP BY ;
	  EMPRESA, ;
	  COD_ITEM;
   	INTO TABLE  \TMP\TMPINVT2


*---------------------------------------------------------------------*
	GO TOP

	
RETURN



FUNCTION IV_InvtFinal
PARAMETERS PrmEmp,PrmDtFim
	SELECT  	;
	  INV.EMPRESA, ;
	  EMP.SIGLA,;
	  prdt.classifica,;
	  INV.COD_ITEM           AS CODIGO,;
	  PRDT.DESCRICAO,;
;
      INV.SLD_ANTE,;
      INV.ENTRADAS,;
      INV.SAIDAS,;
  	  INV.COMPLE, ;
      (INV.SLD_ANTE + INV.ENTRADAS - INV.SAIDAS - INV.COMPLE  ) AS INVT_FISCAL ,;
	  INV.SLD_FINAL  AS INVT_REAL,  ;
;
      (INV.SLD_ANTE + INV.ENTRADAS - INV.SAIDAS - INV.COMPLE - INV.SLD_FINAL  ) AS DIFERENCA ,;
      INV.SLD_ATU,;
      INV.VLR_ATU,;
	  INV.QLA, ;
 	  INV.SCA, ;
    ;
 	  INV.MOV_N_FISCAL;
    FROM TMPINVT2 INV ,;
         EMPRESA EMP ,;
         GRUPO PRDT ;
    WHERE PRDT.CODIGO = INV.COD_ITEM ;
        AND EMP.EMPRESA = PrmEMP ;
   	INTO TABLE  \TMP\TMPINVT3


*---------------------------------------------------------------------*
	GO TOP

	
RETURN





FUNCTION IV_NvLvrInvt
PARAMETERS PrmEmp,PrmDtFim

	*-------------------------------------------------------------------*
	*-------------------------------------------------------------------*
	SELECT 	;
			PrmEmp AS EMPRESA,;
			EMP.SIGLA,;
			PrmDtFim AS DATA,;			
			"0" AS IND_PROP,;
	        "00000000000" AS CPF,;
	        "00000000000000" AS CNPJ,;
	        "0" AS IND_INV,;
	        GR.COD_NCM,;
			GR.CODIGO AS COD_ITEM,;	
			gr.unidade as unid,;
			IIF(SL.INVT_FISCAL<=0,SL.INVT_FISCAL*0,SL.VLR_ATU/SL.SLD_ATU);
			     AS VL_UNIT,;
			IIF(SL.INVT_FISCAL<=0,SL.INVT_FISCAL*0,SL.INVT_FISCAL);
			     AS  QTD,;
			IIF(SL.INVT_FISCAL<=0,SL.INVT_FISCAL*0,;
			     (SL.VLR_ATU/SL.SLD_ATU)*SL.INVT_FISCAL)  ;
                 AS VL_ITEM,;
			GR.CTA_CONTAB, ;
			GR.DESCRICAO ;
    FROM GRUPO GR,;
         EMPRESA EMP ,;
         \TMP\TMPINVT3 SL   ;
    WHERE ;
        	gr.cdg_tipo = 4;
        AND EMP.EMPRESA = PrmEmp ;
        AND (gr.tp_control = 1 or gr.tp_control = 4);
        AND STRTRAN(STR(PrmEmp,3),' ','0') $ gr.empresas ;
     	AND SL.CODIGO = GR.CODIGO ;
    ORDER BY GR.CODIGO;
   	INTO TABLE  \TMP\INVNTRIO

*---------------------------------------------------------------------*
	GO TOP

	
RETURN



*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4L70X0C4R           ULLvrInvt VALID                    ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0310A,     Record Number:   77  ╨
*       ╨ Variable:            ULLvrInvt                          ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      92                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*

FUNCTION _4l70x0c4r     &&  ULLvrInvt VALID
#REGION 2
RETURN

*****************************************************************
*  INVENTARIO
*****************************************************************
FUNCTION ULLvrInvt
PARAMETERS PrmEmp,PrmDtFim

	*-------------------------------------------------------------------*
	*-------------------------------------------------------------------*
	SELECT 	;
			PrmEmp AS EMPRESA,;
			PrmDtFim AS DATA,;			
			"0" AS IND_PROP,;
	        "00000000000" AS CPF,;
	        "00000000000000" AS CNPJ,;
	        "0" AS IND_INV,;
	        GR.COD_NCM,;
			GR.CODIGO AS COD_ITEM,;	
			gr.unidade as unid,;
			IIF(SL.SLD_ATU=0,SL.SLD_ATU*0,SL.VLR_ATU/SL.SLD_ATU);
			     AS VL_UNIT,;
			SL.SLD_ATU AS QTD,;
			SL.VLR_ATU AS VL_ITEM,;
			GR.CTA_CONTAB, ;
			GR.DESCRICAO ;
    FROM GRUPO GR,;
         SALDO SL;
    WHERE ;
        	gr.cdg_tipo = 4;
        AND (gr.tp_control = 1 or gr.tp_control = 4);
        AND SL.EMPRESA = PrmEmp ;
     	AND SL.CODIGO = GR.CODIGO ;
        AND YEAR(SL.DTABERT) = YEAR(PrmDtFim);
        AND MONTH(SL.DTABERT) = MONTH(PrmDtFim) ;
    ORDER BY GR.CODIGO;
   	INTO TABLE  \TMP\INVNTRIO
   	

*
*        AND STRTRAN(STR(PrmEmp,3),' ','0') $ gr.empresas ;
*   	
   	
   	
   	
   	

*---------------------------------------------------------------------*
	GO TOP

	
RETURN





*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4L70X0C4S           ADCmdLimpaCabXML VALID             ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0310B,     Record Number:    2  ╨
*       ╨ Variable:            ADCmdLimpaCabXML                   ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      93                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*

FUNCTION _4l70x0c4s     &&  ADCmdLimpaCabXML VALID
#REGION 3
RETURN

FUNCTION ADCmdLimpaCabXML

	*------------------------------------------------------------*
	* ESTE COMANDO SERVA PARA ELIMINAR CARACTERES INDESEJADOS
	* DO CABECALHO XML
	*-----------------------------------------------------------*
	SELE xmlPrtcp
	REPLACE ALL XML_LINHA WITH chrtran(XML_LINHA,chr(9),chr(32))
	REPLACE ALL XML_ORDEM WITH RECNO()
	GO BOTT
	SKIP -1
	REPLACE ALL XML_ORDEM WITH 9999999999901
	SKIP	
	REPLACE ALL XML_ORDEM WITH 9999999999902
	

RETURN


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4L70X0C4T           ADVld_TpPessoa VALID               ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0310B,     Record Number:    3  ╨
*       ╨ Variable:            ADVld_TpPessoa                     ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      94                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*

FUNCTION _4l70x0c4t     &&  ADVld_TpPessoa VALID
#REGION 3
RETURN


FUNCTION ADVld_TpPessoa
PARAMETERS PrmEmp,PrmDtIni,PrmDtFin
	SELE NOTA
	SET ORDER TO TAG DATA
	SET NEAR ON
	SEEK STR(PrmEmp,3)+DTOS(PrmDtIni)
	SET NEAR OFF
	DO WHILE !EOF() AND nota.empresa = PrmEmp AND nota.data <= PrmDtFin
		=W_DEFPROC("CLIENTES.SPR")
		LNtmp = CLCalc_cgc(nota.favorecido)


		DO CASE
			CASE  LNtmp = "3"
				**do obj_mens.spr  with W_MSG
				m.tp_pessoa = 1
			CASE LNtmp = "1" 		&& CPF
				m.tp_pessoa = 1
			OTHERWISE
				m.tp_pessoa = 2
		ENDCASE

		SELE CLIENTES
		SET ORDER TO TAG CLIENTE
		SEEK nota.favorecido
		IF FOUND()
		   m.cep = int(val(clientes.cep))
		ELSE
		   m.cep = nota.cep
		ENDIF	

		SELE NOTA
		



		if m.tp_pessoa <> nota.tp_pessoa
			=rlock()
			replace nota.tp_pessoa with m.tp_pessoa
		endif
		if m.cep <> nota.cep
			=rlock()
			replace nota.cep with m.cep
		endif
		SKIP
	ENDDO


	SELE NOTAENT
	SET ORDER TO TAG RLDTENTR
	SET NEAR ON
	SEEK STR(PrmEmp,3)+DTOS(PrmDtIni)
	SET NEAR OFF
	DO WHILE !EOF() AND notaent.empresa = PrmEmp ;
	   AND notaent.data <= PrmDtFin
		=W_DEFPROC("CLIENTES.SPR")
		LNtmp = CLCalc_cgc(notaent.favorecido)

		DO CASE
			CASE  LNtmp = "3"
				**do obj_mens.spr  with W_MSG
				m.tp_pessoa = 2
			CASE LNtmp = "1" 		&& CPF
				m.tp_pessoa = 1
			OTHERWISE
				m.tp_pessoa = 2
		ENDCASE
		
		SELE FORNECE
		SET ORDER TO TAG CGC
		SEEK notaent.favorecido
		IF FOUND()
		   m.cep = fornece.cep
		ELSE
		   m.cep = notaent.cep
		ENDIF	

		SELE NOTAENT
		if m.tp_pessoa <> notaent.tp_pessoa
			=rlock()
			replace notaent.tp_pessoa with m.tp_pessoa
		endif
		if m.cep <> notaent.cep
			=rlock()
			replace notaent.cep with m.cep
		endif
		SKIP
	ENDDO
	
RETURN


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4L70X0C4U           ADExpXMLDados VALID                ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0310B,     Record Number:    4  ╨
*       ╨ Variable:            ADExpXMLDados                      ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      95                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*

FUNCTION _4l70x0c4u     &&  ADExpXMLDados VALID
#REGION 3
RETURN


FUNCTION ADExpXMLDados
PARAMETERS PrmEmp,PrmDtIni,PrmDtFin,PrmInventario,PrmFinalidade

	
	do  ULDefTmpArq with PrmEmp,PrmDtIni,PrmDtFin


	&&	PrmFinalidade  = "SINTEGRA"
	&& OU
	&&	PrmFinalidade  = "EFD"
	

	IF TYPE("PrmFinalidade") <> "C"
		PrmFinalidade  = "SINTEGRA"
	ENDIF
			

	IF TYPE("PrmInventario") <> "C"
		PrmInventario  = "N"
	ENDIF

	ACTIVATE WINDOW SCT0310b
	SHOW WINDOW SCT0310b TOP
	CLEAR

	SET TALK ON
	IF PrmFinalidade <> "EFD-SIMPLES"

		WAIT WINDOW "Validando NF" NOWAIT
		=ADVld_TpPessoa(PrmEmp,PrmDtIni,PrmDtFin)

	ENDIF
	

			*----------------------------------------------------------*
			*    GERAR ARQ. RESUMO CONTENDO SO AS NOTAS DO PERIODO E DA
			* EMPRESA SELECIONADA PARA ACELERAR OS OUTROS SELECTs
			*----------------------------------------------------------*
	
	DO ULSelNFs with PrmEmp,PrmDtIni,PrmDtFin
			*----------------------------------------------------------*
			*  SELECIONANDO REGISTROS DE ENTRADA
			*----------------------------------------------------------*
	DO ULSelNFe with PrmEmp,PrmDtIni,PrmDtFin
			*----------------------------------------------------------*
			*  MONTA CURSOR DE TIPO DE OPERACAO
			*----------------------------------------------------------*
	DO ULSelTipo
			*----------------------------------------------------------*


	DO CASE
		CASE PrmFinalidade  = "SINTEGRA"

		*	WAIT WINDOW "Gerando Leitura - Z" NOWAIT
		*	=ADZLeitura(PrmEmp,PrmDtIni,PrmDtFin)

			WAIT WINDOW "Gerando Mapa Resumo ECF/ICMS" NOWAIT
			=ADMapaResumoECF(PrmEmp,PrmDtIni,PrmDtFin)

			WAIT WINDOW "Gerando Cadastro Participantes Clientes" NOWAIT
			=ADClieParticipantes(PrmEmp,PrmDtIni,PrmDtFin)

			WAIT WINDOW "Gerando Cadastro Participantes Fornecedores" NOWAIT
			=ADFRParticipantes(PrmEmp,PrmDtIni,PrmDtFin)
	
			WAIT WINDOW "Gerando Cadastro Itens" NOWAIT
			=ADItens(PrmEmp,PrmDtIni,PrmDtFin)

			WAIT WINDOW "Gerando Livro Saida" NOWAIT
			=ADLivrosaida(PrmEmp,PrmDtIni,PrmDtFin)

			WAIT WINDOW "Gerando Livro Entrada" NOWAIT
			=ADLivroEntrada(PrmEmp,PrmDtIni,PrmDtFin)

			*WAIT WINDOW "Gerando Cupons Saida" NOWAIT
    		*=ADLivroCupons(PrmEmp,PrmDtIni,PrmDtFin)

			IF	PrmInventario  = "S"
				WAIT WINDOW "Gerando Inventario" NOWAIT
			    =ADInventario(PrmEmp,PrmDtIni,PrmDtFin)
			ENDIF
			
			WAIT WINDOW "Gerando Apuracao ICMS" NOWAIT
    		=ADApuraIcms(PrmEmp,PrmDtIni,PrmDtFin)

		CASE PrmFinalidade  = "EFD" OR 	PrmFinalidade = "EFD-SIMPLES"


			WAIT WINDOW "Gerando Mapa Resumo ECF/ICMS" NOWAIT
			=ADMapaResumoECF(PrmEmp,PrmDtIni,PrmDtFin)

			WAIT WINDOW "Gerando Cadastro Itens" NOWAIT
			=ADItens(PrmEmp,PrmDtIni,PrmDtFin)

			IF	PrmInventario  = "S"
				WAIT WINDOW "Gerando Inventario" NOWAIT
			    =ADInventario(PrmEmp,PrmDtIni,PrmDtFin)
			ENDIF




	ENDCASE



	WAIT WINDOW "Exportacao Concluida <Enter>" NOWAIT

	*---------------------------------------------------------------*
	SET TALK off
	do  ULFchTmpArq
	SHOW WINDOW SCT0310 TOP

RETURN


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4L70X0C4V           ADClieParticipantes VALID          ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0310B,     Record Number:    5  ╨
*       ╨ Variable:            ADClieParticipantes                ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      96                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*

FUNCTION _4l70x0c4v     &&  ADClieParticipantes VALID
#REGION 3
RETURN


FUNCTION ADClieParticipantes
PARAMETERS PrmEmp,PrmDtIni,PrmDtFin
*------------------------------------------------------------------*
*  DADOS DE CLIENTES
*------------------------------------------------------------------*

	SELECT ;
	   STR(EMP.CGC,14) AS UNEM_CNPJ,;
	   STR(recno(),6)  AS COD_PART,;
	   LEFT(iif(NF.FAVORECIDO = 0,"CONSUMIDOR..",NF.NOME)+SPACE(80),80);
	   			 AS NOME,;
	   "00001"  AS COD_PAIS,;
	   IIF(NF.TP_PESSOA = 1,STR(0,14),STR(NF.FAVORECIDO,14)) AS CNPJ,;
	   IIF(NF.TP_PESSOA = 2,STR(0,11),STR(NF.FAVORECIDO,11)) AS CPF,;
	   STR(0,12)     AS CEI,;
	   STR(0,11)     AS NIT,;
	   NF.UF         	AS UF,;
	   LEFT(NF.INSCRICAO+SPACE(14),14)  AS IE,;
	   LEFT(NF.INSCSUBST,14)     AS IE_ST,;
	   ADfrmtIBGE(NF.MUNI_IBGE)         AS COD_MUN,;
	   LEFT(SPACE(14),14)  AS IM,;
	   STR(0,9)	AS SUFRAMA,;
	   STRTRAN(STR(NF.CEP,8)," ","0") AS CEP,;
	   LEFT(NF.ENDERECO+SPACE(70),70) AS END,;
	   SPACE(7) AS NUM,;
	   SPACE(30) AS COMPL,;
	   LEFT(IIF(EMPTY(ALLTRIM(nf.BAIRRO)),;
	    "Nao Informado",nf.BAIRRO)+space(30),30) AS BAIRRO,;
	   STR(0,8)  AS CEP_CP,;
	   STR(0,8)  AS CP,;
	   LEFT(NF.FONE+SPACE(13),13)   AS FONE,;
	   SPACE(13)    AS FAX,;
	   SPACE(80)    AS EMAIL,;
	   "C"          AS TIPO;
	  FROM EMPRESA EMP, ;
	       NOTA NF ;
	  WHERE ;
	  	EMP.EMPRESA = PrmEmp ;
	  	AND NF.EMPRESA = PrmEmp ;
		AND NF.FAVORECIDO <> 0;
	  	AND NF.DATA >= PrmDtIni ;
	  	AND NF.DATA <= PrmDtFin ;
	    AND NF.CH_OPERA <> "5" ;
	  GROUP BY NF.FAVORECIDO  ;
	  ORDER BY NF.FAVORECIDO INTO CURSOR CUR_PART

	 =ADGraPrtcpntXML("CLIENTE",PrmEmp,PrmDtIni,PrmDtFin)


RETURN


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4L70X0C5P           ADfrmtIBGE VALID                   ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0310B,     Record Number:    6  ╨
*       ╨ Variable:            ADfrmtIBGE                         ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      97                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*

FUNCTION _4l70x0c5p     &&  ADfrmtIBGE VALID
#REGION 3
RETURN

FUNCTION ADfrmtIBGE
PARAMETERS PrmCodIBGE

	LScod_IBGE= STR(PrmCodIBGE,10)
	IF SUBS(LScod_IBGE,1,3) = "   "
		LScod_IBGE= STR(PrmCodIBGE,7)
	ELSE
		LScod_IBGE= SUBS(LScod_IBGE,1,7)
	ENDIF		
	LScod_IBGE= CHRTRAN(LScod_IBGE," ","0")
return(LScod_IBGE)


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4L70X0C5U           ADFRParticipantes VALID            ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0310B,     Record Number:    7  ╨
*       ╨ Variable:            ADFRParticipantes                  ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      98                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*

FUNCTION _4l70x0c5u     &&  ADFRParticipantes VALID
#REGION 3
RETURN

FUNCTION ADFRParticipantes
PARAMETERS PrmEmp,PrmDtIni,PrmDtFin
*------------------------------------------------------------------*
*------------------------------------------------------------------*
*  DADOS DE FORNRCEDORES
*------------------------------------------------------------------*

	
	
	   *LEFT(FR.BAIRRO+SPACE(30),30)
	
	SELECT ;
	   STR(EMP.CGC,14) AS UNEM_CNPJ,;
	   STR(recno(),6)  AS COD_PART,;
	   LEFT(FR.NOME+SPACE(80),80) AS NOME,;
	   "00001"  AS COD_PAIS,;
	   IIF(FR.TP_PESSOA = 2,STR(FR.CGC,14),STR(0,14)) ;
	   			AS CNPJ,;
	   IIF(FR.TP_PESSOA = 1,STR(FR.CGC,11),STR(0,11)) ;
	   			AS CPF,;
	   STR(0,12)     AS CEI,;
	   STR(0,11)     AS NIT,;
	   FR.ESTADO         	AS UF,;
	   LEFT(FR.INSCRICAO+SPACE(14),14)  AS IE,;
	   LEFT(FR.INSCSUBS,14)     AS IE_ST,;
	   ADfrmtIBGE(FR.MUNI_IBGE)         AS COD_MUN,;
	   LEFT(FR.INSC_MUNI+SPACE(14),14)  AS IM,;
	   LEFT(FR.SUFRAMA,9)      	AS SUFRAMA,;
	   STRTRAN(STR(FR.CEP,8)," ","0") AS CEP,;
	   LEFT(FR.ENDERECO+SPACE(70),70) AS END,;
	   SPACE(7)      AS NUM,;
	   SPACE(30)     AS COMPL,;
	   LEFT(IIF(EMPTY(ALLTRIM(FR.BAIRRO)),;
	    "Nao Informado",FR.BAIRRO)+space(30),30) AS BAIRRO,;
	   STR(0,8)      AS CEP_CP,;
	   STR(0,8)      AS CP,;
	   LEFT(FR.FONE+SPACE(13),13)   AS FONE,;
	   SPACE(13)    AS FAX,;
	   SPACE(80)    AS EMAIL,;
	   "F"          AS TIPO;
	  FROM EMPRESA EMP, ;
    	   FORNECE FR, ;
	       NOTAENT NF ;
	  WHERE ;
	  		EMP.EMPRESA = PrmEmp ;
		AND FR.CGC > 0 ;
	  	AND NF.EMPRESA = PrmEmp ;
	  	AND NF.DATA >= PrmDtIni ;
	  	AND NF.DATA <= PrmDtFin ;
	    AND LEFT(NF.SITUACAO,1) = "C" ;
	    AND !(NF.CH_OPERA $ "5/6") ;
	  	AND NF.CODFORN = FR.CODIGO;
	  GROUP BY NF.FAVORECIDO  ;
	  ORDER BY NF.FAVORECIDO INTO CURSOR CUR_PART
	
	 =ADGraPrtcpntXML("FORNECEDOR",PrmEmp,PrmDtIni,PrmDtFin)

RETURN


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4L70X0C61           ADGraPrtcpntXML VALID              ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0310B,     Record Number:    8  ╨
*       ╨ Variable:            ADGraPrtcpntXML                    ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      99                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*

FUNCTION _4l70x0c61     &&  ADGraPrtcpntXML VALID
#REGION 3
RETURN

FUNCTION ADGraPrtcpntXML
PARAMETERS PrmTipoParticipante,PrmEmp,PrmDtIni,PrmDtFin


  && "CLIENTE" ou "FORNECEDOR"

	  SELECT ;
	   '<ROW UNEM_CNPJ="'+chrtran(UNEM_CNPJ," ","0")+'"'+;
	   CHR(13)+CHR(10)+'COD_PART="'+COD_PART+'"'+;
	   CHR(13)+CHR(10)+'NOME="'+NOME+'"'+;
	   CHR(13)+CHR(10)+'COD_PAIS="'+COD_PAIS+'"'+;
	   CHR(13)+CHR(10)+'CNPJ="'+chrtran(CNPJ," ","0")+'"'+;
	   CHR(13)+CHR(10)+'CPF="'+chrtran(CPF," ","0")+'"' AS PARTE_1,;
	   CHR(13)+CHR(10)+'CEI="'+CEI+'"'+;
	   CHR(13)+CHR(10)+'NIT="'+NIT+'"'+;
	   CHR(13)+CHR(10)+'UF="'+UF+'"'   AS PARTE_2, ;
	   CHR(13)+CHR(10)+'IE="'+IE+'"'+ ;
	   CHR(13)+CHR(10)+'IE_ST="'+IE_ST+'"'+;
	   CHR(13)+CHR(10)+'COD_MUN="'+COD_MUN+'"'+;
	   CHR(13)+CHR(10)+'IM="'+IM+'"'+;
	   CHR(13)+CHR(10)+'SUFRAMA="'+SUFRAMA+'"' AS PARTE_3,;
	   CHR(13)+CHR(10)+'CEP="'+CEP+'"'+;
	   CHR(13)+CHR(10)+'END="'+END+'"'+;
	   CHR(13)+CHR(10)+'NUM="'+NUM+'"'+ ;
	   CHR(13)+CHR(10)+'COMPL="'+COMPL+'"'+;
	   CHR(13)+CHR(10)+'BAIRRO="'+BAIRRO+'"' AS PARTE_4,;
	   CHR(13)+CHR(10)+'CEP_CP="'+CEP_CP+'"'+;
	   CHR(13)+CHR(10)+'CP="'+CP+'"'+;
	   CHR(13)+CHR(10)+'FONE="'+FONE+'"'+;
	   CHR(13)+CHR(10)+'FAX="'+FAX+'"'+;
	   CHR(13)+CHR(10)+'EMAIL="'+EMAIL+'"'+;
	   CHR(13)+CHR(10)+'TIPO="'+TIPO+'"'+;
	   CHR(13)+CHR(10)+'/>'+CHR(13)+CHR(10) AS PARTE_5 ;
	 FROM CUR_PART INTO CURSOR X_PART
	*------------------------------------------------------------------*
	SELE X_PART
	COPY TO  L:\TMP\TMP.XML FIELDS ;
			PARTE_1,PARTE_2, PARTE_3,PARTE_4,PARTE_5 ;
		TYPE SDF
	*------------------------------------------------------------------*

	=ADModelaXML(PrmTipoParticipante,PrmEmp,PrmDtIni,PrmDtFin)

	*------------------------------------------------------------------*

	SELE CUR_PART
	USE
	
	SELE X_PART
	USE

RETURN


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4L70X0C67           ADItens VALID                      ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0310B,     Record Number:    9  ╨
*       ╨ Variable:            ADItens                            ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      100                                ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*

FUNCTION _4l70x0c67     &&  ADItens VALID
#REGION 3
RETURN

*------------------------------------------------------------------*
*  DADOS DE ITENS
*------------------------------------------------------------------*

FUNCTION OLDADItens
PARAMETERS PrmEmp,PrmDtIni,PrmDtFin

SELE GRUPO
IF TYPE("GRUPO.COD_LSTSRV")="C"
	SELECT ;
	   STR(EMP.CGC,14) 					AS UNEM_CNPJ,;
	   LEFT(GR.CODIGO+SPACE(20),20) 	AS COD_ITEM,;
	   LEFT(GR.DESCRICAO+SPACE(70),70) 	AS DESCRITEM,;
	   LEFT(GR.COD_GENERO+SPACE(2),2)  	AS COD_GEN,;
	   GR.COD_LSTSRV                    AS COD_LST,;
	   LEFT(GR.CTA_CONTAB+SPACE(20),20) AS CTA_CONTAB,;
	   LEFT(CHRTRAN(GR.COD_NCM,".","")+SPACE(8),8)  		AS COD_NCM;
	  FROM EMPRESA EMP, ;
    	   GRUPO GR ;
	  WHERE EMP.EMPRESA = PrmEmp ;
    	    AND	gr.cdg_tipo = 4;
        	AND STR(gr.tp_control,1) $ "1/2/3/5/4";
	        AND STRTRAN(STR(PrmEmp,3),' ','0') $ gr.empresas ;
	  GROUP BY GR.CODIGO;
	  ORDER BY GR.CODIGO INTO CURSOR CUR_ITEM
ELSE

	SELECT ;
	   STR(EMP.CGC,14) 					AS UNEM_CNPJ,;
	   LEFT(GR.CODIGO+SPACE(20),20) 	AS COD_ITEM,;
	   LEFT(GR.DESCRICAO+SPACE(70),70) 	AS DESCRITEM,;
	   LEFT(GR.COD_GENERO+SPACE(2),2)  	AS COD_GEN,;
	   STR(GR.COD_LSTSRV,4)             AS COD_LST,;
	   LEFT(GR.CTA_CONTAB+SPACE(20),20) AS CTA_CONTAB,;
	   LEFT(CHRTRAN(GR.COD_NCM,".","")+SPACE(8),8)  		AS COD_NCM;
	FROM EMPRESA EMP, ;
       GRUPO GR ;
	WHERE EMP.EMPRESA = PrmEmp ;
        AND	gr.cdg_tipo = 4;
        AND STR(gr.tp_control,1) $ "1/2/3/5/4";
        AND STRTRAN(STR(PrmEmp,3),' ','0') $ gr.empresas ;
  	GROUP BY GR.CODIGO;
  	ORDER BY GR.CODIGO INTO CURSOR CUR_ITEM
ENDIF
*  	AND IT.EMPRESA = PrmEmp ;
* 	AND IT.DATA >= PrmDtIni ;
*  	AND IT.DATA <= PrmDtFin ;
*   AND IT.CH_OPERA <> "5" ;
*  	AND GR.CODIGO  = IT.CODIGO ;


  SELECT ;
   '<ROW UNEM_CNPJ="'+chrtran(UNEM_CNPJ," ","0")+'"'+;
   CHR(13)+CHR(10)+'COD_ITEM="'+COD_ITEM+'"'+;
   CHR(13)+CHR(10)+'DESCRITEM="'+DESCRITEM+'"'+;
   CHR(13)+CHR(10)+'COD_GEN="'+COD_GEN+'"'+;
   CHR(13)+CHR(10)+'COD_LST="'+COD_LST+'"'+;
   CHR(13)+CHR(10)+'CTA_CONTAB="'+CTA_CONTAB+'"'+;
   CHR(13)+CHR(10)+'COD_NCM="'+COD_NCM+'"' AS PARTE_1,;
   CHR(13)+CHR(10)+'/>'+CHR(13)+CHR(10) AS PARTE_2 ;
  FROM CUR_ITEM INTO CURSOR X_ITEM

*------------------------------------------------------------------*
   SELE X_ITEM
   COPY TO  L:\TMP\TMP.XML FIELDS PARTE_1,PARTE_2 TYPE SDF
*------------------------------------------------------------------*
	=ADModelaXML("ITEM",PrmEmp,PrmDtIni,PrmDtFin)
*------------------------------------------------------------------*
	SELE CUR_ITEM
	USE
	SELE X_ITEM
	USE	

RETURN


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4L70X0C6E           ADZLeitura VALID                   ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0310B,     Record Number:   10  ╨
*       ╨ Variable:            ADZLeitura                         ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      101                                ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*

FUNCTION _4l70x0c6e     &&  ADZLeitura VALID
#REGION 3
RETURN

FUNCTION ADZLeitura
PARAMETERS PrmEmp,PrmDtIni,PrmDtFin
*------------------------------------------------------------------*
*  LEITURA Z
*------------------------------------------------------------------*


  =ULReducaoZ(PrmEmp,PrmDtIni,PrmDtFin)

**  =ULMapaResumoECF(PrmEmp,PrmDtIni,PrmDtFin)


  SELECT ;
	   (COD_MOD+DT_DOC+ECF_CX+ALIQUOTA) AS CHAVE,;
	   '<ROW UNEM_CNPJ="'+chrtran(UNEM_CNPJ," ","0")+'"'+;
	   CHR(13)+CHR(10)+'IND_MR="'+IND_MR+'"'+;
	   CHR(13)+CHR(10)+'ECF_FAB="'+ECF_FAB+'"'+;
	   CHR(13)+CHR(10)+'COD_MOD="'+COD_MOD+'"'+;
	   CHR(13)+CHR(10)+'ECF_CX="'+ECF_CX+'"'+;
	   CHR(13)+CHR(10)+'ALIQUOTA="'+ALIQUOTA+'"'  AS PARTE_1,;
	   CHR(13)+CHR(10)+'CFOP="'+CHRTRAN(SET_CFO,".","")+'"'+;
	   CHR(13)+CHR(10)+'CRO="'+CRO+'"'+;
	   CHR(13)+CHR(10)+'CRZ="'+CRZ+'"'+;
	   CHR(13)+CHR(10)+'DT_DOC="'+DT_DOC+'"'  AS PARTE_2,;
	   CHR(13)+CHR(10)+'NUM_DOC_INI="'+NUM_DOC_INI+'"'+;
	   CHR(13)+CHR(10)+'NUM_DOC_FIN="'+NUM_DOC_FIN+'"'+;
	   CHR(13)+CHR(10)+'GT_INI="'+GT_INI+'"'+;
	   CHR(13)+CHR(10)+'GT_FIN="'+GT_FIN+'"'  AS PARTE_3,;
	   CHR(13)+CHR(10)+'VL_BRT="'+VL_BRT+'"'+;
	   CHR(13)+CHR(10)+'VLCANISSQN="'+VLCANISSQN+'"'+;
	   CHR(13)+CHR(10)+'VLCANICMS="'+VLCANICMS+'"'+;
	   CHR(13)+CHR(10)+'VLCAN="'+VLCAN+'"' AS PARTE_4;
  FROM \TMP\LVReducao INTO CURSOR X_ITEM1


  SELECT ;
	   (COD_MOD+DT_DOC+ECF_CX+ALIQUOTA) AS CHAVE,;
	   CHR(13)+CHR(10)+'VLDSCISSQN="'+VLDSCISSQN+'"'+;
	   CHR(13)+CHR(10)+'VLDSCICMS="'+VLDSCICMS+'"'+;
	   CHR(13)+CHR(10)+'VLDSC="'+VLDSC+'"'+;
	   CHR(13)+CHR(10)+'VLACMISSQN="'+VLACMISSQN+'"'+;
	   CHR(13)+CHR(10)+'VLACMICMS="'+VLACMICMS+'"' AS PARTE_5,;
	   CHR(13)+CHR(10)+'VLACM="'+VLACM+'"'+;
	   CHR(13)+CHR(10)+'VL_ISSQN="'+VL_ISSQN+'"'+;
	   CHR(13)+CHR(10)+'VL_LIQ="'+VL_LIQ+'"'+;
	   CHR(13)+CHR(10)+'VL_BC_ICMS="'+VL_BC_ICMS+'"'+;
	   CHR(13)+CHR(10)+'VL_ICMS="'+VL_ICMS+'"' AS PARTE_6,;
	   CHR(13)+CHR(10)+'VL_ISEN="'+VL_ISEN+'"'+;
	   CHR(13)+CHR(10)+'VL_NT="'+VL_NT+'"'+;
	   CHR(13)+CHR(10)+'VL_ST="'+VL_ST+'"'+;
	   CHR(13)+CHR(10)+'COD_INF_OBS="'+COD_INF_OBS+'"'+;
	   CHR(13)+CHR(10)+'/>'+CHR(13)+CHR(10) AS PARTE_7 ;
  FROM \TMP\LVReducao INTO CURSOR X_ITEM2

*------------------------------------------------------------------*

	SELECT ;
		   CHRTRAN(x1.PARTE_1,".",",") AS PARTE_1,;
		   CHRTRAN(x1.PARTE_2,".",",") AS PARTE_2,;
		   CHRTRAN(x1.PARTE_3,".",",") AS PARTE_3,;
		   CHRTRAN(x1.PARTE_4,".",",") AS PARTE_4,;
		   CHRTRAN(x2.PARTE_5,".",",") AS PARTE_5,;
		   CHRTRAN(x2.PARTE_6,".",",") AS PARTE_6,;
		   CHRTRAN(x2.PARTE_7,".",",") AS PARTE_7 ;
   FROM X_ITEM1 x1,X_ITEM2 x2 ;
   WHERE X1.CHAVE = X2.CHAVE ;
   INTO CURSOR X_ITEM


*------------------------------------------------------------------*
*------------------------------------------------------------------*
   SELE X_ITEM
   COPY TO  L:\TMP\TMP.XML FIELDS PARTE_1,;
   								  PARTE_2,;
   								  PARTE_3,;
   								  PARTE_4,;
   								  PARTE_5,;
   								  PARTE_6,;
   								  PARTE_7;
   								  TYPE SDF
*------------------------------------------------------------------*
	=ADModelaXML("LEITURA_Z",PrmEmp,PrmDtIni,PrmDtFin)
*------------------------------------------------------------------*
	SELE X_ITEM1
	USE	
	SELE X_ITEM2
	USE	
	SELE X_ITEM
	USE	

RETURN


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4L70X0C6F           ADMapaResumoECF VALID              ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0310B,     Record Number:   11  ╨
*       ╨ Variable:            ADMapaResumoECF                    ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      102                                ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*

FUNCTION _4l70x0c6f     &&  ADMapaResumoECF VALID
#REGION 3
RETURN

FUNCTION ADMapaResumoECF
PARAMETERS PrmEmp,PrmDtIni,PrmDtFin
*------------------------------------------------------------------*
*  MAPA REZUMO ou LEITURA Z
*------------------------------------------------------------------*


**	=ULMapaResumoECF(PrmEmp,PrmDtIni,PrmDtFin)
    =ULNVMapaResumoECF(PrmEmp,PrmDtIni,PrmDtFin)

	SELECT ;
		UNEM_CNPJ,;
	   	IND_MR,;
	   	ECF_FAB,;
	   	COD_MOD,;
	   	ECF_MOD,;
	   	ECF_CX,;
	   	CRO,;
	   	CRZ,;
	   	NUM_DOC_INI,;
	   	NUM_DOC_FIN,;
	   	GT_INI,;
	   	GT_FIN,;
   		CGC,;
	   	"1"     AS NUM_MR,;
   		" "     AS NUM_LCTO,;
	   	EMPRESA,;
		DATA,;
	    CFO_PREP,;
	    ALIQ_ICMS,;
		SUM(VL_BRT)  AS VL_BRT,;
    	SUM(VLCANISSQN)	AS VLCANISSQN,;
    	SUM(VLCANICMS)	AS VLCANICMS,;
		SUM(VL_CAN) 	AS VL_CAN,;
    	SUM(VLDSCISSQN)	AS VLDSCISSQN,;
		SUM(VLDSCICMS) 	AS VLDSCICMS,;
    	SUM(VLDSC)		AS VLDSC,;
    	SUM(VLACMISSQN)	AS VLACMISSQN,;
		SUM(VLACMICMS)	AS VLACMICMS,;
		SUM(VLACM)	   	AS VLACM,;
		SUM(VL_ISSQN) AS VL_ISSQN,;
    	SUM(VL_CONT)	AS VL_CONT,;
  		SUM(VL_BC_ICMS) AS VL_BC_ICMS,;
   		SUM(VL_ICMS) AS VL_ICMS,;
   		SUM(VL_ISEN)	AS VL_ISEN,;
   		SUM(VL_LIQ)	AS VL_LIQ,;
		SUM(VL_NT)	AS VL_NT,;
   		SUM(VL_ST)	AS VL_ST,;
    	"0"			AS COD_INF_OBS;
  FROM \TMP\LVMapaECF ;
  GROUP BY ;
	   	EMPRESA,;
		DATA,;
	    CFO_PREP,;
	    ALIQ_ICMS;
  INTO CURSOR X_ITEM


	SELECT ;
		UNEM_CNPJ,;
	   	IND_MR,;
	   	ECF_FAB,;
	   	COD_MOD,;
	   	ECF_MOD,;
	   	ECF_CX,;
	   	CRO,;
	   	CRZ,;
	   	NUM_DOC_INI,;
	   	NUM_DOC_FIN,;
	   	GT_INI,;
	   	GT_FIN,;
   		CGC,;
	   	"1"     AS NUM_MR,;
   		" "     AS NUM_LCTO,;
	   	EMPRESA,;
		DATA,;
	    CHRTRAN(DTOC(DATA),"/","") AS DT_DOC,;
	    CHRTRAN(CFO_PREP,".","") AS CFOP,;
	    STR(ALIQ_ICMS,5,2) AS ALIQUOTA,;
		STR(VL_BRT,12,2)  AS VL_BRT,;
    	STR(VLCANISSQN,12,2)	AS VLCANISSQN,;
    	STR(VLCANICMS,12,2)	AS VLCANICMS,;
		STR(VL_CAN,12,2) 	AS VL_CAN,;
    	STR(VLDSCISSQN,12,2)	AS VLDSCISSQN,;
		STR(VLDSCICMS,12,2) 	AS VLDSCICMS,;
    	STR(VLDSC,12,2)		AS VLDSC,;
    	STR(VLACMISSQN,12,2)	AS VLACMISSQN,;
		STR(VLACMICMS,12,2)	AS VLACMICMS,;
		STR(VLACM,12,2)	   	AS VLACM,;
		STR(VL_ISSQN,12,2) AS VL_ISSQN,;
    	STR(VL_CONT,12,2)	AS VL_CONT,;
  		STR(VL_BC_ICMS,12,2) AS VL_BC_ICMS,;
   		STR(VL_ICMS,12,2) AS VL_ICMS,;
   		STR(VL_ISEN,12,2)	AS VL_ISEN,;
   		STR(VL_LIQ,12,2)	AS VL_LIQ,;
		STR(VL_NT,12,2)	AS VL_NT,;
   		STR(VL_ST,12,2)	AS VL_ST,;
    	"0"			AS COD_INF_OBS;
  FROM X_ITEM INTO CURSOR X_ITEM0



  SELECT ;
   (COD_MOD+DT_DOC+ECF_CX+ALIQUOTA+CFOP) AS CHAVE,;
   '<ROW UNEM_CNPJ="'+chrtran(UNEM_CNPJ," ","0")+'"'+;
   CHR(13)+CHR(10)+'COD_MOD="'+COD_MOD+'"'+;
   CHR(13)+CHR(10)+'ECF_MOD="'+ECF_MOD+'"'+;
   CHR(13)+CHR(10)+'IND_MR="'+IND_MR+'"'+;
   CHR(13)+CHR(10)+'DT_DOC="'+DT_DOC+'"'+;
   CHR(13)+CHR(10)+'CFOP="'+CFOP+'"'+;
   CHR(13)+CHR(10)+'ECF_CX="'+ECF_CX+'"'+;
   CHR(13)+CHR(10)+'ECF_FAB="'+ECF_FAB+'"' AS PARTE_1,;
   CHR(13)+CHR(10)+'ALIQUOTA="'+ALIQUOTA+'"'+;
   CHR(13)+CHR(10)+'CRO="'+CRO+'"'+;
   CHR(13)+CHR(10)+'CRZ="'+CRZ+'"'+;
   CHR(13)+CHR(10)+'NUM_DOC_INI="'+NUM_DOC_INI+'"'+;
   CHR(13)+CHR(10)+'NUM_DOC_FIN="'+NUM_DOC_FIN+'"'+;
   CHR(13)+CHR(10)+'GT_INI="'+GT_INI+'"' AS PARTE_2,;
   CHR(13)+CHR(10)+'GT_FIN="'+GT_FIN+'"'+;
   CHR(13)+CHR(10)+'VL_BRT="'+VL_BRT+'"'+;
   CHR(13)+CHR(10)+'VLCANISSQN="'+VLCANISSQN+'"'+;
   CHR(13)+CHR(10)+'VLCANICMS="'+VLCANICMS+'"'+;
   CHR(13)+CHR(10)+'VLCAN="'+VL_CAN+'"' AS PARTE_3;
  FROM X_ITEM0 INTO CURSOR X_ITEM1



  SELECT ;
   (COD_MOD+DT_DOC+ECF_CX+ALIQUOTA+CFOP) AS CHAVE,;
   CHR(13)+CHR(10)+'VLDSCISSQN="'+VLDSCISSQN+'"'+;
   CHR(13)+CHR(10)+'VLDSCICMS="'+VLDSCICMS+'"'+;
   CHR(13)+CHR(10)+'VLDSC="'+VLDSC+'"'+;
   CHR(13)+CHR(10)+'VLACMISSQN="'+VLACMISSQN+'"'+;
   CHR(13)+CHR(10)+'VLACMICMS="'+VLACMICMS+'"' AS PARTE_4,;
   CHR(13)+CHR(10)+'VLACM="'+VLACM+'"'+;
   CHR(13)+CHR(10)+'VL_ISSQN="'+VL_ISSQN+'"'+;
   CHR(13)+CHR(10)+'VL_LIQ="'+VL_LIQ+'"'+;
   CHR(13)+CHR(10)+'VL_BC_ICMS="'+VL_BC_ICMS+'"'+;
   CHR(13)+CHR(10)+'VL_ICMS="'+VL_ICMS+'"' AS PARTE_5,;
   CHR(13)+CHR(10)+'VL_ISEN="'+VL_ISEN+'"'+;
   CHR(13)+CHR(10)+'VL_NT="'+VL_NT+'"'+;
   CHR(13)+CHR(10)+'VL_ST="'+VL_ST+'"'+;
   CHR(13)+CHR(10)+'COD_INF_OBS="'+COD_INF_OBS+'"'+;
   CHR(13)+CHR(10)+'/>'+CHR(13)+CHR(10) AS PARTE_6 ;
  FROM X_ITEM0 INTO CURSOR X_ITEM2

*------------------------------------------------------------------*

	SELECT ;
		   CHRTRAN(x1.PARTE_1,".",",") AS PARTE_1,;
		   CHRTRAN(x1.PARTE_2,".",",") AS PARTE_2,;
		   CHRTRAN(x1.PARTE_3,".",",") AS PARTE_3,;
		   CHRTRAN(x2.PARTE_4,".",",") AS PARTE_4,;
		   CHRTRAN(x2.PARTE_5,".",",") AS PARTE_5,;
		   CHRTRAN(x2.PARTE_6,".",",") AS PARTE_6;
   FROM X_ITEM1 x1,X_ITEM2 x2;
   WHERE X1.CHAVE = X2.CHAVE ;
   INTO CURSOR X_ITEM


*------------------------------------------------------------------*
*------------------------------------------------------------------*
   SELE X_ITEM
   COPY TO  L:\TMP\TMP.XML FIELDS PARTE_1,;
   								  PARTE_2,;
   								  PARTE_3,;
   								  PARTE_4,;
   								  PARTE_5,;
   								  PARTE_6;
   								  TYPE SDF
*------------------------------------------------------------------*
	=ADModelaXML("LEITURA_Z",PrmEmp,PrmDtIni,PrmDtFin)
*------------------------------------------------------------------*
	SELE X_ITEM1
	USE	
	SELE X_ITEM2
	USE	
	SELE X_ITEM
	USE	

RETURN


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4L70X0C6G           ADLivrosaida VALID                 ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0310B,     Record Number:   12  ╨
*       ╨ Variable:            ADLivrosaida                       ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      103                                ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*

FUNCTION _4l70x0c6g     &&  ADLivrosaida VALID
#REGION 3
RETURN

FUNCTION ADLivrosaida
PARAMETERS PrmEmp,PrmDtIni,PrmDtFin
*------------------------------------------------------------------*
*  NOTAS FISCAIS DE SAIDA
*------------------------------------------------------------------*

=ULLvrSda50()
	*-------------------------------------------------------------*
	* INFORMACOE SNAO INCLUIDAS NA EXPORTACAO
	*-------------------------------------------------------------*
	*	  NF.cupom,;
    *     NF.favorecido,;
    *     NF.tp_pessoa,;
    *     NF.inscricao,;
    *     NF.uf,;
    *	  NF.tipo,;
	*	  NF.vlrfrete,;
	*	  NF.vlrseguro,;
	*	  NF.vlrdespes,;
	*	  NF.status,;
	*	  ULdefCfo(NF.empresa,NF.tipo,it.tp_mercad,"SAIDA") AS SET_CFO,;
	* 	  IT.aliq_icms,;
	*  	  SUM(IT.base_subs) AS BASE_SUBS,;
	*-------------------------------------------------------------*
   SELECT ;
		  STR(CGC,14) AS UNEM_CNPJ,;
          IND_OPER,;
          IND_EMIT,;
   		  CHRTRAN(STR(nota,7)," ","0") AS NUM_DOC,;
   		  serie  AS SER,;
   		  " "    AS SUB,;
	      CHRTRAN(SET_CFO,".","") AS CFOP,;
          CHRTRAN(STR(aliq_icms,5,2)," ","0") AS ALIQ_ICMS,;
		  CHRTRAN(DTOC(data),"/","") AS DT_DOC,;
		  "000000"   AS NUM_LCTO,;
		  CHRTRAN(DTOC(data),"/","") AS DT_E_S,;
   		  "000000"   AS COD_PART,;
          CPF,;
          CNPJ,;
   		  COD_MOD,;
   		  COD_SIT,;
   		  CST,;
   		  CFPS,;
   		  CST_ISS,;
   		  CST_IPI,;
 		  GENERO,;
   		  CLSCOMNC,;
   		  CLSGAS,;
   		  CLSAGUA,;
   		  CLSENRG,;
	  	  CHRTRAN(STR(BASE_ICMS,12,2)," ","0") AS VL_BC_ICMS,;
	  	  CHRTRAN(STR(VLR_ICMS,12,2)," ","0") AS VL_ICMS,;
	 	  CHRTRAN(STR(BASE_ISENT,12,2)," ","0") AS VL_ISNT_ICMS,;
		  CHRTRAN(STR(BASE_OUTR,12,2)," ","0") AS VL_OUT_ICMS, ;
	  	  CHRTRAN(STR(ICMS_SUBS,12,2)," ","0") AS VL_ST,;
	  	  CHRTRAN(STR(BASE_ISS,12,2)," ","0") AS VL_BC_ISS,;
          CHRTRAN(STR(aliq_iss,5,2)," ","0") AS ALIQ_iss,;
	  	  CHRTRAN(STR(VLR_ISS,12,2)," ","0") AS VL_ISS,;
	  	  CHRTRAN(STR(BASE_IPI,12,2)," ","0")	AS VL_BC_IPI,;
          CHRTRAN(STR(aliq_ipi,5,2)," ","0") AS ALIQ_ipi,;
	  	  CHRTRAN(STR(VLR_IPI,12,2)," ","0")    AS VL_IPI,;
	 	  CHRTRAN(STR(BASE_ISIPI,12,2)," ","0") AS VL_ISNT_IPI,;
		  CHRTRAN(STR(VL_OUT_IPI,12,2)," ","0") AS VL_OUT_IPI,;
	 	  CHRTRAN(STR(VLR_ITEM,12,2)," ","0") AS VL_ITEM,;
          CHRTRAN(STR(total_nota,12,2)," ","0") AS VL_TOTAL_DOC,;
	  	  CHRTRAN(STR(00,12,2)," ","0")     		AS VL_COMPL,;
	  	  "00"		         	AS IND_COMPL,;
	 	  "0"         AS COD_INF_OBS ;
	  FROM LIVROSAI  ;
  ORDER BY NUM_DOC INTO TABLE \TMP\CUR_ITEM
		


  SELECT ;
	RECNO() AS CHAVE,;
   '<ROW UNEM_CNPJ="'+chrtran(UNEM_CNPJ," ","0")+'"'+;
   CHR(13)+CHR(10)+'IND_OPER="'+IND_OPER+'"'+;
   CHR(13)+CHR(10)+'IND_EMIT="'+IND_EMIT+'"'+;
   CHR(13)+CHR(10)+'NUM_DOC="'+NUM_DOC+'"'+;
   CHR(13)+CHR(10)+'SER="'+SER+'"' AS PARTE_1,;
   CHR(13)+CHR(10)+'SUB="'+SUB+'"'+;
   CHR(13)+CHR(10)+'CFOP="'+CFOP+'"'+;
   CHR(13)+CHR(10)+'ALIQ_ICMS="'+ALIQ_ICMS+'"'+;
   CHR(13)+CHR(10)+'DT_DOC="'+DT_DOC+'"'+;
   CHR(13)+CHR(10)+'NUM_LCTO="'+NUM_LCTO+'"' AS PARTE_2,;
   CHR(13)+CHR(10)+'DT_E_S="'+DT_E_S+'"'+;
   CHR(13)+CHR(10)+'COD_PART="'+COD_PART+'"'+;
   CHR(13)+CHR(10)+'CPF="'+chrtran(CPF," ","0")+'"'+;
   CHR(13)+CHR(10)+'CNPJ="'+chrtran(CNPJ," ","0")+'"'+;
   CHR(13)+CHR(10)+'COD_MOD="'+COD_MOD+'"' AS PARTE_3,;
   CHR(13)+CHR(10)+'COD_SIT="'+COD_SIT+'"'+;
   CHR(13)+CHR(10)+'CST="'+CST+'"'+;
   CHR(13)+CHR(10)+'CFPS="'+CFPS+'"'+;
   CHR(13)+CHR(10)+'CST_ISS="'+CST_ISS+'"' AS PARTE_4,;
   CHR(13)+CHR(10)+'CST_IPI="'+CST_IPI+'"'+;
   CHR(13)+CHR(10)+'GENERO="'+GENERO+'"' AS PARTE_5;
   FROM CUR_ITEM INTO TABLE \TMP\X_ITEM1



  SELECT ;
	RECNO() AS CHAVE,;
   CHR(13)+CHR(10)+'CLSCOMNC="'+CLSCOMNC+'"'+;
   CHR(13)+CHR(10)+'CLSGAS="'+CLSGAS+'"'+;
   CHR(13)+CHR(10)+'CLSAGUA="'+CLSAGUA+'"'+;
   CHR(13)+CHR(10)+'CLSENRG="'+CLSENRG+'"'+;
   CHR(13)+CHR(10)+'VL_BC_ICMS="'+VL_BC_ICMS+'"' AS PARTE_6,;
   CHR(13)+CHR(10)+'VL_ICMS="'+VL_ICMS+'"'+;
   CHR(13)+CHR(10)+'VL_ISNT_ICMS="'+VL_ISNT_ICMS+'"'+;
   CHR(13)+CHR(10)+'VL_OUT_ICMS="'+VL_OUT_ICMS+'"'+;
   CHR(13)+CHR(10)+'VL_ST="'+VL_ST+'"'+;
   CHR(13)+CHR(10)+'VL_BC_ISS="'+ VL_BC_ISS+'"' AS PARTE_7,;
   CHR(13)+CHR(10)+'ALIQ_ISS="'+ ALIQ_ISS+'"'+;
   CHR(13)+CHR(10)+'VL_ISS="'+ VL_ISS+'"'+;
   CHR(13)+CHR(10)+'VL_BC_IPI="'+ VL_BC_IPI+'"'+;
   CHR(13)+CHR(10)+'ALIQ_IPI="'+ALIQ_IPI+'"'+;
   CHR(13)+CHR(10)+'VL_IPI="'+VL_IPI+'"'+;
   CHR(13)+CHR(10)+'VL_ISNT_IPI="'+VL_ISNT_IPI+'"'+;
   CHR(13)+CHR(10)+'VL_OUT_IPI="'+VL_OUT_IPI+'"' AS PARTE_8,;
   CHR(13)+CHR(10)+'VL_ITEM="'+VL_ITEM+'"'+;
   CHR(13)+CHR(10)+'VL_TOTAL_DOC="'+VL_TOTAL_DOC+'"'+;
   CHR(13)+CHR(10)+'VL_COMPL="'+VL_COMPL+'"'  AS PARTE_9,;
   CHR(13)+CHR(10)+'IND_COMPL="'+IND_COMPL+'"'+;
   CHR(13)+CHR(10)+'/>'+CHR(13)+CHR(10) AS PARTE_10 ;
   FROM CUR_ITEM  INTO  TABLE \TMP\X_ITEM2



*------------------------------------------------------------------*
	
	SELECT ;
		   x1.PARTE_1,;
		   x1.PARTE_2,;
		   x1.PARTE_3,;
		   x1.PARTE_4,;
		   x1.PARTE_5,;
		   CHRTRAN(x2.PARTE_6,".",",") AS PARTE_6,;
		   CHRTRAN(x2.PARTE_7,".",",") AS PARTE_7,;
		   CHRTRAN(x2.PARTE_8,".",",") AS PARTE_8,;
		   CHRTRAN(x2.PARTE_9,".",",") AS PARTE_9,;
		   CHRTRAN(x2.PARTE_10,".",",") AS PARTE_10;
   FROM X_ITEM1 x1,X_ITEM2 x2;
   WHERE X1.CHAVE = X2.CHAVE ;
   INTO CURSOR X_ITEM
   	
*------------------------------------------------------------------*

   SELE X_ITEM
   COPY TO  L:\TMP\TMP.XML FIELDS PARTE_1,;
   								  PARTE_2,;
   								  PARTE_3,;
   								  PARTE_4,;
   								  PARTE_5,;
   								  PARTE_6,;
   								  PARTE_7,;
   								  PARTE_8,;
   								  PARTE_9,;
   								  PARTE_10 ;
   								  TYPE SDF
   								
*------------------------------------------------------------------*
	=ADModelaXML("LIVROSAI",PrmEmp,PrmDtIni,PrmDtFin)
*------------------------------------------------------------------*
	SELE CUR_ITEM
	USE
	SELE X_ITEM1
	USE	
	SELE X_ITEM2
	USE	
	SELE X_ITEM
	USE	

RETURN


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4L70X0C6H           ADLivroEntrada VALID               ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0310B,     Record Number:   13  ╨
*       ╨ Variable:            ADLivroEntrada                     ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      104                                ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*

FUNCTION _4l70x0c6h     &&  ADLivroEntrada VALID
#REGION 3
RETURN

FUNCTION ADLivroEntrada
PARAMETERS PrmEmp,PrmDtIni,PrmDtFin
*------------------------------------------------------------------*
*  NOTAS FISCAIS DE ENTRADA
*------------------------------------------------------------------*
PRIVATE ARQ_tmp,DBF_TRN


	
	=ULLvrTrans()

	=ULLvrEnt50()

	*select * from livtrans ;
	* union ;
	*select * from livroent ;
	*INTO CURSOR livro



   	SELE livtrans
	DBF_TRN = DBF()


	*-------------------------------------------------------------------*

    =W_DEFPROC("rotinas.spr")
	ARQ_tmp=UPnometmp("EXT")

	SELE LIVROENT
	COPY  TO  &ARQ_tmp
	
    =up_fecha("LIVRO")
	SELE 0
	USE &ARQ_tmp ALIAS LIVRO EXCL
	APPEND FROM &DBF_TRN


	*-------------------------------------------------------------*
    SELECT ;
		  STR(CGC,14) AS UNEM_CNPJ,;
          IND_OPER,;
          IND_EMIT,;
   		  CHRTRAN(STR(nota,7)," ","0") AS NUM_DOC,;
   		  serie  AS SER,;
   		  " "    AS SUB,;
	      CHRTRAN(SET_CFO,".","") AS CFOP,;
          CHRTRAN(STR(aliq_icms,5,2)," ","0") AS ALIQ_ICMS,;
		  CHRTRAN(DTOC(data),"/","") AS DT_DOC,;
		  "000000"   AS NUM_LCTO,;
		  CHRTRAN(DTOC(data),"/","") AS DT_E_S,;
   		  "000000"   AS COD_PART,;
          CPF,;
          CNPJ,;
   		  COD_MOD,;
   		  COD_SIT,;
   		  CST,;
   		  CFPS,;
   		  CST_ISS,;
   		  CST_IPI,;
 		  GENERO,;
   		  CLSCOMNC,;
   		  CLSGAS,;
   		  CLSAGUA,;
   		  CLSENRG,;
	  	  CHRTRAN(STR(BASE_ICMS,12,2)," ","0") AS VL_BC_ICMS,;
	  	  CHRTRAN(STR(VLR_ICMS,12,2)," ","0") AS VL_ICMS,;
	 	  CHRTRAN(STR(BASE_ISENT,12,2)," ","0") AS VL_ISNT_ICMS,;
		  CHRTRAN(STR(BASE_OUTR,12,2)," ","0") AS VL_OUT_ICMS, ;
	  	  CHRTRAN(STR(ICMS_SUBS,12,2)," ","0") AS VL_ST,;
	  	  CHRTRAN(STR(BASE_ISS,12,2)," ","0") AS VL_BC_ISS,;
	  	  CHRTRAN(STR(VLR_ISS,12,2)," ","0") AS VL_ISS,;
	  	  CHRTRAN(STR(BASE_IPI,12,2)," ","0")	AS VL_BC_IPI,;
	  	  CHRTRAN(STR(VLR_IPI,12,2)," ","0")    AS VL_IPI,;
	 	  CHRTRAN(STR(BASE_ISIPI,12,2)," ","0") AS VL_ISNT_IPI,;
		  CHRTRAN(STR(VL_OUT_IPI,12,2)," ","0") AS VL_OUT_IPI,;
	 	  CHRTRAN(STR(VLR_ITEM,12,2)," ","0") AS VL_ITEM,;
          CHRTRAN(STR(total_nota,12,2)," ","0") AS VL_TOTAL_DOC,;
	  	  CHRTRAN(STR(00,12,2)," ","0")     		AS VL_COMPL,;
	  	  "00"		         	AS IND_COMPL,;
	 	  "0"         AS COD_INF_OBS ;
	  FROM LIVRO  ;
  ORDER BY NUM_DOC INTO TABLE \TMP\CUR_ITEM
		


  SELECT ;
	RECNO() AS CHAVE,;
   '<ROW UNEM_CNPJ="'+chrtran(UNEM_CNPJ," ","0")+'"'+;
   CHR(13)+CHR(10)+'IND_OPER="'+IND_OPER+'"'+;
   CHR(13)+CHR(10)+'IND_EMIT="'+IND_EMIT+'"'+;
   CHR(13)+CHR(10)+'NUM_DOC="'+NUM_DOC+'"'+;
   CHR(13)+CHR(10)+'SER="'+SER+'"' AS PARTE_1,;
   CHR(13)+CHR(10)+'SUB="'+SUB+'"'+;
   CHR(13)+CHR(10)+'CFOP="'+CFOP+'"'+;
   CHR(13)+CHR(10)+'ALIQ_ICMS="'+ALIQ_ICMS+'"'+;
   CHR(13)+CHR(10)+'DT_DOC="'+DT_DOC+'"'+;
   CHR(13)+CHR(10)+'NUM_LCTO="'+NUM_LCTO+'"' AS PARTE_2,;
   CHR(13)+CHR(10)+'DT_E_S="'+DT_E_S+'"'+;
   CHR(13)+CHR(10)+'COD_PART="'+COD_PART+'"'+;
   CHR(13)+CHR(10)+'CPF="'+chrtran(CPF," ","0")+'"'+;
   CHR(13)+CHR(10)+'CNPJ="'+chrtran(CNPJ," ","0")+'"'+;
   CHR(13)+CHR(10)+'COD_MOD="'+COD_MOD+'"' AS PARTE_3,;
   CHR(13)+CHR(10)+'COD_SIT="'+COD_SIT+'"'+;
   CHR(13)+CHR(10)+'CST="'+CST+'"'+;
   CHR(13)+CHR(10)+'CFPS="'+CFPS+'"'+;
   CHR(13)+CHR(10)+'CST_ISS="'+CST_ISS+'"' AS PARTE_4,;
   CHR(13)+CHR(10)+'CST_IPI="'+CST_IPI+'"'+;
   CHR(13)+CHR(10)+'GENERO="'+GENERO+'"' AS PARTE_5;
   FROM CUR_ITEM INTO TABLE \TMP\X_ITEM1



  SELECT ;
	RECNO() AS CHAVE,;
   CHR(13)+CHR(10)+'CLSCOMNC="'+CLSCOMNC+'"'+;
   CHR(13)+CHR(10)+'CLSGAS="'+CLSGAS+'"'+;
   CHR(13)+CHR(10)+'CLSAGUA="'+CLSAGUA+'"'+;
   CHR(13)+CHR(10)+'CLSENRG="'+CLSENRG+'"'+;
   CHR(13)+CHR(10)+'VL_BC_ICMS="'+VL_BC_ICMS+'"' AS PARTE_6,;
   CHR(13)+CHR(10)+'VL_ICMS="'+VL_ICMS+'"'+;
   CHR(13)+CHR(10)+'VL_ISNT_ICMS="'+VL_ISNT_ICMS+'"'+;
   CHR(13)+CHR(10)+'VL_OUT_ICMS="'+VL_OUT_ICMS+'"'+;
   CHR(13)+CHR(10)+'VL_ST="'+VL_ST+'"'+;
   CHR(13)+CHR(10)+'VL_BC_ISS="'+ VL_BC_ISS+'"' AS PARTE_7,;
   CHR(13)+CHR(10)+'VL_ISS="'+ VL_ISS+'"'+;
   CHR(13)+CHR(10)+'VL_BC_IPI="'+ VL_BC_IPI+'"'+;
   CHR(13)+CHR(10)+'VL_IPI="'+VL_IPI+'"'+;
   CHR(13)+CHR(10)+'VL_ISNT_IPI="'+VL_ISNT_IPI+'"'+;
   CHR(13)+CHR(10)+'VL_OUT_IPI="'+VL_OUT_IPI+'"' AS PARTE_8,;
   CHR(13)+CHR(10)+'VL_ITEM="'+VL_ITEM+'"'+;
   CHR(13)+CHR(10)+'VL_TOTAL_DOC="'+VL_TOTAL_DOC+'"'+;
   CHR(13)+CHR(10)+'VL_COMPL="'+VL_COMPL+'"'  AS PARTE_9,;
   CHR(13)+CHR(10)+'IND_COMPL="'+IND_COMPL+'"'+;
   CHR(13)+CHR(10)+'/>'+CHR(13)+CHR(10) AS PARTE_10 ;
   FROM CUR_ITEM  INTO  TABLE \TMP\X_ITEM2



*------------------------------------------------------------------*
	
	SELECT ;
		   x1.PARTE_1,;
		   x1.PARTE_2,;
		   x1.PARTE_3,;
		   x1.PARTE_4,;
		   x1.PARTE_5,;
		   CHRTRAN(x2.PARTE_6,".",",") AS PARTE_6,;
		   CHRTRAN(x2.PARTE_7,".",",") AS PARTE_7,;
		   CHRTRAN(x2.PARTE_8,".",",") AS PARTE_8,;
		   CHRTRAN(x2.PARTE_9,".",",") AS PARTE_9,;
		   CHRTRAN(x2.PARTE_10,".",",") AS PARTE_10;
   FROM X_ITEM1 x1,X_ITEM2 x2;
   WHERE X1.CHAVE = X2.CHAVE ;
   INTO CURSOR X_ITEM
   	
*------------------------------------------------------------------*

   SELE X_ITEM
   COPY TO  L:\TMP\TMP.XML FIELDS PARTE_1,;
   								  PARTE_2,;
   								  PARTE_3,;
   								  PARTE_4,;
   								  PARTE_5,;
   								  PARTE_6,;
   								  PARTE_7,;
   								  PARTE_8,;
   								  PARTE_9,;
   								  PARTE_10 ;
   								  TYPE SDF
   								
*------------------------------------------------------------------*
	=ADModelaXML("LIVROENT",PrmEmp,PrmDtIni,PrmDtFin)
*------------------------------------------------------------------*
	SELE LIVRO
	USE

	SELE CUR_ITEM
	USE
	SELE X_ITEM1
	USE	
	SELE X_ITEM2
	USE	
	SELE X_ITEM
	USE	

RETURN


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4L70X0C79           ADLivroCupons VALID                ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0310B,     Record Number:   14  ╨
*       ╨ Variable:            ADLivroCupons                      ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      105                                ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*

FUNCTION _4l70x0c79     &&  ADLivroCupons VALID
#REGION 3
RETURN

FUNCTION ADLivroCupons
PARAMETERS PrmEmp,PrmDtIni,PrmDtFin
*------------------------------------------------------------------*
*  CUPONS FISCAIS DE SAIDA
*------------------------------------------------------------------*

  =ULLvrAnlCpm()

   *-------------------------------------------------------------*
SELECT ;
   STR(EMP.CGC,14) 			AS UNEM_CNPJ,;
   LZ.DATA AS DT,;
   STR(LZ.ECF,4)   			AS ECF_CX,;
   LEFT(EMP.ecf_serie+SPACE(15),15)	AS ECF_FAB,;
   STR(LZ.CTRREINICI,6)					AS CRO,;
   STR(LZ.CTRREDUCAO,6) 	AS CRZ;
  FROM EMPRESA EMP, ;
       MAPAECF LZ ;
  WHERE EMP.EMPRESA = PrmEmp ;
  	AND LZ.EMPRESA = PrmEmp ;
  	AND LZ.DATA >= PrmDtIni ;
  	AND LZ.DATA <= PrmDtFin ;
  GROUP BY UNEM_CNPJ,;
  			DT,;
  			ECF_CX,;
  			ECF_FAB;
  ORDER  BY UNEM_CNPJ,;
  			DT,;
  			ECF_CX,;
  			ECF_FAB;
  INTO CURSOR ECF_INFO


**		  CHRTRAN(STR(nota,7)," ","0") AS NUM_DOC,;

   SELECT ;
          ECF.*,;
          IND_OPER,;
          IND_EMIT,;
   		  CHRTRAN(STR(CUPOM,7)," ","0") AS NUM_DOC,;
   		  serie  AS SER,;
   		  " "    AS SUB,;
	      CHRTRAN(SET_CFO,".","") AS CFOP,;
          CHRTRAN(STR(aliq_icms,5,2)," ","0") AS ALIQ_ICMS,;
		  CHRTRAN(DTOC(data),"/","") AS DT_DOC,;
		  "000000"   AS NUM_LCTO,;
		  CHRTRAN(DTOC(data),"/","") AS DT_E_S,;
   		  "000000"   AS COD_PART,;
          CPF,;
          CNPJ,;
   		  COD_MOD,;
   		  COD_SIT,;
   		  CST,;
   		  CFPS,;
   		  CST_ISS,;
   		  CST_IPI,;
 		  GENERO,;
   		  CLSCOMNC,;
   		  CLSGAS,;
   		  CLSAGUA,;
   		  CLSENRG,;
	  	  CHRTRAN(STR(BASE_ICMS,12,2)," ","0") AS VL_BC_ICMS,;
	  	  CHRTRAN(STR(VLR_ICMS,12,2)," ","0") AS VL_ICMS,;
	 	  CHRTRAN(STR(BASE_ISENT,12,2)," ","0") AS VL_ISNT_ICMS,;
		  CHRTRAN(STR(BASE_OUTR,12,2)," ","0") AS VL_OUT_ICMS, ;
	  	  CHRTRAN(STR(ICMS_SUBS,12,2)," ","0") AS VL_ST,;
	  	  CHRTRAN(STR(BASE_ISS,12,2)," ","0") AS VL_BC_ISS,;
	  	  CHRTRAN(STR(VLR_ISS,12,2)," ","0") AS VL_ISS,;
	  	  CHRTRAN(STR(BASE_IPI,12,2)," ","0")	AS VL_BC_IPI,;
	  	  CHRTRAN(STR(VLR_IPI,12,2)," ","0")    AS VL_IPI,;
	 	  CHRTRAN(STR(BASE_ISIPI,12,2)," ","0") AS VL_ISNT_IPI,;
		  CHRTRAN(STR(VL_OUT_IPI,12,2)," ","0") AS VL_OUT_IPI,;
	 	  CHRTRAN(STR(VLR_ITEM,12,2)," ","0") AS VL_ITEM,;
          CHRTRAN(STR(total_nota,12,2)," ","0") AS VL_TOTAL_DOC,;
	  	  CHRTRAN(STR(00,12,2)," ","0")     		AS VL_COMPL,;
	  	  "00"		         	AS IND_COMPL,;
	 	  "0"         AS COD_INF_OBS ;
	  FROM ECF_INFO ECF, \TMP\LIVROCPA LV ;
	  WHERE ECF.DT = LV.DATA;
  ORDER BY NUM_DOC INTO TABLE \TMP\CUR_ITEM
		


  SELECT ;
	RECNO() AS CHAVE,;
   '<ROW UNEM_CNPJ="'+chrtran(UNEM_CNPJ," ","0")+'"'+;
   CHR(13)+CHR(10)+'IND_OPER="'+IND_OPER+'"'+;
   CHR(13)+CHR(10)+'IND_EMIT="'+IND_EMIT+'"'+;
   CHR(13)+CHR(10)+'NUM_DOC="'+NUM_DOC+'"'+;
   CHR(13)+CHR(10)+'SER="'+SER+'"' AS PARTE_1,;
   CHR(13)+CHR(10)+'SUB="'+SUB+'"'+;
   CHR(13)+CHR(10)+'CFOP="'+CFOP+'"'+;
   CHR(13)+CHR(10)+'ALIQ_ICMS="'+ALIQ_ICMS+'"'+;
   CHR(13)+CHR(10)+'DT_DOC="'+DT_DOC+'"'+;
   CHR(13)+CHR(10)+'NUM_LCTO="'+NUM_LCTO+'"' AS PARTE_2,;
   CHR(13)+CHR(10)+'DT_E_S="'+DT_E_S+'"'+;
   CHR(13)+CHR(10)+'COD_PART="'+COD_PART+'"'+;
   CHR(13)+CHR(10)+'CPF="'+chrtran(CPF," ","0")+'"'+;
   CHR(13)+CHR(10)+'CNPJ="'+chrtran(CNPJ," ","0")+'"'+;
   CHR(13)+CHR(10)+'COD_MOD="'+COD_MOD+'"' AS PARTE_3,;
   CHR(13)+CHR(10)+'COD_SIT="'+COD_SIT+'"'+;
   CHR(13)+CHR(10)+'CST="'+CST+'"'+;
   CHR(13)+CHR(10)+'CFPS="'+CFPS+'"'+;
   CHR(13)+CHR(10)+'CST_ISS="'+CST_ISS+'"' AS PARTE_4,;
   CHR(13)+CHR(10)+'CST_IPI="'+CST_IPI+'"'+;
   CHR(13)+CHR(10)+'ECF_CX="'+ECF_CX+'"'+;
   CHR(13)+CHR(10)+'ECF_FAB="'+ECF_FAB+'"'+;
   CHR(13)+CHR(10)+'CRO="'+CRO+'"'+;
   CHR(13)+CHR(10)+'CRZ="'+CRZ+'"'+;
   CHR(13)+CHR(10)+'GENERO="'+GENERO+'"' AS PARTE_5;
   FROM CUR_ITEM INTO TABLE \TMP\X_ITEM1



  SELECT ;
	RECNO() AS CHAVE,;
   CHR(13)+CHR(10)+'CLSCOMNC="'+CLSCOMNC+'"'+;
   CHR(13)+CHR(10)+'CLSGAS="'+CLSGAS+'"'+;
   CHR(13)+CHR(10)+'CLSAGUA="'+CLSAGUA+'"'+;
   CHR(13)+CHR(10)+'CLSENRG="'+CLSENRG+'"'+;
   CHR(13)+CHR(10)+'VL_BC_ICMS="'+VL_BC_ICMS+'"' AS PARTE_6,;
   CHR(13)+CHR(10)+'VL_ICMS="'+VL_ICMS+'"'+;
   CHR(13)+CHR(10)+'VL_ISNT_ICMS="'+VL_ISNT_ICMS+'"'+;
   CHR(13)+CHR(10)+'VL_OUT_ICMS="'+VL_OUT_ICMS+'"'+;
   CHR(13)+CHR(10)+'VL_ST="'+VL_ST+'"'+;
   CHR(13)+CHR(10)+'VL_BC_ISS="'+ VL_BC_ISS+'"' AS PARTE_7,;
   CHR(13)+CHR(10)+'VL_ISS="'+ VL_ISS+'"'+;
   CHR(13)+CHR(10)+'VL_BC_IPI="'+ VL_BC_IPI+'"'+;
   CHR(13)+CHR(10)+'VL_IPI="'+VL_IPI+'"'+;
   CHR(13)+CHR(10)+'VL_ISNT_IPI="'+VL_ISNT_IPI+'"'+;
   CHR(13)+CHR(10)+'VL_OUT_IPI="'+VL_OUT_IPI+'"' AS PARTE_8,;
   CHR(13)+CHR(10)+'VL_ITEM="'+VL_ITEM+'"'+;
   CHR(13)+CHR(10)+'VL_TOTAL_DOC="'+VL_TOTAL_DOC+'"'+;
   CHR(13)+CHR(10)+'VL_COMPL="'+VL_COMPL+'"'  AS PARTE_9,;
   CHR(13)+CHR(10)+'IND_COMPL="'+IND_COMPL+'"'+;
   CHR(13)+CHR(10)+'/>'+CHR(13)+CHR(10) AS PARTE_10 ;
   FROM CUR_ITEM  INTO  TABLE \TMP\X_ITEM2



*------------------------------------------------------------------*
	
	SELECT ;
		   x1.PARTE_1,;
		   x1.PARTE_2,;
		   x1.PARTE_3,;
		   x1.PARTE_4,;
		   x1.PARTE_5,;
		   CHRTRAN(x2.PARTE_6,".",",") AS PARTE_6,;
		   CHRTRAN(x2.PARTE_7,".",",") AS PARTE_7,;
		   CHRTRAN(x2.PARTE_8,".",",") AS PARTE_8,;
		   CHRTRAN(x2.PARTE_9,".",",") AS PARTE_9,;
		   CHRTRAN(x2.PARTE_10,".",",") AS PARTE_10;
   FROM X_ITEM1 x1,X_ITEM2 x2;
   WHERE X1.CHAVE = X2.CHAVE ;
   INTO CURSOR X_ITEM
   	
*------------------------------------------------------------------*

   SELE X_ITEM
   COPY TO  L:\TMP\TMP.XML FIELDS PARTE_1,;
   								  PARTE_2,;
   								  PARTE_3,;
   								  PARTE_4,;
   								  PARTE_5,;
   								  PARTE_6,;
   								  PARTE_7,;
   								  PARTE_8,;
   								  PARTE_9,;
   								  PARTE_10 ;
   								  TYPE SDF
   								
*------------------------------------------------------------------*
	=ADModelaXML("LIVROCPA",PrmEmp,PrmDtIni,PrmDtFin)
*------------------------------------------------------------------*
	SELE ECF_INFO
	USE
	SELE CUR_ITEM
	USE
	SELE X_ITEM1
	USE	
	SELE X_ITEM2
	USE	
	SELE X_ITEM
	USE	

RETURN


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4L70X0C7J           ADInventario VALID                 ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0310B,     Record Number:   15  ╨
*       ╨ Variable:            ADInventario                       ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      106                                ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*

FUNCTION _4l70x0c7j     &&  ADInventario VALID
#REGION 3
RETURN

FUNCTION ADInventario
PARAMETERS PrmEmp,PrmDtIni,PrmDtFin
*------------------------------------------------------------------*
*------------------------------------------------------------------*

  =ULLvrInvt(PrmEmp,PrmDtFin)

	SELECT ;
	   STR(EMP.CGC,14) 	AS UNEM_CNPJ,;
	   INV.IND_PROP,;
	   INV.CPF,;
	   INV.CNPJ,;
	   INV.IND_INV,;
	   CHRTRAN(STR(YEAR(PrmDtFin),4)," ","0") AS ANO,;
	   CHRTRAN(STR(MONTH(PrmDtFin),2)," ","0") AS MES,;
       LEFT(CHRTRAN(INV.COD_NCM,".","")+SPACE(8),8)	AS COD_NCM,;
	   INV.COD_ITEM,;	
	   CHRTRAN(STR(INV.VL_UNIT,12,3)," ","0") AS VL_UNIT,;
	   CHRTRAN(STR(INV.QTD,12,3)," ","0") AS QTD,;
	   INV.UNID,;
	   CHRTRAN(STR(INV.VL_ITEM,12,2)," ","0") AS VL_ITEM;
  	FROM EMPRESA EMP, ;
         INVNTRIO INV ;
  WHERE EMP.EMPRESA = PrmEmp ;
		AND INV.EMPRESA = PrmEmp ;
  ORDER BY INV.COD_ITEM INTO CURSOR CUR_PRE

	SELECT ;
	   UNEM_CNPJ,;
	   IND_PROP,;
	   CPF,;
	   CNPJ,;
	   ANO,;
	   MES,;
	   IND_INV,;
       COD_NCM,;
	   COD_ITEM,;	
	   CHRTRAN(VL_UNIT,".",",") AS VL_UNIT,;
	   CHRTRAN(QTD,".",",") AS QTD,;
	   UNID,;
	   CHRTRAN(VL_ITEM,".",",") AS VL_ITEM;
  	FROM CUR_PRE ;
  ORDER BY COD_ITEM INTO CURSOR CUR_ITEM


***************************************************


  SELECT ;
   '<ROW UNEM_CNPJ="'+chrtran(UNEM_CNPJ," ","0")+'"'+;
   CHR(13)+CHR(10)+'IND_PROP="'+IND_PROP+'"'+;
   CHR(13)+CHR(10)+'CPF="'+CPF+'"'+;
   CHR(13)+CHR(10)+'ANO="'+ANO+'"'+;
   CHR(13)+CHR(10)+'MES="'+MES+'"'+;
   CHR(13)+CHR(10)+'CNPJ="'+CNPJ+'"'+;
   CHR(13)+CHR(10)+'IND_INV="'+IND_INV+'"'+;
   CHR(13)+CHR(10)+'COD_NCM="'+COD_NCM+'"' AS PARTE_1,;
   CHR(13)+CHR(10)+'COD_ITEM="'+COD_ITEM+'"'+;
   CHR(13)+CHR(10)+'VL_UNIT="'+VL_UNIT+'"'+;
   CHR(13)+CHR(10)+'QTD="'+QTD+'"'+;
   CHR(13)+CHR(10)+'UNID="'+UNID+'"'+;
   CHR(13)+CHR(10)+'VL_ITEM="'+VL_ITEM+'"' AS PARTE_2,;
   CHR(13)+CHR(10)+'/>'+CHR(13)+CHR(10) AS PARTE_3 ;
  FROM CUR_ITEM INTO CURSOR X_ITEM

*------------------------------------------------------------------*
   SELE X_ITEM
   COPY TO  L:\TMP\TMP.XML FIELDS PARTE_1,;
                                  PARTE_2,;
                                  PARTE_3 TYPE SDF
*------------------------------------------------------------------*
	=ADModelaXML("INVENTARIO",PrmEmp,PrmDtIni,PrmDtFin)
*------------------------------------------------------------------*
	SELE CUR_ITEM
	USE
	SELE X_ITEM
	USE	

RETURN


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4L70X0C7Q           ADApuraIcms VALID                  ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0310B,     Record Number:   16  ╨
*       ╨ Variable:            ADApuraIcms                        ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      107                                ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*

FUNCTION _4l70x0c7q     &&  ADApuraIcms VALID
#REGION 3
RETURN

FUNCTION ADApuraIcms
PARAMETERS PrmEmp,PrmDtIni,PrmDtFin
*------------------------------------------------------------------*
*------------------------------------------------------------------*

  =ULLvrICMS(PrmEmp,PrmDtFin)

	SELECT ;
	   STR(EMP.CGC,14) 	AS UNEM_CNPJ,;
	   STR(ANO,4) AS ANO,;
	   STR(MES,2) AS MES,;
	   STR(DBSAIDAS,12,2) AS DBSAIDAS,;
	   STR(DBOUTROS,12,2) AS DBOUTROS,;
	   STR(DBESTORNOS,12,2) AS DBESTORNOS,;
	   STR(DBTOTAL,12,2) AS DBTOTAL,;
	   STR(CRENTRADAS,12,2) AS CRENTRADAS,;
	   STR(CROUTROS,12,2) AS CROUTROS,;
	   STR(CRESTORNOS,12,2) AS CRESTORNOS,;
	   STR(CRTOTAL,12,2) AS CRTOTAL,;
	   STR(SLDCREDOR,12,2) AS SLDCREDOR,;
	   STR(VLCREDITOS,12,2) AS VLCREDITOS,;
	   STR(SLDCREDTRA,12,2) AS SLDCREDTRA,;
	   STR(SLDDEVEDOR,12,2) AS SLDDEVEDOR,;
	   STR(VLDEDUCOES,12,2) AS VLDEDUCOES,;
	   STR(ICMARECOLH,12,2) AS ICMARECOLH,;
	   STR(ICMSUBSTEN,12,2) AS ICMSUBSTEN,;
	   STR(ICMSUBSTSA,12,2) AS ICMSUBSTSA,;
	   STR(VLDIFALIQU,12,2) AS VLDIFALIQU,;
	   STR(ICMSIMPORT,12,2) AS ICMSIMPORT,;
	   STR(VLOUTOBRIG,12,2) AS VLOUTOBRIG,;
	   STR(VLTOTOBRIG,12,2) AS VLTOTOBRIG,;
	   STR(TOTSUBSTIT,12,2) AS TOTSUBSTIT;
  	FROM EMPRESA EMP, ;
         LIVROICM APR ;
  WHERE EMP.EMPRESA = PrmEmp ;
		AND APR.EMPRESA = PrmEmp ;
	INTO CURSOR CUR_PRE

	SELECT ;
	   CHRTRAN(UNEM_CNPJ," ","0") AS UNEM_CNPJ,;
	   CHRTRAN(ANO," ","0") AS ANO,;
	   CHRTRAN(MES," ","0") AS MES,;
	   CHRTRAN(DBSAIDAS," ","0") AS DBSAIDAS,;
	   CHRTRAN(DBOUTROS," ","0") AS DBOUTROS,;
	   CHRTRAN(DBESTORNOS," ","0") AS DBESTORNOS,;
	   CHRTRAN(DBTOTAL," ","0") AS DBTOTAL,;
	   CHRTRAN(CRENTRADAS," ","0") AS CRENTRADAS,;
	   CHRTRAN(CROUTROS," ","0") AS CROUTROS,;
	   CHRTRAN(CRESTORNOS," ","0") AS CRESTORNOS,;
	   CHRTRAN(CRTOTAL," ","0") AS CRTOTAL,;
	   CHRTRAN(SLDCREDOR," ","0") AS SLDCREDOR,;
	   CHRTRAN(VLCREDITOS," ","0") AS VLCREDITOS,;
	   CHRTRAN(SLDCREDTRA," ","0") AS SLDCREDTRA,;
	   CHRTRAN(SLDDEVEDOR," ","0") AS SLDDEVEDOR,;
	   CHRTRAN(VLDEDUCOES," ","0") AS VLDEDUCOES,;
	   CHRTRAN(ICMARECOLH," ","0") AS ICMARECOLH,;
	   CHRTRAN(ICMSUBSTEN," ","0") AS ICMSUBSTEN,;
	   CHRTRAN(ICMSUBSTSA," ","0") AS ICMSUBSTSA,;
	   CHRTRAN(VLDIFALIQU," ","0") AS VLDIFALIQU,;
	   CHRTRAN(ICMSIMPORT," ","0") AS ICMSIMPORT,;
	   CHRTRAN(VLOUTOBRIG," ","0") AS VLOUTOBRIG,;
	   CHRTRAN(VLTOTOBRIG," ","0") AS VLTOTOBRIG,;
	   CHRTRAN(TOTSUBSTIT," ","0") AS TOTSUBSTIT;
  	FROM CUR_PRE ;
    INTO CURSOR CUR_PRE2

	SELECT ;
	   UNEM_CNPJ,;
	   CHRTRAN(ANO,".",",") AS ANO,;
	   CHRTRAN(MES,".",",") AS MES,;
	   CHRTRAN(DBSAIDAS,".",",") AS DBSAIDAS,;
	   CHRTRAN(DBOUTROS,".",",") AS DBOUTROS,;
	   CHRTRAN(DBESTORNOS,".",",") AS DBESTORNOS,;
	   CHRTRAN(DBTOTAL,".",",") AS DBTOTAL,;
	   CHRTRAN(CRENTRADAS,".",",") AS CRENTRADAS,;
	   CHRTRAN(CROUTROS,".",",") AS CROUTROS,;
	   CHRTRAN(CRESTORNOS,".",",") AS CRESTORNOS,;
	   CHRTRAN(CRTOTAL,".",",") AS CRTOTAL,;
	   CHRTRAN(SLDCREDOR,".",",") AS SLDCREDOR,;
	   CHRTRAN(VLCREDITOS,".",",") AS VLCREDITOS,;
	   CHRTRAN(SLDCREDTRA,".",",") AS SLDCREDTRA,;
	   CHRTRAN(SLDDEVEDOR,".",",") AS SLDDEVEDOR,;
	   CHRTRAN(VLDEDUCOES,".",",") AS VLDEDUCOES,;
	   CHRTRAN(ICMARECOLH,".",",") AS ICMARECOLH,;
	   CHRTRAN(ICMSUBSTEN,".",",") AS ICMSUBSTEN,;
	   CHRTRAN(ICMSUBSTSA,".",",") AS ICMSUBSTSA,;
	   CHRTRAN(VLDIFALIQU,".",",") AS VLDIFALIQU,;
	   CHRTRAN(ICMSIMPORT,".",",") AS ICMSIMPORT,;
	   CHRTRAN(VLOUTOBRIG,".",",") AS VLOUTOBRIG,;
	   CHRTRAN(VLTOTOBRIG,".",",") AS VLTOTOBRIG,;
	   CHRTRAN(TOTSUBSTIT,".",",") AS TOTSUBSTIT;
  	FROM CUR_PRE2 ;
    INTO CURSOR CUR_ITEM


***************************************************


  SELECT ;
   '<ROW UNEM_CNPJ="'+UNEM_CNPJ+'"'+;
   CHR(13)+CHR(10)+'ANO="'+ANO+'"'+;
   CHR(13)+CHR(10)+'MES="'+MES+'"'+;
   CHR(13)+CHR(10)+'DBSAIDAS="'+DBSAIDAS+'"'+;
   CHR(13)+CHR(10)+'DBOUTROS="'+DBOUTROS+'"'+;
   CHR(13)+CHR(10)+'DBESTORNOS="'+DBESTORNOS+'"' AS PARTE_1,;
   CHR(13)+CHR(10)+'DBTOTAL="'+DBTOTAL+'"'+;
   CHR(13)+CHR(10)+'CRENTRADAS="'+CRENTRADAS+'"'+;
   CHR(13)+CHR(10)+'CROUTROS="'+CROUTROS+'"'+;
   CHR(13)+CHR(10)+'CRESTORNOS="'+CRESTORNOS+'"'+;
   CHR(13)+CHR(10)+'CRTOTAL="'+CRTOTAL+'"' AS PARTE_2,;
   CHR(13)+CHR(10)+'SLDCREDOR="'+SLDCREDOR+'"'+;
   CHR(13)+CHR(10)+'VLCREDITOS="'+VLCREDITOS+'"'+;
   CHR(13)+CHR(10)+'SLDCREDORTRANS="'+SLDCREDTRA+'"'+;
   CHR(13)+CHR(10)+'SLDDEVEDOR="'+SLDDEVEDOR+'"'+;
   CHR(13)+CHR(10)+'VLDEDUCOES="'+VLDEDUCOES+'"' AS PARTE_3,;
   CHR(13)+CHR(10)+'ICMAARECOLHER="'+ICMARECOLH+'"'+;
   CHR(13)+CHR(10)+'ICMSUBSTENTRADAS="'+ICMSUBSTEN+'"'+;
   CHR(13)+CHR(10)+'ICMSUBSTSAIDAS="'+ICMSUBSTSA+'"'+;
   CHR(13)+CHR(10)+'VLDIFALIQUOTA="'+VLDIFALIQU+'"'+;
   CHR(13)+CHR(10)+'ICMSIMPORTACAO="'+ICMSIMPORT+'"' AS PARTE_4,;
   CHR(13)+CHR(10)+'VLOUTOBRGICMS="'+VLOUTOBRIG+'"'+;
   CHR(13)+CHR(10)+'VLTOTOBRGICMS="'+VLTOTOBRIG+'"'+;
   CHR(13)+CHR(10)+'TOTSUBSTITUICAO="'+TOTSUBSTIT+'"'+;
   CHR(13)+CHR(10)+'/>'+CHR(13)+CHR(10) AS PARTE_5 ;
  FROM CUR_ITEM INTO CURSOR X_ITEM

*------------------------------------------------------------------*
   SELE X_ITEM
   COPY TO  L:\TMP\TMP.XML FIELDS PARTE_1,;
                                  PARTE_2,;
                                  PARTE_3,;
                                  PARTE_4,;
                                  PARTE_5 TYPE SDF
*------------------------------------------------------------------*
	=ADModelaXML("APURACAO ICMS",PrmEmp,PrmDtIni,PrmDtFin)
*------------------------------------------------------------------*
	SELE CUR_ITEM
	USE
	SELE X_ITEM
	USE	

RETURN


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4L70X0C7R           ADModelaXML VALID                  ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0310B,     Record Number:   17  ╨
*       ╨ Variable:            ADModelaXML                        ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      108                                ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*

FUNCTION _4l70x0c7r     &&  ADModelaXML VALID
#REGION 3
RETURN

FUNCTION ADModelaXML
PARAMETERS PrmTipoModelo,PrmEmp,PrmDtIni,PrmDtFin
			&& "CLIENTE"
			&& "FORNECEDOR"
			&& "ITEM"
			&& "LEITURA_Z"
			&& "LIVROSAI"
			&& "LIVROENT"
			&& "INVENTARIO"
			&& "APURACAO ICMS"

	*------------------------------------------------------------------*
	PRIVATE LSemp,LSmes,LSarq
	
	LSemp   = STR(PrmEmp,2)
	LSemp   = CHRTRAN(LSemp," ","0")

	LSmes   = STR(MONTH(PrmDtIni),2)
	LSmes   = CHRTRAN(LSmes," ","0")

	LSano   = STR(YEAR(PrmDtIni),4)
	LSano   = CHRTRAN(LSano," ","0")
	LSano   = RIGHT(LSano,1)

	
	*------------------------------------------------------------------*
	SELE Linha
	ZAP
	PACK
	APPEND FROM  L:\TMP\TMP.XML TYPE SDF
	*------------------------------------------------------------------*
	SELECT LINHA       AS XML_LINHA, ;
		RECNO()+00000000001000 AS XML_ORDEM;
	FROM LINHA ;
	INTO CURSOR XML_CORPO

	*------------------------------------------------------------------*
	DO CASE
		CASE PrmTipoModelo  $ "CLIENTE / FORNECEDOR"
			select * from  \scgc\comum\xmlPrtcp ;
				UNION ;
			select * from  XML_CORPO;
			INTO CURSOR XML_1
		CASE PrmTipoModelo  = "ITEM"
			select * from  \scgc\comum\xmlItem ;
				UNION ;
			select * from  XML_CORPO;
			INTO CURSOR XML_1
		CASE PrmTipoModelo  = "LEITURA_Z"
			select * from  \scgc\comum\xmlle_z ;
				UNION ;
			select * from  XML_CORPO;
			INTO CURSOR XML_1
		CASE PrmTipoModelo  = "LIVROSAI"
			select * from  \scgc\comum\xmllvro ;
				UNION ;
			select * from  XML_CORPO;
			INTO CURSOR XML_1
		CASE PrmTipoModelo  = "LIVROCPA"
			select * from  \scgc\comum\xmllvro ;
				UNION ;
			select * from  XML_CORPO;
			INTO CURSOR XML_1
		CASE PrmTipoModelo  = "LIVROENT"
			select * from  \scgc\comum\xmllvro ;
				UNION ;
			select * from  XML_CORPO;
			INTO CURSOR XML_1
		CASE PrmTipoModelo  = "INVENTARIO"
			select * from  \scgc\comum\XMLINVT ;
				UNION ;
			select * from  XML_CORPO;
			INTO CURSOR XML_1
		CASE PrmTipoModelo  = "APURACAO ICMS"
			select * from  \scgc\comum\XMLICMS ;
				UNION ;
			select * from  XML_CORPO;
			INTO CURSOR XML_1
	ENDCASE

	*------------------------------------------------------------------*

	SELECT XML_LINHA as AXML_LINHA FROM XML_1 ;
	ORDER BY XML_ORDEM ;
	INTO CURSOR XML_2

	

	DO CASE
		CASE PrmTipoModelo  $ "CLIENTE"
			LSarq = "\SCGC\EFD\"+LSemp+LSano+LSmes+"CLI.XML"
		CASE PrmTipoModelo  $ "FORNECEDOR"
			LSarq = "\SCGC\EFD\"+LSemp+LSano+LSmes+"FRN.XML"
		CASE PrmTipoModelo  = "ITEM"
			LSarq = "\SCGC\EFD\"+LSemp+LSano+LSmes+"PRD.XML"
		CASE PrmTipoModelo  = "LEITURA_Z"
			LSarq = "\SCGC\EFD\"+LSemp+LSano+LSmes+"L_Z.XML"
		CASE PrmTipoModelo  = "LIVROSAI"
			LSarq = "\SCGC\EFD\"+LSemp+LSano+LSmes+"NFS.XML"
		CASE PrmTipoModelo  = "LIVROCPA"
			LSarq = "\SCGC\EFD\"+LSemp+LSano+LSmes+"CPM.XML"
		CASE PrmTipoModelo  = "LIVROENT"
			LSarq = "\SCGC\EFD\"+LSemp+LSano+LSmes+"NFE.XML"
		CASE PrmTipoModelo  = "INVENTARIO"
			LSarq = "\SCGC\EFD\"+LSemp+LSano+LSmes+"IVT.XML"
		CASE PrmTipoModelo  = "APURACAO ICMS"
			LSarq = "\SCGC\EFD\"+LSemp+LSano+LSmes+"ICM.XML"
	ENDCASE
	COPY TO  &LSarq TYPE SDF

	SELE Xml_Corpo
	USE

	SELE Xml_1
	USE

	SELE Xml_2
	USE

RETURN




*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4L70X0C7S           ADGerNFSaiDocFiscal VALID          ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0310B,     Record Number:   19  ╨
*       ╨ Variable:            ADGerNFSaiDocFiscal                ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      109                                ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*

FUNCTION _4l70x0c7s     &&  ADGerNFSaiDocFiscal VALID
#REGION 3
RETURN


FUNCTION ADGerNFSaiDocFiscal
PARAMETERS PrmEmp,PrmDtIni,PrmDtFin




 	=W_DEFPROC("DOCFISCA.SPR")
	=DFGerNFDocFiscal(PrmEmp,PrmDtIni,PrmDtFin)


	WAIT WINDOW "Exportacao Concluida <Enter>"  NOWAIT

	*---------------------------------------------------------------*
	SET TALK off
	SHOW WINDOW SCT0310 TOP

RETURN


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4L70X0C8R           ADGeraXMLDocFiscal VALID           ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0310B,     Record Number:   20  ╨
*       ╨ Variable:            ADGeraXMLDocFiscal                 ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      110                                ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*

FUNCTION _4l70x0c8r     &&  ADGeraXMLDocFiscal VALID
#REGION 3
RETURN


FUNCTION ADGeraXMLDocFiscal
PARAMETERS PrmEmp,PrmDtIni,PrmDtFin,PrmInventario,PrmFinalidade


	IF PrmFinalidade <> "EFD-SIMPLES"
	
		=W_DEFPROC("DOCFISCA.SPR")
		=DFGerXMLPeriodoDocFiscal(PrmEmp,PrmDtIni,PrmDtFin)
	
		=W_DEFPROC("DOCFISIT.SPR")
		=DIGerXMLPeriodoDocFiscal(PrmEmp,PrmDtIni,PrmDtFin)

	ENDIF


	=ADExpXMLDados(m.empresa,m.dt_inicio,m.dt_fim,;
	                PrmInventario,PrmFinalidade)

	WAIT WINDOW "Exportacao Concluida <Enter>" NOWAIT

	*---------------------------------------------------------------*
	SET TALK off
	SHOW WINDOW SCT0310 TOP

RETURN


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4L70X0C8Y           ADGerNFEntDocFiscal VALID          ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0310B,     Record Number:   21  ╨
*       ╨ Variable:            ADGerNFEntDocFiscal                ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      111                                ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*

FUNCTION _4l70x0c8y     &&  ADGerNFEntDocFiscal VALID
#REGION 3
RETURN


FUNCTION ADGerNFEntDocFiscal
PARAMETERS PrmEmp,PrmDtIni,PrmDtFin





	=W_DEFPROC("DOCFISCA.SPR")
	=DFGerNEDocFiscal(PrmEmp,PrmDtIni,PrmDtFin)

	WAIT WINDOW "Exportacao Concluida <Enter>"  NOWAIT

	*---------------------------------------------------------------*
	SET TALK off
	SHOW WINDOW SCT0310 TOP

RETURN


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4L70X0C94           ADLimpaString VALID                ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0310B,     Record Number:   22  ╨
*       ╨ Variable:            ADLimpaString                      ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      112                                ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*

FUNCTION _4l70x0c94     &&  ADLimpaString VALID
#REGION 3
RETURN




FUNCTION ADLimpaString
PARAMETERS PrmString

	PRMString = chrtran(PRMString,"─","C")       && 01
	PRMString = chrtran(PRMString,"┤","c")       && 02
	PRMString = chrtran(PRMString,"&","e")       && 03
	PRMString = chrtran(PRMString,"╕","-")       && 04
	PRMString = chrtran(PRMString,"╖","-")       && 05
	PRMString = chrtran(PRMString,"╟",'')        && 06
	PRMString = chrtran(PRMString,"╨",'')        && 07
	PRMString = chrtran(PRMString,"░",'E')       && 08
	PRMString = chrtran(PRMString,"┌",'e')       && 09
	PRMString = chrtran(PRMString,"г",'C')       && 10
	PRMString = chrtran(PRMString,"ф",'a')       && 11
	PRMString = chrtran(PRMString,"Ь",'')        && 12
	PRMString = chrtran(PRMString,chr(0),'')     && 13

** nao 	PRMString = chrtran(PRMString,'"','')        && 14

RETURN(PrmString)


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4L70X0C9C           ADEFDApuraICM VALID                ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0310B,     Record Number:   23  ╨
*       ╨ Variable:            ADEFDApuraICM                      ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      113                                ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*

FUNCTION _4l70x0c9c     &&  ADEFDApuraICM VALID
#REGION 3
RETURN


FUNCTION ADEFDApuraICM
PARAMETERS PrmEmp,PrmDtIni,PrmDtFin




	=W_DEFPROC("DOCFISIT.SPR")
	=DIApuraICMS(PrmEmp,PrmDtIni,PrmDtFin)


	*---------------------------------------------------------------*
	SET TALK off
	SHOW WINDOW SCT0310 TOP

RETURN


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4L70X0C9D           ADItens VALID                      ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0310B,     Record Number:   24  ╨
*       ╨ Variable:            ADItens                            ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      114                                ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*

FUNCTION _4l70x0c9d     &&  ADItens VALID
#REGION 3
RETURN

*------------------------------------------------------------------*
*  DADOS DE ITENS
*------------------------------------------------------------------*

FUNCTION ADItens
PARAMETERS PrmEmp,PrmDtIni,PrmDtFin

SELE GRUPO
IF TYPE("GRUPO.COD_LSTSRV")="C"
	SELECT ;
	   STR(EMP.CGC,14) 					AS UNEM_CNPJ,;
	   LEFT(GR.CODIGO+SPACE(20),20) 	AS COD_ITEM,;
	   LEFT(GR.DESCRICAO+SPACE(70),70) 	AS DESCRITEM,;
	   LEFT(GR.COD_GENERO+SPACE(2),2)  	AS COD_GEN,;
	   GR.COD_LSTSRV                    AS COD_LST,;
	   LEFT(GR.CTA_CONTAB+SPACE(20),20) AS CTA_CONTAB,;
	   LEFT(CHRTRAN(GR.COD_NCM,".","")+SPACE(8),8)  		AS COD_NCM;
	  FROM EMPRESA EMP, ;
    	   GRUPO GR ;
	  WHERE EMP.EMPRESA = PrmEmp ;
    	    AND	gr.cdg_tipo = 4;
        	AND STR(gr.tp_control,1) $ "1/2/3/5/4";
	  GROUP BY GR.CODIGO;
	  ORDER BY GR.CODIGO INTO CURSOR CUR_ITEM
ELSE

	SELECT ;
	   STR(EMP.CGC,14) 					AS UNEM_CNPJ,;
	   LEFT(GR.CODIGO+SPACE(20),20) 	AS COD_ITEM,;
	   LEFT(GR.DESCRICAO+SPACE(70),70) 	AS DESCRITEM,;
	   LEFT(GR.COD_GENERO+SPACE(2),2)  	AS COD_GEN,;
	   STR(GR.COD_LSTSRV,4)             AS COD_LST,;
	   LEFT(GR.CTA_CONTAB+SPACE(20),20) AS CTA_CONTAB,;
	   LEFT(CHRTRAN(GR.COD_NCM,".","")+SPACE(8),8)  		AS COD_NCM;
	FROM EMPRESA EMP, ;
       GRUPO GR ;
	WHERE EMP.EMPRESA = PrmEmp ;
        AND	gr.cdg_tipo = 4;
        AND STR(gr.tp_control,1) $ "1/2/3/5/4";
  	GROUP BY GR.CODIGO;
  	ORDER BY GR.CODIGO INTO CURSOR CUR_ITEM
ENDIF
*  	AND IT.EMPRESA = PrmEmp ;
* 	AND IT.DATA >= PrmDtIni ;
*  	AND IT.DATA <= PrmDtFin ;
*   AND IT.CH_OPERA <> "5" ;
*  	AND GR.CODIGO  = IT.CODIGO ;


  SELECT ;
   '<ROW UNEM_CNPJ="'+chrtran(UNEM_CNPJ," ","0")+'"'+;
   CHR(13)+CHR(10)+'COD_ITEM="'+COD_ITEM+'"'+;
   CHR(13)+CHR(10)+'DESCRITEM="'+DESCRITEM+'"'+;
   CHR(13)+CHR(10)+'COD_GEN="'+COD_GEN+'"'+;
   CHR(13)+CHR(10)+'COD_LST="'+COD_LST+'"'+;
   CHR(13)+CHR(10)+'CTA_CONTAB="'+CTA_CONTAB+'"'+;
   CHR(13)+CHR(10)+'COD_NCM="'+COD_NCM+'"' AS PARTE_1,;
   CHR(13)+CHR(10)+'/>'+CHR(13)+CHR(10) AS PARTE_2 ;
  FROM CUR_ITEM INTO CURSOR X_ITEM

*------------------------------------------------------------------*
   SELE X_ITEM
   COPY TO  L:\TMP\TMP.XML FIELDS PARTE_1,PARTE_2 TYPE SDF
*------------------------------------------------------------------*
	=ADModelaXML("ITEM",PrmEmp,PrmDtIni,PrmDtFin)
*------------------------------------------------------------------*
	SELE CUR_ITEM
	USE
	SELE X_ITEM
	USE	

RETURN


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4L70X0BS8           Read Level Show                    ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         Multiple Screens                   ╨
*       ╨ Called By:           READ Statement                     ╨
*       ╨ Snippet Number:      **                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _4l70x0bs8     && Read Level Show
PRIVATE currwind
STORE WOUTPUT() TO currwind
*
* Show Code from screen: SCT0310
*
#REGION 1
HIDE WINDOW SCT0310A
HIDE WINDOW SCT0310B

IF NOT EMPTY(currwind)
	ACTIVATE WINDOW (currwind) SAME
ENDIF