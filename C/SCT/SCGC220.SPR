*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ 07/19/14             SCGC220.SPR               10:37:15 ╨
*       ╨                                                         ╨
*       гддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╤
*       ╨                                                         ╨
*       ╨ Author's Name                                           ╨
*       ╨                                                         ╨
*       ╨ Copyright (c) 2014 Company Name                         ╨
*       ╨ Address                                                 ╨
*       ╨ City,     Zip                                           ╨
*       ╨                                                         ╨
*       ╨ Description:                                            ╨
*       ╨ This program was automatically generated by GENSCRN.    ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨          SCGC220/MS-DOS Setup Code - SECTION 1          ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*

#REGION 1
	*------------------------------------------------------------*
	* CLASSIFICACAO:  [?????]                           		 *
	*------------------------------------------------------------*
	* OBJETIVO....: Processar e Emitir Livros Fiscai
	*------------------------------------------------------------*
	* COMENTARIO..:
	*------------------------------------------------------------*
	* OBS........ :
	*------------------------------------------------------------*
	* TABELAS....: EMPRESA,NOTA,NOTAENT,ITEMMOV
	*------------------------------------------------------------*
	* PARAMETROS..:
	*------------------------------------------------------------*
	* RETORNO.....:
	*------------------------------------------------------------*
	*<<<<<<<<<<<<<<<<<<<<<<<         >>>>>>>>>>>>>>>>>>>>>>>>>>>>*
	*------------------------------------------------------------*
	* Ambiente
	*------------------------------------------------------------*
	=W_DEFPROC("rotinas.SPR")
	ON KEY LABEL ESCAPE

	*------------------------------------------------------------*
	* Variaveis  Controlando Arquivos
	*------------------------------------------------------------*
	PRIVATE LSalias
	PRIVATE LFempresa,LFnota,LFnotaent,LFitemmov,LFfornece,LFgrupo
	PRIVATE LFgrfiscal
	PRIVATE LFtabnbm,LFclasnbm,LFmapaecf,LFtipooper,LFTbNcnNbm

	LSalias			= ALIAS()
	LFempresa		= NetArq("empresa")
	LFnota			= NetArq("nota")
	LFnotaent		= NetArq("notaent")
	LFitemmov		= NetArq("itemmov")
	LFfornece		= NetArq("fornece")
	LFgrupo  		= NetArq("grupo")
	LFgrfiscal 		= NetArq("grfiscal")
	LFTabNbm  		= NetArq("tabnbm")
	LFClasNbm 		= NetArq("clasnbm")
	LFTbNcnNbm		= NetArq("TBNCMNBM")
	LFMapaEcf 		= NetArq("mapaecf")
	LFTipooper		= NetArq("tipooper")
	LFCliente		= NetArq("clientes")
	
	IF (LFempresa+LFnota+LFnotaent+LFitemmov+;
		LFfornece+LFgrupo+LFgrfiscal+LFtabnbm+LFclasnbm+LFMapaEcf+;
		LFtipooper+LFcliente+LFTbNcnNbm) > 100000
		*-----------------------------------------------------*
		* FALHA DE ABERTURA DE TABELAS
		*-----------------------------------------------------*
		DO ULfecha
		RETURN(0)
	ENDIF
	*------------------------------------------------------------*
	* Variaveis  abientais com influencia na biblioteca
	*   deve-se adequar a biblioteca para recebelas via parametro
	*   e nao pelo ambiente com esta sendo feito
	*------------------------------------------------------------*
	PRIVATE wp_ref_local
	PRIVATE isediting
	wp_ref_local 	=  .f.     && NAO POSSUI CONTROLE DE REFRESH LOCAL
	m.isediting		=	.F.

	*------------------------------------------------------------*
	* Variaveis  de uso Especico no Formulario
	*------------------------------------------------------------*
	PRIVATE LFAnSaida,LFStSaida,LFResCfoS,LFResUfS,LNPagina
	PRIVATE LFAnEntrada,LFStEntrada,LFResCfoE,LFResUfE
	PRIVATE LFIpiEntrada,LFIpiSaida,LFIpiProd
	PRIVATE LFCr_ICMS,LFconv_3199
	PRIVATE LFICMProd

	STORE .F. TO LFAnSaida,LFStSaida,LFResCfoS,LFResUfS
	STORE 0   TO LNpagina
	STORE .F. TO LFAnEntrada,LFStEntrada,LFResCfoE,LFResUfE
	STORE .F. TO LFIpiEntrada,LFIpiSaida,LFIpiProd
	STORE .F. TO LFCr_ICMS,LFCRpc_ICMS,LFconv_3199
	STORE .F. TO LFICMProd

#REGION 0
REGIONAL m.currarea, m.talkstat, m.compstat

IF SET("TALK") = "ON"
	SET TALK OFF
	m.talkstat = "ON"
ELSE
	m.talkstat = "OFF"
ENDIF
m.compstat = SET("COMPATIBLE")
SET COMPATIBLE FOXPLUS

*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨                MS-DOS Window definitions                ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*

IF NOT WEXIST("scgc220") ;
	OR UPPER(WTITLE("SCGC220")) == "SCGC220.PJX" ;
	OR UPPER(WTITLE("SCGC220")) == "SCGC220.SCX" ;
	OR UPPER(WTITLE("SCGC220")) == "SCGC220.MNX" ;
	OR UPPER(WTITLE("SCGC220")) == "SCGC220.PRG" ;
	OR UPPER(WTITLE("SCGC220")) == "SCGC220.FRX" ;
	OR UPPER(WTITLE("SCGC220")) == "SCGC220.QPR"
	DEFINE WINDOW scgc220 ;
		FROM INT((SROW()-21)/2),INT((SCOL()-77)/2) ;
		TO INT((SROW()-21)/2)+20,INT((SCOL()-77)/2)+76 ;
		TITLE "[ Livro Registro de Saidas ]" ;
		FOOTER "[ 220 ]" ;
		FLOAT ;
		NOCLOSE ;
		SHADOW ;
		NOMINIMIZE ;
		NONE ;
		COLOR SCHEME 1
ENDIF


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨          SCGC220/MS-DOS Setup Code - SECTION 2          ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*

#REGION 1




*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨              SCGC220/MS-DOS Screen Layout               ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*

#REGION 1
IF WVISIBLE("scgc220")
	ACTIVATE WINDOW scgc220 SAME
ELSE
	ACTIVATE WINDOW scgc220 NOSHOW
ENDIF
@ 0,0 TO 20,76 ;
	COLOR SCHEME 23
@ 0,21 SAY "[Livro de Registro de Saidas]" ;
	SIZE 1,29, 0
@ 0,63 SAY "[220]" ;
	SIZE 1,5, 0
@ 2,3 TO 4,18 ;
	COLOR SCHEME 23
@ 4,4 TO 4,17 ;
	COLOR SCHEME 24
@ 4,18 SAY "ы" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 3,18 SAY "Ё" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 2,18 SAY "©" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 2,4 SAY "[Filial]" ;
	SIZE 1,8, 0
@ 3,7 SAY "-" ;
	SIZE 1,1, 0
@ 2,22 TO 4,50 ;
	COLOR SCHEME 23
@ 4,23 TO 4,49 ;
	COLOR SCHEME 24
@ 4,50 SAY "ы" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 3,50 SAY "Ё" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 2,50 SAY "©" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 2,52 TO 4,75 ;
	COLOR SCHEME 23
@ 4,53 TO 4,74 ;
	COLOR SCHEME 24
@ 4,75 SAY "ы" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 3,75 SAY "Ё" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 2,75 SAY "©" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 6,3 TO 11,25 ;
	COLOR SCHEME 23
@ 11,4 TO 11,24 ;
	COLOR SCHEME 24
@ 11,25 SAY "ы" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 6,25 SAY "©" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 1,76 TO 19,76 ;
	COLOR SCHEME 24
@ 7,25 TO 10,25 ;
	COLOR SCHEME 24
@ 20,1 TO 20,75 ;
	COLOR SCHEME 24
@ 20,76 SAY "ы" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 0,76 SAY "©" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 2,24 SAY "[ Periodo ]" ;
	SIZE 1,11, 0
@ 6,30 TO 10,50 ;
	COLOR SCHEME 23
@ 10,31 TO 10,49 ;
	COLOR SCHEME 24
@ 10,50 SAY "ы" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 6,50 SAY "©" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 7,50 TO 9,50 ;
	COLOR SCHEME 24
@ 6,4 SAY "[ Saidas ]" ;
	SIZE 1,10, 0
@ 6,31 SAY "[ Entrada ]" ;
	SIZE 1,11, 0
@ 6,54 TO 10,74 ;
	COLOR SCHEME 23
@ 10,55 TO 10,73 ;
	COLOR SCHEME 24
@ 6,74 SAY "©" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 6,55 SAY "[ IPI ]" ;
	SIZE 1,7, 0
@ 3,60 SAY "/" ;
	SIZE 1,1, 0
@ 2,53 SAY "[Livro / Pg.Inicial]" ;
	SIZE 1,20, 0
@ 13,3 TO 19,28 ;
	COLOR SCHEME 23
@ 19,4 TO 19,27 ;
	COLOR SCHEME 24
@ 19,28 SAY "ы" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 13,28 SAY "©" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 13,4 SAY "[ Outros ]" ;
	SIZE 1,10, 0
@ 14,28 TO 18,28 ;
	COLOR SCHEME 24
@ 7,74 TO 10,74 ;
	COLOR SCHEME 24
@ 10,74 SAY "ы" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 15,33 SAY "Filtrar Estado Destino" ;
	SIZE 1,22, 0
@ 3,4 GET m.empresa ;
	SIZE 1,3 ;
	DEFAULT 0 ;
	PICTURE "999" ;
	WHEN _44a0mrivg() ;
	VALID _44a0mrivh() ;
	ERROR "Empresa Nao Localizada. "
@ 3,8 GET m.nome_emp ;
	SIZE 1,7 ;
	DEFAULT " " ;
	PICTURE "@!K" ;
	WHEN _44a0mrivi()
@ 3,24 GET m.dt_inicio ;
	SIZE 1,10 ;
	DEFAULT {  /  /  } ;
	WHEN _44a0mrivj() ;
	VALID _44a0mrivk()
@ 3,38 GET m.dt_fim ;
	SIZE 1,10 ;
	DEFAULT {  /  /  } ;
	WHEN isediting ;
	VALID m.dt_fim >= m.dt_inicio ;
	MESSAGE "Data Final deve ser maior ou igual a Inicial"
@ 3,57 GET LNlivro ;
	SIZE 1,2 ;
	DEFAULT 0 ;
	PICTURE "99" ;
	WHEN _44a0mrivr() ;
	VALID LNlivro > 0 ;
	ERROR "Numero deve ser > 0 "
@ 3,62 GET LNpagina ;
	SIZE 1,4 ;
	DEFAULT 0 ;
	PICTURE "9999" ;
	WHEN _44a0mriw1() ;
	VALID LNpagina > 0 ;
	ERROR "Numero deve ser > 0 "
@ 5,4 GET SAIDA ;
	PICTURE "@*IVN " ;
	SIZE 1,10,1 ;
	DEFAULT 0 ;
	VALID _44a0mriwk() ;
	DISABLE
@ 7,4 GET LFAnSaida ;
	PICTURE "@*C \<A-Livro Analitico" ;
	SIZE 1,21 ;
	DEFAULT 0 ;
	WHEN _44a0mriwz() ;
	VALID _44a0mrixb() ;
	DISABLE
@ 8,4 GET LFStSaida ;
	PICTURE "@*C \<B-Livro Sintetico" ;
	SIZE 1,21 ;
	DEFAULT 0 ;
	WHEN _44a0mrixo() ;
	VALID _44a0mrixz() ;
	DISABLE
@ 9,4 GET LFResCfoS ;
	PICTURE "@*C \<C-Resumo C.F.O." ;
	SIZE 1,19 ;
	DEFAULT 0 ;
	WHEN isediting ;
	VALID _44a0mriyb() ;
	DISABLE
@ 10,4 GET LFResUfS ;
	PICTURE "@*C \<D-Resumo Estado" ;
	SIZE 1,19 ;
	DEFAULT 0 ;
	WHEN isediting ;
	VALID _44a0mriyo() ;
	DISABLE
@ 5,31 GET ENTRADA ;
	PICTURE "@*IVN " ;
	SIZE 1,10,1 ;
	DEFAULT 0 ;
	VALID _44a0mriz1() ;
	DISABLE
@ 7,31 GET LFAnEntrada ;
	PICTURE "@*C \<E-Livro" ;
	SIZE 1,11 ;
	DEFAULT 0 ;
	WHEN _44a0mrizg() ;
	VALID _44a0mrizr() ;
	DISABLE
@ 8,31 GET LFResCfoE ;
	PICTURE "@*C \<F-Resumo C.F.O." ;
	SIZE 1,19 ;
	DEFAULT 0 ;
	WHEN _44a0mrj02() ;
	VALID _44a0mrj0d() ;
	DISABLE
@ 9,31 GET LFResUfE ;
	PICTURE "@*C \<G-Resumo UF" ;
	SIZE 1,15 ;
	DEFAULT 0 ;
	WHEN _44a0mrj0p() ;
	VALID _44a0mrj10() ;
	DISABLE
@ 5,54 GET saidaIPI ;
	PICTURE "@*IVN " ;
	SIZE 1,4,1 ;
	DEFAULT 0 ;
	VALID _44a0mrj1b() ;
	DISABLE
@ 5,60 GET entradaIPI ;
	PICTURE "@*IVN " ;
	SIZE 1,4,1 ;
	DEFAULT 0 ;
	VALID _44a0mrj1s() ;
	DISABLE
@ 5,66 GET producaoIPI ;
	PICTURE "@*IVN " ;
	SIZE 1,4,1 ;
	DEFAULT 0 ;
	VALID _44a0mrj25() ;
	DISABLE
@ 7,55 GET LFIpiSaida ;
	PICTURE "@*C \<H-IPI - Saida" ;
	SIZE 1,17 ;
	DEFAULT 0 ;
	WHEN isediting ;
	VALID _44a0mrj2l()
@ 8,55 GET LFIpiEntrada ;
	PICTURE "@*C \<I-IPI - Entrada" ;
	SIZE 1,19 ;
	DEFAULT 0 ;
	WHEN _44a0mrj4i() ;
	VALID _44a0mrj4j()
@ 9,55 GET LFIpiProd ;
	PICTURE "@*C \<J-Producao" ;
	SIZE 1,14 ;
	DEFAULT 0 ;
	WHEN isediting ;
	VALID _44a0mrj4k()
@ 12,3 GET CreditoIcms ;
	PICTURE "@*IVN " ;
	SIZE 1,4,1 ;
	DEFAULT 0 ;
	VALID _44a0mrj4l() ;
	DISABLE
@ 12,18 GET producaoICM ;
	PICTURE "@*IVN " ;
	SIZE 1,4,1 ;
	DEFAULT 0 ;
	VALID _44a0mrj60() ;
	DISABLE
@ 14,4 GET LFCRpc_ICMS ;
	PICTURE "@*C \<K-Credito ICMS (pc)" ;
	SIZE 1,23 ;
	DEFAULT 0 ;
	WHEN isediting ;
	VALID _44a0mrj61() ;
	DISABLE
@ 15,4 GET LFCR_ICMS ;
	PICTURE "@*C \<L-Credito ICMS" ;
	SIZE 1,18 ;
	DEFAULT 0 ;
	WHEN isediting ;
	VALID _44a0mrj62() ;
	DISABLE
@ 16,4 GET LFconv_5795 ;
	PICTURE "@*C \<M-Convenio 57/95" ;
	SIZE 1,20 ;
	DEFAULT 0 ;
	WHEN isediting ;
	VALID _44a0mrj63() ;
	DISABLE
@ 17,4 GET LFconv_3199 ;
	PICTURE "@*C \<N-Convenio 31/99" ;
	SIZE 1,20 ;
	DEFAULT 0 ;
	WHEN isediting ;
	VALID _44a0mrj6z() ;
	DISABLE
@ 18,4 GET LFICMProd ;
	PICTURE "@*C \<O-Producao-ICM" ;
	SIZE 1,18 ;
	DEFAULT 0 ;
	WHEN isediting ;
	VALID _44a0mrj8c() ;
	DISABLE
@ 15,56 GET LSuf_destino ;
	SIZE 1,2 ;
	DEFAULT " " ;
	WHEN _44a0mrj8s()
@ 20,37 GET m.imp_btn ;
	PICTURE "@*HN \<Processar" ;
	SIZE 1,11,1 ;
	DEFAULT 1 ;
	WHEN _44a0mrjam() ;
	VALID _44a0mrjan() ;
	DISABLE
@ 20,52 GET m.edit_btn ;
	PICTURE "@*HN \<Edita" ;
	SIZE 1,7,1 ;
	DEFAULT 1 ;
	WHEN _44a0mrjao() ;
	VALID _44a0mrjap() ;
	MESSAGE 'Permite a alteracao de dados do registro corrente'
@ 20,61 GET m.canc_btn ;
	PICTURE "@*HN \<Saida" ;
	SIZE 1,7,1 ;
	DEFAULT 1 ;
	VALID _44a0mrjaq()
@ 12,10 GET CONV3199 ;
	PICTURE "@*IVN " ;
	SIZE 1,4,1 ;
	DEFAULT 0 ;
	VALID _44a0mrjar() ;
	DISABLE

IF NOT WVISIBLE("scgc220")
	ACTIVATE WINDOW scgc220
ENDIF

READ CYCLE ;
	ACTIVATE READACT() ;
	DEACTIVATE READDEAC()

RELEASE WINDOW scgc220

#REGION 0
IF m.talkstat = "ON"
	SET TALK ON
ENDIF
IF m.compstat = "ON"
	SET COMPATIBLE ON
ENDIF


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨               SCGC220/MS-DOS Cleanup Code               ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*

#REGION 1
DO ULfecha
RETURN

**************************************


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨   SCGC220/MS-DOS Supporting Procedures and Functions    ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*

#REGION 1
PROCEDURE ULfecha
	=UP_fecha("empresa" ,LFempresa)
	=UP_fecha("nota" ,LFnota)
	=UP_fecha("notaent" ,LFnotaent)
	=UP_fecha("itemmov" ,LFitemmov)
	=UP_fecha("fornece" ,LFfornece)
	=UP_fecha("grupo" ,LFgrupo)
	=UP_fecha("grfiscal" ,LFgrfiscal)
	=UP_fecha("tabnbm" ,LFTabNbm)
	=UP_fecha("grupo" ,LFClasNbm)
	=UP_fecha("mapaecf" ,LFMapaEcf)
	=UP_fecha("clientes" ,LFcliente)
	=UP_fecha("tipooper" ,LFtipooper)
	=UP_fecha("LFTbNcnNbm" ,LFTbNcnNbm)

	IF !EMPTY(LSalias) AND USED(LSalias)
		SELECT &LSalias
	ENDIF
	ON KEY LABEL ESCAPE
	SET FORMAT TO
RETURN

*--------------


FUNCTION ULini
	LF_fim  = .f.
RETURN(" ")

FUNCTION ULfim
	LF_fim  = .t.
RETURN(" ")

	

*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _44A0MRIVG           m.empresa WHEN                     ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC220,     Record Number:   54   ╨
*       ╨ Variable:            m.empresa                          ╨
*       ╨ Called By:           WHEN Clause                        ╨
*       ╨ Object Type:         Field                              ╨
*       ╨ Snippet Number:      1                                  ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _44a0mrivg     &&  m.empresa WHEN
#REGION 1
ON KEY LABEL ENTER
ON KEY LABEL ESCAPE	KEYBOARD "{END}"
IF LASTKEY() = 15 AND !(isediting)
	KEYBOARD "{ESCAPE}"
ENDIF
RETURN(isediting)

*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _44A0MRIVH           m.empresa VALID                    ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC220,     Record Number:   54   ╨
*       ╨ Variable:            m.empresa                          ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Field                              ╨
*       ╨ Snippet Number:      2                                  ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _44a0mrivh     &&  m.empresa VALID
#REGION 1
SET PROCEDURE TO EMPRESA.spr
RETURN(UVerifEmp(m.empresa,m.nome_emp,LASTKEY()))




*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _44A0MRIVI           m.nome_emp WHEN                    ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC220,     Record Number:   55   ╨
*       ╨ Variable:            m.nome_emp                         ╨
*       ╨ Called By:           WHEN Clause                        ╨
*       ╨ Object Type:         Field                              ╨
*       ╨ Snippet Number:      3                                  ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _44a0mrivi     &&  m.nome_emp WHEN
#REGION 1
SHOW GET m.nome_emp
ON KEY LABEL ESCAPE KEYBOARD "{BACKTAB}"
RETURN(.f.)


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _44A0MRIVJ           m.dt_inicio WHEN                   ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC220,     Record Number:   56   ╨
*       ╨ Variable:            m.dt_inicio                        ╨
*       ╨ Called By:           WHEN Clause                        ╨
*       ╨ Object Type:         Field                              ╨
*       ╨ Snippet Number:      4                                  ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _44a0mrivj     &&  m.dt_inicio WHEN
#REGION 1
IF isediting
	ON KEY LABEL ESCAPE	KEYBOARD "{END}"
ENDIF
RETURN(isediting)

*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _44A0MRIVK           m.dt_inicio VALID                  ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC220,     Record Number:   56   ╨
*       ╨ Variable:            m.dt_inicio                        ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Field                              ╨
*       ╨ Snippet Number:      5                                  ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _44a0mrivk     &&  m.dt_inicio VALID
#REGION 1
m.dt_fim = m.dt_inicio
SHOW GET m.dt_fim
ON KEY LABEL ESCAPE KEYBOARD "{BACKTAB}"
RETURN (.T.)


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _44A0MRIVR           LNlivro WHEN                       ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC220,     Record Number:   58   ╨
*       ╨ Variable:            LNlivro                            ╨
*       ╨ Called By:           WHEN Clause                        ╨
*       ╨ Object Type:         Field                              ╨
*       ╨ Snippet Number:      6                                  ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _44a0mrivr     &&  LNlivro WHEN
#REGION 1
ON KEY LABEL ENTER
RETURN(isediting)

*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _44A0MRIW1           LNpagina WHEN                      ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC220,     Record Number:   59   ╨
*       ╨ Variable:            LNpagina                           ╨
*       ╨ Called By:           WHEN Clause                        ╨
*       ╨ Object Type:         Field                              ╨
*       ╨ Snippet Number:      7                                  ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _44a0mriw1     &&  LNpagina WHEN
#REGION 1
ON KEY LABEL ENTER
RETURN(isediting)

*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _44A0MRIWK           SAIDA VALID                        ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC220,     Record Number:   60   ╨
*       ╨ Variable:            SAIDA                              ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Snippet Number:      8                                  ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _44a0mriwk     &&  SAIDA VALID
#REGION 1
RETURN

*-------------------------------------------------------------------*
*	PROCEDURE CtrlSaida
*   PROCEDURE ULProcSaida   PARAM LNEmp,LDDtInicio,LDDtFim
*	FUNCTION  ULGeraSai   PARAM LNEmp,LDDtInicio,LDDtFim
*	FUNCTION  ULArqSaida  PARAM LNemp,LDdtIni,LDdtFim,LSTipo
*-------------------------------------------------------------------*

PROCEDURE CtrlSaida
PARAMETERS empresa,dt_inicio,m.dt_fim,LFAnSaida, ;
				LFStSaida, LFResCfo, LFResUf, LNpagina, LSuf_destino

	PRIVATE	LSProcesso, LNctrnota
	*----------------------------------------------------------*

	IF !ULGeraSai((m.empresa),(m.dt_inicio),(m.dt_fim),(LFAnSaida),;
		(LSuf_destino))
		RETURN
	ENDIF

	*----------------------------------------------------------*

	DO ULProcSaida  WITH ;
				(m.empresa),(m.dt_inicio),(m.dt_fim),(LFAnSaida), ;
				(LFStSaida), (LFResCfo), (LFResUf), (LNpagina)

	*----------------------------------------------------------*

	IF USED("LIVROSAI")
		SELECT LIVROSAI
		USE
	ENDIF
	SELE nota
RETURN				

*-------------------------------------------------------------------*
*--------------------------------------------------------------*
* Gerar Arquivo LIVRO SAIDA
*
*---------------------------------------------------------------*

FUNCTION ULGeraSai
PARAMETERS LNEmp,LDDtInicio,LDDtFim,LFAnSaida,LSuf_destino
	PRIVATE LSprocesso

	IF LFAnSaida
		LSprocesso = "ANALITICO"
	ELSE
		LSprocesso = "SINTETICO"
	ENDIF		
	IF !ULArqSaida((m.empresa),(m.dt_inicio),(m.dt_fim),(LSprocesso),;
			(LSuf_destino))
		RETURN(.f.)
	ENDIF
RETURN(.t.)

FUNCTION ULArqSaida
	PARAMETERS LNemp,LDdtIni,LDdtFim,LSTipo,LSuf_destino
	SELECT nota
	SET ORDER TO TAG data
	SET NEAR ON
	SEEK STR(LNemp,3)+DTOS(LDdtIni)
	SET NEAR OFF
	IF EOF() OR	nota.data > LDdtFim
 		WAIT WINDOW "Nao Foram Encontrados Dados p/Rel Saidas"
 		SELE nota
		UNLOCK
 		RETURN(.F.)
 	ENDIF		
	*---------------------------------------------------------*
	* Gerar Arq. Temporario
	*---------------------------------------------------------*
	LSarqtmp 	= "" 			&& EX: C:\TMP\TMP0001
	LSaliastmp 	= "TMP" 		&&     TMP001
	LSaliastmp = UPopentmp(wp_dirtmp,LSarqtmp,LSaliastmp,1)
	IF EMPTY(LSaliastmp)
 		WAIT WINDOW "Nao Foi Possivel Gerar Arq Temporario."
 		SELE nota
		UNLOCK
 		RETURN(.F.)
 	ENDIF		
	*---------------------------------------------------------*
	IF USED("LIVROSAI")
		SELE LIVROSAI
		USE
	ENDIF
	DO CASE
	 	CASE LStipo = "SINTETICO"&& GERAR DADOS PARA RELATORIO SINTETICO
			SELE nota
			COPY STRU TO &LSarqtmp WITH CDX
			WAIT WINDOW "AGUARDE. Gerando Arq. Temporario." NOWAIT
		    SELE 0
			USE &LSarqtmp	ALIAS LIVROSAI	EXCLUSIVE	
			***************************************************************
			*<< INDICE PARA DIFERECIAR REGISTROS PELA DATA / CFO /UF
			*   PERMITINDO A EMISSAO DOS RESUMOS EM CONJUNTO COM O LIVRO
			*   SINTETICO
			***************************************************************
			INDEX ON STR(EMPRESA,3)+STR(NOTA,7)+CFO+UF TAG DIFERE ADDITIVE
			SET ORDER TO TAG difere
			SELE nota
			DO WHILE !EOF() AND LNemp = nota.empresa ;
				AND nota.data <= LDdtfim

				*-------------------------------------------*
				*  SELECIONAR OPERACAO
				*-------------------------------------------*
				IF nota.ch_opera $  "5"
					SKIP
					LOOP
				ENDIF
				*-------------------------------------------*
				*  SELECIONAR DESTINO
				*-------------------------------------------*
				IF !EMPTY(LSuf_destino) AND nota.UF <>  LSuf_destino
					SKIP
					LOOP
				ENDIF
		
				*-------------------------------------------*
		
		
				SCATTER MEMVAR
				*---------------------------------------------------*
				* EXISTEM 4 CASOS :
				*	1- NOTA INDEPENDENTE DE CUPOM (CUPOM = 0)
				*		REGISTRAR NO LIVRO NORMALMENTE COMO NFS
				*	2- COPIA DE CUPOM (ITEM 3)
				*		REGISTRAR NO LIVRO NORMALMENTE COMO COPIA CUPOM
				*	3- CUPOM PURO INDEPENDENTE DE NOTA (NOTA >=1000000)
				*		ACUMULAR NO REGISTRO POR DIA E ALIQUOTA
				*		DE OPERACOES COM CUPOM
				*	4- NOTA E CUPOM VINCULADOS (NOTA < 1000000 E
				*		CUPOM > 0
				*		SUBSTITUIR O TIPO E OPERACAO NO ARQ. TEMPORARIO
				*		PARA:
				*			 TIPO 		= "CPM"
				*			 OPERACAO 	= "C"
				*		E ACUMULAR PARA NO REGISTRO POR DIA E ALIQUOTA
				*		DE OPERACOES COM CUPOM
				*----------------------------------------------------*
				IF nota.cupom = 0 OR nota.tipo = "CPM" ;
					OR 	nota.operacao = "E"
						SELECT LIVROSAI
						=edithand('SAVE')
				ELSE
					IF nota.nota < 1000000 AND nota.cupom > 0
						LStpant	   = m.tipo
						LSoperant  = m.operacao
						m.tipo     = "CPM"
						m.operacao = "C"
						SELECT LIVROSAI
						=edithand('SAVE')
						m.tipo     = LStpant
						m.operacao = LSoperant
					ENDIF			
					IF  nota.status = 2		&& NAO AGRUPAR CUPOMS CANCELADOS
						SELE nota
						SKIP
						LOOP
					ENDIF
					LSchave = 	"2"+;
							STR(DAY(m.data),2)+;
							STR(MONTH(m.data),2)+;
							STR(m.aliq_icms,2)
					LSchave = CHRTRAN(LSchave," ","0")	
					m.nota  = INT(VAL(LSchave))
					SELECT LIVROSAI
					SEEK STR(m.empresa,3)+LSchave+m.cfo+m.uf
					*------------------------------------------------*
					M.TIPO = "GRP"		&& REGISTROS QUE AGRUPAM OS
										&& CUPONS DO DIA
										&& NAO SAO RELACIONADOS NOS
										&& REGISTRO TIPO 50					
					*------------------------------------------------*
					IF !FOUND()
					 	m.hora = "99:99:99"	 && ULTIMO LANC. DO DIA
						=edithand('SAVE')
					ELSE
						SCATTER MEMVAR
					 	m.hora = "99:99:99"					
						m.base_iss   = m.base_iss   + nota.base_iss
						m.totservico = m.totservico + nota.totservico
						m.base_icms  = m.base_icms  + nota.base_icms
						m.base_sbbrt = m.base_sbbrt + nota.base_sbbrt
						m.base_subs	 = m.base_subs	+ nota.base_subs
						m.icms_subs  = m.icms_subs  + nota.icms_subs
						m.base_isent = m.base_isent + nota.base_isent
						m.base_outr  = m.base_outr	+ nota.base_outr
						m.totproduto = m.totproduto + nota.totproduto
						m.vlrfrete   = m.vlrfrete   + nota.vlrfrete
						m.vlrseguro  = m.vlrseguro  + nota.vlrseguro
						m.vlrdespes  = m.vlrdespes	+ nota.vlrdespes
						m.vlr_ipi	 = m.vlr_ipi	+ nota.vlr_ipi
						m.total_nota = m.total_nota	+ nota.total_nota
						=edithand('REGRAVA')
					ENDIF
				ENDIF
				SELE nota
				SKIP
			ENDDO
	OTHERWISE
		SELE nota
		IF !EMPTY(LSuf_destino)
			COPY TO &LSarqtmp FOR !(nota.ch_opera $ "56") ;
					AND nota.UF =  LSuf_destino  ;
				   WHILE  LNemp = nota.empresa AND ;
						  nota.data <= LDdtFim WITH CDX
		ELSE		

			COPY TO &LSarqtmp FOR !(nota.ch_opera $ "56") ;
				   WHILE  LNemp = nota.empresa AND ;
						  nota.data <= LDdtFim WITH CDX
		ENDIF

    	SELE 0
		USE &LSarqtmp	ALIAS LIVROSAI	EXCLUSIVE	
	ENDCASE
	KEYBOARD CHR(13)
	WAIT WINDOW " "
	IF EOF() AND BOF()
		USE
 		WAIT WINDOW "Nao Foram Encontrados Dados p/Rel Saidas"
 		SELE nota
		UNLOCK
 		RETURN(.F.)
 	ENDIF		
RETURN(.T.)

*-------------------------------------------------------------------*

*-------------------------------------------------------------------*
PROCEDURE ULProcSaida
	*------------------------------------------------------------*
	* CLASSIFICACAO:  [????]
	*------------------------------------------------------------*
	* OBJETIVO....: Controla o Processo de Impressao dos relatorios
	*	de saida nos varios meses e mantendo-os agregados
	*------------------------------------------------------------*
	* COMENTARIO..: A rotina permite que o periodo informado seja
	*		impresso por mes e controla a agregacao dos relatorios
	*------------------------------------------------------------*
	* OBS........ :
	*------------------------------------------------------------*
	*  TABELAS....:
	*------------------------------------------------------------*
	*  PARAMETROS..:
	*		LNemp..........: Empresa
	*		LDDtInicio.....: Data inicial
	*       LDDtFim........: Data Final
	*       LFAnSaida......: Flag de Solicitaca Rel Analitico de Saida
	*       LFStSaida......: Flag de Solicitaca Rel Sintetico de Saida
	*		LFResCfo.......: Flag de Solicitaca Rel Sintetico de Saida
	*		, LFResUf, LNpagina
	*
	*------------------------------------------------------------*
	*  RETORNO.....:                                             *
	*------------------------------------------------------------*
	PARAMETERS LNEmp,LDDtInicio,LDDtFim, LFAnSaida, ;
				LFStSaida, LFResCfo, LFResUf, LNpagina

	LFLdireciona  = .F. && Ativa PRTSETUP para direcionar impressao DEF(.T.)
	LFLagrega 	  = .T. && Agrega o ??.REL em ??.AGR			    DEF(.F.)
	LFLfimagrega  = .F. && Qdo. Estiver agregando => encerra        DEF(.F.)
	**********************************************************************
	m.inscricao 	= empresa.inscricao
	LDdtimpr  		=  LDDtInicio	&& VAI ORIENTAR A IMPRESSAO MES A MES
	LFcontinua 		= .t.  			&& CAPTURA O VALOR DE LFsegue
	*********************>>> RELATORIO GERAL <<<*********************
	LNpagina = LNpagina - 1   && DESCONTA O VLR. INICIAL DE _PAGENO


	DO WHILE MONTH(LDdtimpr) <= MONTH(LDDtFim) AND  ;
			 YEAR(LDdtimpr)  <= YEAR(LDDtFim) ;
			 AND 	LFcontinua
	
		*   DETERMINA O PERIODO DE MES PARA IMPRESSAO ********

		IF LDdtimpr = LDDtInicio
			LDper_ini = LDDtInicio
		ELSE
			LDper_ini = LDdtimpr-DAY(LDdtimpr)+1
		ENDIF

		IF MONTH(LDdtimpr) = MONTH(LDDtFim) AND  ;
		   YEAR(LDdtimpr)  = YEAR(LDDtFim)
			LDper_fim = LDDtFim
		ELSE
			LDper_fim = GOMONTH(LDdtimpr,1)-DAY(GOMONTH(LDdtimpr,1))
		ENDIF

		*****************************************************************

		IF LFAnSaida OR LFStSaida
			IF !LFResCfo AND !LFResUf ;
				AND MONTH(LDdtimpr) = MONTH(LDDtFim) ;
				AND YEAR(LDdtimpr) = YEAR(LDDtFim)
					LFLfimagrega  = .T.
			ENDIF
			DO ULSaiImprel WITH (LNemp), (LDdtimpr), LNpagina
			LFLdireciona  = .T.
		ENDIF
		**************************>>> RESUMO POR CFO
		IF LFResCfo
			IF !LFResUf AND MONTH(LDdtimpr) = MONTH(LDDtFim) ;
					  AND YEAR(LDdtimpr) = YEAR(LDDtFim)
				LFLfimagrega  = .T.
			ENDIF
			DO ULSaiImpcfo WITH (LNemp), (LDdtimpr), LNpagina
			LFLdireciona  = .T.
		ENDIF
		**************************>>> RESUMO POR UF
		IF LFResUf
			IF  MONTH(LDdtimpr) = MONTH(LDDtFim) AND ;
				    YEAR(LDdtimpr) = YEAR(LDDtFim)
				LFLfimagrega  = .T.
			ENDIF
			DO ULSaiImpuf WITH (LNemp), (LDdtimpr), LNpagina
			LFLdireciona  = .T.
		ENDIF
		*******************************
		LDdtimpr = GOMONTH(LDdtimpr, 1)
	ENDDO
	*-----------------------------
RETURN	
	

	

*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _44A0MRIWZ           LFAnSaida WHEN                     ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC220,     Record Number:   61   ╨
*       ╨ Variable:            LFAnSaida                          ╨
*       ╨ Called By:           WHEN Clause                        ╨
*       ╨ Object Type:         Check Box                          ╨
*       ╨ Snippet Number:      9                                  ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _44a0mriwz     &&  LFAnSaida WHEN
#REGION 1
ON KEY LABEL ENTER  KEYBOARD "{RIGHTARROW}"
RETURN(isediting)


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _44A0MRIXB           LFAnSaida VALID                    ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC220,     Record Number:   61   ╨
*       ╨ Variable:            LFAnSaida                          ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Check Box                          ╨
*       ╨ Snippet Number:      10                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _44a0mrixb     &&  LFAnSaida VALID
#REGION 1
	IF LFAnSaida
		LFStSaida = .f.
		SHOW GET LFStSaida
	ENDIF
RETURN(.T.)

*---------------------------------------------------------------*
*	PROCEDURE ULimprel
*		PARAMETERS LNemp, LDMesImpr
*	FUNCTION ULvervlr
*		PARAMETERS NOTA,STATUS,OPERACAO,TOTAL_NOTA,BASE_ICMS,;
*				 BASE_ISENT,VLR_IPI,BASE_OUTR,BASE_ISS,BASE_SUBS
*---------------------------------------------------------------*
*---------------------------------------------------------------*
*  ROTINA IMPRESSAO RELATORI ANALITICO OU SITETICO
*---------------------------------------------------------------*

PROCEDURE ULSaiImprel
PARAMETERS LNemp, LDMesImpr, LNpagina

	SELECT LIVROSAI
	SET ORDER TO TAG data
	SET NEAR ON
	SEEK STR(LNemp,3)+DTOS(LDMesImpr)
	SET NEAR OFF
	LNctrnota = LIVROSAI.nota 	&&CONTADOR PRA VERRIFICAR NUMERACAO DE NF
	*******************
	*---->   (INICIALIZACAO DO CONTROLE DE STATUS IMPRESSAO)
	*******************	
	DO RELINIC.PRG          && INICIA VAR P/ TERMOMETRO
	LFsegue = .t.
	LNregistro = RECNO()
    COUNT TO   LNimpressao
	LNimpressos = 0
	GO LNregistro
	*******************
	*---->   (COMPLETADO PREPARACAO DO CONTROLE DE STATUS IMPRESSAO)
	*******************	
	**************************>>> REGISTRO DE SAIDAS
	LF_fim  = .f.
    LSrel = "REL220"      && relatorio padrao p/ impressoras ex: epson
    LSorienta = " FOR MONTH(data) = MONTH(LDMesImpr) AND "+;
    			"      YEAR(data)= YEAR(LDMesImpr) "+ ;
    			" WHILE  LFsegue "

	DO UPimpressao WITH	(LFLdireciona), (LFLagrega), (LFLfimagrega)

	LFcontinua = LFsegue
	************
	DO RELFIM.PRG          && FIM VAR P/ TERMOMETRO
	LNpagina = LNpagina + _PAGENO - 1   && DAR SEQU.AO N. PAGINA

RETURN



*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _44A0MRIXO           LFStSaida WHEN                     ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC220,     Record Number:   62   ╨
*       ╨ Variable:            LFStSaida                          ╨
*       ╨ Called By:           WHEN Clause                        ╨
*       ╨ Object Type:         Check Box                          ╨
*       ╨ Snippet Number:      11                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _44a0mrixo     &&  LFStSaida WHEN
#REGION 1
ON KEY LABEL ENTER  KEYBOARD "{RIGHTARROW}"
RETURN(isediting)


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _44A0MRIXZ           LFStSaida VALID                    ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC220,     Record Number:   62   ╨
*       ╨ Variable:            LFStSaida                          ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Check Box                          ╨
*       ╨ Snippet Number:      12                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _44a0mrixz     &&  LFStSaida VALID
#REGION 1
IF LFStSaida
	LFAnSaida = .f.
	SHOW GET LFAnSaida
ENDIF
RETURN(.T.)


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _44A0MRIYB           LFResCfoS VALID                    ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC220,     Record Number:   63   ╨
*       ╨ Variable:            LFResCfoS                          ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Check Box                          ╨
*       ╨ Snippet Number:      13                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _44a0mriyb     &&  LFResCfoS VALID
#REGION 1
RETURN(.T.)

PROCEDURE ULSaiImpcfo   	&& RESUMO POR CFO
PARAMETERS LNemp, LDMesImpr, LNpagina

	SELECT LIVROSAI
	SET ORDER TO TAG rlcfo
	SET NEAR ON
	SEEK STR(LNemp,3)
	SET NEAR OFF
	IF EOF() OR	LIVROSAI.empresa > LNemp
 		SELE nota
		UNLOCK
 		RETURN
 	ENDIF		
*******************
*---->   (INICIALIZACAO DO CONTROLE DE STATUS IMPRESSAO)
*******************	
	DO RELINIC.PRG          && INICIA VAR P/ TERMOMETRO
	LFsegue = .t.
	LNregistro = RECNO()
    COUNT  FOR LIVROSAI.status = 1  AND ;
    			 LIVROSAI.operacao  = "S" TO LNimpressao
	LNimpressos = 0
	GO LNregistro
*******************
*---->   (COMPLETADO PREPARACAO DO CONTROLE DE STATUS IMPRESSAO)
**************************>>> REGISTRO DE SAIDAS
    LSrel = "REL220A"      && relatorio padrao p/ impressoras ex: epson
    LSorienta = " FOR LIVROSAI.status = 1  AND "+ ;
      			" LIVROSAI.operacao  = 'S' AND "+ ;
               " MONTH(data) = MONTH(LDMesImpr) AND "+;
    			" YEAR(data)= YEAR(LDMesImpr) "+ ;
    			" WHILE  LFsegue "
*    LSorienta = " FOR LIVROSAI.status = 1  AND "+ ;
*       			" LIVROSAI.tipo <> 'GRP' AND "+ ;
*                " MONTH(data) = MONTH(LDMesImpr) AND "+;
*    			" YEAR(data)= YEAR(LDMesImpr) "+ ;
*    			" WHILE  LFsegue "

	DO UPimpressao WITH 	(LFLdireciona), (LFLagrega), (LFLfimagrega)
	LFcontinua = LFsegue
************
	DO RELFIM.PRG          && FIM VAR P/ TERMOMETRO
	LNpagina = LNpagina + _PAGENO - 1   && DAR SEQU AO N. PAGINA
RETURN




*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _44A0MRIYO           LFResUfS VALID                     ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC220,     Record Number:   64   ╨
*       ╨ Variable:            LFResUfS                           ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Check Box                          ╨
*       ╨ Snippet Number:      14                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _44a0mriyo     &&  LFResUfS VALID
#REGION 1
RETURN(.T.)

PROCEDURE ULSaiImpuf   && RESUMO POR ESTADO
PARAMETERS LNemp, LDMesImpr, LNpagina

	SELECT LIVROSAI
	SET ORDER TO TAG rluf
	SET NEAR ON
	SEEK STR(LNemp,3)
	SET NEAR OFF
	IF EOF() OR	LIVROSAI.empresa > LNemp
 		SELE nota
		UNLOCK
 		RETURN
 	ENDIF		
*******************
*---->   (INICIALIZACAO DO CONTROLE DE STATUS IMPRESSAO)
*******************	
	DO RELINIC.PRG          && INICIA VAR P/ TERMOMETRO
	LFsegue = .t.
	LNregistro = RECNO()
    COUNT  FOR LIVROSAI.status = 1  AND  ;
       		   LIVROSAI.operacao  = "S" TO LNimpressao
	LNimpressos = 0
	GO LNregistro
*******************
*---->   (COMPLETADO PREPARACAO DO CONTROLE DE STATUS IMPRESSAO)
*******************	
**************************>>> REGISTRO DE SAIDAS
    LSrel = "REL220B"      && relatorio padrao p/ impressoras ex: epson
    LSorienta = " FOR LIVROSAI.status = 1  AND "+ ;
       			" LIVROSAI.operacao  = 'S' AND "+ ;
                " MONTH(data) = MONTH(LDMesImpr) AND "+;
    			" YEAR(data)= YEAR(LDMesImpr) "+ ;
    			" WHILE  LFsegue "
	DO UPimpressao WITH 	(LFLdireciona), (LFLagrega), (LFLfimagrega)
	LFcontinua = LFsegue
************
	DO RELFIM.PRG          && FIM VAR P/ TERMOMETRO
	LNpagina = LNpagina + _PAGENO - 1   && DAR SEQU AO N. PAGINA
RETURN


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _44A0MRIZ1           ENTRADA VALID                      ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC220,     Record Number:   65   ╨
*       ╨ Variable:            ENTRADA                            ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Snippet Number:      15                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _44a0mriz1     &&  ENTRADA VALID
#REGION 1
RETURN

*-------------------------------------------------------------------*
*	PROCEDURE CtrlEntrada
*	FUNCTION  ULGeraEnt   	  PARAM LNEmp,LDDtInicio,LDDtFim
*	FUNCTION  ULArqEntrada	  PARAM LNemp,LDdtIni,LDdtFim,LSTipo
*   PROCEDURE ULProcEntrada   PARAM LNEmp,LDDtInicio,LDDtFim
*-------------------------------------------------------------------*

PROCEDURE CtrlEntrada
PARAMETERS LNemp,dt_inicio,m.dt_fim,LFAnEntrada, ;
			LFStEntrada,LFResCfoE, LFResUfE, LNpagina,LSuf_origem

	PRIVATE	LSProcesso, LNctrnota

	*----------------------------------------------------------*

	IF !ULArqEntrada((LNemp),(m.dt_inicio),(m.dt_fim),(LSuf_origem))
		RETURN
	ENDIF

	*----------------------------------------------------------*

	DO ULProcEntrada  WITH ;
				(LNemp),(m.dt_inicio),(m.dt_fim),(LFAnEntrada), ;
				(LFStEntrada), (LFResCfoE), (LFResUfE), (LNpagina)

	*----------------------------------------------------------*

	IF USED("LIVROENT")
		SELECT LIVROENT
		USE
	ENDIF
	SELE nota
RETURN				

*-------------------------------------------------------------------*
*--------------------------------------------------------------*
* Gerar Arquivo LIVRO ENTRADA
*
*---------------------------------------------------------------*

FUNCTION ULArqEntrada
	PARAMETERS LNemp,LDdtIni,LDdtFim,LSuf_origem
	SELECT notaent
	SET ORDER TO TAG rldtentr
	SET NEAR ON
	SEEK STR(LNemp,3)+DTOS(LDdtIni)
	SET NEAR OFF
	IF EOF() OR	notaent.data > LDdtFim
 		WAIT WINDOW "Nao Foram Encontrados Dados p/ Rel Entradas"
 		SELE notaent
		UNLOCK
 		RETURN(.F.)
 	ENDIF		
	*---------------------------------------------------------*
	* Gerar Arq. Temporario
	*---------------------------------------------------------*
	LSarqtmp 	= "" 			&& EX: C:\TMP\TMP0001
	LSaliastmp 	= "TMP" 		&&     TMP001
	LSaliastmp = UPopentmp(wp_dirtmp,LSarqtmp,LSaliastmp,1)
	IF EMPTY(LSaliastmp)
 		WAIT WINDOW "Nao Foi Possivel Gerar Arq Temporario."
 		SELE notaent
		UNLOCK
 		RETURN(.F.)
 	ENDIF		
	*---------------------------------------------------------*
	IF USED("LIVROENT")
		SELE LIVROENT
		USE
	ENDIF

	SELE notaent
	WAIT WINDOW "AGUARDE. Gerando Arq. Temporario." NOWAIT


	IF EMPTY(LSuf_origem)
		COPY TO &LSarqtmp FOR ;
			!(notaent.ch_opera $"56") AND LEFT(notaent.situacao,1) = "C" ;
    		WHILE notaent.empresa = LNemp and notaent.data <= LDdtFim ;
						   WITH CDX
	ELSE
		COPY TO &LSarqtmp FOR ;
			LSuf_origem = notaent.uf AND ;
			!(notaent.ch_opera $"56") AND LEFT(notaent.situacao,1) = "C" ;
    		WHILE notaent.empresa = LNemp and notaent.data <= LDdtFim ;
						   WITH CDX

	ENDIF
	KEYBOARD CHR(13)
	WAIT WINDOW " "
    SELE 0
	USE &LSarqtmp	ALIAS LIVROENT	EXCLUSIVE	
	KEYBOARD CHR(13)
	WAIT WINDOW " "
************       ALTERADO ***************
*	IF EOF() AND BOF()
*		USE
 *		WAIT WINDOW "Nao Foram Encontrados Dados p/Rel Entradas"
 *		SELE notaent
*		UNLOCK
* 		RETURN(.F.)
* 	ENDIF		
RETURN(.T.)

*-------------------------------------------------------------------*

*-------------------------------------------------------------------*
PROCEDURE ULProcEntrada
	*------------------------------------------------------------*
	* CLASSIFICACAO:  [????]
	*------------------------------------------------------------*
	* OBJETIVO....: Controla o Processo de Impressao dos relatorios
	*	de entrada nos varios meses e mantendo-os agregados
	*------------------------------------------------------------*
	* COMENTARIO..: A rotina permite que o periodo informado seja
	*		impresso por mes e controla a agregacao dos relatorios
	*------------------------------------------------------------*
	* OBS........ :
	*------------------------------------------------------------*
	*  TABELAS....:
	*------------------------------------------------------------*
	*  PARAMETROS..:
	*		LNemp..........: Empresa
	*		LDDtInicio.....: Data inicial
	*       LDDtFim........: Data Final
	*       LFAnEntrada....: Flag de Solicitaca Rel Analitico de Entrada
	*       LFStEntrada....: Flag de Solicitaca Rel Sintetico de Entrada
	*		LFResCfoE.......: Flag de Solicitaca Rel Sintetico de Entrada
	*		LFResUfE.......:
	*		LNpagina........
	*
	*------------------------------------------------------------*
	*  RETORNO.....:                                             *
	*------------------------------------------------------------*
	PARAMETERS LNEmp,LDDtInicio,LDDtFim, LFAnEntrada, ;
				LFStEntrada, LFResCfoE, LFResUfE, LNpagina

	LFLdireciona  = .F. && Ativa PRTSETUP para direcionar impressao DEF(.T.)
	LFLagrega 	  = .T. && Agrega o ??.REL em ??.AGR			    DEF(.F.)
	LFLfimagrega  = .F. && Qdo. Estiver agregando => encerra        DEF(.F.)
	**********************************************************************
	m.inscricao 	= empresa.inscricao
	LDdtimpr  		=  LDDtInicio	&& VAI ORIENTAR A IMPRESSAO MES A MES
	LFcontinua 		= .t.  			&& CAPTURA O VALOR DE LFsegue
	*********************>>> RELATORIO GERAL <<<*********************
	LNpagina = LNpagina - 1   && DESCONTA O VLR. INICIAL DE _PAGENO


	DO WHILE MONTH(LDdtimpr) <= MONTH(LDDtFim) AND  ;
			 YEAR(LDdtimpr)  <= YEAR(LDDtFim) ;
			 AND 	LFcontinua
	
		*   DETERMINA O PERIODO DE MES PARA IMPRESSAO ********

		IF LDdtimpr = LDDtInicio
			LDper_ini = LDDtInicio
		ELSE
			LDper_ini = LDdtimpr-DAY(LDdtimpr)+1
		ENDIF

		IF MONTH(LDdtimpr) = MONTH(LDDtFim) AND  ;
		   YEAR(LDdtimpr)  = YEAR(LDDtFim)
			LDper_fim = LDDtFim
		ELSE
			LDper_fim = GOMONTH(LDdtimpr,1)-DAY(GOMONTH(LDdtimpr,1))
		ENDIF

		*****************************************************************

		IF LFAnEntrada OR LFStEntrada
			IF !LFResCfoE AND !LFResUfE ;
				AND MONTH(LDdtimpr) = MONTH(LDDtFim) ;
				AND YEAR(LDdtimpr) = YEAR(LDDtFim)
					LFLfimagrega  = .T.
			ENDIF
			DO ULEntImprel WITH (LDper_ini), (LDper_fim), LNpagina
			LFLdireciona  = .T.
		ENDIF
		**************************>>> RESUMO POR CFO
		IF LFResCfoE
			IF !LFResUfE AND MONTH(LDdtimpr) = MONTH(LDDtFim) ;
					  AND YEAR(LDdtimpr) = YEAR(LDDtFim)
				LFLfimagrega  = .T.
			ENDIF
			DO ULEntImpcfo WITH (LDper_ini), (LDper_fim), LNpagina
			LFLdireciona  = .T.
		ENDIF
		**************************>>> RESUMO POR UF
		IF LFResUfE
			IF  MONTH(LDdtimpr) = MONTH(LDDtFim) AND ;
				    YEAR(LDdtimpr) = YEAR(LDDtFim)
				LFLfimagrega  = .T.
			ENDIF
			DO ULEntImpUf WITH (LDper_ini), (LDper_fim), LNpagina
			LFLdireciona  = .T.
		ENDIF
		*******************************
		LDdtimpr = GOMONTH(LDdtimpr, 1)
	ENDDO
	*-----------------------------
RETURN	
	

	

*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _44A0MRIZG           LFAnEntrada WHEN                   ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC220,     Record Number:   66   ╨
*       ╨ Variable:            LFAnEntrada                        ╨
*       ╨ Called By:           WHEN Clause                        ╨
*       ╨ Object Type:         Check Box                          ╨
*       ╨ Snippet Number:      16                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _44a0mrizg     &&  LFAnEntrada WHEN
#REGION 1
IF isediting
	ON KEY LABEL ENTER KEYBOARD "{RIGHTARROW}"
ENDIF	
RETURN(isediting)


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _44A0MRIZR           LFAnEntrada VALID                  ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC220,     Record Number:   66   ╨
*       ╨ Variable:            LFAnEntrada                        ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Check Box                          ╨
*       ╨ Snippet Number:      17                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _44a0mrizr     &&  LFAnEntrada VALID
#REGION 1
RETURN

PROCEDURE ULEntImprel   	&& RELATORIO GERAL
PARAMETERS LDper_ini, LDper_fim, LNpagina

*******************
*---->   (INICIALIZACAO DO CONTROLE DE STATUS IMPRESSAO)
*******************	
	DO RELINIC.PRG          && INICIA VAR P/ TERMOMETRO
	SELECT LIVROENT

	GO TOP
	LFsegue = .t.
	LNregistro = RECNO()

    COUNT 	WHILE data <= LDper_fim	TO   LNimpressao

	LNimpressos = 0
	GO LNregistro
*******************
*---->   (COMPLETADO PREPARACAO DO CONTROLE DE STATUS IMPRESSAO)
*******************	
	LF_imp  = .t.   && controla a impressao de transportar
**************************>>> REGISTRO DE SAIDAS
	SELE fornece
	SET ORDER TO TAG codigo
	
	SELECT LIVROENT
	SET RELATION TO  codforn INTO fornece ADDITIVE
    LSrel = "REL221"      && relatorio padrao p/ impressoras ex: epson

	LSorienta  = " FOR data >= LDper_ini AND data <= LDper_fim "+;
			 	 " WHILE data <= LDper_fim AND LFsegue  "

	DO UPimpressao WITH (LFLdireciona), (LFLagrega), (LFLfimagrega)
	LFcontinua = LFsegue
***********
	SET RELATION TO
	DO RELFIM.PRG          && FIM VAR P/ TERMOMETRO
	LNpagina = LNpagina + _PAGENO - 1   && DAR SEQU.AO N. PAGINA
RETURN


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _44A0MRJ02           LFResCfoE WHEN                     ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC220,     Record Number:   67   ╨
*       ╨ Variable:            LFResCfoE                          ╨
*       ╨ Called By:           WHEN Clause                        ╨
*       ╨ Object Type:         Check Box                          ╨
*       ╨ Snippet Number:      18                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _44a0mrj02     &&  LFResCfoE WHEN
#REGION 1
IF isediting
	ON KEY LABEL ENTER KEYBOARD "{RIGHTARROW}"
ENDIF	
RETURN(isediting)


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _44A0MRJ0D           LFResCfoE VALID                    ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC220,     Record Number:   67   ╨
*       ╨ Variable:            LFResCfoE                          ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Check Box                          ╨
*       ╨ Snippet Number:      19                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _44a0mrj0d     &&  LFResCfoE VALID
#REGION 1
RETURN

PROCEDURE ULEntImpcfo   	&& RESUMO POR CFO
PARAMETERS LDper_ini, LDper_fim, LNpagina

	SELECT LIVROENT
	SET ORDER TO TAG rlcfo
	GO TOP
*******************
*---->   (INICIALIZACAO DO CONTROLE DE STATUS IMPRESSAO)
*******************	
	DO RELINIC.PRG          && INICIA VAR P/ TERMOMETRO
	LFsegue = .t.
	LNregistro = RECNO()
    COUNT  FOR data >= LDper_ini AND data <= LDper_fim  TO   LNimpressao
	LNimpressos = 0
	GO LNregistro
*******************
*---->   (COMPLETADO PREPARACAO DO CONTROLE DE STATUS IMPRESSAO)
*******************	
**************************>>> REGISTRO DE SAIDAS
    LSrel = "REL221A"      && relatorio padrao p/ impressoras ex: epson

	LSorienta  = ;
			 " FOR data >= LDper_ini AND data <= LDper_fim "+;
			 " WHILE LFsegue "
	DO UPimpressao WITH (LFLdireciona), (LFLagrega), (LFLfimagrega)
	LFcontinua = LFsegue
***********
	DO RELFIM.PRG          && FIM VAR P/ TERMOMETRO
	LNpagina = LNpagina + _PAGENO - 1   && DAR SEQU AO N. PAGINA

RETURN


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _44A0MRJ0P           LFResUfE WHEN                      ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC220,     Record Number:   68   ╨
*       ╨ Variable:            LFResUfE                           ╨
*       ╨ Called By:           WHEN Clause                        ╨
*       ╨ Object Type:         Check Box                          ╨
*       ╨ Snippet Number:      20                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _44a0mrj0p     &&  LFResUfE WHEN
#REGION 1
IF isediting
	ON KEY LABEL ENTER KEYBOARD "{RIGHTARROW}"
ENDIF	
RETURN(isediting)


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _44A0MRJ10           LFResUfE VALID                     ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC220,     Record Number:   68   ╨
*       ╨ Variable:            LFResUfE                           ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Check Box                          ╨
*       ╨ Snippet Number:      21                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _44a0mrj10     &&  LFResUfE VALID
#REGION 1
RETURN

PROCEDURE ULEntImpuf   	&& RESUMO POR CFO
PARAMETERS LDper_ini, LDper_fim, LNpagina

	SELECT LIVROENT
	SET ORDER TO TAG rluf
	GO TOP
*******************
*---->   (INICIALIZACAO DO CONTROLE DE STATUS IMPRESSAO)
*******************	
	DO RELINIC.PRG          && INICIA VAR P/ TERMOMETRO
	LFsegue = .t.
	LNregistro = RECNO()
    COUNT  FOR data >= LDper_ini AND data <= LDper_fim  TO   LNimpressao
	LNimpressos = 0
	GO LNregistro
*******************
*---->   (COMPLETADO PREPARACAO DO CONTROLE DE STATUS IMPRESSAO)
*******************	
**************************>>> REGISTRO DE SAIDAS
    LSrel = "REL221B"      && relatorio padrao p/ impressoras ex: epson

	LSorienta  = ;
			 " FOR data >= LDper_ini AND data <= LDper_fim "+;
			 " WHILE LFsegue "
	DO UPimpressao WITH 	(LFLdireciona), (LFLagrega), (LFLfimagrega)
	LFcontinua = LFsegue
***********
	DO RELFIM.PRG          && FIM VAR P/ TERMOMETRO
	LNpagina = LNpagina + _PAGENO - 1   && DAR SEQU AO N. PAGINA
RETURN


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _44A0MRJ1B           saidaIPI VALID                     ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC220,     Record Number:   69   ╨
*       ╨ Variable:            saidaIPI                           ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Snippet Number:      22                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _44a0mrj1b     &&  saidaIPI VALID
#REGION 1
RETURN

*-------------------------------------------------------------------*
*	PROCEDURE CtrlIpiSaida
*	FUNCTION  ULGeraIpiSaida   PARAM LNEmp,LDDtInicio,LDDtFim
*	FUNCTION  ULArqIpiSaida  PARAM LNemp,LDdtIni,LDdtFim,LSTipo
*-------------------------------------------------------------------*

PROCEDURE CtrlIpiSaida
PARAMETERS empresa,dt_inicio,m.dt_fim, LNlivro, LNpagina

	PRIVATE	LSProcesso, LNctrnota
	*----------------------------------------------------------*
	IF !ULArqIpiSaida((m.empresa),(m.dt_inicio),(m.dt_fim))
		RETURN(.f.)
	ENDIF

	*----------------------------------------------------------*

	DO ULProcIpiSaida  WITH ;
			(m.empresa),(m.dt_inicio),(m.dt_fim),(LNlivro),(LNpagina)


	*----------------------------------------------------------*

	IF USED("LIVROIPI_S")
		SELECT LIVROIPI_SAIDA
		USE
	ENDIF
	SELE nota
RETURN				

*-------------------------------------------------------------------*
*--------------------------------------------------------------*
* Gerar Arquivo LIVRO IPI SAIDA
*
*---------------------------------------------------------------*

FUNCTION ULArqIpiSaida
	PARAMETERS LNemp,LDdtIni,LDdtFim
	SELECT nota
	SET ORDER TO TAG data
	SET NEAR ON
	SEEK STR(LNemp,3)+DTOS(LDdtIni)
	SET NEAR OFF
	IF EOF() OR	nota.data > LDdtFim
 		WAIT WINDOW "Nao Foram Encontrados Dados p/ Rel IPI Saida"
 		SELE nota
		UNLOCK
 		RETURN(.F.)
 	ENDIF		
	*---------------------------------------------------------*
	* Gerar Arq. Temporario
	*---------------------------------------------------------*
	LSarqtmp 	= "" 			&& EX: C:\TMP\TMP0001
	LSaliastmp 	= "TMP" 		&&     TMP001
	LSaliastmp = UPopentmp(wp_dirtmp,LSarqtmp,LSaliastmp,1)
	IF EMPTY(LSaliastmp)
 		WAIT WINDOW "Nao Foi Possivel Gerar Arq Temporario."
 		SELE nota
		UNLOCK
 		RETURN(.F.)
 	ENDIF		
	*---------------------------------------------------------*
	IF USED("LIVROIPI_S")
		SELE LIVROIPI_SAIDA
		USE
	ENDIF
	
	SELE nota
	*----------------------------------------------------------------*
	*  GNA 07/11/2000 - Alteracao na condicao de inclusao dos registros
	*
	*       A condicao desativada esta correta porem esta incluindo notas
	*   de devolucao para FIRESTONE (Notas emitidas errada pelo fornecedor)
	*   e TENECO (Pecas) por este motivo as notas de devolucao estao sendo
	*  retiradas da condicao sendo aceitas apenas devolucoes com
	*  ch_desti = 3 para referenciar as importacoes
	*      Em caso de retornar a trabalhar IPI sara necessario rever esta
	*  condicao
	*-----------------------------------------------------------------*
	*  condicao desativada
	* COPY TO &LSarqtmp FOR !(nota.ch_opera $ "56") AND nota.base_ipi > 0 ;
	*		   WHILE  LNemp = nota.empresa AND ;
	*				  nota.data <= LDdtFim  WITH CDX
    *------------------------------------------------------------------*

	COPY TO &LSarqtmp FOR !(nota.ch_opera $ "456") ;
				AND nota.base_ipi > 0 ;
			   WHILE  LNemp = nota.empresa AND ;
					  nota.data <= LDdtFim  WITH CDX

   	SELE 0
	USE &LSarqtmp	ALIAS LIVROIPI_SAIDA	EXCLUSIVE	
	KEYBOARD CHR(13)
	WAIT WINDOW " "
	IF EOF() AND BOF()
		USE
 		WAIT WINDOW "Nao Foram Encontrados Dados p/ Rel IPI Saida"
 		SELE nota
		UNLOCK
 		RETURN(.F.)
 	ENDIF		

RETURN(.T.)

*-------------------------------------------------------------------*

*-------------------------------------------------------------------*
PROCEDURE ULProcIpiSaida
	*------------------------------------------------------------*
	* CLASSIFICACAO:  [????]
	*------------------------------------------------------------*
	* OBJETIVO....: Controla o Processo de Impressao dos relatorios
	*	de Entrada IPI nos varios meses e mantendo-os agregados
	*------------------------------------------------------------*
	* COMENTARIO..: A rotina permite que o periodo informado seja
	*		impresso por mes e controla a agregacao dos relatorios
	*------------------------------------------------------------*
	* OBS........ :
	*------------------------------------------------------------*
	*  TABELAS....:
	*------------------------------------------------------------*
	*  PARAMETROS..:
	*		LNemp..........: Empresa
	*		LDDtInicio.....: Data inicial
	*       LDDtFim........: Data Final
	*       LNlivro........: O relatorio usa para chamar funcao
	*				ULRegPgNfe registrando na nota o livro
	*       LNpagina.......: Idem anterior
	*
	*------------------------------------------------------------*
	*  RETORNO.....:                                             *
	*------------------------------------------------------------*
	PARAMETERS LNEmp,LDDtInicio,LDDtFim, LNlivro,LNpagina

	LFLdireciona  = .F. && Ativa PRTSETUP para direcionar impressao DEF(.T.)
	LFLagrega 	  = .T. && Agrega o ??.REL em ??.AGR			    DEF(.F.)
	LFLfimagrega  = .F. && Qdo. Estiver agregando => encerra        DEF(.F.)
	**********************************************************************
	m.inscricao 	= empresa.inscricao
	LDdtimpr  		=  LDDtInicio	&& VAI ORIENTAR A IMPRESSAO MES A MES
	LFcontinua 		= .t.  			&& CAPTURA O VALOR DE LFsegue
	*********************>>> RELATORIO GERAL <<<*********************
	LNpagina = LNpagina - 1   && DESCONTA O VLR. INICIAL DE _PAGENO


	DO WHILE MONTH(LDdtimpr) <= MONTH(LDDtFim) AND  ;
			 YEAR(LDdtimpr)  <= YEAR(LDDtFim) ;
			 AND 	LFcontinua
	
		*   DETERMINA O PERIODO DE MES PARA IMPRESSAO ********

		IF LDdtimpr = LDDtInicio
			LDper_ini = LDDtInicio
		ELSE
			LDper_ini = LDdtimpr-DAY(LDdtimpr)+1
		ENDIF

		IF MONTH(LDdtimpr) = MONTH(LDDtFim) AND  ;
		   YEAR(LDdtimpr)  = YEAR(LDDtFim)
			LDper_fim = LDDtFim
		ELSE
			LDper_fim = GOMONTH(LDdtimpr,1)-DAY(GOMONTH(LDdtimpr,1))
		ENDIF
		*****************************************************************
		IF MONTH(LDdtimpr) = MONTH(LDDtFim) ;
			AND YEAR(LDdtimpr) = YEAR(LDDtFim)
				LFLfimagrega  = .T.
		ENDIF
		DO ULSaiIpirel  WITH ;
			(LNemp), (LDdtimpr), (LNlivro), LNpagina
		LFLdireciona  = .T.
		*****************************************************************
		LDdtimpr = GOMONTH(LDdtimpr, 1)
	ENDDO
RETURN	
	

	
*------------------------------------------------------------------*

*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _44A0MRJ1S           entradaIPI VALID                   ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC220,     Record Number:   70   ╨
*       ╨ Variable:            entradaIPI                         ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Snippet Number:      23                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _44a0mrj1s     &&  entradaIPI VALID
#REGION 1
RETURN

*-------------------------------------------------------------------*
*	PROCEDURE CtrlIpiEntrada
*	FUNCTION  ULGeraIpiEntrada   PARAM LNEmp,LDDtInicio,LDDtFim
*	FUNCTION  ULArqIpiEntrada  PARAM LNemp,LDdtIni,LDdtFim,LSTipo
*-------------------------------------------------------------------*

PROCEDURE CtrlIpiEntrada
PARAMETERS empresa,dt_inicio,m.dt_fim, LNlivro, LNpagina

	PRIVATE	LSProcesso, LNctrnota
	*----------------------------------------------------------*
	IF !ULArqIpiEntrada((m.empresa),(m.dt_inicio),(m.dt_fim))
		RETURN(.f.)
	ENDIF

	*----------------------------------------------------------*

	DO ULProcIpiEntrada  WITH ;
				(m.empresa),(m.dt_inicio),(m.dt_fim),(LNlivro),(LNpagina)

	*----------------------------------------------------------*
	IF USED("LIVROIPI_E")
		SELECT LIVROIPI_Entrada
		USE
	ENDIF
	SELE nota
RETURN				

*-------------------------------------------------------------------*
*--------------------------------------------------------------*
* Gerar Arquivo LIVRO IPI Entrada
*
*---------------------------------------------------------------*

FUNCTION ULArqIpiEntrada
	PARAMETERS LNemp,LDdtIni,LDdtFim
	SELECT notaent
	SET ORDER TO TAG rldtentr
	SET NEAR ON
	SEEK STR(LNemp,3)+DTOS(LDdtIni)
	SET NEAR OFF
	IF EOF() OR	notaent.data > LDdtFim
 		WAIT WINDOW "Nao Foram Encontrados Dados p/ Rel IPI Entradas"
 		SELE notaent
		UNLOCK
 		RETURN(.F.)
 	ENDIF		
	*---------------------------------------------------------*
	* Gerar Arq. Temporario
	*---------------------------------------------------------*
	LSarqtmp 	= "" 			&& EX: C:\TMP\TMP0001
	LSaliastmp 	= "TMP" 		&&     TMP001
	LSaliastmp = UPopentmp(wp_dirtmp,LSarqtmp,LSaliastmp,1)
	IF EMPTY(LSaliastmp)
 		WAIT WINDOW "Nao Foi Possivel Gerar Arq Temporario."
 		SELE nota
		UNLOCK
 		RETURN(.F.)
 	ENDIF		
	*---------------------------------------------------------*
	IF USED("LIVROIPI_E")
		SELE LIVROIPI_Entrada
		USE
	ENDIF
	
	SELE notaent
	WAIT WINDOW "AGUARDE. Gerando Arq. Temporario." NOWAIT

	COPY TO &LSarqtmp FOR ;
			!(notaent.ch_opera $ "56") AND LEFT(notaent.situacao,1) = "C" ;
    			AND ( notaent.vlr_ipi > 0 ;
    			AND (notaent.ch_desti = "3" OR notaent.ch_opera $ "24")) ;
    		WHILE notaent.empresa = LNemp ;
    				AND notaent.data <= LDdtFim WITH CDX

	KEYBOARD CHR(13)
	WAIT WINDOW " "
    SELE 0
	USE &LSarqtmp	ALIAS LIVROIPI_Entrada	EXCLUSIVE	
	KEYBOARD CHR(13)
	WAIT WINDOW " "
	IF EOF() AND BOF()
		USE
 		WAIT WINDOW "Nao Foram Encontrados Dados p/Rel Entradas"
 		SELE notaent
		UNLOCK
 		RETURN(.F.)
 	ENDIF		

RETURN(.T.)

*-------------------------------------------------------------------*

*-------------------------------------------------------------------*
PROCEDURE ULProcIpiEntrada
	*------------------------------------------------------------*
	* CLASSIFICACAO:  [????]
	*------------------------------------------------------------*
	* OBJETIVO....: Controla o Processo de Impressao dos relatorios
	*	de Entrada IPI nos varios meses e mantendo-os agregados
	*------------------------------------------------------------*
	* COMENTARIO..: A rotina permite que o periodo informado seja
	*		impresso por mes e controla a agregacao dos relatorios
	*------------------------------------------------------------*
	* OBS........ :
	*------------------------------------------------------------*
	*  TABELAS....:
	*------------------------------------------------------------*
	*  PARAMETROS..:
	*		LNemp..........: Empresa
	*		LDDtInicio.....: Data inicial
	*       LDDtFim........: Data Final
	*       LNlivro........: O relatorio usa para chamar funcao
	*				ULRegPgNfe registrando na nota o livro
	*       LNpagina.......: Idem anterior
	*
	*------------------------------------------------------------*
	*  RETORNO.....:                                             *
	*------------------------------------------------------------*
	PARAMETERS LNEmp,LDDtInicio,LDDtFim, LNlivro,LNpagina

	LFLdireciona  = .F. && Ativa PRTSETUP para direcionar impressao DEF(.T.)
	LFLagrega 	  = .T. && Agrega o ??.REL em ??.AGR			    DEF(.F.)
	LFLfimagrega  = .F. && Qdo. Estiver agregando => encerra        DEF(.F.)
	**********************************************************************
	m.inscricao 	= empresa.inscricao
	LDdtimpr  		=  LDDtInicio	&& VAI ORIENTAR A IMPRESSAO MES A MES
	LFcontinua 		= .t.  			&& CAPTURA O VALOR DE LFsegue
	*********************>>> RELATORIO GERAL <<<*********************
	LNpagina = LNpagina - 1   && DESCONTA O VLR. INICIAL DE _PAGENO


	DO WHILE MONTH(LDdtimpr) <= MONTH(LDDtFim) AND  ;
			 YEAR(LDdtimpr)  <= YEAR(LDDtFim) ;
			 AND 	LFcontinua
	
		*   DETERMINA O PERIODO DE MES PARA IMPRESSAO ********

		IF LDdtimpr = LDDtInicio
			LDper_ini = LDDtInicio
		ELSE
			LDper_ini = LDdtimpr-DAY(LDdtimpr)+1
		ENDIF

		IF MONTH(LDdtimpr) = MONTH(LDDtFim) AND  ;
		   YEAR(LDdtimpr)  = YEAR(LDDtFim)
			LDper_fim = LDDtFim
		ELSE
			LDper_fim = GOMONTH(LDdtimpr,1)-DAY(GOMONTH(LDdtimpr,1))
		ENDIF
		*****************************************************************
		IF MONTH(LDdtimpr) = MONTH(LDDtFim) ;
			AND YEAR(LDdtimpr) = YEAR(LDDtFim)
				LFLfimagrega  = .T.
		ENDIF
		DO ULEntIpirel  WITH ;
			(LNemp), (LDper_ini), (LDper_fim) ,(LNlivro), LNpagina
		LFLdireciona  = .T.
		*****************************************************************
		LDdtimpr = GOMONTH(LDdtimpr, 1)
	ENDDO
	*-----------------------------
RETURN	
	

	

*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _44A0MRJ25           producaoIPI VALID                  ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC220,     Record Number:   71   ╨
*       ╨ Variable:            producaoIPI                        ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Snippet Number:      24                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _44a0mrj25     &&  producaoIPI VALID
#REGION 1
RETURN

*-------------------------------------------------------------------*
*	PROCEDURE CtrlIpiProd
*	FUNCTION  ULGeraIpiProd   PARAM LNEmp,LDDtInicio,LDDtFim
*	FUNCTION  ULArqIpiProd  PARAM LNemp,LDdtIni,LDdtFim,LSTipo
*-------------------------------------------------------------------*

PROCEDURE CtrlIpiProd
PARAMETERS empresa,dt_inicio,m.dt_fim, LNlivro, LNpagina

	PRIVATE	LSProcesso, LNctrnota
	*----------------------------------------------------------*
	IF !ULArqIpiProd((m.empresa),(m.dt_inicio),(m.dt_fim))
		RETURN(.f.)
	ENDIF

	*----------------------------------------------------------*

	DO ULProcIpiProd  WITH ;
		(m.empresa),(m.dt_inicio),(m.dt_fim),(LNlivro),(LNpagina)

	*----------------------------------------------------------*

	IF USED("LIVROIPI_P")
		SELECT LIVROIPI_Prod
		USE
	ENDIF
	SELE nota
RETURN				

*-------------------------------------------------------------------*
*--------------------------------------------------------------*
* Gerar Arquivo LIVRO IPI Prod
*
*---------------------------------------------------------------*

FUNCTION ULArqIpiProd
	PARAMETERS LNemp,LDdtIni,LDdtFim
	SELECT itemmov
	SET ORDER TO TAG dt_mov
	SET NEAR ON
	SEEK STR(LNemp,3)+DTOS(LDdtIni)
	SET NEAR OFF
	IF EOF() OR	itemmov.data > LDdtFim
 		WAIT WINDOW "Nao Foram Encontrados Dados p/ Rel IPI Producao"
 		SELE itemmov
		UNLOCK
 		RETURN(.F.)
 	ENDIF		
	*---------------------------------------------------------*
	* Gerar Arq. Temporario
	*---------------------------------------------------------*
	LSarqtmp 	= "" 			&& EX: C:\TMP\TMP0001
	LSaliastmp 	= "TMP" 		&&     TMP001
	LSaliastmp = UPopentmp(wp_dirtmp,LSarqtmp,LSaliastmp,1)
	IF EMPTY(LSaliastmp)
 		WAIT WINDOW "Nao Foi Possivel Gerar Arq Temporario Producao"
 		SELE itemmov
		UNLOCK
 		RETURN(.F.)
 	ENDIF		


	*---------------------------------------------------------*
	IF USED("LIVROIPI_P")
		SELE LIVROIPI_Prod
		USE
	ENDIF

	SELE GRUPO
	SET ORDER TO TAG CLASSIFICA

	SELE itemmov
	SET RELATION TO CLASSIFICA INTO GRUPO

	WAIT WINDOW "AGUARDE. Gerando Arq. Temporario Producao ." NOWAIT

	COPY TO \TMP\TMPIPI FOR ;
			!(itemmov.ch_opera $ "56") ;
			AND (GRUPO.ORIGEM = 1 OR GRUPO.ORIGEM = 2) ;
    		WHILE itemmov.empresa = LNemp ;
    			AND itemmov.data <= LDdtFim

	SET RELATION TO


	SELECT * FROM \TMP\TMPIPI ;
	  INTO table &LSarqtmp ;
	  ORDER BY CODIGO,data,hora
	

    USE
    SELE TMPIPI
    USE



	
	KEYBOARD CHR(13)
	WAIT WINDOW " "
    SELE 0
	USE &LSarqtmp	ALIAS LIVROIPI_Prod	EXCLUSIVE	
	INDEX ON CODIGO TAG CODIGO ADDITIVE
	KEYBOARD CHR(13)
	WAIT WINDOW " "
	IF EOF() AND BOF()
		USE
 		WAIT WINDOW "Nao Foram Encontrados Dados p/Rel Producao"
 		SELE notaent
		UNLOCK
 		RETURN(.F.)
 	ENDIF		

RETURN(.T.)

*-------------------------------------------------------------------*

*-------------------------------------------------------------------*
PROCEDURE ULProcIpiProd
	*------------------------------------------------------------*
	* CLASSIFICACAO:  [????]
	*------------------------------------------------------------*
	* OBJETIVO....: Controla o Processo de Impressao dos relatorios
	*	de Prod IPI nos varios meses e mantendo-os agregados
	*------------------------------------------------------------*
	* COMENTARIO..: A rotina permite que o periodo informado seja
	*		impresso por mes e controla a agregacao dos relatorios
	*------------------------------------------------------------*
	* OBS........ :
	*------------------------------------------------------------*
	*  TABELAS....:
	*------------------------------------------------------------*
	*  PARAMETROS..:
	*		LNemp..........: Empresa
	*		LDDtInicio.....: Data inicial
	*       LDDtFim........: Data Final
	*       LNpagina.......:
	*
	*------------------------------------------------------------*
	*  RETORNO.....:                                             *
	*------------------------------------------------------------*
	PARAMETERS LNEmp,LDDtInicio,LDDtFim,LNlivro, LNpagina

	LFLdireciona  = .F. && Ativa PRTSETUP para direcionar impressao DEF(.T.)
	LFLagrega 	  = .T. && Agrega o ??.REL em ??.AGR			    DEF(.F.)
	LFLfimagrega  = .F. && Qdo. Estiver agregando => encerra        DEF(.F.)
	**********************************************************************
	m.inscricao 	= empresa.inscricao
	LDdtimpr  		=  LDDtInicio	&& VAI ORIENTAR A IMPRESSAO MES A MES
	LFcontinua 		= .t.  			&& CAPTURA O VALOR DE LFsegue
	*********************>>> RELATORIO GERAL <<<*********************
	LNpagina = LNpagina - 1   && DESCONTA O VLR. INICIAL DE _PAGENO
	
		*   DETERMINA O PERIODO DE MES PARA IMPRESSAO ********

	LDper_ini = LDDtInicio
	LDper_fim = LDDtFim
	LFLfimagrega  = .T.
	DO ULProdIpirel  WITH ;
			(LNemp), (LDper_ini),(LDper_fim),(LNlivro), LNpagina
	LFLdireciona  = .T.
	*-----------------------------
RETURN	
	


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _44A0MRJ2L           LFIpiSaida VALID                   ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC220,     Record Number:   72   ╨
*       ╨ Variable:            LFIpiSaida                         ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Check Box                          ╨
*       ╨ Snippet Number:      25                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _44a0mrj2l     &&  LFIpiSaida VALID
#REGION 1
RETURN(.T.)

*---------------------------------------------------------------*
*	PROCEDURE ULSaiIpirel
*		PARAMETERS LNemp, LDMesImpr,LNpagina
*---------------------------------------------------------------*
*---------------------------------------------------------------*
*  ROTINA IMPRESSAO RELATORI ANALITICO OU SITETICO
*---------------------------------------------------------------*

PROCEDURE ULSaiIpirel
PARAMETERS LNemp, LDMesImpr, LNlivro, LNpagina
	
	SELECT LIVROIPI_SAIDA
	SET ORDER TO TAG data
	SET NEAR ON
	SEEK STR(LNemp,3)+DTOS(LDMesImpr)
	SET NEAR OFF
	LNctrnota = LIVROIPI_S.nota &&CONTADOR PRA VERRIFICAR NUMERACAO DE NF
	*******************
	*---->   (INICIALIZACAO DO CONTROLE DE STATUS IMPRESSAO)
	*******************	
	DO RELINIC.PRG          && INICIA VAR P/ TERMOMETRO
	LFsegue = .t.
	LNregistro = RECNO()
    COUNT TO   LNimpressao
	LNimpressos = 0
	GO LNregistro
	*******************
	*---->   (COMPLETADO PREPARACAO DO CONTROLE DE STATUS IMPRESSAO)
	*******************	
	**************************>>> REGISTRO DE SAIDAS
	LF_fim  = .f.
    LSrel = "REL220_I"      && relatorio padrao p/ impressoras ex: epson
    LSorienta = " FOR MONTH(data) = MONTH(LDMesImpr) AND "+;
    			"      YEAR(data)= YEAR(LDMesImpr) "+ ;
    			" WHILE  LFsegue "

	DO UPimpressao WITH	(LFLdireciona), (LFLagrega), (LFLfimagrega)

	LFcontinua = LFsegue
	************
	DO RELFIM.PRG          && FIM VAR P/ TERMOMETRO
	LNpagina = LNpagina + _PAGENO - 1   && DAR SEQU.AO N. PAGINA

RETURN

*-------------------------------------------------------------*
*  FUNCAO PARA INFORMAR DESCENDIO DA DATA INFORMADA
*		(REL220_I, REL221_I)
*-------------------------------------------------------------*

FUNCTION ULqbrdescendio
	PARAMETERS LDdata
	PRIVATE LSretorno		
	DO CASE
		CASE DAY(LDdata) <= 10
			LSretorno = "1o DESCENDIO"
		CASE DAY(LDdata) <= 20
			LSretorno = "2o DESCENDIO"
		OTHERWISE
			LSretorno = "3o DESCENDIO"
	ENDCASE
RETURN(LSretorno)		

*-------------------------------------------------------------*
*  FUNCAO PARA REGISTRAR LIVRO E PAGINA NA NOTA DE SAIDA
*		(REL220_I)
*-------------------------------------------------------------*
FUNCTION ULRegPgNfs

	PARAMETER LNemp,LNnota,LNlivro,LNpagina
	
	PRIVATE LSalias
	LSalias 	= ALIAS()
	SELE nota
	SET ORDER TO TAG nota
	SEEK STR(LNemp,3)+STR(LNnota,7)
	IF FOUND()
		IF REGLOCK(.T.)
			REPLACE nota.nro_regipi WITH LNlivro
			REPLACE nota.pag_regipi WITH LNpagina
		ENDIF
	ENDIF
	UNLOCK
	
	IF !EMPTY(LSalias) AND USED(LSalias)
		SELECT &LSalias
	ENDIF

RETURN("")
*----------------------------------------------------------------*
*  VEREIFICAR VALORES DA NOTA NO RELATORIO DE SAIDAS
*----------------------------------------------------------------*
*	FLG_NROS.......: .F. => NAO VERIFICA NUMERACAO (REL220_I)
*                    .T. => VERIFICA NUMERACAO (REL220)
*----------------------------------------------------------------*

FUNCTION ULvervlr
	PARAMETERS LNnota,STATUS,OPERACAO,TOTAL_NOTA,BASE_ICMS,;
			 BASE_ISENT,VLR_IPI,BASE_OUTR,BASE_ISS,BASE_SUBS,FLG_NROS
	*-------------------------------------------------------------*
	* VERIFICACAO DE NUMERACAO DE NOTA
	*-------------------------------------------------------------*
	

	IF FLG_NROS AND LNnota < 1000000		&& NAO E CUPOM
		DO WHILE LNctrnota < LNnota
		   LSnfs = STR(LNctrnota,7)
		   DO OBJ_MENS.SPR WITH  "Falta Nota Numero : "+LSnfs
		   LNctrnota = LNctrnota + 1						
		ENDDO
		LNctrnota = LNctrnota + 1						
	ENDIF
	*-------------------------------------------------------------*
	* VERIFICACAO DE VALOR DE NOTA
	*-------------------------------------------------------------*
	IF TOTAL_NOTA <> BASE_ICMS+BASE_ISENT+VLR_IPI+;
					  BASE_OUTR+BASE_ISS+icms_subs
	   LSnfs = STR(LNnota,7)
	   DO OBJ_MENS.SPR WITH ;
  	       "Erro no Fechamento da Nota  Numero : "+LSnfs
	ENDIF
RETURN(.T.)


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _44A0MRJ4I           LFIpiEntrada WHEN                  ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC220,     Record Number:   73   ╨
*       ╨ Variable:            LFIpiEntrada                       ╨
*       ╨ Called By:           WHEN Clause                        ╨
*       ╨ Object Type:         Check Box                          ╨
*       ╨ Snippet Number:      26                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _44a0mrj4i     &&  LFIpiEntrada WHEN
#REGION 1
IF isediting
	ON KEY LABEL ENTER KEYBOARD "{RIGHTARROW}"
ENDIF	
RETURN(isediting)


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _44A0MRJ4J           LFIpiEntrada VALID                 ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC220,     Record Number:   73   ╨
*       ╨ Variable:            LFIpiEntrada                       ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Check Box                          ╨
*       ╨ Snippet Number:      27                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _44a0mrj4j     &&  LFIpiEntrada VALID
#REGION 1
RETURN

PROCEDURE ULEntIpirel   	&& RELATORIO GERAL
PARAMETERS LNemp, LDper_ini, LDper_fim, LNlivro,LNpagina

*******************
*---->   (INICIALIZACAO DO CONTROLE DE STATUS IMPRESSAO)
*******************	
	DO RELINIC.PRG          && INICIA VAR P/ TERMOMETRO
	SELECT LIVROIPI_Entrada

	GO TOP
	LFsegue = .t.
	LNregistro = RECNO()

    COUNT 	WHILE data <= LDper_fim	TO   LNimpressao

	LNimpressos = 0
	GO LNregistro
*******************
*---->   (COMPLETADO PREPARACAO DO CONTROLE DE STATUS IMPRESSAO)
*******************	
	LF_imp  = .t.   && controla a impressao de transportar
**************************>>> REGISTRO DE SAIDAS
	SELE fornece
	SET ORDER TO TAG codigo
	
	SELECT LIVROIPI_Entrada
	SET RELATION TO  codforn INTO fornece ADDITIVE
    LSrel = "REL221_I"      && relatorio padrao p/ impressoras ex: epson

	LSorienta  = " FOR data >= LDper_ini AND data <= LDper_fim "+;
			 	 " WHILE data <= LDper_fim AND LFsegue  "

	DO UPimpressao WITH (LFLdireciona), (LFLagrega), (LFLfimagrega)
	LFcontinua = LFsegue
***********
	SET RELATION TO
	DO RELFIM.PRG          && FIM VAR P/ TERMOMETRO
	LNpagina = LNpagina + _PAGENO - 1   && DAR SEQU.AO N. PAGINA
RETURN


*-------------------------------------------------------------*
*  FUNCAO PARA REGISTRAR LIVRO E PAGINA NA NOTA DE ENTRADA
*		(REL221_I)
*-------------------------------------------------------------*
FUNCTION ULRegNfePg
	PARAMETER LNemp,LNcodforn,LNnota,LSserie,LStipo,LNlivro,LNpagina

	PRIVATE LSalias

	LSalias 	= ALIAS()
	SELE notaent
	SET ORDER TO TAG nota
	SEEK STR(LNemp,3)+STR(LNcodforn,5)+STR(LNnota,6)+LSserie+LEFT(LStipo,1)
	IF FOUND()
		IF REGLOCK(.T.)
			REPLACE notaent.nro_regipi WITH LNlivro
			REPLACE notaent.pag_regipi WITH LNpagina
		ENDIF
	ENDIF
	UNLOCK
	
	IF !EMPTY(LSalias) AND USED(LSalias)
		SELECT &LSalias
	ENDIF

RETURN("")


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _44A0MRJ4K           LFIpiProd VALID                    ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC220,     Record Number:   74   ╨
*       ╨ Variable:            LFIpiProd                          ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Check Box                          ╨
*       ╨ Snippet Number:      28                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*

FUNCTION _44a0mrj4k     &&  LFIpiProd VALID
#REGION 1
RETURN

PROCEDURE ULProdIpirel
PARAMETERS LNemp,LDper_ini, LDper_fim, LNlivro,LNpagina

*******************
*---->   (INICIALIZACAO DO CONTROLE DE STATUS IMPRESSAO)
*******************	
	DO RELINIC.PRG          && INICIA VAR P/ TERMOMETRO
	SELECT LIVROIPI_Prod
	SET ORDER TO TAG CODIGO

	LFsegue = .t.
	LNregistro = RECNO()

    LNimpressao = RECCOUNT()

	LNimpressos = 0
	GO LNregistro
*******************
*---->   (COMPLETADO PREPARACAO DO CONTROLE DE STATUS IMPRESSAO)
*******************	
	LF_imp  = .t.   && controla a impressao de transportar
**************************>>> REGISTRO DE SAIDAS


	SELE tbncmnbm
	SET ORDER TO TAG cod_ncm
		
	SELE nota
	SET ORDER TO TAG nota

	SELE notaent
	SET ORDER TO TAG boletim

	SELE fornece
	SET ORDER TO TAG codigo

	SELE GRUPO
	SET ORDER TO TAG CLASSIFICA
	GO TOP
	

	*---------------------------------------------------------------*
	SELECT LIVROIPI_Prod
	SET ORDER TO TAG codigo

	SET RELATION TO  STR(EMPRESA,3)+STR(NOTA,7) INTO nota
	SET RELATION TO  codforn 					INTO fornece ADDITIVE
	SET RELATION TO  STR(EMPRESA,3)+;
		STR(orcamento,6)+STR(FORNECE.CODIGO,5) INTO notaent ADDITIVE

	SELE GRUPO
	SET RELATION TO  cod_ncm 	INTO tbncmnbm
	SET RELATION TO  codigo 	INTO LIVROIPI_Prod   ADDITIVE
	SET SKIP TO LIVROIPI_Prod

	LSorienta  = 	" FOR (GRUPO.ORIGEM = 1 OR GRUPO.ORIGEM = 2) " +;
		" AND " +;
	"(ULsaldoini((LNemp),(codigo),(classifica),(LDper_ini-1),0) > 0 "+;
		"OR !EMPTY(LIVROIPI_P.CODIGO) ) "+;		
						" WHILE LFsegue  "

	*--------------------------------------------------------------*
    LSrel = "REL220D"      && relatorio padrao p/ impressoras ex: epson
	LF_fim  = .f.
	LNsaldo = 0				&& controlador de saldo

	DO UPimpressao WITH (LFLdireciona), (LFLagrega), (LFLfimagrega)
	LFcontinua = LFsegue
	*--------------------------------------------------------------*
	SET RELATION TO
	DO RELFIM.PRG          && FIM VAR P/ TERMOMETRO
	LNpagina = LNpagina + _PAGENO - 1   && DAR SEQU.AO N. PAGINA
RETURN


FUNCTION ULsaldoini
*----------------------------------------------------------------*
* Fornece o saldo incial do produto na quebra de classificacao
* CHAMADAS NA QUEBRA DE CLASSE REL220D
*----------------------------------------------------------------*
PARAMETERS LNemp,LScod,LSclas,LDdata,LNsaldo
	=W_DEFPROC("estoque.spr")
	=ESsaldo((LNemp),(LScod),(LSclas),(LDdata),LNsaldo,0)
RETURN(LNsaldo)

FUNCTION ULoperasld
*----------------------------------------------------------------*
* Fornece o saldo incial do produto na quebra de classificacao
* CHAMADAS NO DETALJE  REL220D
*----------------------------------------------------------------*
PARAMETERS LNsaldo,LNqtde,LSoperacao

	if LEFT(LSoperacao,1)="S"
		LNsaldo = LNsaldo - LNqtde
	ELSE
		LNsaldo = LNsaldo + LNqtde
	ENDIF	
RETURN(LNsaldo)


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _44A0MRJ4L           CreditoIcms VALID                  ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC220,     Record Number:   75   ╨
*       ╨ Variable:            CreditoIcms                        ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Snippet Number:      29                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _44a0mrj4l     &&  CreditoIcms VALID
#REGION 1
RETURN

*-------------------------------------------------------------------*
*	PROCEDURE CtrlIcmsCred
*	FUNCTION  ULGeraIcmsCred   PARAM LNEmp,LDDtInicio,LDDtFim
*-------------------------------------------------------------------*

PROCEDURE CtrlIcmsCred
PARAMETERS empresa,dt_inicio,m.dt_fim, LNlivro, LNpagina

	PRIVATE	LSProcesso, LNctrnota

	*----------------------------------------------------------*

	DO ULProcIcmsCred  WITH ;
		(m.empresa),(m.dt_inicio),(m.dt_fim),(LNlivro),(LNpagina)

	*----------------------------------------------------------*
	SELE nota
RETURN				

*-------------------------------------------------------------------*

*-------------------------------------------------------------------*
PROCEDURE ULProcIcmsCred
	*------------------------------------------------------------*
	* CLASSIFICACAO:  [????]
	*------------------------------------------------------------*
	* OBJETIVO....: Controla o Processo de Impressao dos relatorios
	*	de Credito Icms
	*------------------------------------------------------------*
	* COMENTARIO..: A rotina permite que o periodo informado seja
	*		impresso por mes e controla a agregacao dos relatorios
	*------------------------------------------------------------*
	* OBS........ :
	*------------------------------------------------------------*
	*  TABELAS....:
	*------------------------------------------------------------*
	*  PARAMETROS..:
	*		LNemp..........: Empresa
	*		LDDtInicio.....: Data inicial
	*       LDDtFim........: Data Final
	*       LNpagina.......:
	*
	*------------------------------------------------------------*
	*  RETORNO.....:                                             *
	*------------------------------------------------------------*
	PARAMETERS LNEmp,LDDtInicio,LDDtFim,LNlivro, LNpagina

	LFLdireciona  = .F. && Ativa PRTSETUP para direcionar impressao DEF(.T.)
	LFLagrega 	  = .T. && Agrega o ??.REL em ??.AGR			    DEF(.F.)
	LFLfimagrega  = .F. && Qdo. Estiver agregando => encerra        DEF(.F.)
	**********************************************************************
	m.inscricao 	= empresa.inscricao
	LDdtimpr  		=  LDDtInicio	&& VAI ORIENTAR A IMPRESSAO MES A MES
	LFcontinua 		= .t.  			&& CAPTURA O VALOR DE LFsegue
	*********************>>> RELATORIO GERAL <<<*********************
	LNpagina = LNpagina - 1   && DESCONTA O VLR. INICIAL DE _PAGENO
	
		*   DETERMINA O PERIODO DE MES PARA IMPRESSAO ********

	LDper_ini = LDDtInicio
	LDper_fim = LDDtFim
	LFLfimagrega  = .T.
	DO ULCredIcmsRel  WITH ;
			(LNemp), (LDper_ini),(LDper_fim),(LNlivro), LNpagina
	LFLdireciona  = .T.
	*-----------------------------
RETURN	
	


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _44A0MRJ60           producaoICM VALID                  ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC220,     Record Number:   76   ╨
*       ╨ Variable:            producaoICM                        ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Snippet Number:      30                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _44a0mrj60     &&  producaoICM VALID
#REGION 1
RETURN

*-------------------------------------------------------------------*
*	PROCEDURE CtrlICMProd
*	FUNCTION  ULGeraICMProd   PARAM LNEmp,LDDtInicio,LDDtFim
*	FUNCTION  ULArqICMProd  PARAM LNemp,LDdtIni,LDdtFim,LSTipo
*-------------------------------------------------------------------*

PROCEDURE CtrlICMProd
PARAMETERS empresa,dt_inicio,m.dt_fim, LNlivro, LNpagina

	PRIVATE	LSProcesso, LNctrnota
	*----------------------------------------------------------*
	IF !ULArqICMProd((m.empresa),(m.dt_inicio),(m.dt_fim))
		RETURN(.f.)
	ENDIF

	*----------------------------------------------------------*

	DO ULProcICMProd  WITH ;
		(m.empresa),(m.dt_inicio),(m.dt_fim),(LNlivro),(LNpagina)

	*----------------------------------------------------------*

	IF USED("LIVROIPI_P")
		SELECT LIVROIPI_Prod
		USE
	ENDIF
	SELE nota
RETURN				

*-------------------------------------------------------------------*
*--------------------------------------------------------------*
* Gerar Arquivo LIVRO ICM Prod
*
*---------------------------------------------------------------*

FUNCTION ULArqICMProd
	PARAMETERS LNemp,LDdtIni,LDdtFim
	set step on
	SELECT itemmov
	SET ORDER TO TAG dt_mov
	SET NEAR ON
	SEEK STR(LNemp,3)+DTOS(LDdtIni)
	SET NEAR OFF
	IF EOF() OR	itemmov.data > LDdtFim
 		WAIT WINDOW "Nao Foram Encontrados Dados p/ Rel ICM Producao"
 		SELE itemmov
		UNLOCK
 		RETURN(.F.)
 	ENDIF		
	*---------------------------------------------------------*
	* Gerar Arq. Temporario
	*---------------------------------------------------------*
	LSarqtmp 	= "" 			&& EX: C:\TMP\TMP0001
	LSaliastmp 	= "TMP" 		&&     TMP001
	LSaliastmp = UPopentmp(wp_dirtmp,LSarqtmp,LSaliastmp,1)
	IF EMPTY(LSaliastmp)
 		WAIT WINDOW "Nao Foi Possivel Gerar Arq Temporario Producao"
 		SELE itemmov
		UNLOCK
 		RETURN(.F.)
 	ENDIF		
	*---------------------------------------------------------*
	IF USED("LIVROIPI_P")
		SELE LIVROIPI_Prod
		USE
	ENDIF

	SELE GRUPO
	SET ORDER TO TAG CLASSIFICA

	SELE itemmov
	SET RELATION TO CLASSIFICA INTO GRUPO

	WAIT WINDOW "AGUARDE. Gerando Arq. Temporario Producao ." NOWAIT

	COPY TO &LSarqtmp FOR ;
			!(itemmov.ch_opera $ "56") ;
			AND (GRUPO.ORIGEM = 1 OR GRUPO.ORIGEM = 2) ;
    		WHILE itemmov.empresa = LNemp ;
    			AND itemmov.data <= LDdtFim

	SET RELATION TO
	
	KEYBOARD CHR(13)
	WAIT WINDOW " "
    SELE 0
	USE &LSarqtmp	ALIAS LIVROIPI_Prod	EXCLUSIVE	
	INDEX ON CODIGO TAG CODIGO ADDITIVE
	KEYBOARD CHR(13)
	WAIT WINDOW " "
	IF EOF() AND BOF()
		USE
 		WAIT WINDOW "Nao Foram Encontrados Dados p/Rel Producao"
 		SELE notaent
		UNLOCK
 		RETURN(.F.)
 	ENDIF		

RETURN(.T.)

*-------------------------------------------------------------------*

*-------------------------------------------------------------------*
PROCEDURE ULProcICMProd
	*------------------------------------------------------------*
	* CLASSIFICACAO:  [????]
	*------------------------------------------------------------*
	* OBJETIVO....: Controla o Processo de Impressao dos relatorios
	*	de Prod IPI nos varios meses e mantendo-os agregados
	*------------------------------------------------------------*
	* COMENTARIO..: A rotina permite que o periodo informado seja
	*		impresso por mes e controla a agregacao dos relatorios
	*------------------------------------------------------------*
	* OBS........ :
	*------------------------------------------------------------*
	*  TABELAS....:
	*------------------------------------------------------------*
	*  PARAMETROS..:
	*		LNemp..........: Empresa
	*		LDDtInicio.....: Data inicial
	*       LDDtFim........: Data Final
	*       LNpagina.......:
	*
	*------------------------------------------------------------*
	*  RETORNO.....:                                             *
	*------------------------------------------------------------*
	PARAMETERS LNEmp,LDDtInicio,LDDtFim,LNlivro, LNpagina

	LFLdireciona  = .F. && Ativa PRTSETUP para direcionar impressao DEF(.T.)
	LFLagrega 	  = .T. && Agrega o ??.REL em ??.AGR			    DEF(.F.)
	LFLfimagrega  = .F. && Qdo. Estiver agregando => encerra        DEF(.F.)
	**********************************************************************
	m.inscricao 	= empresa.inscricao
	LDdtimpr  		=  LDDtInicio	&& VAI ORIENTAR A IMPRESSAO MES A MES
	LFcontinua 		= .t.  			&& CAPTURA O VALOR DE LFsegue
	*********************>>> RELATORIO GERAL <<<*********************
	LNpagina = LNpagina - 1   && DESCONTA O VLR. INICIAL DE _PAGENO
	
		*   DETERMINA O PERIODO DE MES PARA IMPRESSAO ********

	LDper_ini = LDDtInicio
	LDper_fim = LDDtFim
	LFLfimagrega  = .T.
	DO ULProdICMrel  WITH ;
			(LNemp), (LDper_ini),(LDper_fim),(LNlivro), LNpagina
	LFLdireciona  = .T.
	*-----------------------------
RETURN	
	


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _44A0MRJ61           LFCRpc_ICMS VALID                  ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC220,     Record Number:   77   ╨
*       ╨ Variable:            LFCRpc_ICMS                        ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Check Box                          ╨
*       ╨ Snippet Number:      31                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*

FUNCTION _44a0mrj61     &&  LFCRpc_ICMS VALID
#REGION 1
RETURN

PROCEDURE ULPcCredIcmsRel
PARAMETERS LNemp,LDper_ini, LDper_fim, LNlivro,LNpagina

	LFLdireciona  = .T. && Ativa PRTSETUP para direcionar impressao DEF(.T.)
	LFLagrega 	  = .F. && Agrega o ??.REL em ??.AGR			    DEF(.F.)
	LFLfimagrega  = .F. && Qdo. Estiver agregando => encerra        DEF(.F.)

*******************
*---->   (INICIALIZACAO DO CONTROLE DE STATUS IMPRESSAO)
*******************	
	DO RELINIC.PRG          && INICIA VAR P/ TERMOMETRO
	SELE empresa
	SET ORDER TO TAG empresa
	SEEK LNemp
	
	SELE grfiscal
	SET ORDER TO TAG tributacao
	

	SELE GRUPO
	SET ORDER TO TAG classifica
	GO TOP
	SET RELATION TO empresa.estado+LEFT(grupo.classifica,5) INTO grfiscal
	
	
	LFsegue = .t.
	LNregistro = RECNO()

	COUNT FOR 	grupo.tp_control = 1 AND ;
			!(LEFT(GRUPO.CLASSIFICA,2) $ "00/01" ;
				OR LEFT(GRUPO.CLASSIFICA,5) = "04042");
			AND grfiscal.tp_mercad = 2 ;
	 AND ULExistVend((LNemp),(codigo),(classifica),(LDper_ini),(LDper_fim));
				 TO  LNimpressao

	LNimpressos = 0
	GO LNregistro
	*******************
	*---->   (COMPLETADO PREPARACAO DO CONTROLE DE STATUS IMPRESSAO)
	*******************	
	LF_imp  = .t.   && controla a impressao de transportar
	**************************>>> REGISTRO DE SAIDAS

	SELE GRUPO
	SET ORDER TO TAG CLASSIFICA
	GO TOP
	

	*---------------------------------------------------------------*

	LSorienta  = " FOR grupo.tp_control = 1 " +;
				" AND !( (LEFT(GRUPO.CLASSIFICA,2) $ '00/01' "+ ;
				 " OR LEFT(GRUPO.CLASSIFICA,5) = '04042')) " + ;
				 " AND grfiscal.tp_mercad = 2  AND " +;
      "ULExistVend((LNemp),(codigo),(classifica),(LDper_ini),(LDper_fim))"+;
				 " WHILE LFsegue  "
	*--------------------------------------------------------------*
    LSrel = "REL220F"      && relatorio padrao p/ impressoras ex: epson
	LF_fim  = .f.
	LNsaldo = 0				&& controlador de saldo
	DO UPimpressao   && WITH (LFLdireciona), (LFLagrega), (LFLfimagrega)
	LFcontinua = LFsegue
	*--------------------------------------------------------------*
	SET RELATION TO
	DO RELFIM.PRG          && FIM VAR P/ TERMOMETRO
	LNpagina = LNpagina + _PAGENO - 1   && DAR SEQU.AO N. PAGINA
RETURN


FUNCTION ULExistVend

	*------------------------------------------------------------*
	* CLASSIFICACAO:  [*****]   MODULO INDEPENDENTE				 *
	*------------------------------------------------------------*
	* OBJETIVO....: Verifica se Existe Movimentacao de Venda do
	*	Produdo no Periodo
	*
	* CHAMADAS NA CONDICAO DE ORIENTACAO
	*------------------------------------------------------------*
	* COMENTARIO..:
	*------------------------------------------------------------*
	* OBS........ :
	*------------------------------------------------------------*
	* TABELAS....: ITEMMOV
	*------------------------------------------------------------*
	* PARAMETROS..:
	*		LNemp..........: Empresa de referencia da movimentacao
	*		LScod..........: Codigo do Produto
	*		LSclass........: Classificaso do Produto
	*		LDdtini........: Data incial do periodo
	*		LDdtfim........: Data Final do periodo
	*------------------------------------------------------------*
	* RETORNO.....:
	*		(.T.)......: EXISTE MOVIMENTACAO
	*		(.F.)......: NAO EXISTE MOVIMENTACAO
	*------------------------------------------------------------*
	PARAMETERS LNemp,LScod,LSclass,LDdtini,LDdtfim

	PRIVATE LSalias
	PRIVATE LFitemmov
	PRIVATE LFretorno

	LNbs_Qtde		=	0

	LSalias			= ALIAS()
	LFitemmov		= NetArq("itemmov")
	IF (LFitemmov) > 100000 && HOUVE FALHA DE ABERTURA
		=UP_fecha("itemmov" ,LFitemmov)
		IF !EMPTY(LSalias) AND USED(LSalias)
			SELECT &LSalias
		ENDIF
		RETURN("")
	ENDIF


	SELE itemmov
	SET ORDER TO TAG movimento
	SET NEAR ON
	SEEK STR(LNemp,3)+LScod+DTOS(LDdtini)
	SET NEAR OFF
	*------------------------------------------------------------------*
	LFretorno = .F.		&& DEFAULT NAO POSSUI MOVIMENTACAO DE VENDA
	DO WHILE !EOF() AND itemmov.empresa = LNemp ;
					AND itemmov.codigo =  LScod ;
					AND itemmov.data  <=  LDdtfim

		IF  !(itemmov.ch_opera $ "1") ;
			OR LEFT(itemmov.operacao,1) <> "S";
			OR itemmov.ch_desti <> "1"
			skip
			LOOP
		ENDIF
		LFretorno = .T.		&&  POSSUI MOVIMENTACAO DE VENDA
		EXIT
	ENDDO
	*-------------------------------------------------------------------*
	=UP_fecha("itemmov" ,LFitemmov)
	IF !EMPTY(LSalias) AND USED(LSalias)
		SELECT &LSalias
	ENDIF
RETURN(LFretorno)



*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _44A0MRJ62           LFCR_ICMS VALID                    ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC220,     Record Number:   78   ╨
*       ╨ Variable:            LFCR_ICMS                          ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Check Box                          ╨
*       ╨ Snippet Number:      32                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*

FUNCTION _44a0mrj62     &&  LFCR_ICMS VALID
#REGION 1
RETURN

PROCEDURE ULCredIcmsRel
PARAMETERS LNemp,LDper_ini, LDper_fim, LNlivro,LNpagina

	LFLdireciona  = .T. && Ativa PRTSETUP para direcionar impressao DEF(.T.)
	LFLagrega 	  = .F. && Agrega o ??.REL em ??.AGR			    DEF(.F.)
	LFLfimagrega  = .F. && Qdo. Estiver agregando => encerra        DEF(.F.)

*******************
*---->   (INICIALIZACAO DO CONTROLE DE STATUS IMPRESSAO)
*******************	
	DO RELINIC.PRG          && INICIA VAR P/ TERMOMETRO
	SELE GRUPO
	SET ORDER TO TAG classifica
	GO TOP
	
	LFsegue = .t.
	LNregistro = RECNO()

	COUNT FOR 	grupo.tp_control = 1 AND ;
			( LEFT(GRUPO.CLASSIFICA,2) $ "00/01" ;
				OR LEFT(GRUPO.CLASSIFICA,5) = "04042");
	  AND ULExistMov((LNemp),(codigo),(classifica),(LDper_ini),(LDper_fim));
				 TO  LNimpressao

	LNimpressos = 0
	GO LNregistro
	*******************
	*---->   (COMPLETADO PREPARACAO DO CONTROLE DE STATUS IMPRESSAO)
	*******************	
	LF_imp  = .t.   && controla a impressao de transportar
	**************************>>> REGISTRO DE SAIDAS

	SELE GRUPO
	SET ORDER TO TAG CLASSIFICA
	GO TOP
	

	*---------------------------------------------------------------*

	LSorienta  = " FOR grupo.tp_control = 1 " +;
				" AND ( (LEFT(GRUPO.CLASSIFICA,2) $ '00/01' "+ ;
				 " OR LEFT(GRUPO.CLASSIFICA,5) = '04042')) " + ;
				 " AND " +;
	   "ULExistMov((LNemp),(codigo),(classifica),(LDper_ini),(LDper_fim))"+;
				 " WHILE LFsegue  "

				

	*--------------------------------------------------------------*
    LSrel = "REL220E"      && relatorio padrao p/ impressoras ex: epson
	LF_fim  = .f.
	LNsaldo = 0				&& controlador de saldo
	DO UPimpressao WITH (LFLdireciona), (LFLagrega), (LFLfimagrega)
	LFcontinua = LFsegue
	*--------------------------------------------------------------*
	SET RELATION TO
	DO RELFIM.PRG          && FIM VAR P/ TERMOMETRO
	LNpagina = LNpagina + _PAGENO - 1   && DAR SEQU.AO N. PAGINA
RETURN


FUNCTION ULExistMov

	*------------------------------------------------------------*
	* CLASSIFICACAO:  [*****]   MODULO INDEPENDENTE				 *
	*------------------------------------------------------------*
	* OBJETIVO....: Verifica se Existe Movimentacao de Venda do
	*	Produdo no Periodo
	*
	* CHAMADAS NA CONDICAO DE ORIENTACAO
	*------------------------------------------------------------*
	* COMENTARIO..:
	*------------------------------------------------------------*
	* OBS........ :
	*------------------------------------------------------------*
	* TABELAS....: ITEMMOV
	*------------------------------------------------------------*
	* PARAMETROS..:
	*		LNemp..........: Empresa de referencia da movimentacao
	*		LScod..........: Codigo do Produto
	*		LSclass........: Classificaso do Produto
	*		LDdtini........: Data incial do periodo
	*		LDdtfim........: Data Final do periodo
	*------------------------------------------------------------*
	* RETORNO.....:
	*		(.T.)......: EXISTE MOVIMENTACAO
	*		(.F.)......: NAO EXISTE MOVIMENTACAO
	*------------------------------------------------------------*
	PARAMETERS LNemp,LScod,LSclass,LDdtini,LDdtfim

	PRIVATE LSalias
	PRIVATE LFitemmov
	PRIVATE LFretorno

	LNbs_Qtde		=	0

	LSalias			= ALIAS()
	LFitemmov		= NetArq("itemmov")
	IF (LFitemmov) > 100000 && HOUVE FALHA DE ABERTURA
		=UP_fecha("itemmov" ,LFitemmov)
		IF !EMPTY(LSalias) AND USED(LSalias)
			SELECT &LSalias
		ENDIF
		RETURN("")
	ENDIF


	SELE itemmov
	SET ORDER TO TAG movimento
	SET NEAR ON
	SEEK STR(LNemp,3)+LScod+DTOS(LDdtini)
	SET NEAR OFF

	*------------------------------------------------------------------*
	LFretorno = .F.		&& DEFAULT NAO POSSUI MOVIMENTACAO DE VENDA
	DO WHILE !EOF() AND itemmov.empresa = LNemp ;
					AND itemmov.codigo =  LScod ;
					AND itemmov.data  <=  LDdtfim

		IF  !(itemmov.ch_opera $ "1") ;
			OR LEFT(itemmov.operacao,1) <> "S";
			OR itemmov.ch_desti <> "1"
			skip
			LOOP
		ENDIF
		LFretorno = .T.		&&  POSSUI MOVIMENTACAO DE VENDA
		EXIT
	ENDDO
	*-------------------------------------------------------------------*
	IF LFretorno
	  =ULmd_base(LNemp,LScod,LDdtini, LNbs_Qtde,0,0,1)
	  IF LNbs_Qtde = 0
		LFretorno = .F.		&& NAO FORMA BASE PELA AQUISICAO
	  ENDIF
	ENDIF
	*-------------------------------------------------------------------*
	=UP_fecha("itemmov" ,LFitemmov)
	IF !EMPTY(LSalias) AND USED(LSalias)
		SELECT &LSalias
	ENDIF
RETURN(LFretorno)



FUNCTION ULmd_base
	*------------------------------------------------------------*
	* CLASSIFICACAO:  [*****]   MODULO INDEPENDENTE				 *
	*------------------------------------------------------------*
	* OBJETIVO....: Informar qtde e valor que forma a base de su-
	*	bstituicao do produto tomando pelo valor da compra
	*------------------------------------------------------------*
	* COMENTARIO..: Rotina para apoiar a apuracao de diferencial de
	*	ICMS nas operacoes com mercadoria de substituicao tributaria
	*		Sao Considerados:
	*			1- 	Entradas Interestaduais
	*				Vendas e Transferencias
	*			2-	QTDE movimentada
	*			3-	VALOR da moviemtacao
	*				-VLRVENDA.....: MERC+ICMS
	*				-VLRIPI.......: Valor do IPI destacado
	*				-Custo Indireto: Frete e outros
	*			4-  Ao valor apurado no item 3 aplica-se o IVA re-
	*				gistrado para o item obtendo-se a BASE DA SUBS.
	*------------------------------------------------------------*
	* OBS........ :
	*------------------------------------------------------------*
	* TABELAS....: ITEMMOV
	*------------------------------------------------------------*
	* PARAMETROS..:
	*		LNemp..........: Empresa de referencia da movimentacao
	*		LScod..........: Codigo do Produto
	*		LDdtRef........: Data Referencia para buscar a media da
	*						base no mes anterior a data informada
	*	
	*		LNbs_Qtde......: Referencia p/ Retorno QTDE entrada
	*		LNbs100_valor..: Referencia p/ Retorno VLR BASE SUBS.
	*						aplicando 100% do IVA nas ENTRADAS por
	*						TRANSFERENCIAS "INTERNAS"
	*       LNbs50_valor...:Referencia p/ Retorno VLR BASE SUBS.
	*						aplicando 50% do IVA nas ENTRADAS por
	*						TRANSFERENCIAS "INTERNAS"
	*		LNctrRecursao...: Contador de Recursao (p/ Limitar em 8)
	*						 => 8 meses de pesquisa
	*------------------------------------------------------------*
	* RETORNO.....:
	*		LNbs_Qtde......: Referencia p/ Retorno QTDE entrada
	*		LNbs100_valor.....: Referencia p/ Retorno VLR BASE SUBS.
	*		LNbs50_valor......: Referencia p/ Retorno VLR BASE SUBS.
	*------------------------------------------------------------*
	PARAMETERS LNemp,LScod,LDdtRef,;
				LNbs_Qtde,LNbs100_Valor,LNbs50_Valor,LNctrRecursao

	=W_DEFPROC("rotinas.spr")

	PRIVATE LSalias
	PRIVATE LFitemmov
	PRIVATE LDUlt_dia	&& ULTIMO DIA DO MES PARA COMPOR MEDIA DA BASE

	LNbs_Qtde		=	0
	LNbs100_valor	=	0
	LNbs50_valor	=	0

	*--------------------------------------------------------------------*
	LDdtRef			= 	GOMONTH(LDdtRef,-1)			&& Retorna um Mes
	LDdtRef			= 	LDdtRef - DAY(LDdtRef)+1	&& 1o DIA do Mes Ant
	LDUlt_dia		=	GOMONTH(LDdtRef,1) - 1		&& Ultimo dia do mes
	*--------------------------------------------------------------------*	

	LSalias			= ALIAS()
	LFitemmov		= NetArq("itemmov")
	IF (LFitemmov) > 100000 && HOUVE FALHA DE ABERTURA
		=UP_fecha("itemmov" ,LFitemmov)
		IF !EMPTY(LSalias) AND USED(LSalias)
			SELECT &LSalias
		ENDIF
		RETURN("")
	ENDIF

	SELE itemmov
	SET ORDER TO TAG movimento
	SET NEAR ON
	SEEK STR(LNemp,3)+LScod+DTOS(LDdtRef)
	SET NEAR OFF

	DO WHILE !EOF() AND itemmov.empresa = LNemp ;
					AND itemmov.codigo =  LScod ;
					AND itemmov.data  <=  LDUlt_dia
		IF  !(itemmov.ch_opera $ "12") ;
			OR LEFT(itemmov.operacao,1) <> "E" ;
			OR (itemmov.ch_desti = "1" AND itemmov.ch_opera <> "2")
			skip
			LOOP
		ENDIF
		LNbs_Qtde		=	LNbs_Qtde + itemmov.qtde
		*---------------------------------------------------------------*
		*       APLICANDO 100% DO IVA EM TRANSFERENCIAS EM GERAL        *
		*---------------------------------------------------------------*
		LNbs100_valor	=	LNbs100_valor+ ((itemmov.vlrvenda + ;
										itemmov.vlripi + ;
										itemmov.custo_ind) * itemmov.iva)

		*---------------------------------------------------------------*
		*       APLICANDO 50% DO IVA EM TRANSFERENCIAS INTERNAS         *
		*---------------------------------------------------------------*
		IF  (itemmov.ch_desti = "1" AND itemmov.ch_opera = "2")
			LNbs50_valor	=	LNbs50_valor+ ((itemmov.vlrvenda + ;
										itemmov.vlripi + ;
				itemmov.custo_ind) * ( 1 + ( itemmov.iva-1 ) / 2))
		ELSE
			LNbs50_valor	=	LNbs50_valor+ ((itemmov.vlrvenda + ;
										itemmov.vlripi + ;
									itemmov.custo_ind) * itemmov.iva)
		ENDIF
		*---------------------------------------------------------------*

		SKIP
	ENDDO
	=UP_fecha("itemmov" ,LFitemmov)
	IF !EMPTY(LSalias) AND USED(LSalias)
		SELECT &LSalias
	ENDIF

	IF LNbs_Qtde = 0 			&& RECURSAO ATE ENCONTRAR BASE
		IF LNctrRecursao <=8
		  =ULmd_base(LNemp,LScod,;
			LDdtRef, LNbs_Qtde,LNbs100_Valor,LNbs50_Valor,LNctrRecursao+1)
		ENDIF		
	ENDIF
RETURN("")


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _44A0MRJ63           LFconv_5795 VALID                  ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC220,     Record Number:   79   ╨
*       ╨ Variable:            LFconv_5795                        ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Check Box                          ╨
*       ╨ Snippet Number:      33                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*

FUNCTION _44a0mrj63     &&  LFconv_5795 VALID
#REGION 1
RETURN

PROCEDURE ULProcCVN5795
PARAMETERS LNemp, LDper_ini, LDper_fim

	PRIVATE LSnome
	LSnome	 =	RIGHT(str(year(LDper_ini)),2)+;
				STR(MONTH(LDper_ini),2)+STR(LNemp,2)+"AG.DAT"
	LSnome	= 	"\SCGC\AGENFA\"+STRTRAN(LSnome," ","0")

	LNcontrol = FCREATE(LSnome)	
	PRIVATE LNctr_10,LNctr_11,LNctr_50,LNctr_53,LNctr_54,LNctr_60,;
			LNctr_70,LNctr_75
	STORE 0 TO LNctr_10,LNctr_11,LNctr_50,LNctr_53,LNctr_54,LNctr_60,;
			LNctr_70,LNctr_75

	=UL57R_10((LNemp),(LNcontrol),(LDper_ini),(LDper_fim),LNctr_10)
	=UL57R_11((LNemp),(LNcontrol),(LDper_ini),(LDper_fim),LNctr_11)
	=UL57R_50((LNemp),(LNcontrol),(LDper_ini),(LDper_fim),LNctr_50)
	=UL57R_53((LNemp),(LNcontrol),(LDper_ini),(LDper_fim),LNctr_53)
	=UL57R_54((LNemp),(LNcontrol),(LDper_ini),(LDper_fim),LNctr_54)
	=UL57R_60((LNemp),(LNcontrol),(LDper_ini),(LDper_fim),LNctr_60)
	=UL57R_70((LNemp),(LNcontrol),(LDper_ini),(LDper_fim),LNctr_70)
	=UL57R_75((LNemp),(LNcontrol),(LDper_ini),(LDper_fim),LNctr_75)
	=UL57R_90((LNemp),(LNcontrol),LNctr_10,LNctr_11,LNctr_50,;
				LNctr_53,LNctr_54,LNctr_60,LNctr_70,LNctr_75)
	=FCLOSE(LNcontrol)
RETURN

FUNCTION UL57R_10
	PARAMETERS LNemp, LNctrl, LDper_ini, LDper_fim, LN_Ctr

	SELE empresa
	SET ORDER TO TAG empresa
	SEEK LNemp
	
	LStipo  		= "10"
	LScgc			= CHRTRAN(STR(empresa.cgc,14)," ","0")
	LSinsc			= CHRTRAN(empresa.inscricao," ","")
	LSinsc			= CHRTRAN(LSinsc,".","")
	LSinsc			= CHRTRAN(LSinsc,"/","")
	LSinsc			= CHRTRAN(LSinsc,"-","")
	LSinsc			= LEFT(LSinsc+space(14),14)
	LSnome			= LEFT(empresa.nome,35)
	LSmunicipio		= LEFT(empresa.cidade,30)
	LSestado		= empresa.estado
	LSfax			= REPLICATE("0",10)
	LSdtini			= STR(YEAR(LDper_ini),4)+;
					  STR(MONTH(LDper_ini),2)+;
					  STR(DAY(LDper_ini),2)
	LSdtini			= CHRTRAN(LSdtini," ","0")				
	LSdtfim			= STR(YEAR(LDper_fim),4)+;
					  STR(MONTH(LDper_fim),2)+;
					  STR(DAY(LDper_fim),2)
	LSdtfim			= CHRTRAN(LSdtfim," ","0")				
	LScod_id		= "03"
	LScod_f			= "1"
	

	LStmp1 			=LStipo+LScgc+LSinsc+LSnome+;
					 LSmunicipio+LSestado+LSfax+;
					 LSdtini+LSdtfim+LScod_id+LScod_f

	=FPUT(LNctrl,LStmp1,126)
	LN_Ctr	=	LN_Ctr + 1
RETURN

FUNCTION UL57R_11
	PARAMETERS LNemp, LNctrl, LDper_ini, LDper_fim, LN_Ctr

	SELE empresa
	SET ORDER TO TAG empresa
	SEEK LNemp
	
	LStipo  		= "11"
	LSlogr			= LEFT(empresa.endereco,34)

	IF TYPE("empresa.num") = "U"
		LSnum			= "00001"
	ELSE
		LSnum			= CHRTRAN(STR(empresa.num,5)," ","0")
	ENDIF
	LScompl			= SPACE(22)
	LSbairro		= LEFT(empresa.bairro,15)
	LScep			= LEFT(CHRTRAN(empresa.cep," ","0"),8)
	LScontato		= LEFT(empresa.contato,28)

	LSfone			= CHRTRAN(UPPER(empresa.fone),"X","0")
	LSfone			= CHRTRAN(LSfone,"(","")
	LSfone			= CHRTRAN(LSfone,")","")
	LSfone			= CHRTRAN(LSfone,"-","")
	LSfone			= LEFT(LSfone,12)

	LStmp1 			= LStipo+LSlogr+LSnum+LScompl+LSbairro+LScep+;
					  LScontato+LSfone	
	=FPUT(LNctrl,LStmp1,126)
	LN_Ctr	=	LN_Ctr + 1
RETURN

FUNCTION UL57R_50
	PARAMETERS LNemp, LNctrl, LDper_ini, LDper_fim, LN_Ctr

	*-------------------------------------------------------------------*
	*	NOTAS DE SAIDA
	*-------------------------------------------------------------------*
	
	SELECT LIVROSAI
	SET ORDER TO TAG data
	SET NEAR ON
	SEEK STR(LNemp,3)+DTOS(LDper_ini)
	SET NEAR OFF

	LStipo  		= "50"

	DO WHILE !EOF()
		LSmsg = "Saidas (50) "+;
				 	STR(LIVROSAI.empresa,3)+"-"+DTOC(LIVROSAI.DATA)+;
					STR(LIVROSAI.NOTA,6)
		WAIT WINDOW LSmsg NOWAIT

		*----------------------------------------------------------*
		* PROCESSA SOMENTE NOTA EFETIVAS EVITANDO NOTAS DE ENTRADA
		* E COPIAS DE CUPOM
		*----------------------------------------------------------*

		*---------------------------------------------------------
		* PROCESSA SOMENTE NOTA EFETIVAS EVITANDO OS RESUMOS DE CUPONS
		* POR DATA GERADOS
		*---------------------------------------------------------
		*--> EVITA  REGISTROS RESUMO DOS CUPONS
		* REGISTROS SAO GERADOS QUANDO PROCESSO O ARQUIVO LIVROSAI
		* RESUMINDO OS CUPONS POR DATA E ALIQUOTA
		*---------------------------------------------------------
		*---------------------------------------------------------
		IF LIVROSAI.NOTA >= 2000000	
			SKIP
			LOOP
		ENDIF

		*----------------------------------------------------------*
		LScgc	=  CHRTRAN(STR(LIVROSAI.favorecido,14)," ","0")
		*----------------------------------------------------------*
		*     Quando a inscricao que estiver na nota for invalida
		*  o prog buscara a inscricao do cadastro de clientes
		*  pode ocorrer que no momento da emissao da nota a inscricao
		*  estivesse errada.
		*----------------------------------------------------------*

		LSinsc	=  ALLTRIM(LIVROSAI.inscricao)
		LSuf	=	LIVROSAI.uf
		IF LIVROSAI.favorecido > 0
			SELE clientes
			SET ORDER TO TAG cliente
			SEEK LIVROSAI.favorecido
			IF  FOUND() ;
				AND	UPInscricao(clientes.estado,clientes.INSCRICAO,1,0,0,'')
				LSinsc	=  ALLTRIM(clientes.inscricao)
				LSuf	=	clientes.estado
			ELSE
				LSinsc	=  ALLTRIM(LIVROSAI.inscricao)
			ENDIF		
		ENDIF

		SELE LIVROSAI
		*----------------------------------------------------------*
		IF "ISENTO" $ UPPER(LSinsc)
			LSinsc	=  "ISENTO"
			LScgc	=  CHRTRAN(STR(0,14)," ","0")
		ELSE
			LSinsc	=  CHRTRAN(LSinsc,".","")
			LSinsc	=  CHRTRAN(LSinsc,"/","")
			LSinsc	=  CHRTRAN(LSinsc,"-","")
			LSinsc	=  CHRTRAN(LSinsc,"(","")
			LSinsc	=  CHRTRAN(LSinsc,")","")
		ENDIF			
		LSinsc			= LEFT(LSinsc+space(14),14)
		IF LIVROSAI.TP_PESSOA = 1
			LScgc	=  CHRTRAN(STR(0,14)," ","0")
		ENDIF			



		LSdtemi		=	STR(YEAR(LIVROSAI.data),4)+;
						STR(MONTH(LIVROSAI.data),2)+;
						STR(DAY(LIVROSAI.data),2)
		LSdtemi		=   CHRTRAN(LSdtemi," ","0")						
		LSmodelo 	=   "01"
		LSserie		=   "  1"
		LSsubserie  = 	"  "
		LSnumero 	= 	CHRTRAN(STR(LIVROSAI.NOTA,7)," ","0")
		LSnumero 	= 	SUBS(LSnumero,2,6)
		IF EMPTY(LIVROSAI.cfo)
			SELE TIPOOPER
			SET ORDER TO TAG TIPO
			SEEK "S"+LIVROSAI.tipo
			IF FOUND()
				LScfo	= tipooper.cfo
			ENDIF
		ELSE	
			LScfo		=   CHRTRAN(LIVROSAI.cfo,".","")						
		ENDIF
		LScfo		=   CHRTRAN(LScfo,".","")						

		SELE LIVROSAI

		IF LIVROSAI.CUPOM = 0   && PORQUE SE <> 0 E NOTA REFERENTE A CUPOM
			LSvalor		=	str(LIVROSAI.total_nota,14,2)						
			LSbase_icms	=	str(LIVROSAI.base_icms,14,2)						
			LSvlr_icms	=	ROUND(base_icms *  aliq_icms / 100,2)
			LSbase_isent=	str(LIVROSAI.base_isent,14,2)						
			LSbase_outr	=	str(LIVROSAI.base_outr,14,2)						
			LSaliq_icms	=	str(LIVROSAI.aliq_icms,5,2)						
		ELSE
			LSvalor		=	str(LIVROSAI.total_nota,14,2)						
			LSbase_icms	=	str(0,14,2)						
			LSvlr_icms	=	ROUND(0,2)
			LSbase_isent=	str(0,14,2)						
			LSbase_outr	=	str(LIVROSAI.total_nota,14,2)						
			LSaliq_icms	=	str(LIVROSAI.aliq_icms,5,2)						
		ENDIF	

		LSvalor		=   CHRTRAN(LSvalor," ","0")						
		LSvalor		=   CHRTRAN(LSvalor,",","")						
		LSvalor		=   CHRTRAN(LSvalor,".","")						


		LSbase_icms	=   CHRTRAN(LSbase_icms," ","0")						
		LSbase_icms	=   CHRTRAN(LSbase_icms,",","")						
		LSbase_icms	=   CHRTRAN(LSbase_icms,".","")						


		LSvlr_icms	=	STR(LSvlr_icms,14,2)
		LSvlr_icms	=   CHRTRAN(LSvlr_icms," ","0")						
		LSvlr_icms	=   CHRTRAN(LSvlr_icms,",","")						
		LSvlr_icms	=   CHRTRAN(LSvlr_icms,".","")						


		LSbase_isent=   CHRTRAN(LSbase_isent," ","0")						
		LSbase_isent=   CHRTRAN(LSbase_isent,",","")						
		LSbase_isent=   CHRTRAN(LSbase_isent,".","")						
		

		LSbase_outr	=   CHRTRAN(LSbase_outr," ","0")						
		LSbase_outr	=   CHRTRAN(LSbase_outr,",","")						
		LSbase_outr	=   CHRTRAN(LSbase_outr,".","")						


		LSaliq_icms	=   CHRTRAN(LSaliq_icms," ","0")						
		LSaliq_icms	=   CHRTRAN(LSaliq_icms,",","")						
		LSaliq_icms	=   CHRTRAN(LSaliq_icms,".","")						

		IF LIVROSAI.status = 2
			LSstatus = "S"
		ELSE
			LSstatus = "N"
		ENDIF		
		************************************************************
		LStmp1		=	LStipo+LScgc+LSinsc+LSdtemi+LSuf+LSmodelo+;
						LSserie+LSsubserie+LSnumero+LScfo+LSvalor+;
						LSbase_icms+LSvlr_icms+LSbase_isent+;
						LSbase_outr+LSaliq_icms+LSstatus
		************************************************************
		=FPUT(LNctrl,LStmp1,126)
		LN_Ctr	=	LN_Ctr + 1
		SKIP
	ENDDO

	*-------------------------------------------------------------------*
	*	NOTAS DE ENTRADA
	*-------------------------------------------------------------------*

	SELECT LIVROENT
	SET ORDER TO TAG rldtentr
	SET NEAR ON
	SEEK STR(LNemp,3)+DTOS(LDper_ini)
	SET NEAR OFF

	LStipo  		= "50"

	DO WHILE !EOF()
		LSmsg = "Entradas (50) "+;
				 	STR(LIVROENT.empresa,3)+"-"+DTOC(LIVROENT.DATA)+;
					STR(LIVROENT.NOTA,6)
		WAIT WINDOW LSmsg NOWAIT

		IF LIVROENT.ch_produ = "9"  && CONHECIMENTO DE TRANSPORTE
			SKIP
			LOOP
		ENDIF

		*-----------------------------------------------------------*
		SELE fornece
		SET ORDER TO TAG codigo
		SEEK LIVROENT.codforn

		IF FOUND()
			LSinsc	=  ALLTRIM(fornece.inscricao)
			LScgc	=  CHRTRAN(STR(fornece.cgc,14)," ","0")
		ELSE
			LSinsc	=  ALLTRIM(LIVROENT.inscricao)
			LScgc	=  CHRTRAN(STR(LIVROENT.favorecido,14)," ","0")
		ENDIF

		IF "ISENTO" $ UPPER(LSinsc)
			LSinsc	=  "ISENTO"
			LScgc	=  CHRTRAN(STR(0,14)," ","0")
		ELSE
			LSinsc	=  CHRTRAN(LSinsc,".","")
			LSinsc	=  CHRTRAN(LSinsc,"/","")
			LSinsc	=  CHRTRAN(LSinsc,"-","")
			LSinsc	=  CHRTRAN(LSinsc,"(","")
			LSinsc	=  CHRTRAN(LSinsc,")","")
		ENDIF			
		LSinsc			= LEFT(LSinsc+space(14),14)
		*-----------------------------------------------------------*
		SELECT LIVROENT

		LSdtemi		=	STR(YEAR(LIVROENT.data),4)+;
						STR(MONTH(LIVROENT.data),2)+;
						STR(DAY(LIVROENT.data),2)
		LSdtemi		=   CHRTRAN(LSdtemi," ","0")						
		LSuf		=	LIVROENT.uf
		LSmodelo 	=   "01"
		LSserie		=   "  "+LIVROENT.serie
		LSsubserie  = 	"  "
		LSnumero 	= 	CHRTRAN(STR(LIVROENT.NOTA,6)," ","0")

		IF EMPTY(LIVROENT.cfo)
			SELE TIPOOPER
			SET ORDER TO TAG TIPO
			SEEK "E"+LIVROENT.tipo
			IF FOUND()
				LScfo	= tipooper.cfo
			ENDIF
		ELSE	
			LScfo		=   CHRTRAN(LIVROENT.cfo,".","")						
		ENDIF
		LScfo		=   CHRTRAN(LScfo,".","")						
		SELE LIVROENT

		LSvalor		=	str(LIVROENT.total_nota,14,2)						
		LSvalor		=   CHRTRAN(LSvalor," ","0")						
		LSvalor		=   CHRTRAN(LSvalor,",","")						
		LSvalor		=   CHRTRAN(LSvalor,".","")						

		LSbase_icms	=   IIF(LIVROENT.base_subs > 0, 0, LIVROENT.base_icms)

		LSbase_icms	=	str(LSbase_icms,14,2)						
		LSbase_icms	=   CHRTRAN(LSbase_icms," ","0")						
		LSbase_icms	=   CHRTRAN(LSbase_icms,",","")						
		LSbase_icms	=   CHRTRAN(LSbase_icms,".","")						

		LSvlr_icms	=	IIF(LIVROENT.base_subs > 0, 0, LIVROENT.vlr_icms)

		LSvlr_icms	=	str(LSvlr_icms,14,2)						
		LSvlr_icms	=   CHRTRAN(LSvlr_icms," ","0")						
		LSvlr_icms	=   CHRTRAN(LSvlr_icms,",","")						
		LSvlr_icms	=   CHRTRAN(LSvlr_icms,".","")						

		LSbase_isent=	str(LIVROENT.base_isent,14,2)						
		LSbase_isent=   CHRTRAN(LSbase_isent," ","0")						
		LSbase_isent=   CHRTRAN(LSbase_isent,",","")						
		LSbase_isent=   CHRTRAN(LSbase_isent,".","")						
		
		LSbase_outr	=	str(LIVROENT.base_outr,14,2)						
		LSbase_outr	=   CHRTRAN(LSbase_outr," ","0")						
		LSbase_outr	=   CHRTRAN(LSbase_outr,",","")						
		LSbase_outr	=   CHRTRAN(LSbase_outr,".","")						

		LSaliq_icms	=	str(LIVROENT.aliq_icms,5,2)						
		LSaliq_icms	=   CHRTRAN(LSaliq_icms," ","0")						
		LSaliq_icms	=   CHRTRAN(LSaliq_icms,",","")						
		LSaliq_icms	=   CHRTRAN(LSaliq_icms,".","")						

		LSstatus = "N"
		************************************************************
		LStmp1		=	LStipo+LScgc+LSinsc+LSdtemi+LSuf+LSmodelo+;
						LSserie+LSsubserie+LSnumero+LScfo+LSvalor+;
						LSbase_icms+LSvlr_icms+LSbase_isent+;
						LSbase_outr+LSaliq_icms+LSstatus
		************************************************************
		=FPUT(LNctrl,LStmp1,126)
		LN_Ctr	=	LN_Ctr + 1
		SKIP
	ENDDO
RETURN


FUNCTION UL57R_53
	PARAMETERS LNemp, LNctrl, LDper_ini, LDper_fim, LN_Ctr

	*-------------------------------------------------------------------*
	*	NOTAS DE SAIDA
	*-------------------------------------------------------------------*
	
	SELECT LIVROSAI
	SET ORDER TO TAG data
	SET NEAR ON
	SEEK STR(LNemp,3)+DTOS(LDper_ini)
	SET NEAR OFF

	LStipo  		= "53"
	DO WHILE !EOF()
		LSmsg = "Subst.Saida (53) "+;
				 	STR(LIVROSAI.empresa,3)+"-"+DTOC(LIVROSAI.DATA)+;
					STR(LIVROSAI.NOTA,6)
		WAIT WINDOW LSmsg NOWAIT

		IF LIVROSAI.icms_subs = 0 OR  LEFT(LIVROSAI.operacao,1) <> "S"
			SKIP
			LOOP
		ENDIF

		*---------------------------------------------------------
		*--> EVITA  REGISTROS RESUMO DOS CUPONS
		* REGISTROS SAO GERADOS QUANDO PROCESSO O ARQUIVO LIVROSAI
		* RESUMINDO OS CUPONS POR DATA E ALIQUOTA
		*---------------------------------------------------------
		*---------------------------------------------------------
		IF LIVROSAI.NOTA >= 2000000	
			SKIP
			LOOP
		ENDIF

		*----------------------------------------------------------*
		LScgc	=  CHRTRAN(STR(LIVROSAI.favorecido,14)," ","0")

		LSinsc	=  ALLTRIM(LIVROSAI.inscricao)

		LSuf	=	LIVROSAI.uf
		IF LIVROSAI.favorecido > 0
			SELE clientes
			SET ORDER TO TAG cliente
			SEEK LIVROSAI.favorecido
			IF  FOUND() ;
				AND	UPInscricao(clientes.estado,clientes.INSCRICAO,1,0,0,'')
				LSinsc	=  ALLTRIM(clientes.inscricao)
				LSuf	=	clientes.estado
			ELSE
				LSinsc	=  ALLTRIM(LIVROSAI.inscricao)
			ENDIF		
		ENDIF

		SELE LIVROSAI

		IF "ISENTO" $ UPPER(LSinsc)
			LSinsc	=  "ISENTO"
			LScgc	=  CHRTRAN(STR(0,14)," ","0")
		ELSE
			LSinsc	=  CHRTRAN(LSinsc,".","")
			LSinsc	=  CHRTRAN(LSinsc,"/","")
			LSinsc	=  CHRTRAN(LSinsc,"-","")
			LSinsc	=  CHRTRAN(LSinsc,"(","")
			LSinsc	=  CHRTRAN(LSinsc,")","")
		ENDIF			
		IF LIVROSAI.TP_PESSOA = 1
			LScgc	=  CHRTRAN(STR(0,14)," ","0")
		ENDIF			


		LSinsc			= LEFT(LSinsc+space(14),14)
		LSdtemi		=	STR(YEAR(LIVROSAI.data),4)+;
						STR(MONTH(LIVROSAI.data),2)+;
						STR(DAY(LIVROSAI.data),2)
		LSdtemi		=   CHRTRAN(LSdtemi," ","0")						
		LSmodelo 	=   "01"
		LSserie		=   "  1"
		LSsubserie  = 	"  "
		LSnumero 	= 	CHRTRAN(STR(LIVROSAI.NOTA,7)," ","0")
		LSnumero 	= 	SUBS(LSnumero,2,6)

		IF EMPTY(LIVROSAI.cfo)
			SELE TIPOOPER
			SET ORDER TO TAG TIPO
			SEEK "S"+LIVROSAI.tipo
			IF FOUND()
				LScfo	= tipooper.cfo
			ENDIF
		ELSE	
			LScfo		=   CHRTRAN(LIVROSAI.cfo,".","")						
		ENDIF
		LScfo		=   CHRTRAN(LScfo,".","")						
		SELE LIVROSAI


		*-- > Base de Substituicao
		LSbase_icms	=	str(LIVROSAI.base_subs,14,2)						
		LSbase_icms	=   CHRTRAN(LSbase_icms," ","0")						
		LSbase_icms	=   CHRTRAN(LSbase_icms,",","")						
		LSbase_icms	=   CHRTRAN(LSbase_icms,".","")						

		*-- > ICMS de Substituicao
		LSvlr_icms	=	STR(LIVROSAI.icms_subs,14,2)
		LSvlr_icms	=   CHRTRAN(LSvlr_icms," ","0")						
		LSvlr_icms	=   CHRTRAN(LSvlr_icms,",","")						
		LSvlr_icms	=   CHRTRAN(LSvlr_icms,".","")						

		*--- > Despesas acessorias
		LSdespesa=	LIVROSAI.vlrfrete+LIVROSAI.vlrseguro+LIVROSAI.vlrdespes
		LSdespesa=	 str(LSdespesa,14,2)						
		LSdespesa=   CHRTRAN(LSdespesa," ","0")						
		LSdespesa=   CHRTRAN(LSdespesa,",","")						
		LSdespesa=   CHRTRAN(LSdespesa,".","")						
		
		IF LIVROSAI.status = 2
			LSstatus = "S"
		ELSE
			LSstatus = "N"
		ENDIF		

		LSfiler  	=  space(30)
		************************************************************
		LStmp1		=	LStipo+LScgc+LSinsc+LSdtemi+LSuf+LSmodelo+;
						LSserie+LSsubserie+LSnumero+LScfo+;
						LSbase_icms+LSvlr_icms+LSdespesa+;
						LSstatus+LSfiler
		************************************************************
		=FPUT(LNctrl,LStmp1,126)
		LN_Ctr	=	LN_Ctr + 1
		SKIP
	ENDDO

	*-------------------------------------------------------------------*
	*	NOTAS DE ENTRADA
	*-------------------------------------------------------------------*

	SELECT LIVROENT
	SET ORDER TO TAG rldtentr
	SET NEAR ON
	SEEK STR(LNemp,3)+DTOS(LDper_ini)
	SET NEAR OFF

	LStipo  		= "53"
	DO WHILE !EOF()
		LSmsg = "Subst.Entrada (53) "+;
				 	STR(LIVROENT.empresa,3)+"-"+DTOC(LIVROENT.DATA)+;
					STR(LIVROENT.NOTA,6)
		WAIT WINDOW LSmsg NOWAIT

		IF LIVROENT.icms_subs = 0
			SKIP
			LOOP
		ENDIF

		IF LIVROENT.ch_produ = "9"  && CONHECIMENTO DE TRANSPORTE
			SKIP
			LOOP
		ENDIF

		*-----------------------------------------------------------*
		SELE fornece
		SET ORDER TO TAG codigo
		SEEK LIVROENT.codforn
		IF FOUND()
			LSinsc	=  ALLTRIM(fornece.inscricao)
			LScgc	=  CHRTRAN(STR(fornece.cgc,14)," ","0")
		ELSE
			LSinsc	=  ALLTRIM(LIVROENT.inscricao)
			LScgc	=  CHRTRAN(STR(LIVROENT.favorecido,14)," ","0")
		ENDIF

		IF "ISENTO" $ UPPER(LSinsc)
			LSinsc	=  "ISENTO"
			LScgc	=  CHRTRAN(STR(0,14)," ","0")
		ELSE
			LSinsc	=  CHRTRAN(LSinsc,".","")
			LSinsc	=  CHRTRAN(LSinsc,"/","")
			LSinsc	=  CHRTRAN(LSinsc,"-","")
			LSinsc	=  CHRTRAN(LSinsc,"(","")
			LSinsc	=  CHRTRAN(LSinsc,")","")
		ENDIF			
		LSinsc		= LEFT(LSinsc+space(14),14)
		SELECT LIVROENT

		LSdtemi		=	STR(YEAR(LIVROENT.data),4)+;
						STR(MONTH(LIVROENT.data),2)+;
						STR(DAY(LIVROENT.data),2)
		LSdtemi		=   CHRTRAN(LSdtemi," ","0")						

		LSuf		=	LIVROENT.uf
		LSmodelo 	=   "01"
		LSserie		=   "  1"
		LSsubserie  = 	"  "
		LSnumero 	= 	CHRTRAN(STR(LIVROENT.NOTA,6)," ","0")
		IF EMPTY(LIVROENT.cfo)
			SELE TIPOOPER
			SET ORDER TO TAG TIPO
			SEEK "E"+LIVROENT.tipo
			IF FOUND()
				LScfo	= tipooper.cfo
			ENDIF
		ELSE	
			LScfo		=   CHRTRAN(LIVROENT.cfo,".","")						
		ENDIF
		LScfo		=   CHRTRAN(LScfo,".","")						
		SELE LIVROENT


		*-- > Base de Substituicao
		LSbase_icms	=	str(LIVROENT.base_subs,14,2)						
		LSbase_icms	=   CHRTRAN(LSbase_icms," ","0")						
		LSbase_icms	=   CHRTRAN(LSbase_icms,",","")						
		LSbase_icms	=   CHRTRAN(LSbase_icms,".","")						

		*-- > ICMS de Substituicao
		LSvlr_icms	=	STR(LIVROENT.icms_subs,14,2)
		LSvlr_icms	=   CHRTRAN(LSvlr_icms," ","0")						
		LSvlr_icms	=   CHRTRAN(LSvlr_icms,",","")						
		LSvlr_icms	=   CHRTRAN(LSvlr_icms,".","")						

		*--- > Despesas acessorias
		LSdespesa=	LIVROENT.vlrfrete+LIVROENT.vlrseguro+LIVROENT.vlrdespes
		LSdespesa=	 str(LSdespesa,14,2)						
		LSdespesa=   CHRTRAN(LSdespesa," ","0")						
		LSdespesa=   CHRTRAN(LSdespesa,",","")						
		LSdespesa=   CHRTRAN(LSdespesa,".","")						
		

		LSstatus = "N"
		LSfiler  	=  space(30)
		************************************************************
		LStmp1		=	LStipo+LScgc+LSinsc+LSdtemi+LSuf+LSmodelo+;
						LSserie+LSsubserie+LSnumero+LScfo+;
						LSbase_icms+LSvlr_icms+LSdespesa+;
						LSstatus+LSfiler
		************************************************************
		=FPUT(LNctrl,LStmp1,126)
		LN_Ctr	=	LN_Ctr + 1
		SKIP
	ENDDO

RETURN

*****************************************************************
*  REGISTRO DE ITENS - 54 - ENTRADA E SAIDA
*****************************************************************

FUNCTION UL57R_54
	PARAMETERS LNemp, LNctrl, LDper_ini, LDper_fim, LN_Ctr
	PRIVATE LNctrOrdem

	*-------------------------------------------------------------------*
	*	ITENS DAS NOTAS DE SAIDA
	*-------------------------------------------------------------------*
	
	SELECT LIVROSAI
	SET ORDER TO TAG data
	SET NEAR ON
	SEEK STR(LNemp,3)+DTOS(LDper_ini)
	SET NEAR OFF

	DO WHILE !EOF()
		LSmsg = "Produtos Saida (54) "+;
				 	STR(LIVROSAI.empresa,3)+"-"+DTOC(LIVROSAI.DATA)+;
					STR(LIVROSAI.NOTA,6)
		WAIT WINDOW LSmsg NOWAIT


		LStipo  	=   "54"

		*----------------------------------------------------------*
		LScgc	=  CHRTRAN(STR(LIVROSAI.favorecido,14)," ","0")

		LSinsc	=  ALLTRIM(LIVROSAI.inscricao)
		LSuf	=	LIVROSAI.uf
		IF LIVROSAI.favorecido > 0
			SELE clientes
			SET ORDER TO TAG cliente
			SEEK LIVROSAI.favorecido
			IF  FOUND() ;
				AND	UPInscricao(clientes.estado,clientes.INSCRICAO,1,0,0,'')
				LSinsc	=  ALLTRIM(clientes.inscricao)
				LSuf	=	clientes.estado
			ELSE
				LSinsc	=  ALLTRIM(LIVROSAI.inscricao)
			ENDIF		
		ENDIF

		SELE LIVROSAI

		IF "ISENTO" $ UPPER(LSinsc)
			LSinsc	=  "ISENTO"
			LScgc	=  CHRTRAN(STR(0,14)," ","0")
		ELSE
			LSinsc	=  CHRTRAN(LSinsc,".","")
			LSinsc	=  CHRTRAN(LSinsc,"/","")
			LSinsc	=  CHRTRAN(LSinsc,"-","")
			LSinsc	=  CHRTRAN(LSinsc,"(","")
			LSinsc	=  CHRTRAN(LSinsc,")","")
		ENDIF			
		LSinsc			= LEFT(LSinsc+space(14),14)
		IF LIVROSAI.TP_PESSOA = 1
			LScgc	=  CHRTRAN(STR(0,14)," ","0")
		ENDIF			

		LSdtemi		=	STR(YEAR(LIVROSAI.data),4)+;
						STR(MONTH(LIVROSAI.data),2)+;
						STR(DAY(LIVROSAI.data),2)
		LSdtemi		=   CHRTRAN(LSdtemi," ","0")						


		LSmodelo 	=   "01"
		LSserie		=   "  1"
		LSsubserie  = 	"  "
		LSnumero 	= 	CHRTRAN(STR(LIVROSAI.NOTA,7)," ","0")
		LSnumero 	= 	SUBS(LSnumero,2,6)

		SELE ITEMMOV
		SET ORDER TO TAG itemnota
		SET NEAR ON
		SEEK STR(LNemp,3)+"S"+STR(LIVROSAI.NOTA,7)
		SET NEAR OFF
		LNctrordem = 1		&& INDICAR ORDEM DO PRODUTO NA NOTA

		DO WHILE !EOF() AND LIVROSAI.NOTA = itemmov.nota ;
						AND LEFT(itemmov.operacao,1) = "S"
			*--------------------------------------------------*
			* 	Podem ser identificadas itens de sadida com
			* numero de nota conincidenter  com itens de uma
			*	SCA por isso e feito a verificacao do tipo
			*---------------------------------------------------*
			IF 	LIVROSAI.TIPO 	 <> itemmov.tipo
				SKIP
				LOOP
			ENDIF
			*---------------------------------------------------*
			DO ULitem_75  && REGISTRAR ITEM COMERCIALIZADO
			*---------------------------------------------------*			
			SELE ITEMMOV
			LSordem = CHRTRAN(STR(LNctrordem,2)," ","0")
			LNctrordem	= LNctrordem + 1
			LScodigo=  LEFT(itemmov.codigo,10)
			LSorigem=  CHRTRAN(STR(itemmov.origem,1)," ","0")
			LScst	=  CHRTRAN(itemmov.cst," ","0")

			LSzero  =  "0"
		*	LSunid	=  itemmov.unidade
			LSunid	=  "UN"


			LSqtde	= STR(itemmov.qtde,14,3)			
			LSqtde  = CHRTRAN(LSqtde," ","0")
			LSqtde  = CHRTRAN(LSqtde,",","")
			LSqtde  = CHRTRAN(LSqtde,".","")

			LSvalor	= STR(itemmov.vlrvenda,14,2)			
			LSvalor = CHRTRAN(LSvalor," ","0")
			LSvalor = CHRTRAN(LSvalor,",","")
			LSvalor = CHRTRAN(LSvalor,".","")

			LSbase_icms = STR(itemmov.base_calc,14,2)			
			LSbase_icms = CHRTRAN(LSbase_icms," ","0")
			LSbase_icms = CHRTRAN(LSbase_icms,",","")
			LSbase_icms = CHRTRAN(LSbase_icms,".","")

			LSbase_subs = (itemmov.base_calc*itemmov.iva)
			LSbase_subs = STR(LSbase_subs,14,2)			
			LSbase_subs = CHRTRAN(LSbase_subs," ","0")
			LSbase_subs = CHRTRAN(LSbase_subs,",","")
			LSbase_subs = CHRTRAN(LSbase_subs,".","")

			LSaliq_icms	=	str(itemmov.aliq_icms,5,2)						
			LSaliq_icms	=   CHRTRAN(LSaliq_icms," ","0")						
			LSaliq_icms	=   CHRTRAN(LSaliq_icms,",","")						
			LSaliq_icms	=   CHRTRAN(LSaliq_icms,".","")						

			
			LSvlripi	= STR(0,14,2)			
			LSvlripi	= CHRTRAN(LSvlripi," ","0")
			LSvlripi 	= CHRTRAN(LSvlripi,",","")
			LSvlripi 	= CHRTRAN(LSvlripi,".","")
			*******************************************************
			LStmp1		= LStipo+LScgc+LSdtemi+LSuf+LSmodelo+LSserie+;
						  LSsubserie+LSnumero+LSordem+;
						  LScodigo+LSorigem+LScst+LSzero+LSunid+;
						  LSqtde+LSvalor+LSbase_icms+LSbase_subs+;
						  LSaliq_icms+LSvlripi
			=FPUT(LNctrl,LStmp1,126)
			LN_Ctr	=	LN_Ctr + 1
			*******************************************************			
			SKIP
		ENDDO
		SELECT LIVROSAI
		SKIP
	ENDDO

	*-------------------------------------------------------------------*
	*	NOTAS DE ENTRADA
	*-------------------------------------------------------------------*

	SELECT LIVROENT
	SET ORDER TO TAG rldtentr
	SET NEAR ON
	SEEK STR(LNemp,3)+DTOS(LDper_ini)
	SET NEAR OFF

	DO WHILE !EOF()
		LSmsg = "Produtos Entrada (54) "+;
				 	STR(LIVROENT.empresa,3)+"-"+DTOC(LIVROENT.DATA)+;
					STR(LIVROENT.NOTA,6)
		WAIT WINDOW LSmsg NOWAIT

		LStipo  	= "54"

		*-----------------------------------------------------------*
		SELE fornece
		SET ORDER TO TAG codigo
		SEEK LIVROENT.codforn
		IF FOUND()
			LSinsc	=  ALLTRIM(fornece.inscricao)
			LScgc	=  CHRTRAN(STR(fornece.cgc,14)," ","0")
		ELSE
			LSinsc	=  ALLTRIM(LIVROENT.inscricao)
			LScgc	=  CHRTRAN(STR(LIVROENT.favorecido,14)," ","0")
		ENDIF
		*-----------------------------------------------------------*
		SELE LIVROENT

		IF "ISENTO" $ UPPER(LSinsc)
			LScgc	=  CHRTRAN(STR(0,14)," ","0")
		ENDIF

		LSdtrec		=	STR(YEAR(LIVROENT.data),4)+;
						STR(MONTH(LIVROENT.data),2)+;
						STR(DAY(LIVROENT.data),2)
		LSdtrec		=   CHRTRAN(LSdtrec," ","0")						

		LSuf		=	LIVROENT.uf
		LSmodelo 	=   "01"
		LSserie		=   "  1"
		LSsubserie  = 	"  "
		LSnumero 	= 	CHRTRAN(STR(LIVROENT.NOTA,6)," ","0")

		IF EMPTY(LIVROENT.cfo)
			SELE TIPOOPER
			SET ORDER TO TAG TIPO
			SEEK "E"+LIVROENT.tipo
			IF FOUND()
				LScfo	= tipooper.cfo
			ENDIF
		ELSE	
			LScfo		=   CHRTRAN(LIVROENT.cfo,".","")						
		ENDIF
		LScfo		=   CHRTRAN(LScfo,".","")						
		SELE LIVROENT

		SELE ITEMMOV
		SET ORDER TO TAG itemnota
		SET NEAR ON
		SEEK STR(LNemp,3)+"E"+STR(LIVROENT.NOTA,7)
		SET NEAR OFF
		LNctrordem	= 1

		DO WHILE !EOF() AND LIVROENT.NOTA = itemmov.nota ;
						AND LEFT(itemmov.operacao,1) = "E"
			*--------------------------------------------------*
			* 	Podem ser identificadas itens de entrada com mesmo
			* numero de nota por isso e feito a verificacao do tipo
			* e do codiforn
			*---------------------------------------------------*
			IF 	LIVROENT.TIPO 	 <> itemmov.tipo OR ;
				LIVROENT.CODFORN <> itemmov.codforn
				SKIP
				LOOP
			ENDIF
			*---------------------------------------------------*
			DO ULitem_75  && REGISTRAR ITEM COMERCIALIZADO
			*---------------------------------------------------*			
			LSordem = CHRTRAN(STR(LNctrordem,2)," ","0")
			LNctrordem	= LNctrordem + 1
			LScodigo=  LEFT(itemmov.codigo,10)
			LSorigem=  CHRTRAN(STR(itemmov.origem,1)," ","0")
			IF LIVROENT.BASE_ISENT > 0
				LScst	=  "2"
			ELSE		
				LScst	=  CHRTRAN(itemmov.cst," ","0")
			ENDIF
			LSzero  =  "0"
		*	LSunid	=  itemmov.unidade
			LSunid	=  "UN"


			LSqtde	= STR(itemmov.qtde,14,3)			
			LSqtde  = CHRTRAN(LSqtde," ","0")
			LSqtde  = CHRTRAN(LSqtde,",","")
			LSqtde  = CHRTRAN(LSqtde,".","")

			LSvalor	= STR(itemmov.vlrvenda,14,2)			
			LSvalor = CHRTRAN(LSvalor," ","0")
			LSvalor = CHRTRAN(LSvalor,",","")
			LSvalor = CHRTRAN(LSvalor,".","")

			LSbase_icms = STR(itemmov.base_calc,14,2)			
			LSbase_icms = CHRTRAN(LSbase_icms," ","0")
			LSbase_icms = CHRTRAN(LSbase_icms,",","")
			LSbase_icms = CHRTRAN(LSbase_icms,".","")

			LSbase_subs = (itemmov.base_calc+itemmov.vlripi)*itemmov.iva
			LSbase_subs = STR(LSbase_subs,14,2)			
			LSbase_subs = CHRTRAN(LSbase_subs," ","0")
			LSbase_subs = CHRTRAN(LSbase_subs,",","")
			LSbase_subs = CHRTRAN(LSbase_subs,".","")

			LSaliq_icms	=	str(itemmov.aliq_icms,5,2)						
			LSaliq_icms	=   CHRTRAN(LSaliq_icms," ","0")						
			LSaliq_icms	=   CHRTRAN(LSaliq_icms,",","")						
			LSaliq_icms	=   CHRTRAN(LSaliq_icms,".","")						
			
			LSvlripi	= STR(itemmov.vlripi,14,2)			
			LSvlripi	= CHRTRAN(LSvlripi," ","0")
			LSvlripi 	= CHRTRAN(LSvlripi,",","")
			LSvlripi 	= CHRTRAN(LSvlripi,".","")

			*******************************************************
			LStmp1		= LStipo+LScgc+LSdtrec+LSuf+LSmodelo+LSserie+;
						  LSsubserie+LSnumero+LSordem+;
						  LScodigo+LSorigem+LScst+LSzero+LSunid+;
						  LSqtde+LSvalor+LSbase_icms+LSbase_subs+;
						  LSaliq_icms+LSvlripi
			=FPUT(LNctrl,LStmp1,126)
			LN_Ctr	=	LN_Ctr + 1
			*******************************************************			
			SKIP
		ENDDO
		SELECT LIVROENT
		SKIP
	ENDDO

RETURN

PROCEDURE ULitem_75
	*-----------------------------------------------------------*
	* REGISTRA ITENS COMERCIALIZADOS PARA REGISTRO TIPO 75
	*-----------------------------------------------------------*
	PRIVATE LSalias
	LSalias = ALIAS()
	SELE ITENSNEGOC
	SET ORDER TO TAG CODIGO
	m.codigo	= itemmov.codigo
	SEEK m.codigo
	IF !FOUND() AND LEFT(m.codigo,5) <> "99999"
		*--------------------------------------------------------*
		IF EMPTY(itemmov.descricao)		
			SELE grupo
			SET ORDER TO TAG codigo
			SEEK m.codigo
			IF FOUND()
				m.descricao = grupo.descricao
			ELSE
				m.descricao = itemmov.descricao
			ENDIF
		ELSE
			m.descricao = itemmov.descricao
		ENDIF
		*--------------------------------------------------------*
		SELE ITENSNEGOC
		m.classifica= itemmov.classifica
		m.status	= 1
		m.cdg_tipo	= 4
		=edithand("SAVE")
	ENDIF
	IF !EMPTY(LSalias) AND USED(LSalias)
		SELECT &LSalias
	ENDIF
RETURN

*****************************************************************
*  REGISTRO CUPONS  - 60 -
*****************************************************************

FUNCTION UL57R_60
	PARAMETERS LNemp, LNctrl, LDper_ini, LDper_fim, LN_Ctr

	*-------------------------------------------------------------------*

	SELECT LIVROSAI
	SET ORDER TO TAG data
	SET NEAR ON
	SEEK STR(LNemp,3)+DTOS(LDper_ini)
	SET NEAR OFF

	DO WHILE !EOF() AND LNemp = LIVROSAI.empresa ;
					AND LIVROSAI.data <= LDper_fim
		LSmsg = "Resum.Cupons (60) "+;
				 	STR(LIVROSAI.empresa,3)+"-"+DTOC(LIVROSAI.DATA)+;
					STR(LIVROSAI.NOTA,7)
		WAIT WINDOW LSmsg NOWAIT

		*---------------------------------------------------------
		*--> PROCESSAR SOMENTE O REGISTRO RESUMO DOS CUPONS
		* REGISTROS SAO GERADOS QUANDO PROCESSO O ARQUIVO LIVROSAI
		* RESUMINDO OS CUPONS POR DATA E ALIQUOTA
		*---------------------------------------------------------
		IF LIVROSAI.NOTA < 2000000	
			SKIP
			LOOP
		ENDIF
	
		LDtqbr		= 	LIVROSAI.data
		LSvalor		= 	0
		LSvlr_icms	= 	0
		LSnroini	=   0
		LSnrofim	=   0
		*--------------------------------------------------------------*
		=W_DEFPROC("NOTA.SPR")
		=NFEcfInforme((LNemp),(LDtqbr),(LDtqbr),LSnroIni,LSnroFim,;
					LSvalor, LSvlr_icms)
		*--------------------------------------------------------------*

		LStipo  	= "60"
		LSbranco_A	=  SPACE(28)

		LSdtemi		=	STR(YEAR(LDtqbr),4)+;
						STR(MONTH(LDtqbr),2)+;
						STR(DAY(LDtqbr),2)
		LSdtemi		=   CHRTRAN(LSdtemi," ","0")						

		LSnumero 	= 	"001"
		LSmodelo	=	"2D"
		
		LSnroini	=   CHRTRAN(STR(LSnroini,6)," ","0")
		LSnrofim	=   CHRTRAN(STR(LSnrofim,6)," ","0")

		LSvalor		=	STR(LSvalor,15,2)
		LSvalor		=   CHRTRAN(LSvalor," ","0")						
		LSvalor		=   CHRTRAN(LSvalor,",","")						
		LSvalor		=   CHRTRAN(LSvalor,".","")						
	
		LSvlr_icms	=	STR(LSvlr_icms,14,2)
		LSvlr_icms	=   CHRTRAN(LSvlr_icms," ","0")						
		LSvlr_icms	=   CHRTRAN(LSvlr_icms,",","")						
		LSvlr_icms	=   CHRTRAN(LSvlr_icms,".","")						

		LSbranco_B	=  SPACE(44)

		*******************************************************
		LStmp1		=  LStipo+LSbranco_A+LSdtemi+LSnumero+LSmodelo+;
					   LSnroini+LSnrofim+LSvalor+LSvlr_icms+LSbranco_B	
		=FPUT(LNctrl,LStmp1,126)
		LN_Ctr	=	LN_Ctr + 1
		*******************************************************			
		SELECT LIVROSAI
		DO WHILE !EOF() AND LDTqbr = LIVROSAI.data
			SKIP
		ENDDO
		IF EOF()
			EXIT
		ENDIF
	ENDDO

RETURN

*---------------------------------------------------------------------*
*		Conhecimento de Tranporte
*---------------------------------------------------------------------*

FUNCTION UL57R_70
	PARAMETERS LNemp, LNctrl, LDper_ini, LDper_fim, LN_Ctr

	*-------------------------------------------------------------------*
	*	NOTAS DE ENTRADA
	*-------------------------------------------------------------------*

	SELECT LIVROENT
	SET ORDER TO TAG rldtentr
	SET NEAR ON
	SEEK STR(LNemp,3)+DTOS(LDper_ini)
	SET NEAR OFF

	LStipo  		= "70"

	DO WHILE !EOF()
		LSmsg = "Conh.Frete (70) "+;
				 	STR(LIVROENT.empresa,3)+"-"+DTOC(LIVROENT.DATA)+;
					STR(LIVROENT.NOTA,6)
		WAIT WINDOW LSmsg NOWAIT
		&& SE NAO FOR CONHECIMENTO DE TRANSPORTE
		IF LIVROENT.ch_produ <> "9"
			SKIP
			LOOP
		ENDIF

		*-----------------------------------------------------------*
		SELE fornece
		SET ORDER TO TAG codigo
		SEEK LIVROENT.codforn

		IF FOUND()
			LSinsc	=  ALLTRIM(fornece.inscricao)
			LScgc	=  CHRTRAN(STR(fornece.cgc,14)," ","0")
		ELSE
			LSinsc	=  ALLTRIM(LIVROENT.inscricao)
			LScgc	=  CHRTRAN(STR(LIVROENT.favorecido,14)," ","0")
		ENDIF

		IF "ISENTO" $ UPPER(LSinsc)
			LSinsc	=  "ISENTO"
			LScgc	=  CHRTRAN(STR(0,14)," ","0")
		ELSE
			LSinsc	=  CHRTRAN(LSinsc,".","")
			LSinsc	=  CHRTRAN(LSinsc,"/","")
			LSinsc	=  CHRTRAN(LSinsc,"-","")
			LSinsc	=  CHRTRAN(LSinsc,"(","")
			LSinsc	=  CHRTRAN(LSinsc,")","")
		ENDIF			
		LSinsc			= LEFT(LSinsc+space(14),14)
		*-----------------------------------------------------------*
		SELECT LIVROENT

		LSdtemi		=	STR(YEAR(LIVROENT.data),4)+;
						STR(MONTH(LIVROENT.data),2)+;
						STR(DAY(LIVROENT.data),2)
		LSdtemi		=   CHRTRAN(LSdtemi," ","0")						
		LSuf		=	LIVROENT.uf
		LSmodelo 	=   "08"
		LSserie		=   LIVROENT.serie
		LSsubserie  = 	"  "
		LSnumero 	= 	CHRTRAN(STR(LIVROENT.NOTA,6)," ","0")

		SELE TIPOOPER
		SET ORDER TO TAG TIPO
		SEEK "E"+LIVROENT.tipo
		IF FOUND()
			LScfo	= tipooper.cfo
		ELSE	
			LScfo		=   CHRTRAN(LIVROENT.cfo,".","")						
		ENDIF
		LScfo		=   CHRTRAN(LScfo,".","")						

		SELE LIVROENT

		LSvalor		=	str(LIVROENT.total_nota,15,2)						
		LSvalor		=   CHRTRAN(LSvalor," ","0")						
		LSvalor		=   CHRTRAN(LSvalor,",","")						
		LSvalor		=   CHRTRAN(LSvalor,".","")						

		LSbase_icms	=   IIF(LIVROENT.base_subs > 0, 0, LIVROENT.base_icms)

		LSbase_icms	=	str(LSbase_icms,15,2)						
		LSbase_icms	=   CHRTRAN(LSbase_icms," ","0")						
		LSbase_icms	=   CHRTRAN(LSbase_icms,",","")						
		LSbase_icms	=   CHRTRAN(LSbase_icms,".","")						

		LSvlr_icms	=	IIF(LIVROENT.base_subs > 0, 0, LIVROENT.vlr_icms)

		LSvlr_icms	=	str(LSvlr_icms,15,2)						
		LSvlr_icms	=   CHRTRAN(LSvlr_icms," ","0")						
		LSvlr_icms	=   CHRTRAN(LSvlr_icms,",","")						
		LSvlr_icms	=   CHRTRAN(LSvlr_icms,".","")						

		LSbase_isent=	str(LIVROENT.base_isent,15,2)						
		LSbase_isent=   CHRTRAN(LSbase_isent," ","0")						
		LSbase_isent=   CHRTRAN(LSbase_isent,",","")						
		LSbase_isent=   CHRTRAN(LSbase_isent,".","")						
		
		LSbase_outr	=	str(LIVROENT.base_outr,15,2)						
		LSbase_outr	=   CHRTRAN(LSbase_outr," ","0")						
		LSbase_outr	=   CHRTRAN(LSbase_outr,",","")						
		LSbase_outr	=   CHRTRAN(LSbase_outr,".","")						

		LSCifFob	=	"2"

		LSstatus = "N"
		************************************************************
		LStmp1		=	LStipo+LScgc+LSinsc+LSdtemi+LSuf+LSmodelo+;
						LSserie+LSsubserie+LSnumero+LScfo+LSvalor+;
						LSbase_icms+LSvlr_icms+LSbase_isent+;
						LSbase_outr+LSCifFob+LSstatus
		************************************************************
		=FPUT(LNctrl,LStmp1,126)
		LN_Ctr	=	LN_Ctr + 1
		SKIP
	ENDDO
RETURN

*****************************************************************
*  CADASTRO SE PRODUTOS - 75 -
*****************************************************************

FUNCTION UL57R_75
	PARAMETERS LNemp, LNctrl, LDper_ini, LDper_fim, LN_Ctr

	*-------------------------------------------------------------------*
	*	CADASTRO DOS PRODUTOS COMERCIALIZADOS NO PERIODO
	*-------------------------------------------------------------------*
	SELECT EMPRESA
	SET ORDER TO TAG empresa
	SEEK LNemp
	IF !FOUND()
		RETURN(.F.)
	ENDIF	

	SELE ITENSNEGOC
	SET ORDER TO TAG CODIGO
	GO TOP
	
	DO WHILE !EOF()
		WAIT WINDOW ITENSNEGOC.codigo+ITENSNEGOC.descricao NOWAIT
		
		LStipo	= "75"
		LScgc	= CHRTRAN(STR(empresa.cgc,14)," ","0")
		LScodigo= LEFT(ITENSNEGOC.codigo,10)
		LSnome	= ITENSNEGOC.descricao+SPACE(40)
		LSbranco= SPACE(25)
		*******************************************************
		LStmp1	= LStipo+LScgc+LScodigo+LSnome+LSbranco
		=FPUT(LNctrl,LStmp1,126)
		LN_Ctr	=	LN_Ctr + 1
		*******************************************************			
		SELE ITENSNEGOC
		SKIP
	ENDDO
			
RETURN

*****************************************************************
*  TOTALIZADORES  - 90 -
*****************************************************************

FUNCTION UL57R_90
	PARAMETERS LNemp,LNctrl,LNctr_10,LNctr_11,LNctr_50,LNctr_53,LNctr_54,;
				LNctr_60,LNctr_70,LNctr_75

	*-------------------------------------------------------------------*
	*	CADASTRO DOS PRODUTOS COMERCIALIZADOS NO PERIODO
	*-------------------------------------------------------------------*
	SELECT EMPRESA
	SET ORDER TO TAG empresa
	SEEK LNemp
	IF !FOUND()
		RETURN(.F.)
	ENDIF	

	LStipo	= "90"
	LScgc	= 	CHRTRAN(STR(empresa.cgc,14)," ","0")
	LSinsc	= 	CHRTRAN(empresa.inscricao," ","")
	LSinsc	= 	CHRTRAN(LSinsc,".","")
	LSinsc	= 	CHRTRAN(LSinsc,"/","")
	LSinsc	= 	CHRTRAN(LSinsc,"-","")
	LSinsc	= 	LEFT(LSinsc+space(14),14)


	LS_tp50	=	"50"
	LS_ct50	=	CHRTRAN(STR(LNctr_50,8)," ","0")

	LS_tp53	=	"53"
	LS_ct53	=	CHRTRAN(STR(LNctr_53,8)," ","0")

	LS_tp54	=	"54"
	LS_ct54	=	CHRTRAN(STR(LNctr_54,8)," ","0")

	LS_tp60	=	"60"
	LS_ct60	=	CHRTRAN(STR(LNctr_60,8)," ","0")

	LS_tp70	=	"70"
	LS_ct70	=	CHRTRAN(STR(LNctr_70,8)," ","0")

	LS_tp75	=	"75"
	LS_ct75	=	CHRTRAN(STR(LNctr_75,8)," ","0")

	LNctr_90=	1
	LS_tp90	=	"90"
	LS_ct90	=	CHRTRAN(STR(LNctr_90,8)," ","0")


	LSspaco =   SPACE(27)

	LS_ctgr	=	LNctr_10+LNctr_11+LNctr_50+LNctr_53+LNctr_54+;
				LNctr_60+LNctr_70+LNctr_75+LNctr_90

	LS_ctgr	=	CHRTRAN(STR(LS_ctgr,8)," ","0")

	*******************************************************
	LStmp1	= LStipo+LScgc+LSinsc+;
			  LS_tp50+LS_ct50+LS_tp53+LS_ct53+LS_tp54+LS_ct54+;
			  LS_tp60+LS_ct60+LS_tp70+LS_ct70+LS_tp75+LS_ct75+;
			  LSspaco+LS_ctgr+"1"

	=FPUT(LNctrl,LStmp1,126)
RETURN


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _44A0MRJ6Z           LFconv_3199 VALID                  ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC220,     Record Number:   80   ╨
*       ╨ Variable:            LFconv_3199                        ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Check Box                          ╨
*       ╨ Snippet Number:      34                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*

FUNCTION _44a0mrj6z     &&  LFconv_3199 VALID
#REGION 1
RETURN


*-------------------------------------------------------------------*

PROCEDURE ULProcCVN3199
PARAMETERS LNemp, LDper_ini, LDper_fim

	PRIVATE LSnome
	LSnome	 =	RIGHT(str(year(LDper_ini)),2)+;
				STR(MONTH(LDper_ini),2)+STR(LNemp,2)+"AG.DAT"
	LSnome	= 	"\SCGC\AGENFA\"+STRTRAN(LSnome," ","0")

	LNcontrol = FCREATE(LSnome)	
	PRIVATE LNctr_10,LNctr_11,LNctr_50,LNctr_53,LNctr_54,LNctr_60,;
			LNctr_70,LNctr_75
	STORE 0 TO LNctr_10,LNctr_11,LNctr_50,LNctr_53,LNctr_54,LNctr_60,;
			LNctr_70,LNctr_75

	=UL31R_10((LNemp),(LNcontrol),(LDper_ini),(LDper_fim),LNctr_10)
	=UL31R_11((LNemp),(LNcontrol),(LDper_ini),(LDper_fim),LNctr_11)
	=UL31R_50((LNemp),(LNcontrol),(LDper_ini),(LDper_fim),LNctr_50)
	=UL31R_53((LNemp),(LNcontrol),(LDper_ini),(LDper_fim),LNctr_53)
	=UL31R_54((LNemp),(LNcontrol),(LDper_ini),(LDper_fim),LNctr_54)
	=UL31R_60((LNemp),(LNcontrol),(LDper_ini),(LDper_fim),LNctr_60)
	=UL31R_70((LNemp),(LNcontrol),(LDper_ini),(LDper_fim),LNctr_70)
	=UL31R_75((LNemp),(LNcontrol),(LDper_ini),(LDper_fim),LNctr_75)
	=UL31R_90((LNemp),(LNcontrol),LNctr_10,LNctr_11,LNctr_50,;
				LNctr_53,LNctr_54,LNctr_60,LNctr_70,LNctr_75)
	=FCLOSE(LNcontrol)
RETURN

FUNCTION UL31R_10
	PARAMETERS LNemp, LNctrl, LDper_ini, LDper_fim, LN_Ctr

	SELE empresa
	SET ORDER TO TAG empresa
	SEEK LNemp
	
	LStipo  		= "10"
	LScgc			= CHRTRAN(STR(empresa.cgc,14)," ","0")
	LSinsc			= CHRTRAN(empresa.inscricao," ","")
	LSinsc			= CHRTRAN(LSinsc,".","")
	LSinsc			= CHRTRAN(LSinsc,"/","")
	LSinsc			= CHRTRAN(LSinsc,"-","")
	LSinsc			= LEFT(LSinsc+space(14),14)
	LSnome			= LEFT(empresa.nome,35)
	LSmunicipio		= LEFT(empresa.cidade,30)
	LSestado		= empresa.estado
	LSfax			= REPLICATE("0",10)
	LSdtini			= STR(YEAR(LDper_ini),4)+;
					  STR(MONTH(LDper_ini),2)+;
					  STR(DAY(LDper_ini),2)
	LSdtini			= CHRTRAN(LSdtini," ","0")				
	LSdtfim			= STR(YEAR(LDper_fim),4)+;
					  STR(MONTH(LDper_fim),2)+;
					  STR(DAY(LDper_fim),2)
	LSdtfim			= CHRTRAN(LSdtfim," ","0")				
	LScod_id		= "13"
	LScod_f			= "1"
	

	LStmp1 			=LStipo+LScgc+LSinsc+LSnome+;
					 LSmunicipio+LSestado+LSfax+;
					 LSdtini+LSdtfim+LScod_id+LScod_f

	=FPUT(LNctrl,LStmp1,126)
	LN_Ctr	=	LN_Ctr + 1
RETURN

FUNCTION UL31R_11
	PARAMETERS LNemp, LNctrl, LDper_ini, LDper_fim, LN_Ctr

	SELE empresa
	SET ORDER TO TAG empresa
	SEEK LNemp
	
	LStipo  		= "11"
	LSlogr			= LEFT(empresa.endereco,34)

	IF TYPE("empresa.num") = "U"
		LSnum			= "00001"
	ELSE
		LSnum			= CHRTRAN(STR(empresa.num,5)," ","0")
	ENDIF
	LScompl			= SPACE(22)
	LSbairro		= LEFT(empresa.bairro,15)
	LScep			= LEFT(CHRTRAN(empresa.cep," ","0"),8)
	LScontato		= LEFT(empresa.contato,28)

	LSfone			= CHRTRAN(UPPER(empresa.fone),"X","0")
	LSfone			= CHRTRAN(LSfone,"(","")
	LSfone			= CHRTRAN(LSfone,")","")
	LSfone			= CHRTRAN(LSfone,"-","")
	LSfone			= CHRTRAN(LSfone," ","")
	LSfone			= REPL("0",12-LEN(LSfone))+LSfone

	LSfone			= LEFT(LSfone,12)

	LStmp1 			= LStipo+LSlogr+LSnum+LScompl+LSbairro+LScep+;
					  LScontato+LSfone	
	=FPUT(LNctrl,LStmp1,126)
	LN_Ctr	=	LN_Ctr + 1
RETURN

FUNCTION UL31R_50
	PARAMETERS LNemp, LNctrl, LDper_ini, LDper_fim, LN_Ctr

	*-------------------------------------------------------------------*
	*	NOTAS DE SAIDA
	*-------------------------------------------------------------------*
	
	SELECT LIVROSAI
	SET ORDER TO TAG data
	SET NEAR ON
	SEEK STR(LNemp,3)+DTOS(LDper_ini)
	SET NEAR OFF

	LStipo  		= "50"

	DO WHILE !EOF()
		LSmsg = "Saidas (50) "+;
				 	STR(LIVROSAI.empresa,3)+"-"+DTOC(LIVROSAI.DATA)+;
					STR(LIVROSAI.NOTA,6)
		WAIT WINDOW LSmsg NOWAIT

		*----------------------------------------------------------*
		* PROCESSA SOMENTE NOTA EFETIVAS EVITANDO NOTAS DE ENTRADA
		* E COPIAS DE CUPOM
		*----------------------------------------------------------*

		*---------------------------------------------------------
		* PROCESSA SOMENTE NOTA EFETIVAS EVITANDO OS RESUMOS DE CUPONS
		* POR DATA GERADOS
		*---------------------------------------------------------
		*--> EVITA  REGISTROS RESUMO DOS CUPONS
		* REGISTROS SAO GERADOS QUANDO PROCESSO O ARQUIVO LIVROSAI
		* RESUMINDO OS CUPONS POR DATA E ALIQUOTA
		*---------------------------------------------------------
		*---------------------------------------------------------
		IF LIVROSAI.NOTA >= 2000000	
			SKIP
			LOOP
		ENDIF


		*---------------------------------------------------------
		*--> A VERSAO 3.2 DO SINTEGRA PASSOU A ENTEDER A NOTA DE
		*   DEVOLUCAO EMITIDA PELA EMPRESA PARA CLIENTES QUE DEVOLVEM
		*   MERCADORIA E NAO POSSUEM NOTA TIPO = "ENT" COMO SENDO
		*   DUPLICADA QUANDO ░ FEITO A RELACAO DA DEVOLUCAO NAS NOTAS
		*   DE ENTRADA
		*---------------------------------------------------------

		IF LIVROSAI.TIPO = "ENT"
			SKIP
			LOOP
		ENDIF
		*----------------------------------------------------------*
		LScgc	=  CHRTRAN(STR(LIVROSAI.favorecido,14)," ","0")
		*----------------------------------------------------------*
		*     Quando a inscricao que estiver na nota for invalida
		*  o prog buscara a inscricao do cadastro de clientes
		*  pode ocorrer que no momento da emissao da nota a inscricao
		*  estivesse errada.
		*----------------------------------------------------------*

		LSinsc	=  ALLTRIM(LIVROSAI.inscricao)
		LSuf	=  LIVROSAI.uf

		IF !UPInscricao(LSuf,LSinsc,1,0,0,'')
			IF LIVROSAI.favorecido = 0
				LSinsc	=  "ISENTO"
			ELSE
				SELE clientes
				SET ORDER TO TAG cliente
				SEEK LIVROSAI.favorecido
				IF  FOUND() AND;
					UPInscricao(clientes.estado,clientes.INSCRICAO,1,0,0,'')
					&& CFOs Inciados em 5 o estado deve ser igual ao do
					&& informante
					DO CASE
						CASE LEFT(LIVROSAI.CFO,1) = "5" ;
							AND clientes.estado = empresa.estado
							LSinsc	=  ALLTRIM(clientes.inscricao)
							LSuf	=	clientes.estado
						CASE LEFT(LIVROSAI.CFO,1) <> "5" ;
							AND clientes.estado <> empresa.estado
							LSinsc	=  ALLTRIM(clientes.inscricao)
							LSuf	=	clientes.estado
					ENDCASE
				ELSE
					LSinsc	=  ALLTRIM(LIVROSAI.inscricao)
				ENDIF		
			ENDIF
		ENDIF
		SELE LIVROSAI
		*----------------------------------------------------------*
		IF "ISENTO" $ UPPER(LSinsc)
			LSinsc	=  "ISENTO"
			LScgc	=  CHRTRAN(STR(0,14)," ","0")
		ELSE
			LSinsc	=  CHRTRAN(LSinsc,".","")
			LSinsc	=  CHRTRAN(LSinsc,"/","")
			LSinsc	=  CHRTRAN(LSinsc,"-","")
			LSinsc	=  CHRTRAN(LSinsc,"(","")
			LSinsc	=  CHRTRAN(LSinsc,")","")
		ENDIF			
		LSinsc			= LEFT(LSinsc+space(14),14)
		IF LIVROSAI.TP_PESSOA = 1
			LScgc	=  CHRTRAN(STR(0,14)," ","0")
		ENDIF			



		LSdtemi		=	STR(YEAR(LIVROSAI.data),4)+;
						STR(MONTH(LIVROSAI.data),2)+;
						STR(DAY(LIVROSAI.data),2)
		LSdtemi		=   CHRTRAN(LSdtemi," ","0")						
		LSmodelo 	=   "01"

*		LSserie		=   "  1"
*		LSsubserie  = 	"  "

		LSserie		=   "  "+LIVROSAI.serie
		LSsubserie  = 	"  "


		LSnumero 	= 	CHRTRAN(STR(LIVROSAI.NOTA,7)," ","0")
		LSnumero 	= 	SUBS(LSnumero,2,6)

		LScfo		=   CHRTRAN(LIVROSAI.cfo,".","")						
		IF EMPTY(LIVROSAI.cfo)
			SELE TIPOOPER
			SET ORDER TO TAG TIPO
			SEEK "S"+LIVROSAI.tipo
			IF FOUND()
				LScfo	= tipooper.cfo
			ENDIF
		ELSE	
			LScfo		=   CHRTRAN(LIVROSAI.cfo,".","")						
		ENDIF
		LScfo		=   CHRTRAN(LScfo,".","")						

		SELE LIVROSAI

		*-----------------------------------------------------------------*
		*      Quando o registro se referenciar a uma copia de cupom
		* em NF os valores sao zerados devido aos mesmos serem relacio-
		* nados no registro tipo 61
		*-----------------------------------------------------------------*


		IF LIVROSAI.CUPOM = 0   && PORQUE SE <> 0 E NOTA REFERENTE A CUPOM
			LSvalor		=	str(LIVROSAI.total_nota,14,2)						
			LSbase_icms	=	str(LIVROSAI.base_icms,14,2)						
			LSvlr_icms	=	ROUND(base_icms *  aliq_icms / 100,2)
			LSbase_isent=	str(LIVROSAI.base_isent,14,2)						
			LSbase_outr	=	str(LIVROSAI.base_outr,14,2)						
			LSaliq_icms	=	str(LIVROSAI.aliq_icms,5,2)						
		ELSE
			LSvalor		=	str(0,14,2)						
			LSbase_icms	=	str(0,14,2)						
			LSvlr_icms	=	ROUND(0,2)
			LSbase_isent=	str(0,14,2)						
			LSbase_outr	=	str(0,14,2)						
			LSaliq_icms	=	str(LIVROSAI.aliq_icms,5,2)						
		ENDIF	

		LSvalor		=   CHRTRAN(LSvalor," ","0")						
		LSvalor		=   CHRTRAN(LSvalor,",","")						
		LSvalor		=   CHRTRAN(LSvalor,".","")						


		LSbase_icms	=   CHRTRAN(LSbase_icms," ","0")						
		LSbase_icms	=   CHRTRAN(LSbase_icms,",","")						
		LSbase_icms	=   CHRTRAN(LSbase_icms,".","")						


		LSvlr_icms	=	STR(LSvlr_icms,14,2)
		LSvlr_icms	=   CHRTRAN(LSvlr_icms," ","0")						
		LSvlr_icms	=   CHRTRAN(LSvlr_icms,",","")						
		LSvlr_icms	=   CHRTRAN(LSvlr_icms,".","")						


		LSbase_isent=   CHRTRAN(LSbase_isent," ","0")						
		LSbase_isent=   CHRTRAN(LSbase_isent,",","")						
		LSbase_isent=   CHRTRAN(LSbase_isent,".","")						
		

		LSbase_outr	=   CHRTRAN(LSbase_outr," ","0")						
		LSbase_outr	=   CHRTRAN(LSbase_outr,",","")						
		LSbase_outr	=   CHRTRAN(LSbase_outr,".","")						


		LSaliq_icms	=   CHRTRAN(LSaliq_icms," ","0")						
		LSaliq_icms	=   CHRTRAN(LSaliq_icms,",","")						
		LSaliq_icms	=   CHRTRAN(LSaliq_icms,".","")						

		IF LIVROSAI.status = 2
			LSstatus = "S"
		ELSE
			LSstatus = "N"
		ENDIF		
		************************************************************
		LStmp1		=	LStipo+LScgc+LSinsc+LSdtemi+LSuf+LSmodelo+;
						LSserie+LSsubserie+LSnumero+LScfo+LSvalor+;
						LSbase_icms+LSvlr_icms+LSbase_isent+;
						LSbase_outr+LSaliq_icms+LSstatus
		************************************************************
		=FPUT(LNctrl,LStmp1,126)
		LN_Ctr	=	LN_Ctr + 1
		SKIP
	ENDDO

	*-------------------------------------------------------------------*
	*	NOTAS DE ENTRADA
	*-------------------------------------------------------------------*

	SELECT LIVROENT
	SET ORDER TO TAG rldtentr
	SET NEAR ON
	SEEK STR(LNemp,3)+DTOS(LDper_ini)
	SET NEAR OFF

	LStipo  		= "50"

	DO WHILE !EOF()
		LSmsg = "Entradas (50) "+;
				 	STR(LIVROENT.empresa,3)+"-"+DTOC(LIVROENT.DATA)+;
					STR(LIVROENT.NOTA,6)
		WAIT WINDOW LSmsg NOWAIT

		IF LIVROENT.ch_produ = "9"  && CONHECIMENTO DE TRANSPORTE
			SKIP
			LOOP
		ENDIF

		*-----------------------------------------------------------*
		SELE fornece
		SET ORDER TO TAG codigo
		SEEK LIVROENT.codforn

		IF FOUND()
			LSinsc	=  ALLTRIM(fornece.inscricao)
			LScgc	=  CHRTRAN(STR(fornece.cgc,14)," ","0")
		ELSE
			LSinsc	=  ALLTRIM(LIVROENT.inscricao)
			LScgc	=  CHRTRAN(STR(LIVROENT.favorecido,14)," ","0")
		ENDIF

		IF "ISENTO" $ UPPER(LSinsc)
			LSinsc	=  "ISENTO"
			LScgc	=  CHRTRAN(STR(0,14)," ","0")
		ELSE
			LSinsc	=  CHRTRAN(LSinsc,".","")
			LSinsc	=  CHRTRAN(LSinsc,"/","")
			LSinsc	=  CHRTRAN(LSinsc,"-","")
			LSinsc	=  CHRTRAN(LSinsc,"(","")
			LSinsc	=  CHRTRAN(LSinsc,")","")
		ENDIF			
		LSinsc			= LEFT(LSinsc+space(14),14)
		*-----------------------------------------------------------*
		SELECT LIVROENT

		LSdtemi		=	STR(YEAR(LIVROENT.data),4)+;
						STR(MONTH(LIVROENT.data),2)+;
						STR(DAY(LIVROENT.data),2)
		LSdtemi		=   CHRTRAN(LSdtemi," ","0")						
		LSuf		=	LIVROENT.uf
		LSmodelo 	=   "01"
		LSserie		=   "  "+LIVROENT.serie
		LSsubserie  = 	"  "
		LSnumero 	= 	CHRTRAN(STR(LIVROENT.NOTA,6)," ","0")

		IF EMPTY(LIVROENT.cfo)
			SELE TIPOOPER
			SET ORDER TO TAG TIPO
			SEEK "E"+LIVROENT.tipo
			IF FOUND()
				LScfo	= tipooper.cfo
			ENDIF
		ELSE	
			LScfo		=   CHRTRAN(LIVROENT.cfo,".","")						
		ENDIF
		LScfo		=   CHRTRAN(LScfo,".","")						
		SELE LIVROENT

		LSvalor		=	str(LIVROENT.total_nota,14,2)						
		LSvalor		=   CHRTRAN(LSvalor," ","0")						
		LSvalor		=   CHRTRAN(LSvalor,",","")						
		LSvalor		=   CHRTRAN(LSvalor,".","")						

		LSbase_icms	=   IIF(LIVROENT.base_subs > 0, 0, LIVROENT.base_icms)

		LSbase_icms	=	str(LSbase_icms,14,2)						
		LSbase_icms	=   CHRTRAN(LSbase_icms," ","0")						
		LSbase_icms	=   CHRTRAN(LSbase_icms,",","")						
		LSbase_icms	=   CHRTRAN(LSbase_icms,".","")						

		LSvlr_icms	=	IIF(LIVROENT.base_subs > 0, 0, LIVROENT.vlr_icms)

		LSvlr_icms	=	str(LSvlr_icms,14,2)						
		LSvlr_icms	=   CHRTRAN(LSvlr_icms," ","0")						
		LSvlr_icms	=   CHRTRAN(LSvlr_icms,",","")						
		LSvlr_icms	=   CHRTRAN(LSvlr_icms,".","")						

		LSbase_isent=	str(LIVROENT.base_isent,14,2)						
		LSbase_isent=   CHRTRAN(LSbase_isent," ","0")						
		LSbase_isent=   CHRTRAN(LSbase_isent,",","")						
		LSbase_isent=   CHRTRAN(LSbase_isent,".","")						
		
		LSbase_outr	=	str(LIVROENT.base_outr,14,2)						
		LSbase_outr	=   CHRTRAN(LSbase_outr," ","0")						
		LSbase_outr	=   CHRTRAN(LSbase_outr,",","")						
		LSbase_outr	=   CHRTRAN(LSbase_outr,".","")						

		LSaliq_icms	=	str(LIVROENT.aliq_icms,5,2)						
		LSaliq_icms	=   CHRTRAN(LSaliq_icms," ","0")						
		LSaliq_icms	=   CHRTRAN(LSaliq_icms,",","")						
		LSaliq_icms	=   CHRTRAN(LSaliq_icms,".","")						

		LSstatus = "N"
		************************************************************
		LStmp1		=	LStipo+LScgc+LSinsc+LSdtemi+LSuf+LSmodelo+;
						LSserie+LSsubserie+LSnumero+LScfo+LSvalor+;
						LSbase_icms+LSvlr_icms+LSbase_isent+;
						LSbase_outr+LSaliq_icms+LSstatus
		************************************************************
		=FPUT(LNctrl,LStmp1,126)
		LN_Ctr	=	LN_Ctr + 1
		SKIP
	ENDDO
RETURN


FUNCTION UL31R_53
	PARAMETERS LNemp, LNctrl, LDper_ini, LDper_fim, LN_Ctr

	*-------------------------------------------------------------------*
	*	NOTAS DE SAIDA
	*-------------------------------------------------------------------*
	
	SELECT LIVROSAI
	SET ORDER TO TAG data
	SET NEAR ON
	SEEK STR(LNemp,3)+DTOS(LDper_ini)
	SET NEAR OFF

	LStipo  		= "53"
	DO WHILE !EOF()
		LSmsg = "Subst.Saida (53) "+;
				 	STR(LIVROSAI.empresa,3)+"-"+DTOC(LIVROSAI.DATA)+;
					STR(LIVROSAI.NOTA,6)
		WAIT WINDOW LSmsg NOWAIT

		IF LIVROSAI.icms_subs = 0 OR  LEFT(LIVROSAI.operacao,1) <> "S"
			SKIP
			LOOP
		ENDIF

		*---------------------------------------------------------
		*--> EVITA  REGISTROS RESUMO DOS CUPONS
		* REGISTROS SAO GERADOS QUANDO PROCESSO O ARQUIVO LIVROSAI
		* RESUMINDO OS CUPONS POR DATA E ALIQUOTA
		*---------------------------------------------------------
		*---------------------------------------------------------
		IF LIVROSAI.NOTA >= 2000000	
			SKIP
			LOOP
		ENDIF

		*----------------------------------------------------------*
		LScgc	=  CHRTRAN(STR(LIVROSAI.favorecido,14)," ","0")

		LSinsc	=  ALLTRIM(LIVROSAI.inscricao)
		LSuf	=	LIVROSAI.uf
		IF !UPInscricao(LSuf,LSinsc,1,0,0,'')
			IF LIVROSAI.favorecido = 0
				LSinsc	=  "ISENTO"
			ELSE
				SELE clientes
				SET ORDER TO TAG cliente
				SEEK LIVROSAI.favorecido
				IF  FOUND() AND ;
				   UPInscricao(clientes.estado,clientes.INSCRICAO,1,0,0,'')
					&& CFOs Inciados em 5 o estado deve ser igual ao do
					&& informante
					DO CASE
						CASE LEFT(LIVROSAI.CFO,1) = "5" ;
							AND clientes.estado = empresa.estado
							LSinsc	=  ALLTRIM(clientes.inscricao)
							LSuf	=	clientes.estado
						CASE LEFT(LIVROSAI.CFO,1) <> "5" ;
							AND clientes.estado <> empresa.estado
							LSinsc	=  ALLTRIM(clientes.inscricao)
							LSuf	=	clientes.estado
					ENDCASE
				ELSE
					LSinsc	=  ALLTRIM(LIVROSAI.inscricao)
				ENDIF		
			ENDIF
		ENDIF
		SELE LIVROSAI

		IF "ISENTO" $ UPPER(LSinsc)
			LSinsc	=  "ISENTO"
			LScgc	=  CHRTRAN(STR(0,14)," ","0")
		ELSE
			LSinsc	=  CHRTRAN(LSinsc,".","")
			LSinsc	=  CHRTRAN(LSinsc,"/","")
			LSinsc	=  CHRTRAN(LSinsc,"-","")
			LSinsc	=  CHRTRAN(LSinsc,"(","")
			LSinsc	=  CHRTRAN(LSinsc,")","")
		ENDIF			
		IF LIVROSAI.TP_PESSOA = 1
			LScgc	=  CHRTRAN(STR(0,14)," ","0")
		ENDIF			


		LSinsc			= LEFT(LSinsc+space(14),14)
		LSdtemi		=	STR(YEAR(LIVROSAI.data),4)+;
						STR(MONTH(LIVROSAI.data),2)+;
						STR(DAY(LIVROSAI.data),2)
		LSdtemi		=   CHRTRAN(LSdtemi," ","0")						
		LSmodelo 	=   "01"
	*	LSserie		=   "  1"
	*	LSsubserie  = 	"  "

		LSserie		=   "  "+LIVROSAI.serie
		LSsubserie  = 	"  "


		LSnumero 	= 	CHRTRAN(STR(LIVROSAI.NOTA,7)," ","0")
		LSnumero 	= 	SUBS(LSnumero,2,6)

		LScfo		=   CHRTRAN(LIVROSAI.cfo,".","")						
		IF EMPTY(LIVROSAI.cfo)
			SELE TIPOOPER
			SET ORDER TO TAG TIPO
			SEEK "S"+LIVROSAI.tipo
			IF FOUND()
				LScfo	= tipooper.cfo
			ENDIF
		ELSE	
			LScfo		=   CHRTRAN(LIVROSAI.cfo,".","")						
		ENDIF
		LScfo		=   CHRTRAN(LScfo,".","")						
		SELE LIVROSAI


		*-- > Base de Substituicao
		LSbase_icms	=	str(LIVROSAI.base_subs,14,2)						
		LSbase_icms	=   CHRTRAN(LSbase_icms," ","0")						
		LSbase_icms	=   CHRTRAN(LSbase_icms,",","")						
		LSbase_icms	=   CHRTRAN(LSbase_icms,".","")						

		*-- > ICMS de Substituicao
		LSvlr_icms	=	STR(LIVROSAI.icms_subs,14,2)
		LSvlr_icms	=   CHRTRAN(LSvlr_icms," ","0")						
		LSvlr_icms	=   CHRTRAN(LSvlr_icms,",","")						
		LSvlr_icms	=   CHRTRAN(LSvlr_icms,".","")						

		*--- > Despesas acessorias
		LSdespesa=	LIVROSAI.vlrfrete+LIVROSAI.vlrseguro+LIVROSAI.vlrdespes
		LSdespesa=	 str(LSdespesa,14,2)						
		LSdespesa=   CHRTRAN(LSdespesa," ","0")						
		LSdespesa=   CHRTRAN(LSdespesa,",","")						
		LSdespesa=   CHRTRAN(LSdespesa,".","")						
		
		IF LIVROSAI.status = 2
			LSstatus = "S"
		ELSE
			LSstatus = "N"
		ENDIF		

		LSfiler  	=  space(30)
		************************************************************
		LStmp1		=	LStipo+LScgc+LSinsc+LSdtemi+LSuf+LSmodelo+;
						LSserie+LSsubserie+LSnumero+LScfo+;
						LSbase_icms+LSvlr_icms+LSdespesa+;
						LSstatus+LSfiler
		************************************************************
		=FPUT(LNctrl,LStmp1,126)
		LN_Ctr	=	LN_Ctr + 1
		SKIP
	ENDDO

	*-------------------------------------------------------------------*
	*	NOTAS DE ENTRADA
	*-------------------------------------------------------------------*

	SELECT LIVROENT
	SET ORDER TO TAG rldtentr
	SET NEAR ON
	SEEK STR(LNemp,3)+DTOS(LDper_ini)
	SET NEAR OFF

	LStipo  		= "53"
	DO WHILE !EOF()
		LSmsg = "Subst.Entrada (53) "+;
				 	STR(LIVROENT.empresa,3)+"-"+DTOC(LIVROENT.DATA)+;
					STR(LIVROENT.NOTA,6)
		WAIT WINDOW LSmsg NOWAIT

		IF LIVROENT.icms_subs = 0
			SKIP
			LOOP
		ENDIF

		IF LIVROENT.ch_produ = "9"  && CONHECIMENTO DE TRANSPORTE
			SKIP
			LOOP
		ENDIF

		*-----------------------------------------------------------*
		SELE fornece
		SET ORDER TO TAG codigo
		SEEK LIVROENT.codforn
		IF FOUND()
			LSinsc	=  ALLTRIM(fornece.inscricao)
			LScgc	=  CHRTRAN(STR(fornece.cgc,14)," ","0")
		ELSE
			LSinsc	=  ALLTRIM(LIVROENT.inscricao)
			LScgc	=  CHRTRAN(STR(LIVROENT.favorecido,14)," ","0")
		ENDIF

		IF "ISENTO" $ UPPER(LSinsc)
			LSinsc	=  "ISENTO"
			LScgc	=  CHRTRAN(STR(0,14)," ","0")
		ELSE
			LSinsc	=  CHRTRAN(LSinsc,".","")
			LSinsc	=  CHRTRAN(LSinsc,"/","")
			LSinsc	=  CHRTRAN(LSinsc,"-","")
			LSinsc	=  CHRTRAN(LSinsc,"(","")
			LSinsc	=  CHRTRAN(LSinsc,")","")
		ENDIF			
		LSinsc		= LEFT(LSinsc+space(14),14)
		SELECT LIVROENT

		LSdtemi		=	STR(YEAR(LIVROENT.data),4)+;
						STR(MONTH(LIVROENT.data),2)+;
						STR(DAY(LIVROENT.data),2)
		LSdtemi		=   CHRTRAN(LSdtemi," ","0")						

		LSuf		=	LIVROENT.uf
		LSmodelo 	=   "01"
*		LSserie		=   "  1"
*		LSsubserie  = 	"  "

		LSserie		=   "  "+LIVROENT.serie
		LSsubserie  = 	"  "

		LSnumero 	= 	CHRTRAN(STR(LIVROENT.NOTA,6)," ","0")
		IF EMPTY(LIVROENT.cfo)
			SELE TIPOOPER
			SET ORDER TO TAG TIPO
			SEEK "E"+LIVROENT.tipo
			IF FOUND()
				LScfo	= tipooper.cfo
			ENDIF
		ELSE	
			LScfo		=   CHRTRAN(LIVROENT.cfo,".","")						
		ENDIF
		LScfo		=   CHRTRAN(LScfo,".","")						
		SELE LIVROENT


		*-- > Base de Substituicao
		LSbase_icms	=	str(LIVROENT.base_subs,14,2)						
		LSbase_icms	=   CHRTRAN(LSbase_icms," ","0")						
		LSbase_icms	=   CHRTRAN(LSbase_icms,",","")						
		LSbase_icms	=   CHRTRAN(LSbase_icms,".","")						

		*-- > ICMS de Substituicao
		LSvlr_icms	=	STR(LIVROENT.icms_subs,14,2)
		LSvlr_icms	=   CHRTRAN(LSvlr_icms," ","0")						
		LSvlr_icms	=   CHRTRAN(LSvlr_icms,",","")						
		LSvlr_icms	=   CHRTRAN(LSvlr_icms,".","")						

		*--- > Despesas acessorias
		LSdespesa=	LIVROENT.vlrfrete+LIVROENT.vlrseguro+LIVROENT.vlrdespes
		LSdespesa=	 str(LSdespesa,14,2)						
		LSdespesa=   CHRTRAN(LSdespesa," ","0")						
		LSdespesa=   CHRTRAN(LSdespesa,",","")						
		LSdespesa=   CHRTRAN(LSdespesa,".","")						
		

		LSstatus = "N"
		LSfiler  	=  space(30)
		************************************************************
		LStmp1		=	LStipo+LScgc+LSinsc+LSdtemi+LSuf+LSmodelo+;
						LSserie+LSsubserie+LSnumero+LScfo+;
						LSbase_icms+LSvlr_icms+LSdespesa+;
						LSstatus+LSfiler
		************************************************************
		=FPUT(LNctrl,LStmp1,126)
		LN_Ctr	=	LN_Ctr + 1
		SKIP
	ENDDO

RETURN

*****************************************************************
*  REGISTRO DE ITENS - 54 - ENTRADA E SAIDA
*****************************************************************

FUNCTION UL31R_54
	PARAMETERS LNemp, LNctrl, LDper_ini, LDper_fim, LN_Ctr
	PRIVATE LNctrOrdem

	*-------------------------------------------------------------------*
	*	ITENS DAS NOTAS DE SAIDA
	*-------------------------------------------------------------------*
	
	SELECT LIVROSAI
	SET ORDER TO TAG data
	SET NEAR ON
	SEEK STR(LNemp,3)+DTOS(LDper_ini)
	SET NEAR OFF

	DO WHILE !EOF()
	
		LSmsg = "Produtos Saida (54) "+;
				 	STR(LIVROSAI.empresa,3)+"-"+DTOC(LIVROSAI.DATA)+;
					STR(LIVROSAI.NOTA,6)
		WAIT WINDOW LSmsg NOWAIT

		LStipo  	=   "54"

		*---------------------------------------------------------
		*--> A VERSAO 3.2 DO SINTEGRA PASSOU A ENTEDER A NOTA DE
		*   DEVOLUCAO EMITIDA PELA EMPRESA PARA CLIENTES QUE DEVOLVEM
		*   MERCADORIA E NAO POSSUEM NOTA TIPO = "ENT" COMO SENDO
		*   DUPLICADA QUANDO ░ FEITO A RELACAO DA DEVOLUCAO NAS NOTAS
		*   DE ENTRADA
		*---------------------------------------------------------

		IF LIVROSAI.TIPO = "ENT"
			SKIP
			LOOP
		ENDIF
		
		*----------------------------------------------------------*
		LScgc	=  CHRTRAN(STR(LIVROSAI.favorecido,14)," ","0")
		*----------------------------------------------------------*

		LSinsc	=  ALLTRIM(LIVROSAI.inscricao)
		LSuf	=  LIVROSAI.uf

		IF !UPInscricao(LSuf,LSinsc,1,0,0,'')
			IF LIVROSAI.favorecido = 0
				LSinsc	=  "ISENTO"
			ELSE
				SELE clientes
				SET ORDER TO TAG cliente
				SEEK LIVROSAI.favorecido
				IF  FOUND() AND;
					UPInscricao(clientes.estado,clientes.INSCRICAO,1,0,0,'')
					&& CFOs Inciados em 5 o estado deve ser igual ao do
					&& informante
					DO CASE
						CASE LEFT(LIVROSAI.CFO,1) = "5" ;
							AND clientes.estado = empresa.estado
							LSinsc	=  ALLTRIM(clientes.inscricao)
							LSuf	=	clientes.estado
						CASE LEFT(LIVROSAI.CFO,1) <> "5" ;
							AND clientes.estado <> empresa.estado
							LSinsc	=  ALLTRIM(clientes.inscricao)
							LSuf	=	clientes.estado
					ENDCASE
				ELSE
					LSinsc	=  ALLTRIM(LIVROSAI.inscricao)
				ENDIF		
			ENDIF
		ENDIF

		SELE LIVROSAI
		IF "ISENTO" $ UPPER(LSinsc)
			LScgc	=  CHRTRAN(STR(0,14)," ","0")
		ENDIF			
		IF LIVROSAI.TP_PESSOA = 1
			LScgc	=  CHRTRAN(STR(0,14)," ","0")
		ENDIF			
			
		LSmodelo 	=   "01"
		LSserie		=   "  1"
		LSsubserie  = 	"  "

		LSserie		=   "  "+LIVROSAI.serie
		LSsubserie  = 	"  "


		LSnumero 	= 	CHRTRAN(STR(LIVROSAI.NOTA,7)," ","0")
		LSnumero 	= 	SUBS(LSnumero,2,6)
		LScfo		=   CHRTRAN(LIVROSAI.cfo,".","")						
		IF EMPTY(LIVROSAI.cfo)
			SELE TIPOOPER
			SET ORDER TO TAG TIPO
			SEEK "S"+LIVROSAI.tipo
			IF FOUND()
				LScfo	= tipooper.cfo
			ENDIF
		ELSE	
			LScfo		=   CHRTRAN(LIVROSAI.cfo,".","")						
		ENDIF
		LScfo		=   CHRTRAN(LScfo,".","")						

		SELE ITEMMOV
		SET ORDER TO TAG itensnota
		SET NEAR ON
		SEEK STR(LNemp,3)+"S"+STR(LIVROSAI.NOTA,7)
		SET NEAR OFF
		LNctrordem = 1		&& INDICAR ORDEM DO PRODUTO NA NOTA

		DO WHILE !EOF() AND LIVROSAI.NOTA = itemmov.nota ;
						AND LEFT(itemmov.operacao,1) = "S"
			*--------------------------------------------------*
			* 	Podem ser identificadas itens de sadida com
			* numero de nota conincidenter  com itens de uma
			*	SCA por isso e feito a verificacao do tipo
			*---------------------------------------------------*
			IF 	LIVROSAI.TIPO 	 <> itemmov.tipo
				SKIP
				LOOP
			ENDIF
			*---------------------------------------------------*
			DO ULitem_75  && REGISTRAR ITEM COMERCIALIZADO
			*---------------------------------------------------*			
			SELE ITEMMOV
	*		IF FOUND("TIPOOPER")
	*			IF itemmov.tp_mercad = 2 AND !EMPTY(tipooper.cfosubs)
	*				LScfo	= tipooper.cfosubs
	*			ELSE
	*				LScfo	= tipooper.cfo
	*			ENDIF
	*		ELSE
	*			LScfo	= tipooper.cfo
	*		ENDIF
	*		LScfo		=   CHRTRAN(LScfo,".","")	

			LSordem = CHRTRAN(STR(LNctrordem,3)," ","0")
			LNctrordem	= LNctrordem + 1
			LScodigo=  LEFT(itemmov.codigo,10)+space(4)

			LSqtde	= STR(itemmov.qtde,14,3)			
			LSqtde  = CHRTRAN(LSqtde," ","0")
			LSqtde  = CHRTRAN(LSqtde,",","")
			LSqtde  = CHRTRAN(LSqtde,".","")

			LSvalor	= STR(itemmov.vlrvenda,13,2)			
			LSvalor = CHRTRAN(LSvalor," ","0")
			LSvalor = CHRTRAN(LSvalor,",","")
			LSvalor = CHRTRAN(LSvalor,".","")

			LSdesconto	= STR(0,13,2)			
			LSdesconto  = CHRTRAN(LSdesconto," ","0")
			LSdesconto  = CHRTRAN(LSdesconto,",","")
			LSdesconto  = CHRTRAN(LSdesconto,".","")

			LSbase_icms = STR(itemmov.base_calc,13,2)			
			LSbase_icms = CHRTRAN(LSbase_icms," ","0")
			LSbase_icms = CHRTRAN(LSbase_icms,",","")
			LSbase_icms = CHRTRAN(LSbase_icms,".","")

			LSbase_subs = (itemmov.base_calc*itemmov.iva)
			LSbase_subs = STR(LSbase_subs,13,2)			
			LSbase_subs = CHRTRAN(LSbase_subs," ","0")
			LSbase_subs = CHRTRAN(LSbase_subs,",","")
			LSbase_subs = CHRTRAN(LSbase_subs,".","")

			LSvlripi	= STR(0,13,2)			
			LSvlripi	= CHRTRAN(LSvlripi," ","0")
			LSvlripi 	= CHRTRAN(LSvlripi,",","")
			LSvlripi 	= CHRTRAN(LSvlripi,".","")

			LSaliq_icms	=	str(itemmov.aliq_icms,5,2)						
			LSaliq_icms	=   CHRTRAN(LSaliq_icms," ","0")						
			LSaliq_icms	=   CHRTRAN(LSaliq_icms,",","")						
			LSaliq_icms	=   CHRTRAN(LSaliq_icms,".","")						
			
			*******************************************************
			LStmp1		= LStipo+LScgc+LSmodelo+LSserie+;
						  LSsubserie+LSnumero+LScfo+LSordem+;
						  LScodigo+LSqtde+LSvalor+LSdesconto+LSbase_icms+;
						  LSbase_subs+LSvlripi+LSaliq_icms
			=FPUT(LNctrl,LStmp1,126)
			LN_Ctr	=	LN_Ctr + 1
			*******************************************************			
			SKIP
		ENDDO
		SELECT LIVROSAI
		SKIP
	ENDDO

	*-------------------------------------------------------------------*
	*	NOTAS DE ENTRADA
	*-------------------------------------------------------------------*

	SELECT LIVROENT
	SET ORDER TO TAG rldtentr
	SET NEAR ON
	SEEK STR(LNemp,3)+DTOS(LDper_ini)
	SET NEAR OFF


	DO WHILE !EOF()
		LSmsg = "Produtos Entrada (54) "+;
				 	STR(LIVROENT.empresa,3)+"-"+DTOC(LIVROENT.DATA)+;
					STR(LIVROENT.NOTA,6)
		WAIT WINDOW LSmsg NOWAIT

		LStipo  	= "54"

		*-----------------------------------------------------------*
		SELE fornece
		SET ORDER TO TAG codigo
		SEEK LIVROENT.codforn
		IF FOUND()
			LSinsc	=  ALLTRIM(fornece.inscricao)
			LScgc	=  CHRTRAN(STR(fornece.cgc,14)," ","0")
		ELSE
			LSinsc	=  ALLTRIM(LIVROENT.inscricao)
			LScgc	=  CHRTRAN(STR(LIVROENT.favorecido,14)," ","0")
		ENDIF
		*-----------------------------------------------------------*
		SELE LIVROENT

		IF "ISENTO" $ UPPER(LSinsc)
			LScgc	=  CHRTRAN(STR(0,14)," ","0")
		ENDIF
		LSmodelo 	=   "01"
	*	LSserie		=   "  1"
	*	LSsubserie  = 	"  "

		LSserie		=   "  "+LIVROENT.serie
		LSsubserie  = 	"  "


		LSnumero 	= 	CHRTRAN(STR(LIVROENT.NOTA,6)," ","0")

		IF EMPTY(LIVROENT.cfo)
			SELE TIPOOPER
			SET ORDER TO TAG TIPO
			SEEK "E"+LIVROENT.tipo
			IF FOUND()
				LScfo	= tipooper.cfo
			ENDIF
		ELSE	
			LScfo		=   CHRTRAN(LIVROENT.cfo,".","")						
		ENDIF
		LScfo		=   CHRTRAN(LScfo,".","")						

		SELE LIVROENT

		SELE ITEMMOV
		SET ORDER TO TAG itensnota
		SET NEAR ON
		SEEK STR(LNemp,3)+"E"+STR(LIVROENT.NOTA,7)
		SET NEAR OFF
		LNctrordem	= 1

		DO WHILE !EOF() AND LIVROENT.NOTA = itemmov.nota ;
						AND LEFT(itemmov.operacao,1) = "E"
			*--------------------------------------------------*
			* 	Podem ser identificadas itens de entrada com mesmo
			* numero de nota por isso e feito a verificacao do tipo
			* e do codiforn
			*---------------------------------------------------*
			IF 	LIVROENT.TIPO 	 <> itemmov.tipo OR ;
				LIVROENT.CODFORN <> itemmov.codforn
				SKIP
				LOOP
			ENDIF
			*---------------------------------------------------*
			DO ULitem_75  && REGISTRAR ITEM COMERCIALIZADO
			*---------------------------------------------------*			

			*IF FOUND("TIPOOPER")
			*	IF itemmov.tp_mercad = 2 AND !EMPTY(tipooper.cfosubs)
			*		LScfo	= tipooper.cfosubs
			*	ELSE
			*		LScfo	= tipooper.cfo
			*	ENDIF
			*ELSE
			*	LScfo	= LIVROENT.cfo
			*ENDIF
			*LScfo		=   CHRTRAN(LScfo,".","")	

			LSordem = CHRTRAN(STR(LNctrordem,3)," ","0")
			LNctrordem	= LNctrordem + 1
			LScodigo=  LEFT(itemmov.codigo,10)+space(4)


			LSqtde	= STR(itemmov.qtde,14,3)			
			LSqtde  = CHRTRAN(LSqtde," ","0")
			LSqtde  = CHRTRAN(LSqtde,",","")
			LSqtde  = CHRTRAN(LSqtde,".","")

			LSvalor	= STR(itemmov.vlrvenda,13,2)			
			LSvalor = CHRTRAN(LSvalor," ","0")
			LSvalor = CHRTRAN(LSvalor,",","")
			LSvalor = CHRTRAN(LSvalor,".","")

			LSdesconto	= STR(0,13,2)			
			LSdesconto  = CHRTRAN(LSdesconto," ","0")
			LSdesconto  = CHRTRAN(LSdesconto,",","")
			LSdesconto  = CHRTRAN(LSdesconto,".","")

			LSbase_icms = STR(itemmov.base_calc,13,2)			
			LSbase_icms = CHRTRAN(LSbase_icms," ","0")
			LSbase_icms = CHRTRAN(LSbase_icms,",","")
			LSbase_icms = CHRTRAN(LSbase_icms,".","")

			LSbase_subs = (itemmov.base_calc+itemmov.vlripi)*itemmov.iva
			LSbase_subs = STR(LSbase_subs,13,2)			
			LSbase_subs = CHRTRAN(LSbase_subs," ","0")
			LSbase_subs = CHRTRAN(LSbase_subs,",","")
			LSbase_subs = CHRTRAN(LSbase_subs,".","")

			LSvlripi	= STR(itemmov.vlripi,13,2)			
			LSvlripi	= CHRTRAN(LSvlripi," ","0")
			LSvlripi 	= CHRTRAN(LSvlripi,",","")
			LSvlripi 	= CHRTRAN(LSvlripi,".","")

			LSaliq_icms	=	str(itemmov.aliq_icms,5,2)						
			LSaliq_icms	=   CHRTRAN(LSaliq_icms," ","0")						
			LSaliq_icms	=   CHRTRAN(LSaliq_icms,",","")						
			LSaliq_icms	=   CHRTRAN(LSaliq_icms,".","")						
			
			*******************************************************			
			LStmp1		= LStipo+LScgc+LSmodelo+LSserie+;
						  LSsubserie+LSnumero+LScfo+LSordem+;
						  LScodigo+LSqtde+LSvalor+LSdesconto+LSbase_icms+;
						  LSbase_subs+LSvlripi+LSaliq_icms
			=FPUT(LNctrl,LStmp1,126)
			LN_Ctr	=	LN_Ctr + 1
			*******************************************************			
			SKIP
		ENDDO
		SELECT LIVROENT
		SKIP
	ENDDO

RETURN

PROCEDURE ULitem_75
	*-----------------------------------------------------------*
	* REGISTRA ITENS COMERCIALIZADOS PARA REGISTRO TIPO 75
	*-----------------------------------------------------------*
	PRIVATE LSalias
	LSalias = ALIAS()

	SELE ITENSNEGOC
	SET ORDER TO TAG CODIGO
	m.codigo	= itemmov.codigo
	SEEK m.codigo
	IF !FOUND()
 		IF LEFT(m.codigo,5) <> "99999" AND EMPTY(itemmov.descricao)		
			SELE grupo
			SET ORDER TO TAG codigo
			SEEK m.codigo
			IF FOUND()
				m.descricao = grupo.descricao
			ELSE
				m.descricao = itemmov.descricao
			ENDIF
		ELSE
			m.descricao = itemmov.descricao
			IF empty(m.descricao)
				m.descricao = LEFT("SERVICO"+SPACE(25),25)
			ENDIF
		ENDIF
		*--------------------------------------------------------*
		SELE ITENSNEGOC
 		IF LEFT(m.codigo,5) <> "99999" AND EMPTY(itemmov.descricao)		
			m.classifica= itemmov.classifica
		ELSE
			m.classifica= "999999999999"
		ENDIF
		m.status	= 1
		m.cdg_tipo	= 4
		m.unidade 	= itemmov.unidade
		m.aliq_ipi	= itemmov.aliq_ipi
		m.aliq_icms	= itemmov.aliq_icms
		m.iva		= itemmov.iva
		m.tp_mercad = itemmov.tp_mercad
		=edithand("SAVE")
	ENDIF
	IF !EMPTY(LSalias) AND USED(LSalias)
		SELECT &LSalias
	ENDIF
RETURN

*****************************************************************
*  REGISTRO CUPONS  - 60 -
*****************************************************************

FUNCTION UL31R_60
	PARAMETERS LNemp, LNctrl, LDper_ini, LDper_fim, LN_Ctr

	*-------------------------------------------------------------------*

	SELECT LIVROSAI
	SET ORDER TO TAG data
	SET NEAR ON
	SEEK STR(LNemp,3)+DTOS(LDper_ini)
	SET NEAR OFF

	DO WHILE !EOF() AND LNemp = LIVROSAI.empresa ;
					AND LIVROSAI.data <= LDper_fim
		LSmsg = "Resum.Cupons (60) "+;
				 	STR(LIVROSAI.empresa,3)+"-"+DTOC(LIVROSAI.DATA)+;
					STR(LIVROSAI.NOTA,7)
		WAIT WINDOW LSmsg NOWAIT

		*---------------------------------------------------------
		*--> PROCESSAR SOMENTE O REGISTRO RESUMO DOS CUPONS
		* REGISTROS SAO GERADOS QUANDO PROCESSO O ARQUIVO LIVROSAI
		* RESUMINDO OS CUPONS POR DATA E ALIQUOTA
		*---------------------------------------------------------
		IF LIVROSAI.NOTA < 2000000	
			SKIP
			LOOP
		ENDIF

		LDtqbr		= 	LIVROSAI.data
		LSvalor		= 	0
		LSvlr_icms	= 	0
		LSnroini	=   0
		LSnrofim	=   0
		*--------------------------------------------------------------*
		=W_DEFPROC("NOTA.SPR")
		=NFEcfInforme((LNemp),(LDtqbr),(LDtqbr),LSnroIni,LSnroFim,;
					LSvalor, LSvlr_icms)
		*--------------------------------------------------------------*
		*	Identifica┤фo do Equipamento
		*--------------------------------------------------------------*
		LStipo  	= "60"
		LSMestre	= "M"
		LSdtemi		=	STR(YEAR(LDtqbr),4)+;
						STR(MONTH(LDtqbr),2)+;
						STR(DAY(LDtqbr),2)
		LSdtemi		=   CHRTRAN(LSdtemi," ","0")						

		LSnumero 	= 	"001"
		LSserie     =   empresa.ecf_serie
		*LSserie     =   "123456789012345"
		LSmodelo	=	"2D"
		
		LSnroini	=   CHRTRAN(STR(LSnroini,6)," ","0")
		LSnrofim	=   CHRTRAN(STR(LSnrofim,6)," ","0")

		SELE mapaecf
		SET NEAR ON
		SET ORDER TO TAG mapa
		SEEK STR(LNemp,3)+DTOS(LDtqbr)+STR(1,4)+STR(17,5,2)	
		SET NEAR OFF
		IF mapaecf.empresa = LNemp AND ;
		   mapaecf.data    = LDtqbr AND ;
		   mapaecf.ecf		= 1 AND ;
		   mapaecf.aliquota = 17
				LSnroredZ		=	mapaecf.ctrreducao
				LSgtInivalor	=	mapaecf.gt_inicial
				LSgtFimvalor	=	mapaecf.gt_final
		ELSE
			SKIP -1
			DO WHILE !BOF() AND mapaecf.empresa = LNemp
				IF  mapaecf.aliquota = 17
					EXIT
				ENDIF
				SKIP -1
			ENDDO
			IF !BOF()
				LSnroredZ		=	mapaecf.ctrreducao
				LSgtInivalor	=	mapaecf.gt_inicial
				LSgtFimvalor	=	mapaecf.gt_final
			ELSE			
				LSnroredZ		=	0
				LSgtInivalor	=	0
				LSgtFimvalor	=	0
			ENDIF
		ENDIF

		LSctrredZ		=   CHRTRAN(STR(LSnroredZ,6)," ","0")

		LSgtInivalor	=	STR(LSgtInivalor,17,2)
		LSgtInivalor	=   CHRTRAN(LSgtInivalor," ","0")						
		LSgtInivalor	=   CHRTRAN(LSgtInivalor,",","")						
		LSgtInivalor	=   CHRTRAN(LSgtInivalor,".","")						

		LSgtFimvalor	=	STR(LSgtFimvalor,17,2)
		LSgtFimvalor	=   CHRTRAN(LSgtFimvalor," ","0")						
		LSgtFimvalor	=   CHRTRAN(LSgtFimvalor,",","")						
		LSgtFimvalor	=   CHRTRAN(LSgtFimvalor,".","")						

		LSbranco_B	=  SPACE(45)
		*******************************************************
		LStmp1		=  LStipo+"M"+LSdtemi+LSnumero+LSserie+;
					+LSmodelo+LSnroini+LSnrofim+LSctrredZ+;
					LSgtIniValor+LSgtFimValor+LSbranco_B

		=FPUT(LNctrl,LStmp1,126)
		LN_Ctr	=	LN_Ctr + 1
		*******************************************************			
		SELECT LIVROSAI
		LNbase_iss	=	0
		LNbase_sbbrt= 	0
		LNbase_isent=	0
		LNctrRegAnaliticos = 0
		DO WHILE !EOF() AND LDTqbr = LIVROSAI.data

			LNbase_iss	= LNbase_iss	+ LIVROSAI.base_iss
			LNbase_sbbrt= LNbase_sbbrt  + LIVROSAI.base_sbbrt
			LNbase_isent= LNbase_isent  + LIVROSAI.base_isent

			IF LIVROSAI.base_icms = 0
				SKIP
				LOOP
			ENDIF

			LSaliq_icms	=	str(LIVROSAI.aliq_icms,5,2)						
			LSaliq_icms	=   CHRTRAN(LSaliq_icms," ","0")						
			LSaliq_icms	=   CHRTRAN(LSaliq_icms,",","")						
			LSaliq_icms	=   CHRTRAN(LSaliq_icms,".","")						

			LSvalor		=	STR(LIVROSAI.base_icms,13,2)
			LSvalor		=   CHRTRAN(LSvalor," ","0")						
			LSvalor		=   CHRTRAN(LSvalor,",","")						
			LSvalor		=   CHRTRAN(LSvalor,".","")						
		
			LSbranco_B	=  SPACE(96)
			LNctrRegAnaliticos = LNctrRegAnaliticos + 1
			*******************************************************
			LStmp1		=  LStipo+"A"+LSdtemi+LSnumero+LSaliq_icms+;
					+LSvalor+LSbranco_B
			=FPUT(LNctrl,LStmp1,126)
			LN_Ctr	=	LN_Ctr + 1
			*******************************************************			
			SKIP
		ENDDO
		LSaliq_icms	=	"ISS "
		IF FOUND("MAPAECF")
			LSvalor		=	mapaecf.vlrservico
		ELSE
			LSvalor		=	LNbase_iss
		ENDIF
		IF LSvalor > 0
			LSvalor		=	STR(LSvalor,13,2)
			LSvalor		=   CHRTRAN(LSvalor," ","0")						
			LSvalor		=   CHRTRAN(LSvalor,",","")						
			LSvalor		=   CHRTRAN(LSvalor,".","")						
			LSbranco_B	=  SPACE(96)
			*******************************************************
			LStmp1		=  LStipo+"A"+LSdtemi+LSnumero+LSaliq_icms+;
					+LSvalor+LSbranco_B
			=FPUT(LNctrl,LStmp1,126)
			LN_Ctr	=	LN_Ctr + 1
		ENDIF
		*******************************************************			
		LSaliq_icms	=	"F   "
		IF FOUND("MAPAECF")
			LSvalor		=	mapaecf.vlrsubst
		ELSE
			LSvalor		=	LNbase_sbbrt
		ENDIF
		IF LSvalor > 0
			LSvalor		=	STR(LSvalor,13,2)
			LSvalor		=   CHRTRAN(LSvalor," ","0")						
			LSvalor		=   CHRTRAN(LSvalor,",","")						
			LSvalor		=   CHRTRAN(LSvalor,".","")						
			LSbranco_B	=  SPACE(96)
			*******************************************************
			LStmp1		=  LStipo+"A"+LSdtemi+LSnumero+LSaliq_icms+;
					+LSvalor+LSbranco_B
			=FPUT(LNctrl,LStmp1,126)
			LN_Ctr	=	LN_Ctr + 1
			*******************************************************			
		ENDIF
		LSaliq_icms	=	"I   "
		IF FOUND("MAPAECF")
			LSvalor		=	mapaecf.vlrisent
		ELSE
			LSvalor		=	LNbase_isent
		ENDIF

		IF LSvalor > 0
			LSvalor		=	STR(LSvalor,13,2)
			LSvalor		=   CHRTRAN(LSvalor," ","0")						
			LSvalor		=   CHRTRAN(LSvalor,",","")						
			LSvalor		=   CHRTRAN(LSvalor,".","")						
			LSbranco_B	=  SPACE(96)
			*******************************************************
			LStmp1		=  LStipo+"A"+LSdtemi+LSnumero+LSaliq_icms+;
					+LSvalor+LSbranco_B
			=FPUT(LNctrl,LStmp1,126)
			LN_Ctr	=	LN_Ctr + 1
			*******************************************************			
		ENDIF
		LSaliq_icms	=	"CANC"
		IF FOUND("MAPAECF")
			LSvalor		=	mapaecf.cancela
		ELSE
			LSvalor		=	0
		ENDIF
		IF LSvalor > 0
			LSvalor		=	STR(LSvalor,13,2)
			LSvalor		=   CHRTRAN(LSvalor," ","0")						
			LSvalor		=   CHRTRAN(LSvalor,",","")						
			LSvalor		=   CHRTRAN(LSvalor,".","")						
			LSbranco_B	=  SPACE(96)
			*******************************************************
			LStmp1		=  LStipo+"A"+LSdtemi+LSnumero+LSaliq_icms+;
					+LSvalor+LSbranco_B
			=FPUT(LNctrl,LStmp1,126)
			LN_Ctr	=	LN_Ctr + 1
			*******************************************************			
		ENDIF
		SELECT LIVROSAI
		IF EOF()
			EXIT
		ENDIF
	ENDDO
RETURN

*---------------------------------------------------------------------*
*		Conhecimento de Tranporte
*---------------------------------------------------------------------*

FUNCTION UL31R_70
	PARAMETERS LNemp, LNctrl, LDper_ini, LDper_fim, LN_Ctr

	*-------------------------------------------------------------------*
	*	NOTAS DE ENTRADA
	*-------------------------------------------------------------------*

	SELECT LIVROENT
	SET ORDER TO TAG rldtentr
	SET NEAR ON
	SEEK STR(LNemp,3)+DTOS(LDper_ini)
	SET NEAR OFF

	LStipo  		= "70"

	DO WHILE !EOF()
		LSmsg = "Conh.Frete (70) "+;
				 	STR(LIVROENT.empresa,3)+"-"+DTOC(LIVROENT.DATA)+;
					STR(LIVROENT.NOTA,6)
		WAIT WINDOW LSmsg NOWAIT
		&& SE NAO FOR CONHECIMENTO DE TRANSPORTE
		IF LIVROENT.ch_produ <> "9"
			SKIP
			LOOP
		ENDIF

		*-----------------------------------------------------------*
		SELE fornece
		SET ORDER TO TAG codigo
		SEEK LIVROENT.codforn

		IF FOUND()
			LSinsc	=  ALLTRIM(fornece.inscricao)
			LScgc	=  CHRTRAN(STR(fornece.cgc,14)," ","0")
		ELSE
			LSinsc	=  ALLTRIM(LIVROENT.inscricao)
			LScgc	=  CHRTRAN(STR(LIVROENT.favorecido,14)," ","0")
		ENDIF

		IF "ISENTO" $ UPPER(LSinsc)
			LSinsc	=  "ISENTO"
			LScgc	=  CHRTRAN(STR(0,14)," ","0")
		ELSE
			LSinsc	=  CHRTRAN(LSinsc,".","")
			LSinsc	=  CHRTRAN(LSinsc,"/","")
			LSinsc	=  CHRTRAN(LSinsc,"-","")
			LSinsc	=  CHRTRAN(LSinsc,"(","")
			LSinsc	=  CHRTRAN(LSinsc,")","")
		ENDIF			
		LSinsc			= LEFT(LSinsc+space(14),14)
		*-----------------------------------------------------------*
		SELECT LIVROENT

		LSdtemi		=	STR(YEAR(LIVROENT.data),4)+;
						STR(MONTH(LIVROENT.data),2)+;
						STR(DAY(LIVROENT.data),2)
		LSdtemi		=   CHRTRAN(LSdtemi," ","0")						
		LSuf		=	LIVROENT.uf
		LSmodelo 	=   "08"


		IF  LIVROENT.serie $ "1/2"
			LSserie		=   "U"
			LSsubserie  = 	LIVROENT.serie+" "
		ELSE
			LSserie		=   LIVROENT.serie
			LSsubserie  = 	"U "
		ENDIF

		LSnumero 	= 	CHRTRAN(STR(LIVROENT.NOTA,6)," ","0")

		SELE TIPOOPER
		SET ORDER TO TAG TIPO
		SEEK "E"+LIVROENT.tipo
		IF FOUND()
			LScfo	= tipooper.cfo
		ELSE	
			LScfo		=   CHRTRAN(LIVROENT.cfo,".","")						
		ENDIF
		LScfo		=   CHRTRAN(LScfo,".","")						

		SELE LIVROENT

		LSvalor		=	str(LIVROENT.total_nota,15,2)						
		LSvalor		=   CHRTRAN(LSvalor," ","0")						
		LSvalor		=   CHRTRAN(LSvalor,",","")						
		LSvalor		=   CHRTRAN(LSvalor,".","")						

		LSbase_icms	=   IIF(LIVROENT.base_subs > 0, 0, LIVROENT.base_icms)

		LSbase_icms	=	str(LSbase_icms,15,2)						
		LSbase_icms	=   CHRTRAN(LSbase_icms," ","0")						
		LSbase_icms	=   CHRTRAN(LSbase_icms,",","")						
		LSbase_icms	=   CHRTRAN(LSbase_icms,".","")						

		LSvlr_icms	=	IIF(LIVROENT.base_subs > 0, 0, LIVROENT.vlr_icms)

		LSvlr_icms	=	str(LSvlr_icms,15,2)						
		LSvlr_icms	=   CHRTRAN(LSvlr_icms," ","0")						
		LSvlr_icms	=   CHRTRAN(LSvlr_icms,",","")						
		LSvlr_icms	=   CHRTRAN(LSvlr_icms,".","")						

		LSbase_isent=	str(LIVROENT.base_isent,15,2)						
		LSbase_isent=   CHRTRAN(LSbase_isent," ","0")						
		LSbase_isent=   CHRTRAN(LSbase_isent,",","")						
		LSbase_isent=   CHRTRAN(LSbase_isent,".","")						
		
		LSbase_outr	=	str(LIVROENT.base_outr,15,2)						
		LSbase_outr	=   CHRTRAN(LSbase_outr," ","0")						
		LSbase_outr	=   CHRTRAN(LSbase_outr,",","")						
		LSbase_outr	=   CHRTRAN(LSbase_outr,".","")						

		LSCifFob	=	"2"

		LSstatus = "N"
		************************************************************
		LStmp1		=	LStipo+LScgc+LSinsc+LSdtemi+LSuf+LSmodelo+;
						LSserie+LSsubserie+LSnumero+LScfo+LSvalor+;
						LSbase_icms+LSvlr_icms+LSbase_isent+;
						LSbase_outr+LSCifFob+LSstatus
		************************************************************
		=FPUT(LNctrl,LStmp1,126)
		LN_Ctr	=	LN_Ctr + 1
		SKIP
	ENDDO
RETURN

*****************************************************************
*  CADASTRO SE PRODUTOS - 75 -
*****************************************************************

FUNCTION UL31R_75
	PARAMETERS LNemp, LNctrl, LDper_ini, LDper_fim, LN_Ctr

	*-------------------------------------------------------------------*
	*	CADASTRO DOS PRODUTOS COMERCIALIZADOS NO PERIODO
	*-------------------------------------------------------------------*
	SELECT EMPRESA
	SET ORDER TO TAG empresa
	SEEK LNemp
	IF !FOUND()
		RETURN(.F.)
	ENDIF	

	SELE ITENSNEGOC
	SET ORDER TO TAG CODIGO
	GO TOP
	
	DO WHILE !EOF()
		WAIT WINDOW ITENSNEGOC.codigo+ITENSNEGOC.descricao NOWAIT
		
		LStipo	= "75"
		LSdini		=	STR(YEAR(LDper_ini),4)+;
						STR(MONTH(LDper_ini),2)+;
						STR(DAY(LDper_ini),2)
		LSdini		=   CHRTRAN(LSdini," ","0")						

		LSdfim		=	STR(YEAR(LDper_fim),4)+;
						STR(MONTH(LDper_fim),2)+;
						STR(DAY(LDper_fim),2)
		LSdfim		=   CHRTRAN(LSdfim," ","0")						
	
		LScodigo= LEFT(ITENSNEGOC.codigo+SPACE(14),14)

		LSncm   = SPACE(8)

		LSnome	  = LEFT(ITENSNEGOC.descricao+SPACE(53),53)
		LSunidade = LEFT(ITENSNEGOC.unidade+SPACE(6),6)
		LNtab_cst = empresa.tab_cst
		*---------------------------------------------------------*
		*  Buscar CST para operacao mais comum (VLA)
		*---------------------------------------------------------*
		=W_DEFPROC("ORCAMENT.SPR")
		m.cst = ORdefcst((LNtab_cst),("VLA"),(ITENSNEGOC.tp_mercad),;
					ITENSNEGOC.codigo)
		
		*------------------------------------------------------------*
		LScst     	=  	"0"+m.cst+"0"
		LScst		=   CHRTRAN(LScst," ","0")						

		LSaliq_ipi	=	str(ITENSNEGOC.aliq_ipi,5,2)						
		LSaliq_ipi	=   CHRTRAN(LSaliq_ipi," ","0")						
		LSaliq_ipi	=   CHRTRAN(LSaliq_ipi,",","")						
		LSaliq_ipi	=   CHRTRAN(LSaliq_ipi,".","")						

		LSaliq_icms	=	str(17,5,2)						
		LSaliq_icms	=   CHRTRAN(LSaliq_icms," ","0")						
		LSaliq_icms	=   CHRTRAN(LSaliq_icms,",","")						
		LSaliq_icms	=   CHRTRAN(LSaliq_icms,".","")						

		LSaliq_rdz	=	str(0,5,2)						
		LSaliq_rdz 	=   CHRTRAN(LSaliq_rdz ," ","0")						
		LSaliq_rdz 	=   CHRTRAN(LSaliq_rdz ,",","")						
		LSaliq_rdz 	=   CHRTRAN(LSaliq_rdz ,".","")						

		LSaliq_iva	=	str(ITENSNEGOC.iva,13,2)						
		LSaliq_iva	=   CHRTRAN(LSaliq_iva," ","0")						
		LSaliq_iva	=   CHRTRAN(LSaliq_iva,",","")						
		LSaliq_iva	=   CHRTRAN(LSaliq_iva,".","")						


		LSbranco  = SPACE(25)
		*******************************************************
		LStmp1	= LStipo+LSdini+LSdfim+LScodigo+LSncm+LSnome+;
					LSunidade+LScst+LSaliq_ipi+LSaliq_icms+;
					LSaliq_rdz+LSaliq_iva
		=FPUT(LNctrl,LStmp1,126)
		LN_Ctr	=	LN_Ctr + 1
		*******************************************************			
		SELE ITENSNEGOC
		SKIP
	ENDDO
			
RETURN

*****************************************************************
*  TOTALIZADORES  - 90 -
*****************************************************************

FUNCTION UL31R_90
	PARAMETERS LNemp,LNctrl,LNctr_10,LNctr_11,LNctr_50,LNctr_53,LNctr_54,;
				LNctr_60,LNctr_70,LNctr_75

	*-------------------------------------------------------------------*
	*	CADASTRO DOS PRODUTOS COMERCIALIZADOS NO PERIODO
	*-------------------------------------------------------------------*
	SELECT EMPRESA
	SET ORDER TO TAG empresa
	SEEK LNemp
	IF !FOUND()
		RETURN(.F.)
	ENDIF	

	LStipo	= "90"
	LScgc	= 	CHRTRAN(STR(empresa.cgc,14)," ","0")
	LSinsc	= 	CHRTRAN(empresa.inscricao," ","")
	LSinsc	= 	CHRTRAN(LSinsc,".","")
	LSinsc	= 	CHRTRAN(LSinsc,"/","")
	LSinsc	= 	CHRTRAN(LSinsc,"-","")
	LSinsc	= 	LEFT(LSinsc+space(14),14)


	LS_tp50	=	"50"
	LS_ct50	=	CHRTRAN(STR(LNctr_50,8)," ","0")

	LS_tp53	=	"53"
	LS_ct53	=	CHRTRAN(STR(LNctr_53,8)," ","0")

	LS_tp54	=	"54"
	LS_ct54	=	CHRTRAN(STR(LNctr_54,8)," ","0")

	LS_tp60	=	"60"
	LS_ct60	=	CHRTRAN(STR(LNctr_60,8)," ","0")

	LS_tp70	=	"70"
	LS_ct70	=	CHRTRAN(STR(LNctr_70,8)," ","0")

	LS_tp75	=	"75"
	LS_ct75	=	CHRTRAN(STR(LNctr_75,8)," ","0")

	LNctr_90=	1
	LS_tp90	=	"90"
	LS_ct90	=	CHRTRAN(STR(LNctr_90,8)," ","0")


	LSspaco =   SPACE(25)

	LS_ctgr	=	LNctr_10+LNctr_11+LNctr_50+LNctr_53+LNctr_54+;
				LNctr_60+LNctr_70+LNctr_75+LNctr_90

	LS_tpGR	=	"99"
	LS_ctgr	=	CHRTRAN(STR(LS_ctgr,8)," ","0")

	*******************************************************
	LStmp1	= LStipo+LScgc+LSinsc+;
			  LS_tp50+LS_ct50+LS_tp53+LS_ct53+LS_tp54+LS_ct54+;
			  LS_tp60+LS_ct60+LS_tp70+LS_ct70+LS_tp75+LS_ct75+;
			  LS_tpGr+LS_ctgr+ LSspaco+"1"

	=FPUT(LNctrl,LStmp1,126)
RETURN


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _44A0MRJ8C           LFICMProd VALID                    ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC220,     Record Number:   81   ╨
*       ╨ Variable:            LFICMProd                          ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Check Box                          ╨
*       ╨ Snippet Number:      35                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*

FUNCTION _44a0mrj8c     &&  LFICMProd VALID
#REGION 1
RETURN

PROCEDURE ULProdICMrel
PARAMETERS LNemp,LDper_ini, LDper_fim, LNlivro,LNpagina

*******************
*---->   (INICIALIZACAO DO CONTROLE DE STATUS IMPRESSAO)
*******************	
	DO RELINIC.PRG          && INICIA VAR P/ TERMOMETRO
	SELECT LIVROIPI_Prod
	SET ORDER TO TAG CODIGO

	LFsegue = .t.
	LNregistro = RECNO()

    LNimpressao = RECCOUNT()

	LNimpressos = 0
	GO LNregistro
*******************
*---->   (COMPLETADO PREPARACAO DO CONTROLE DE STATUS IMPRESSAO)
*******************	
	LF_imp  = .t.   && controla a impressao de transportar
**************************>>> REGISTRO DE SAIDAS
	SELE clasnbm
	SET ORDER TO TAG CHAVE_ID

	SELE tabnbm
	SET ORDER TO TAG codigo
	SET RELATION TO nbm INTO clasnbm
		
	SELE nota
	SET ORDER TO TAG nota

	SELE notaent
	SET ORDER TO TAG boletim

	SELE fornece
	SET ORDER TO TAG codigo

	SELE GRUPO
	SET ORDER TO TAG CLASSIFICA
	GO TOP

	*----------------------------------------------------------------*
	LStmpfixo="\tmp\MARK_IMP"
	LStmp	= LStmpfixo

	SELE 0
	LStmp	= LStmpfixo
	CREATE TABLE  &LStmp		(CODIGO		C(11))
	USE &LStmp ALIAS  MARK_IMP exclu
	INDEX ON CODIGO TAG codigo
	USE
	SELE 0
	USE \tmp\MARK_IMP ALIAS  MARK_IMP
	SET ORDER TO TAG  codigo

	*----------------------------------------------------------------*
	LStmpfixo="\tmp\Sld1996"
	LStmp	= LStmpfixo
	IF !FILE("\tmp\Sld1996.dbf")
		SELE 0
		LStmp	= LStmpfixo
		CREATE TABLE  &LStmp		(	EMPRESA 	N(3),;
										CODIGO		C(11),;
										SALDO		N(6,0))
		USE &LStmp ALIAS  SLD_1996 exclu
		INDEX ON STR(EMPRESA,3)+CODIGO TAG SALDO
		USE
	ENDIF
	SELE 0
	USE \tmp\Sld1996 ALIAS  SLD_1996
	SET ORDER TO TAG  saldo

	SET STEP ON
	*---------------------------------------------------------------*
	SELECT LIVROIPI_Prod
	SET ORDER TO TAG codigo
	*--------------------------------------------------------------*
	*   Coversao de Codigos para Codigos Antigos
	*--------------------------------------------------------------*
	SET RELATION TO  codigo     INTO tabnbm
	SET ORDER TO
	GO TOP
	REPLACE LIVROIPI_Prod.CODIGO WITH tabnbm.codantigo ;
		FOR !(EMPTY(tabnbm.codantigo)) AND RLOCK() WHILE !EOF()

	REINDEX
	

	SET ORDER TO TAG codigo
	GO TOP
	*--------------------------------------------------------------*
	SET RELATION TO  STR(EMPRESA,3)+STR(NOTA,7) INTO nota
	SET RELATION TO  codforn 					INTO fornece ADDITIVE
	SET RELATION TO  STR(EMPRESA,3)+;
		STR(orcamento,6)+STR(FORNECE.CODIGO,5) INTO notaent ADDITIVE

	SELE GRUPO
	SET RELATION TO  grupo.codigo      INTO tabnbm
	*SET RELATION TO codigo 	 	   INTO LIVROIPI_Prod   ADDITIVE

	*SET RELATION TO  tabnbm.codantigo 	INTO MARK_IMP       ADDITIVE
	SET RELATION TO  tabnbm.codantigo 	INTO LIVROIPI_Prod   ADDITIVE

	SET SKIP TO TABNBM
	SET SKIP TO LIVROIPI_Prod

	LSorienta  = 	" FOR (GRUPO.ORIGEM = 1 OR GRUPO.ORIGEM = 2) " +;
		" AND  !EMPTY(LIVROIPI_P.CODIGO) "+;		
		" AND  EMPTY(mark_imp.codigo)  "+;
		" AND  ULICMvalidImpressao(LNsaldo,LIVROIPI_Prod.operacao) "+;
					"  WHILE LFsegue  "
	LSorienta  = 	" FOR (GRUPO.ORIGEM = 1 OR GRUPO.ORIGEM = 2) " +;
		" AND  !EMPTY(LIVROIPI_P.CODIGO) "+;		
		" AND  ULVER_imp(LIVROIPI_P.CODIGO)  "+;
		" AND  ULICMvalidImpressao(LNsaldo,LIVROIPI_Prod.operacao) "+;
					"  WHILE LFsegue  "



	*--------------------------------------------------------------*
    LSrel = "REL220G"      && relatorio padrao p/ impressoras ex: epson
	LF_fim  = .f.
	LNsaldo = 0				&& controlador de saldo


	DO UPimpressao WITH (LFLdireciona), (LFLagrega), (LFLfimagrega)
	LFcontinua = LFsegue
	*--------------------------------------------------------------*
	SET RELATION TO
	DO RELFIM.PRG          && FIM VAR P/ TERMOMETRO
	LNpagina = LNpagina + _PAGENO - 1   && DAR SEQU.AO N. PAGINA
RETURN


FUNCTION ULICMreg_saldo
*----------------------------------------------------------------*
* 		No caso do REL220G o saldo inicial deve ser ZERO para 1996
* e para 1997 deve ser o saldo final produzido no final do relatorio
* de 96 que ┌ registrado no arq  \tmp\Sld1996 o que implica que para
* se obter o relatorio de 1997 ┌ preciso processar 1996
*       Esta rotina registra o saldo de 96
*----------------------------------------------------------------*
PARAMETERS LNemp,LScod
	PRIVATE LSalias
	LSalias = alias()
	IF YEAR(LDper_ini) = 1996
		SELE SLD_1996
		SEEK  STR(LNemp,3)+LScod
		IF FOUND()	
			=RLOCK()
			REPLACE saldo WITH LNsaldo
		ELSE
			append blank
			=RLOCK()
			REPLACE empresa WITH LNemp
			REPLACE codigo  WITH LScod
			REPLACE saldo 	WITH LNsaldo
		ENDIF		
	ENDIF
	SELE &LSalias
RETURN("")

FUNCTION ULmarca_imp
*----------------------------------------------------------------*
* 		Com a divisao de um produto em dois codigos ocorre o caso em
* que o produdo origem e o produdo destino possuam movimentacao
* e esta deve ser unificada no codigo origem. Para impedir a impressao
* duplicada quado o primeiro ┌ impresso ┌ feito um registro para evitar
* a impressao do segundo o que resultaria em duplicacao ja que ambos se
* referem ao mesmo produto origem
*----------------------------------------------------------------*
PARAMETERS LScod
	PRIVATE LSalias
	LSalias = alias()
	SELE MARK_IMP
	SEEK LScod
	IF !FOUND()	
		append blank
		=RLOCK()
		REPLACE codigo  WITH LScod
	ENDIF
	SELE &LSalias
RETURN("")

FUNCTION ULVER_imp
*----------------------------------------------------------------*
* 		Com a divisao de um produto em dois codigos ocorre o caso em
* que o produdo origem e o produdo destino possuam movimentacao
* e esta deve ser unificada no codigo origem. Para impedir a impressao
* duplicada quado o primeiro ┌ impresso ┌ feito um registro para evitar
* a impressao do segundo o que resultaria em duplicacao ja que ambos se
* referem ao mesmo produto origem
*----------------------------------------------------------------*
PARAMETERS LScod
	PRIVATE LSalias,LFretorno
	LFretorno = .t.

	LSalias = alias()
	SELE MARK_IMP
	SEEK LScod
	IF FOUND()	
		LFretorno = .f.
	ENDIF
	SELE &LSalias
RETURN(LFretorno)


FUNCTION ULICMsaldoini
*----------------------------------------------------------------*
* 		No caso do REL220G o saldo inicial deve ser ZERO para 1996
* e para 1997 deve ser o saldo final produzido no final do relatorio
* de 96 que ┌ registrado no arq \tmp\sldtmp96 o que implica que para
* se obter o relatorio de 1997 ┌ preciso processar 1996
*----------------------------------------------------------------*
PARAMETERS LNemp,LScod,LSclas,LDdata,LNsaldo
	PRIVATE LSalias
	LSalias = alias()
	IF YEAR(LDper_ini) = 1996
		LNsaldo = 0
	ELSE
		SELE SLD_1996
		SEEK  STR(LNemp,3)+LScod
		IF FOUND()	
			LNsaldo = SLD_1996.SALDO
		ELSE
			LNsaldo = 0
		ENDIF		
	ENDIF
	SELE &LSalias
RETURN(LNsaldo)

FUNCTION ULICMoperasld
*----------------------------------------------------------------*
* Fornece o saldo incial do produto na quebra de classificacao
* CHAMADAS NO DETALJE  REL220D
*----------------------------------------------------------------*
PARAMETERS LNsaldo,LNqtde,LSoperacao

	if LEFT(LSoperacao,1) = "S"
		IF (LNsaldo - LNqtde) < 0
			LNqtde  = LNsaldo			&& A quantidade ┌ ajustada e
										&& devolvida para impressao
			LNsaldo = 0
		ELSE
			LNsaldo = LNsaldo - LNqtde
		ENDIF
	ELSE
		LNsaldo = LNsaldo + LNqtde
	ENDIF	
RETURN(LNsaldo)

FUNCTION ULICMvalidImpressao

*----------------------------------------------------------------*
*      Esta Funcao retorna .f. quando o saldo resultante da operacao
* for ficar negativo. Esta informacao e utilizada na clausula FOR do
* REPORT FORM para nao permitir a impressao desse registro.
*      O saldo negativo ocorrera no ano de 1996 e  1997  porque nao
* esta sendo considerado o saldo inicial do periodo anterior ao
* inicio da tributacao dos produtos importados.
*      O relatorio em questao quer retratar somente as operacoes de
* entrada e saida do periodo de tributacao ,ou seja, de 06/06/96 a
* 02/09/97
*	   Com descrito acima entende-se que sempre que uma operacao
* de saida resultar em saldo negativo esta opera┤фo esta sendo
* realizada sobre o saldo do periodo anterior ao processo em questao.
*---------------------------------------------------------------*
* ex:
* ULICMvalidImpressao(LNsaldo,LIVROIPI_Prod.qtde,LIVROIPI_Prod.operacao)
*----------------------------------------------------------------*
PARAMETERS LNsaldo,LSoperacao

	PRIVATE LFretorno
	LFretorno = .t.
	if LEFT(LSoperacao,1)="S"
		IF LNsaldo = 0				&& MESMO QUE O SALDO NAO SEJA
									&& SUFICIENTE PARA COBRIR A OPERACAO
									&& SARA BAIXADO A QUANTIDADE DISPONIVEL
									&& O QUE RETRATA UMA QTDE DIFERENTE DA
									&& DESMONSTRADA NA NOTA DE SAIDA
			LFretorno = .F.
		ENDIF
	ENDIF	
RETURN(LFretorno)


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _44A0MRJ8S           LSuf_destino WHEN                  ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC220,     Record Number:   82   ╨
*       ╨ Variable:            LSuf_destino                       ╨
*       ╨ Called By:           WHEN Clause                        ╨
*       ╨ Object Type:         Field                              ╨
*       ╨ Snippet Number:      36                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _44a0mrj8s     &&  LSuf_destino WHEN
#REGION 1
ON KEY LABEL ENTER
RETURN(isediting)

*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _44A0MRJAM           m.imp_btn WHEN                     ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC220,     Record Number:   83   ╨
*       ╨ Variable:            m.imp_btn                          ╨
*       ╨ Called By:           WHEN Clause                        ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      37                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _44a0mrjam     &&  m.imp_btn WHEN
#REGION 1
ON KEY LABEL ENTER
RETURN


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _44A0MRJAN           m.imp_btn VALID                    ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC220,     Record Number:   83   ╨
*       ╨ Variable:            m.imp_btn                          ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      38                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*

FUNCTION _44a0mrjan     &&  m.imp_btn VALID
#REGION 1
	IF LFAnSaida OR LFStSaida OR LFResCfoS OR LFResUfS
		DO CtrlSaida WITH	;
				(m.empresa),(m.dt_inicio),(m.dt_fim),(LFAnSaida), ;
				(LFStSaida), (LFResCfoS), (LFResUfS), (LNpagina),;
				(LSuf_destino)
	ENDIF

	IF LFAnEntrada OR LFResCfoE OR LFResUfE
		DO CtrlEntrada	WITH ;
				(m.empresa),(m.dt_inicio),(m.dt_fim),(LFAnEntrada), ;
				(LFStEntrada), (LFResCfoE), (LFResUfE), (LNpagina), ;
				(LSuf_destino)
	ENDIF

	IF LFconv_3199
		DO CtrlCVN3199		WITH ;
			(m.empresa),(m.dt_inicio),(m.dt_fim),(LNlivro),(LNpagina),;
			(LSuf_destino)
	ENDIF
	
	*---------------------------------------------------------------------*
	*---------------------------------------------------------------------*
	*---------------------------------------------------------------------*

	IF LFIpiSaida		
		DO CtrlIpiSaida		WITH ;
			(m.empresa),(m.dt_inicio),(m.dt_fim),(LNlivro),(LNpagina)

	ENDIF

	IF LFIpiEntrada
		DO CtrlIpiEntrada	WITH ;
			(m.empresa),(m.dt_inicio),(m.dt_fim),(LNlivro),(LNpagina)
	ENDIF


	IF LFIpiProd
		DO CtrlIpiProd		WITH ;
				(m.empresa),(m.dt_inicio),(m.dt_fim),(LNlivro),(LNpagina)
				
	ENDIF

	IF LFICMProd
		DO CtrlICMProd		WITH ;
				(m.empresa),(m.dt_inicio),(m.dt_fim),(LNlivro),(LNpagina)
	ENDIF

	IF LFCRpc_ICMS
		DO ULPcCredIcmsRel	WITH ;
				(m.empresa),(m.dt_inicio),(m.dt_fim),(LNlivro),(LNpagina)
	ENDIF

	IF LFCR_ICMS
		DO CtrlIcmsCred		WITH ;
				(m.empresa),(m.dt_inicio),(m.dt_fim),(LNlivro),(LNpagina)
	ENDIF



	SELECT nota
	SHOW WINDOW SCGC220 TOP
	SHOW GET m.imp_btn DISABLE
RETURN



*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _44A0MRJAO           m.edit_btn WHEN                    ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC220,     Record Number:   84   ╨
*       ╨ Variable:            m.edit_btn                         ╨
*       ╨ Called By:           WHEN Clause                        ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      39                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _44a0mrjao     &&  m.edit_btn WHEN
#REGION 1
ON KEY LABEL ENTER
RETURN


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _44A0MRJAP           m.edit_btn VALID                   ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC220,     Record Number:   84   ╨
*       ╨ Variable:            m.edit_btn                         ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      40                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _44a0mrjap     &&  m.edit_btn VALID
#REGION 1
=btn_val1('EDIT')
RETURN


PROCEDURE BTN_VAL1
	PARAMETER tecla, m.chv_ler, m.chv_compara, m.chv_brow
	LN_prxobj = _CUROBJ
	ON KEY LABEL ENTER
    DO CASE
		CASE tecla = "EDIT" AND !isediting   && INICIA EDICAO

			LFArqSaida = .F. && ARQ TMP DEVE SER GERADO AO PROCESSAR
			
			SHOW GET edit_btn,1 PROMPT "\<Ok"
			SHOW GET m.imp_btn DISABLE
			isediting = .t.
			_CUROBJ = 1	
		    ON KEY LABEL ESCAPE KEYBOARD "{BACKTAB}"
			ON KEY LABEL END DO BTN_VAL1 WITH 'DELETE'
		CASE tecla = "EDIT" AND isediting     && CONFIRMA EDICAO
			SHOW GET edit_btn,1 PROMPT "\<Edita"
			isediting = .f.
			_CUROBJ = 1	
			IF  m.dt_fim < m.dt_inicio
				SHOW GET m.imp_btn DISABLE
			ELSE
				SHOW GET m.imp_btn ENABLE
			ENDIF
		    ON KEY LABEL ESCAPE
			ON KEY LABEL END
		CASE tecla = "DELETE" AND isediting     && CANCELA EDICAO
			SHOW GET edit_btn,1 PROMPT "\<Edita"
			isediting = .f.
			_CUROBJ = 1	
			SHOW GET m.imp_btn DISABLE
		    ON KEY LABEL ESCAPE
			ON KEY LABEL END
	ENDCASE
RETURN



*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _44A0MRJAQ           m.canc_btn VALID                   ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC220,     Record Number:   85   ╨
*       ╨ Variable:            m.canc_btn                         ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      41                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _44a0mrjaq     &&  m.canc_btn VALID
#REGION 1
ON KEY LABEL ENTER
CLEAR GETS
CLEAR READ
isediting = .f.
RETURN .T.

*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _44A0MRJAR           CONV3199 VALID                     ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCGC220,     Record Number:   86   ╨
*       ╨ Variable:            CONV3199                           ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Snippet Number:      42                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*

FUNCTION _44a0mrjar     &&  CONV3199 VALID
#REGION 1
RETURN

*-------------------------------------------------------------------*
*	PROCEDURE CtrlCVN3199
*   PROCEDURE ULProcCVN3199   PARAM LNEmp,LDDtInicio,LDDtFim
*	FUNCTION  ULGeraSaiEnt    PARAM LNEmp,LDDtInicio,LDDtFim
*-------------------------------------------------------------------*

PROCEDURE CtrlCVN3199
PARAMETERS LNemp,LDdtini,LDdtfim, LNlivro, LNpagina, LSuf_destino

	PRIVATE	LSProcesso, LNctrnota
	*----------------------------------------------------------*

	IF ULGeraSaiEnt((LNemp),(LDdtini),(LDdtfim),(LSuf_destino))
		DO ULProcCVN3199 WITH (LNemp), (LDdtini), (LDdtfim)
		*----------------------------------------------------------*
	ENDIF
 	IF USED("LIVROSAI")
		SELECT LIVROSAI
		USE
	ENDIF
	IF USED("LIVROENT")
		SELECT LIVROENT
		USE
	ENDIF
	IF USED("ITENSNEGOC")
		SELECT ITENSNEGOC
		USE
	ENDIF

	SELE nota
RETURN				

*-------------------------------------------------------------------*
*--------------------------------------------------------------*
* Gerar Arquivo LIVRO SAIDA / ENTRADA
*
*---------------------------------------------------------------*

FUNCTION ULGeraSaiEnt
PARAMETERS LNEmp,LDDtIni,LDDtFim, LSuf_destino

	PRIVATE LSprocesso
	LSprocesso = "SINTETICO"

	IF !ULArqSaida((LNEmp),(LDDtIni),(LDDtFim),(LSprocesso),(LSuf_destino))
		RETURN(.f.)
	ENDIF
	IF !ULArqEntrada((LNEmp),(LDDtIni),(LDDtFim),(LSuf_destino))
		RETURN(.F.)
	ENDIF
	IF !ULArqItens()
		RETURN(.F.)
	ENDIF

RETURN(.t.)

FUNCTION ULArqItens
	*---------------------------------------------------------*
	* Gerar Arq. Temporario para registrar itens vendidos
	*---------------------------------------------------------*
	LSarqtmp 	= "" 			&& EX: C:\TMP\TMP0001
	LSaliastmp 	= "TMP" 		&&     TMP001
	LSaliastmp = UPopentmp(wp_dirtmp,LSarqtmp,LSaliastmp,1)
	IF EMPTY(LSaliastmp)
 		WAIT WINDOW "Nao Foi Possivel Gerar Arq Temporario."
 		SELE notaent
		UNLOCK
 		RETURN(.F.)
 	ENDIF		
	*---------------------------------------------------------*
	IF USED("ITENSNEG")
		SELE ITENSNEGOC
		USE
	ENDIF

	SELE grupo
	WAIT WINDOW "AGUARDE. Gerando Arq. Temporario." NOWAIT

	COPY STRU TO &LSarqtmp WITH CDX

	KEYBOARD CHR(13)
	WAIT WINDOW " "
    SELE 0
	USE &LSarqtmp	ALIAS ITENSNEGOC	EXCLUSIVE	
	KEYBOARD CHR(13)
	WAIT WINDOW " "
RETURN(.T.)

*-------------------------------------------------------------------*
