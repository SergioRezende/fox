*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ 06/13/15             SCT0320.SPR               10:45:43 ╨
*       ╨                                                         ╨
*       гддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╤
*       ╨                                                         ╨
*       ╨ Author's Name                                           ╨
*       ╨                                                         ╨
*       ╨ Copyright (c) 2015 Company Name                         ╨
*       ╨ Address                                                 ╨
*       ╨ City,     Zip                                           ╨
*       ╨                                                         ╨
*       ╨ Description:                                            ╨
*       ╨ This program was automatically generated by GENSCRN.    ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨          SCT0320/MS-DOS Setup Code - SECTION 1          ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*

#REGION 1
	*------------------------------------------------------------*
	* CLASSIFICACAO:  [?????]                           		 *
	*------------------------------------------------------------*
	* OBJETIVO....:GERAR  ARQ. SINTEGRA
	*------------------------------------------------------------*
	* COMENTARIO..:
	*------------------------------------------------------------*
	* OBS........ :
	*------------------------------------------------------------*
	* TABELAS....: EMPRESA,NOTA,NOTAENT,ITEMMOV
	*------------------------------------------------------------*
	* PARAMETROS..:
	*------------------------------------------------------------*
	* RETORNO.....:
	*------------------------------------------------------------*
	*<<<<<<<<<<<<<<<<<<<<<<<         >>>>>>>>>>>>>>>>>>>>>>>>>>>>*
	*------------------------------------------------------------*
	* Ambiente
	*------------------------------------------------------------*
	=W_DEFPROC("ROTINAS.spr")
	ON KEY LABEL ESCAPE

	*------------------------------------------------------------*
	* Variaveis  Controlando Arquivos
	*------------------------------------------------------------*
	PRIVATE LSalias
	PRIVATE LFempresa,LFnota,LFnotaent,LFitemmov,LFfornece,LFgrupo
	PRIVATE LFgrfiscal
	PRIVATE LFtabnbm,LFclasnbm,LFmapaecf,LFtipooper

	LSalias			= ALIAS()
	LFempresa		= NetArq("empresa")
	LFnota			= NetArq("nota")
	LFnotaent		= NetArq("notaent")
	LFitemmov		= NetArq("itemmov")
	LFfornece		= NetArq("fornece")
	LFgrupo  		= NetArq("grupo")
	LFgrfiscal 		= NetArq("grfiscal")
	LFTabNbm  		= NetArq("tabnbm")
	LFClasNbm 		= NetArq("clasnbm")
	LFMapaEcf 		= NetArq("mapaecf")
	LFTipooper		= NetArq("tipooper")
	LFCliente		= NetArq("clientes")
	
	IF (LFempresa+LFnota+LFnotaent+LFitemmov+;
		LFfornece+LFgrupo+LFgrfiscal+LFtabnbm+LFclasnbm+LFMapaEcf+;
		LFtipooper+LFcliente) > 100000
		*-----------------------------------------------------*
		* FALHA DE ABERTURA DE TABELAS
		*-----------------------------------------------------*
		DO ULfecha
		RETURN(0)
	ENDIF
	*------------------------------------------------------------*
	* Variaveis  abientais com influencia na biblioteca
	*   deve-se adequar a biblioteca para recebelas via parametro
	*   e nao pelo ambiente com esta sendo feito
	*------------------------------------------------------------*
	PRIVATE wp_ref_local
	PRIVATE isediting
	wp_ref_local 	=  .f.     && NAO POSSUI CONTROLE DE REFRESH LOCAL
	m.isediting		=	.F.

	*------------------------------------------------------------*
	* Variaveis  de uso Especico no Formulario
	*------------------------------------------------------------*
	PRIVATE LFAnSaida,LFStSaida,LFResCfoS,LFResUfS,LNPagina
	PRIVATE LFAnEntrada,LFStEntrada,LFResCfoE,LFResUfE
	PRIVATE LFIpiEntrada,LFIpiSaida,LFIpiProd
	PRIVATE LFCr_ICMS,LFconv_3199
	PRIVATE LFICMProd
	PRIVATE LFModelo
	PRIVATE LFTotData
	
	STORE .F. TO LFAnSaida,LFStSaida,LFResCfoS,LFResUfS
	STORE 0   TO LNpagina
	STORE .F. TO LFAnEntrada,LFStEntrada,LFResCfoE,LFResUfE
	STORE .F. TO LFIpiEntrada,LFIpiSaida,LFIpiProd
	STORE .F. TO LFCr_ICMS,LFCRpc_ICMS,LFconv_3199
	STORE .F. TO LFICMProd
	STORE .F. TO LFModelo
	STORE .F. TO LFTotData


#REGION 0
REGIONAL m.currarea, m.talkstat, m.compstat

IF SET("TALK") = "ON"
	SET TALK OFF
	m.talkstat = "ON"
ELSE
	m.talkstat = "OFF"
ENDIF
m.compstat = SET("COMPATIBLE")
SET COMPATIBLE FOXPLUS

*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨                MS-DOS Window definitions                ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*

IF NOT WEXIST("sct0320") ;
	OR UPPER(WTITLE("SCT0320")) == "SCT0320.PJX" ;
	OR UPPER(WTITLE("SCT0320")) == "SCT0320.SCX" ;
	OR UPPER(WTITLE("SCT0320")) == "SCT0320.MNX" ;
	OR UPPER(WTITLE("SCT0320")) == "SCT0320.PRG" ;
	OR UPPER(WTITLE("SCT0320")) == "SCT0320.FRX" ;
	OR UPPER(WTITLE("SCT0320")) == "SCT0320.QPR"
	DEFINE WINDOW sct0320 ;
		FROM INT((SROW()-15)/2),INT((SCOL()-68)/2) ;
		TO INT((SROW()-15)/2)+14,INT((SCOL()-68)/2)+67 ;
		TITLE "LIVRO DE SAIDA" ;
		FOOTER "SCT0320" ;
		FLOAT ;
		NOCLOSE ;
		SHADOW ;
		NOMINIMIZE ;
		NONE ;
		COLOR SCHEME 1
ENDIF


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨          SCT0320/MS-DOS Setup Code - SECTION 2          ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*

#REGION 1




*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨              SCT0320/MS-DOS Screen Layout               ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*

#REGION 1
IF WVISIBLE("sct0320")
	ACTIVATE WINDOW sct0320 SAME
ELSE
	ACTIVATE WINDOW sct0320 NOSHOW
ENDIF
@ 0,0 TO 14,67 ;
	COLOR SCHEME 23
@ 1,67 TO 13,67 ;
	COLOR SCHEME 24
@ 14,1 TO 14,66 ;
	COLOR SCHEME 24
@ 0,67 SAY "©" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 14,67 SAY "ы" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 2,2 TO 4,15 ;
	COLOR SCHEME 23
@ 4,3 TO 4,14 ;
	COLOR SCHEME 24
@ 4,15 SAY "ы" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 3,15 SAY "Ё" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 2,15 SAY "©" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 2,3 SAY "[Filial]" ;
	SIZE 1,8, 0
@ 3,6 SAY "-" ;
	SIZE 1,1, 0
@ 2,17 TO 4,41 ;
	COLOR SCHEME 23
@ 4,18 TO 4,40 ;
	COLOR SCHEME 24
@ 4,41 SAY "ы" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 3,41 SAY "Ё" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 2,41 SAY "©" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 2,19 SAY "[ Periodo ]" ;
	SIZE 1,11, 0
@ 6,2 TO 8,30 ;
	COLOR SCHEME 23
@ 8,3 TO 8,29 ;
	COLOR SCHEME 24
@ 8,30 SAY "ы" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 7,30 SAY "Ё" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 6,30 SAY "©" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 7,3 SAY "Filtrar Estado Destino" ;
	SIZE 1,22, 0
@ 2,43 TO 4,65 ;
	COLOR SCHEME 23
@ 4,44 TO 4,64 ;
	COLOR SCHEME 24
@ 4,65 SAY "ы" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 3,65 SAY "Ё" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 2,65 SAY "©" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 3,51 SAY "/" ;
	SIZE 1,1, 0
@ 2,44 SAY "[Livro / Pg.Inicial]" ;
	SIZE 1,20, 0
@ 0,3 SAY "[ Escrita Fiscal - LIVRO DE ENTRADAS ]" ;
	SIZE 1,38, 0
@ 0,57 SAY "[CT0320]" ;
	SIZE 1,8, 0
@ 6,40 TO 11,64 ;
	COLOR SCHEME 23
@ 11,41 TO 11,63 ;
	COLOR SCHEME 24
@ 11,64 SAY "ы" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 6,64 SAY "©" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 7,64 TO 10,64 ;
	COLOR SCHEME 24
@ 6,41 SAY "[ Entrada ]" ;
	SIZE 1,11, 0
@ 3,3 GET m.empresa ;
	SIZE 1,3 ;
	DEFAULT 0 ;
	PICTURE "999" ;
	WHEN _4dh0n2epr() ;
	VALID _4dh0n2epz() ;
	ERROR "Empresa Nao Localizada. "
@ 3,7 GET m.nome_emp ;
	SIZE 1,7 ;
	DEFAULT " " ;
	PICTURE "@!K" ;
	WHEN _4dh0n2eq0()
@ 3,18 GET m.dt_inicio ;
	SIZE 1,10 ;
	DEFAULT {  /  /  } ;
	WHEN _4dh0n2eqf() ;
	VALID _4dh0n2eqk()
@ 3,30 GET m.dt_fim ;
	SIZE 1,10 ;
	DEFAULT {  /  /  } ;
	WHEN isediting ;
	VALID m.dt_fim >= m.dt_inicio ;
	MESSAGE "Data Final deve ser maior ou igual a Inicial"
@ 3,48 GET LNlivro ;
	SIZE 1,2 ;
	DEFAULT 0 ;
	PICTURE "99" ;
	WHEN _4dh0n2eqr() ;
	VALID LNlivro > 0 ;
	ERROR "Numero deve ser > 0 "
@ 3,53 GET LNpagina ;
	SIZE 1,4 ;
	DEFAULT 0 ;
	PICTURE "9999" ;
	WHEN _4dh0n2eqx() ;
	VALID LNpagina > 0 ;
	ERROR "Numero deve ser > 0 "
@ 7,27 GET LSuf_destino ;
	SIZE 1,2 ;
	DEFAULT " " ;
	WHEN _4dh0n2er3()
@ 7,41 GET LFAnEntrada ;
	PICTURE "@*C \<E-Livro" ;
	SIZE 1,11 ;
	DEFAULT 0 ;
	WHEN _4dh0n2era() ;
	VALID _4dh0n2erf()
@ 8,44 GET LFTotData ;
	PICTURE "@*C \<1-Total Por Data" ;
	SIZE 1,20 ;
	DEFAULT 0 ;
	WHEN _4dh0n2erm() ;
	VALID _4dh0n2ern()
@ 9,41 GET LFResCfoE ;
	PICTURE "@*C \<F-Resumo C.F.O." ;
	SIZE 1,19 ;
	DEFAULT 0 ;
	WHEN _4dh0n2ery() ;
	VALID _4dh0n2es5()
@ 10,41 GET LFResUfE ;
	PICTURE "@*C \<G-Resumo UF" ;
	SIZE 1,15 ;
	DEFAULT 0 ;
	WHEN _4dh0n2esd() ;
	VALID _4dh0n2esj()
@ 12,41 GET LFModelo ;
	PICTURE "@*C \<H-Modelo Encadernacao" ;
	SIZE 1,25 ;
	DEFAULT 0 ;
	WHEN _4dh0n2esp()
@ 14,5 GET m.imp_btn ;
	PICTURE "@*HN \<Processar" ;
	SIZE 1,11,1 ;
	DEFAULT 1 ;
	WHEN _4dh0n2esx() ;
	VALID _4dh0n2et4() ;
	DISABLE
@ 14,48 GET m.edit_btn ;
	PICTURE "@*HN \<Edita" ;
	SIZE 1,7,1 ;
	DEFAULT 1 ;
	WHEN _4dh0n2etj() ;
	VALID _4dh0n2etq() ;
	MESSAGE 'Permite a alteracao de dados do registro corrente'
@ 14,58 GET m.canc_btn ;
	PICTURE "@*HN \<Saida" ;
	SIZE 1,7,1 ;
	DEFAULT 1 ;
	VALID _4dh0n2etx()

IF NOT WVISIBLE("sct0320")
	ACTIVATE WINDOW sct0320
ENDIF

READ CYCLE ;
	ACTIVATE READACT() ;
	DEACTIVATE READDEAC()

RELEASE WINDOW sct0320

#REGION 0
IF m.talkstat = "ON"
	SET TALK ON
ENDIF
IF m.compstat = "ON"
	SET COMPATIBLE ON
ENDIF


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨               SCT0320/MS-DOS Cleanup Code               ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*

#REGION 1
DO ULfecha
RETURN

**************************************


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨   SCT0320/MS-DOS Supporting Procedures and Functions    ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*

#REGION 1
PROCEDURE ULfecha
	=UP_fecha("empresa" ,LFempresa)
	=UP_fecha("nota" ,LFnota)
	=UP_fecha("notaent" ,LFnotaent)
	=UP_fecha("itemmov" ,LFitemmov)
	=UP_fecha("fornece" ,LFfornece)
	=UP_fecha("grupo" ,LFgrupo)
	=UP_fecha("grfiscal" ,LFgrfiscal)
	=UP_fecha("tabnbm" ,LFTabNbm)
	=UP_fecha("grupo" ,LFClasNbm)
	=UP_fecha("mapaecf" ,LFMapaEcf)
	=UP_fecha("clientes" ,LFcliente)
	=UP_fecha("tipooper" ,LFtipooper)

	IF !EMPTY(LSalias) AND USED(LSalias)
		SELECT &LSalias
	ENDIF
	ON KEY LABEL ESCAPE
	SET FORMAT TO
RETURN


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4DH0N2EPR           m.empresa WHEN                     ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0320,     Record Number:   41   ╨
*       ╨ Variable:            m.empresa                          ╨
*       ╨ Called By:           WHEN Clause                        ╨
*       ╨ Object Type:         Field                              ╨
*       ╨ Snippet Number:      1                                  ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _4dh0n2epr     &&  m.empresa WHEN
#REGION 1
ON KEY LABEL ENTER
ON KEY LABEL ESCAPE	KEYBOARD "{END}"
IF LASTKEY() = 15 AND !(isediting)
	KEYBOARD "{ESCAPE}"
ENDIF
RETURN(isediting)

*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4DH0N2EPZ           m.empresa VALID                    ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0320,     Record Number:   41   ╨
*       ╨ Variable:            m.empresa                          ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Field                              ╨
*       ╨ Snippet Number:      2                                  ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _4dh0n2epz     &&  m.empresa VALID
#REGION 1
SET PROCEDURE TO EMPRESA.spr
RETURN(UVerifEmp(m.empresa,m.nome_emp,LASTKEY()))




*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4DH0N2EQ0           m.nome_emp WHEN                    ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0320,     Record Number:   42   ╨
*       ╨ Variable:            m.nome_emp                         ╨
*       ╨ Called By:           WHEN Clause                        ╨
*       ╨ Object Type:         Field                              ╨
*       ╨ Snippet Number:      3                                  ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _4dh0n2eq0     &&  m.nome_emp WHEN
#REGION 1
SHOW GET m.nome_emp
ON KEY LABEL ESCAPE KEYBOARD "{BACKTAB}"
RETURN(.f.)


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4DH0N2EQF           m.dt_inicio WHEN                   ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0320,     Record Number:   43   ╨
*       ╨ Variable:            m.dt_inicio                        ╨
*       ╨ Called By:           WHEN Clause                        ╨
*       ╨ Object Type:         Field                              ╨
*       ╨ Snippet Number:      4                                  ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _4dh0n2eqf     &&  m.dt_inicio WHEN
#REGION 1
IF isediting
	ON KEY LABEL ESCAPE	KEYBOARD "{END}"
ENDIF
RETURN(isediting)

*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4DH0N2EQK           m.dt_inicio VALID                  ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0320,     Record Number:   43   ╨
*       ╨ Variable:            m.dt_inicio                        ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Field                              ╨
*       ╨ Snippet Number:      5                                  ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _4dh0n2eqk     &&  m.dt_inicio VALID
#REGION 1
m.dt_fim = m.dt_inicio
SHOW GET m.dt_fim
ON KEY LABEL ESCAPE KEYBOARD "{BACKTAB}"
RETURN (.T.)


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4DH0N2EQR           LNlivro WHEN                       ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0320,     Record Number:   45   ╨
*       ╨ Variable:            LNlivro                            ╨
*       ╨ Called By:           WHEN Clause                        ╨
*       ╨ Object Type:         Field                              ╨
*       ╨ Snippet Number:      6                                  ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _4dh0n2eqr     &&  LNlivro WHEN
#REGION 1
ON KEY LABEL ENTER
RETURN(isediting)

*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4DH0N2EQX           LNpagina WHEN                      ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0320,     Record Number:   46   ╨
*       ╨ Variable:            LNpagina                           ╨
*       ╨ Called By:           WHEN Clause                        ╨
*       ╨ Object Type:         Field                              ╨
*       ╨ Snippet Number:      7                                  ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _4dh0n2eqx     &&  LNpagina WHEN
#REGION 1
ON KEY LABEL ENTER
RETURN(isediting)

*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4DH0N2ER3           LSuf_destino WHEN                  ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0320,     Record Number:   47   ╨
*       ╨ Variable:            LSuf_destino                       ╨
*       ╨ Called By:           WHEN Clause                        ╨
*       ╨ Object Type:         Field                              ╨
*       ╨ Snippet Number:      8                                  ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _4dh0n2er3     &&  LSuf_destino WHEN
#REGION 1
ON KEY LABEL ENTER
RETURN(isediting)

*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4DH0N2ERA           LFAnEntrada WHEN                   ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0320,     Record Number:   48   ╨
*       ╨ Variable:            LFAnEntrada                        ╨
*       ╨ Called By:           WHEN Clause                        ╨
*       ╨ Object Type:         Check Box                          ╨
*       ╨ Snippet Number:      9                                  ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _4dh0n2era     &&  LFAnEntrada WHEN
#REGION 1
IF isediting
	ON KEY LABEL ENTER KEYBOARD "{RIGHTARROW}"
ENDIF	
RETURN(isediting)


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4DH0N2ERF           LFAnEntrada VALID                  ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0320,     Record Number:   48   ╨
*       ╨ Variable:            LFAnEntrada                        ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Check Box                          ╨
*       ╨ Snippet Number:      10                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _4dh0n2erf     &&  LFAnEntrada VALID
#REGION 1
RETURN


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4DH0N2ERM           LFTotData WHEN                     ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0320,     Record Number:   49   ╨
*       ╨ Variable:            LFTotData                          ╨
*       ╨ Called By:           WHEN Clause                        ╨
*       ╨ Object Type:         Check Box                          ╨
*       ╨ Snippet Number:      11                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _4dh0n2erm     &&  LFTotData WHEN
#REGION 1
ON KEY LABEL ENTER  KEYBOARD "{RIGHTARROW}"
RETURN(isediting)


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4DH0N2ERN           LFTotData VALID                    ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0320,     Record Number:   49   ╨
*       ╨ Variable:            LFTotData                          ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Check Box                          ╨
*       ╨ Snippet Number:      12                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _4dh0n2ern     &&  LFTotData VALID
#REGION 1
RETURN(.T.)



*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4DH0N2ERY           LFResCfoE WHEN                     ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0320,     Record Number:   50   ╨
*       ╨ Variable:            LFResCfoE                          ╨
*       ╨ Called By:           WHEN Clause                        ╨
*       ╨ Object Type:         Check Box                          ╨
*       ╨ Snippet Number:      13                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _4dh0n2ery     &&  LFResCfoE WHEN
#REGION 1
IF isediting
	ON KEY LABEL ENTER KEYBOARD "{RIGHTARROW}"
ENDIF	
RETURN(isediting)


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4DH0N2ES5           LFResCfoE VALID                    ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0320,     Record Number:   50   ╨
*       ╨ Variable:            LFResCfoE                          ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Check Box                          ╨
*       ╨ Snippet Number:      14                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _4dh0n2es5     &&  LFResCfoE VALID
#REGION 1
RETURN



*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4DH0N2ESD           LFResUfE WHEN                      ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0320,     Record Number:   51   ╨
*       ╨ Variable:            LFResUfE                           ╨
*       ╨ Called By:           WHEN Clause                        ╨
*       ╨ Object Type:         Check Box                          ╨
*       ╨ Snippet Number:      15                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _4dh0n2esd     &&  LFResUfE WHEN
#REGION 1
IF isediting
	ON KEY LABEL ENTER KEYBOARD "{RIGHTARROW}"
ENDIF	
RETURN(isediting)


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4DH0N2ESJ           LFResUfE VALID                     ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0320,     Record Number:   51   ╨
*       ╨ Variable:            LFResUfE                           ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Check Box                          ╨
*       ╨ Snippet Number:      16                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _4dh0n2esj     &&  LFResUfE VALID
#REGION 1
RETURN


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4DH0N2ESP           LFModelo WHEN                      ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0320,     Record Number:   52   ╨
*       ╨ Variable:            LFModelo                           ╨
*       ╨ Called By:           WHEN Clause                        ╨
*       ╨ Object Type:         Check Box                          ╨
*       ╨ Snippet Number:      17                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _4dh0n2esp     &&  LFModelo WHEN
#REGION 1
ON KEY LABEL ENTER  KEYBOARD "{RIGHTARROW}"
RETURN(isediting)


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4DH0N2ESX           m.imp_btn WHEN                     ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0320,     Record Number:   53   ╨
*       ╨ Variable:            m.imp_btn                          ╨
*       ╨ Called By:           WHEN Clause                        ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      18                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _4dh0n2esx     &&  m.imp_btn WHEN
#REGION 1
ON KEY LABEL ENTER
RETURN


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4DH0N2ET4           m.imp_btn VALID                    ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0320,     Record Number:   53   ╨
*       ╨ Variable:            m.imp_btn                          ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      19                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*



*-----------------------------------------------------------------*

FUNCTION _4dh0n2et4     &&  m.imp_btn VALID
#REGION 1
PRIVATE LDctrlFim	&&  Marca os Finais de Meses Intermediarios
					&& Qdo o Periodo informado envolver mais de um
					&& mes


	DO WHILE MONTH(m.dt_inicio) <= MONTH(m.dt_fim) AND  ;
			 YEAR(m.dt_inicio)  <= YEAR(m.dt_fim)


		IF MONTH(m.dt_inicio)   = MONTH(m.dt_fim) AND  ;
			 YEAR(m.dt_inicio)  = YEAR(m.dt_fim)
			LDctrlFim = m.dt_fim
		ELSE
			LDctrlFim = GOMONTH(m.dt_inicio,1)-DAY(GOMONTH(m.dt_inicio,1))
		ENDIF

		
		DO CtrlEntrada WITH	;
				(m.empresa),(m.dt_inicio),(LDctrlFim),(LFAnEntrada), ;
				(LFStEntrada), (LFResCfoE), (LFResUfE), LNpagina,;
				(LSuf_destino)

		m.dt_inicio =	GOMONTH(m.dt_inicio,1)
	ENDDO


RETURN


RETURN

*-------------------------------------------------------------------*
*	PROCEDURE CtrlEntrada
*	FUNCTION  ULGeraEnt   	  PARAM LNEmp,LDDtInicio,LDDtFim
*	FUNCTION  ULArqEntrada	  PARAM LNemp,LDdtIni,LDdtFim,LSTipo
*   PROCEDURE ULProcEntrada   PARAM LNEmp,LDDtInicio,LDDtFim
*-------------------------------------------------------------------*

PROCEDURE CtrlEntrada
PARAMETERS LNemp,dt_inicio,m.dt_fim,LFAnEntrada, ;
			LFStEntrada,LFResCfoE, LFResUfE, LNpagina,LSuf_origem

PRIVATE	LSProcesso, LNctrnota

PRIVATE dbf_NFETMP, als_NFETMP, dbf_NFE
PRIVATE dbf_ITMTMP, als_ITMTMP, dbf_ITM

PRIVATE dbf_TIPTMP, als_TIPTMP, dbf_TIP



	*----------------------------------------------------------*
	*---------------------------------------------------------*
	* Gerar Arq. Temporario
	*---------------------------------------------------------*
	LSarqtmp 	= "" 			&& EX: C:\TMP\TMP0001
	LSaliastmp 	= "TMP" 		&&     TMP001
	LSarqtmp = UPopentmp(wp_dirtmp,LSarqtmp,LSaliastmp,1)
	IF EMPTY(LSaliastmp)
 		WAIT WINDOW "Nao Foi Possivel Gerar Arq Temporario."
 		SELE notaent
		UNLOCK
 		RETURN(.F.)
 	ENDIF		

	dbf_NFETMP    = wp_dirtmp+LSaliastmp
    als_NFETMP    = LSaliastmp

	*---------------------------------------------------------*
	LSarqtmp 	= "" 			&& EX: C:\TMP\TMP0001
	LSaliastmp 	= "ITM" 		&&     TMP001
	LSarqtmp = UPopentmp(wp_dirtmp,LSarqtmp,LSaliastmp,1)
	IF EMPTY(LSaliastmp)
 		WAIT WINDOW "Nao Foi Possivel Gerar Arq Temporario."
 		SELE notaent
		UNLOCK
 		RETURN(.F.)
 	ENDIF		

	dbf_ITMTMP    = wp_dirtmp+LSaliastmp
    als_ITMTMP    = LSaliastmp
	*---------------------------------------------------------*

	dbf_NFE         = wp_dirdat+"NOTAENT.DBF"
	dbf_ITM  		= wp_dirdat+"NOTAITE.DBF"

	*---------------------------------------------------------*

    IF M.dt_fim < {01.01.2003}
		dbf_TIP  		= "L:\TMP\CFO\TIPOOPER.DBF"
		dbf_TIP  		= "q:\scgc2001\central\tipooper.dbf"
	ELSE
		dbf_TIP         =  UPobterPath("TIPOOPER",.F.)+"TIPOOPER.DBF"
	ENDIF

	*---------------------------------------------------------*

	WAIT WINDOW "AGUARDE. Gerando Arq. Temporario." NOWAIT

	IF EMPTY(LSuf_origem)
		SELECT * FROM &dbf_NFE WHERE ;
				!(ch_opera $"56") ;
			AND LEFT(situacao,1) = "C" ;
			AND empresa = LNemp ;
			AND data >= dt_inicio ;
			AND data <= dt_fim ;
		INTO TABLE  &dbf_NFETMP
	ELSE
		SELECT * FROM &dbf_NFE WHERE ;
				!(ch_opera $"56") ;
			AND LSuf_origem = uf;
			AND LEFT(situacao,1) = "C" ;
			AND empresa = LNemp ;
			AND data >= dt_inicio ;
			AND data <= dt_fim ;
		INTO TABLE  &dbf_NFETMP
	ENDIF
	*----------------------------------------------------------*
	*  SELECIONANDO ITENS DO MOVIMENTO
	*----------------------------------------------------------------*
	SELECT  * ;
		FROM &dbf_ITM ;
		WHERE  	!(ch_opera $"56") ;
			AND empresa = LNemp ;
			AND data >= dt_inicio ;
			AND data <= dt_fim ;
	    INTO TABLE &dbf_ITMTMP

	*---------------------------------------------------------------*

	KEYBOARD CHR(13)
	WAIT WINDOW " "
	KEYBOARD CHR(13)
	WAIT WINDOW " "

	*----------------------------------------------------------*

	DO ULProcEntrada  WITH ;
				(LNemp),(m.dt_inicio),(m.dt_fim),(LFAnEntrada), ;
				(LFStEntrada), (LFResCfoE), (LFResUfE), LNpagina

	*----------------------------------------------------------*
	
	SELECT &als_NFETMP
	USE

	SELECT &als_ITMTMP
	USE

	SELE nota
RETURN				

*-------------------------------------------------------------------*

*-------------------------------------------------------------------*

*-------------------------------------------------------------------*
PROCEDURE ULProcEntrada
	*------------------------------------------------------------*
	* CLASSIFICACAO:  [????]
	*------------------------------------------------------------*
	* OBJETIVO....: Controla o Processo de Impressao dos relatorios
	*	de entrada nos varios meses e mantendo-os agregados
	*------------------------------------------------------------*
	* COMENTARIO..: A rotina permite que o periodo informado seja
	*		impresso por mes e controla a agregacao dos relatorios
	*------------------------------------------------------------*
	* OBS........ :
	*------------------------------------------------------------*
	*  TABELAS....:
	*------------------------------------------------------------*
	*  PARAMETROS..:
	*		LNemp..........: Empresa
	*		LDDtInicio.....: Data inicial
	*       LDDtFim........: Data Final
	*       LFAnEntrada....: Flag de Solicitaca Rel Analitico de Entrada
	*       LFStEntrada....: Flag de Solicitaca Rel Sintetico de Entrada
	*		LFResCfoE.......: Flag de Solicitaca Rel Sintetico de Entrada
	*		LFResUfE.......:
	*		LNpagina........
	*
	*------------------------------------------------------------*
	*  RETORNO.....:                                             *
	*------------------------------------------------------------*
	PARAMETERS LNEmp,LDDtInicio,LDDtFim, LFAnEntrada, ;
				LFStEntrada, LFResCfoE, LFResUfE, LNpagina

	LFLdireciona  = .F. && Ativa PRTSETUP para direcionar impressao DEF(.T.)
	LFLagrega 	  = .F. && Agrega o ??.REL em ??.AGR			    DEF(.F.)
	LFLfimagrega  = .F. && Qdo. Estiver agregando => encerra        DEF(.F.)
	**********************************************************************
	m.inscricao 	= empresa.inscricao
	LDdtimpr  		=  LDDtInicio	&& VAI ORIENTAR A IMPRESSAO MES A MES
	LFcontinua 		= .t.  			&& CAPTURA O VALOR DE LFsegue
	*********************>>> RELATORIO GERAL <<<*********************
	LNpagina = LNpagina - 1   && DESCONTA O VLR. INICIAL DE _PAGENO

	
	*   DETERMINA O PERIODO DE MES PARA IMPRESSAO ********

	LDper_ini = LDDtInicio
	LDper_fim = LDDtFim
	*****************************************************************
	*  -O SELECT ABAIXO TRATA VALORES DE BASE ICMS E OUTRO PELA CAPA
	* DA NOTA DE ENTRADA O QUE FUNCIONA DESDE QUE N╣O HAJA CFO
	* DIFERENTE NA NF.
	*  - O TRATAMENTO CORRETO ESTA NO SELECT POSTERIOR POREM OS ITENS
	* NAO ESTAO COM VALORES COMO BASE_OUTR ARMAZENADOS.....NECESSARIO
	* AJUSTAR A GRAVACAO DOS ITENS PARA QUE ESTES VALORES SEJAM CALCU-
	* LADOS E TRATADOS SEM ERRO QDO HOUVEREM VARIOS CFOS NA MESMA NOTA
	*****************************************************************
	IF 1=1

	SELECT 	NF.empresa,NF.nota,NF.serie,NF.codforn,NF.uf, ;
			NF.tipo,NF.data,NF.data_emi,NF.vlrfrete,NF.vlrseguro,NF.vlrdespes,;
        SUM(IT.vlrvenda+IT.vlripi+IT.ICMS_SUBS)  AS VlrNota, ;
	    ULdefCfo(NF.empresa,NF.tipo,it.tp_mercad,"ENTRADA") AS SET_CFO,;
	  	NF.aliq_icms,NF.TOTAL_NOTA,NF.base_subs,NF.icms_subs, ;
	  	SUM(IIF(gr.origem = 1,IT.vlrvenda,IT.vlrvenda*0)) AS BASE_IPI, ;
	  	SUM(IIF(gr.origem = 1,IT.VLRIPI,IT.VLRIPI*0)) AS VLR_IPI, ;
	  	IIF(NF.BASE_SUBS = 0,NF.base_icms,NF.base_icms*0) AS BASE_ICMS, ;
	  	IIF(NF.BASE_SUBS = 0,NF.VLR_ICMS,NF.VLR_ICMS*0) AS VLR_ICMS, ;
		NF.BASE_ISENT ,(NF.base_outr+NF.BASE_ISS) AS BASE_OUTR ;
   	FROM  &dbf_NFETMP NF, &dbf_TIP TP, &dbf_ITMTMP IT, grupo GR ;
    WHERE LEFT(NF.situacao,1) = "C" AND NF.CH_OPERA <> "5" ;
   		AND NF.TIPO = TP.TIPO AND TP.PROCESSO $ "Ee" ;
   		AND IT.TIPO = NF.TIPO AND IT.EMPRESA = NF.EMPRESA;
   		AND IT.NOTA = NF.NOTA AND IT.SERIE = NF.SERIE;
   		AND IT.FAVORECIDO = NF.FAVORECIDO ;
   		AND IT.CODIGO = GR.CODIGO ;
    GROUP BY NF.EMPRESA, NF.DATA, NF.NOTA, SET_CFO, nf.ALIQ_ICMS ;
    INTO CURSOR TMPLIVR1

	ELSE
	
	SET STEP ON
	SELECT 	NF.empresa,NF.nota,NF.serie,NF.codforn,NF.uf, ;
		NF.tipo,NF.data,NF.data_emi,NF.vlrfrete,NF.vlrseguro,NF.vlrdespes,;
        SUM(IT.vlrvenda+IT.vlripi+IT.ICMS_SUBS)  AS VlrNota, ;
	    ULdefCfo(NF.empresa,NF.tipo,it.tp_mercad,"ENTRADA") AS SET_CFO,;
	  	NF.aliq_icms,;
	  	SUM(IT.vlrvenda+IT.vlripi+IT.ICMS_SUBS)  AS TOTAL_NOTA,;
	  	SUM(IT.base_subs) AS BASE_SUBS,;
	  	SUM(IT.icms_subs) AS ICMS_SUBS,;
	  	SUM(IIF(gr.origem = 1,IT.vlrvenda,IT.vlrvenda*0)) AS BASE_IPI, ;
	  	SUM(IIF(gr.origem = 1,IT.VLRIPI,IT.VLRIPI*0)) AS VLR_IPI, ;
	  	SUM(IIF(IT.BASE_SUBS=0,IT.base_CALC,IT.base_CALC*0)) AS BASE_ICMS,;
	  	SUM(IIF(IT.BASE_SUBS=0,IT.VLR_ICMS,IT.VLR_ICMS*0)) AS VLR_ICMS,;
		SUM(IT.BASE_ISENT) AS BASE_ISENT,;
		SUM(IT.base_outr+IT.BASE_ISS) AS BASE_OUTR ;
   	FROM  &dbf_NFETMP NF, &dbf_TIP TP, &dbf_ITMTMP IT, grupo GR ;
    WHERE LEFT(NF.situacao,1) = "C" AND NF.CH_OPERA <> "5" ;
   		AND NF.TIPO = TP.TIPO AND TP.PROCESSO $ "Ee" ;
   		AND IT.TIPO = NF.TIPO AND IT.EMPRESA = NF.EMPRESA;
   		AND IT.NOTA = NF.NOTA AND IT.SERIE = NF.SERIE;
   		AND IT.FAVORECIDO = NF.FAVORECIDO ;
   		AND IT.CODIGO = GR.CODIGO ;
    GROUP BY NF.EMPRESA, NF.DATA, NF.NOTA, SET_CFO, nf.ALIQ_ICMS ;
    INTO CURSOR TMPLIVR1

	ENDIF
	

    SELECT TMPLIVR1.*, FORN.CGC,FORN.INSCRICAO,FORN.NOME ;
    FROM TMPLIVR1, FORNECE FORN;
    WHERE FORN.CODIGO = TMPLIVR1.CODFORN  ;
    INTO CURSOR TMPLIVR

	SELE TMPLIVR1
	USE
	SELE TMPLIVR


	*****************************************************************


	IF LFAnEntrada OR LFStEntrada
		DO ULEntImprel WITH (LDper_ini), (LDper_fim), LNpagina
		LFLdireciona  = .T.
	ENDIF
	**************************>>> RESUMO POR CFO
	IF LFResCfoE
		DO ULEntImpcfo WITH (LDper_ini), (LDper_fim), LNpagina
		LFLdireciona  = .T.
	ENDIF
	**************************>>> RESUMO POR UF
	IF LFResUfE
		DO ULEntImpUf WITH (LDper_ini), (LDper_fim), LNpagina
		LFLdireciona  = .T.
	ENDIF
	*-----------------------------
RETURN	
	

*-------------------------------------------------------------------*
PROCEDURE ULEntImprel   	&& RELATORIO GERAL
PARAMETERS LDper_ini, LDper_fim, LNpagina

*------------------------------------------------------------------*
	SELECT 	* FROM TMPLIVR NF;
      ORDER BY NF.EMPRESA, NF.DATA, NF.NOTA, NF.SET_CFO, NF.ALIQ_ICMS ;
    	INTO CURSOR LIVROENT

	*----------------------------------------------------------------*

	DO RELINIC.PRG          && INICIA VAR P/ TERMOMETRO

	SELECT LIVROENT

	GO TOP
	LFsegue = .t.
	LNregistro = RECNO()

    COUNT 	TO   LNimpressao

	LNimpressos = 0
	GO LNregistro
*******************
*---->   (COMPLETADO PREPARACAO DO CONTROLE DE STATUS IMPRESSAO)
*******************	
	LF_imp  = .t.   && controla a impressao de transportar
**************************>>> REGISTRO DE SAIDAS
	SELE fornece
	SET ORDER TO TAG codigo
	
	SELECT LIVROENT
	SET RELATION TO  codforn INTO fornece ADDITIVE



	IF LFModelo = .t.
	    LSrel = "REL221"      && relatorio padrao p/ impressoras ex: epson
	ELSE
		IF LFTotData = .T.
		    LSrel = "REL221C1" && relatorio padrao p/ impressoras ex: epson
		else
		    LSrel = "REL221C" && relatorio padrao p/ impressoras ex: epson
		ENDIF
    ENDIF


	LSorienta  =  " WHILE LFsegue  "

	DO UPimpressao WITH (LFLdireciona), (LFLagrega), (LFLfimagrega)
	LFcontinua = LFsegue
***********
	SET RELATION TO
	DO RELFIM.PRG          && FIM VAR P/ TERMOMETRO
	LNpagina = LNpagina + _PAGENO - 1   && DAR SEQU.AO N. PAGINA


	SELECT LIVROENT
	USE

RETURN


PROCEDURE ULEntImpcfo   	&& RESUMO POR CFO
PARAMETERS LDper_ini, LDper_fim, LNpagina

*---------------------------------------------------------------------*


	SELECT 	;
		NF.empresa   , NF.nota,      NF.serie,    ;
        NF.codforn   , NF.inscricao,  NF.uf, ;
		NF.tipo,       NF.data,      NF.data_emi,  ;
		NF.vlrfrete,   NF.vlrseguro,    NF.vlrdespes,;
        NF.VlrNota,;
		NF.SET_CFO,;
	  	NF.aliq_icms,;
		SUM(NF.TOTAL_NOTA)    AS TOTAL_NOTA,;
	  	SUM(NF.base_subs)     AS BASE_SUBS,;
	  	SUM(NF.icms_subs)     AS ICMS_SUBS,;
	  	SUM(NF.base_ipi)      AS BASE_ipi,;
	  	SUM(NF.vlr_ipi)       AS vlr_ipi,;
	  	SUM(NF.base_icms)     AS BASE_ICMS,;
	  	SUM(NF.VLR_ICMS)      AS VLR_ICMS,;
		SUM(NF.base_isent)    AS BASE_ISENT ,;
		SUM(NF.base_outr)     AS BASE_OUTR ;
   	FROM  TMPLIVR  NF;
    ORDER BY NF.EMPRESA, NF.SET_CFO ;
    GROUP BY NF.EMPRESA, NF.SET_CFO;
    INTO CURSOR LIVROENT

	SELECT LIVROENT
	*----------------------------------------------------------------*
	GO TOP
*******************
*---->   (INICIALIZACAO DO CONTROLE DE STATUS IMPRESSAO)
*******************	
	DO RELINIC.PRG          && INICIA VAR P/ TERMOMETRO
	LFsegue = .t.
	LNregistro = RECNO()
    COUNT   TO   LNimpressao
	LNimpressos = 0
	GO LNregistro
*******************
*---->   (COMPLETADO PREPARACAO DO CONTROLE DE STATUS IMPRESSAO)
*******************	
**************************>>> REGISTRO DE SAIDAS
    LSrel = "REL221A"      && relatorio padrao p/ impressoras ex: epson

	LSorienta  = " WHILE LFsegue "
	DO UPimpressao WITH (LFLdireciona), (LFLagrega), (LFLfimagrega)
	LFcontinua = LFsegue
***********
	DO RELFIM.PRG          && FIM VAR P/ TERMOMETRO
	LNpagina = LNpagina + _PAGENO - 1   && DAR SEQU AO N. PAGINA

	SELECT LIVROENT
	USE

RETURN


PROCEDURE ULEntImpuf   	&& RESUMO POR UF
PARAMETERS LDper_ini, LDper_fim, LNpagina

SELECT 	NF.empresa   , NF.nota,      NF.serie,    ;
        NF.codforn   , NF.inscricao,  NF.uf, ;
		NF.tipo,       NF.data,      NF.data_emi,  ;
		NF.vlrfrete,   NF.vlrseguro,    NF.vlrdespes,;
        NF.VlrNota,;
		NF.SET_CFO,;
	  	NF.aliq_icms,;
		SUM(NF.TOTAL_NOTA)    AS TOTAL_NOTA,;
	  	SUM(NF.base_subs)     AS BASE_SUBS,;
	  	SUM(NF.icms_subs)     AS ICMS_SUBS,;
	  	SUM(NF.base_ipi)      AS BASE_IPI,;
	  	SUM(NF.vlr_ipi)       AS VLR_IPI,;
	  	SUM(NF.base_icms)     AS BASE_ICMS,;
	  	SUM(NF.VLR_ICMS)      AS VLR_ICMS,;
		SUM(NF.base_isent)    AS BASE_ISENT ,;
		SUM(NF.base_outr)     AS BASE_OUTR ;
   	FROM  TMPLIVR  NF;
    ORDER BY NF.EMPRESA, NF.UF, NF.DATA ;
    GROUP BY NF.EMPRESA, NF.UF, NF.DATA ;
    INTO CURSOR LIVROENT

	SELECT LIVROENT
	GO TOP
*******************
*---->   (INICIALIZACAO DO CONTROLE DE STATUS IMPRESSAO)
*******************	
	DO RELINIC.PRG          && INICIA VAR P/ TERMOMETRO
	LFsegue = .t.
	LNregistro = RECNO()
    COUNT   TO   LNimpressao
	LNimpressos = 0
	GO LNregistro
*******************
*---->   (COMPLETADO PREPARACAO DO CONTROLE DE STATUS IMPRESSAO)
*******************	
**************************>>> REGISTRO DE SAIDAS
    LSrel = "REL221B"      && relatorio padrao p/ impressoras ex: epson

	LSorienta  =  " WHILE LFsegue "
	DO UPimpressao WITH 	(LFLdireciona), (LFLagrega), (LFLfimagrega)
	LFcontinua = LFsegue
***********
	DO RELFIM.PRG          && FIM VAR P/ TERMOMETRO

	LNpagina = LNpagina + _PAGENO - 1   && DAR SEQU AO N. PAGINA

	SELECT LIVROENT
	USE

RETURN


FUNCTION ULdefCfo
PARAMETERS PrmEmpresa, PrmTipo, PrmTp_mercad,PrmOperacao
PRIVATE LScfo
	=W_DEFPROC("TRIBUTAR.SPR")
	LScfo = TRCFO(PrmEmpresa, PrmTipo, PrmTp_mercad, PrmOperacao)
RETURN(LScfo)


FUNCTION ULini
	LF_fim  = .f.
RETURN(" ")

FUNCTION ULfim
	LF_fim  = .t.
RETURN(" ")



*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4DH0N2ETJ           m.edit_btn WHEN                    ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0320,     Record Number:   54   ╨
*       ╨ Variable:            m.edit_btn                         ╨
*       ╨ Called By:           WHEN Clause                        ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      20                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*

FUNCTION _4dh0n2etj     &&  m.edit_btn WHEN
#REGION 1
ON KEY LABEL ENTER
RETURN


*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4DH0N2ETQ           m.edit_btn VALID                   ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0320,     Record Number:   54   ╨
*       ╨ Variable:            m.edit_btn                         ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      21                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _4dh0n2etq     &&  m.edit_btn VALID
#REGION 1
=btn_val1('EDIT')
RETURN

PROCEDURE BTN_VAL1
	PARAMETER tecla, m.chv_ler, m.chv_compara, m.chv_brow
	LN_prxobj = _CUROBJ
	ON KEY LABEL ENTER
    DO CASE
		CASE tecla = "EDIT" AND !isediting   && INICIA EDICAO
			LFArqSaida = .F.       && ARQ TMP DEVE SER GERADO AO PROCESSAR
			SHOW GET edit_btn,1 PROMPT "\<Ok"
			SHOW GET m.imp_btn  DISABLE
			isediting  = .t.
			_CUROBJ = 1	
		    ON KEY LABEL ESCAPE KEYBOARD "{BACKTAB}"
			ON KEY LABEL END DO BTN_VAL1 WITH 'DELETE'
		CASE tecla = "EDIT" AND isediting     && CONFIRMA EDICAO
			SHOW GET edit_btn,1 PROMPT "\<Edita"
			isediting = .f.
			_CUROBJ = 1	
			IF  m.dt_fim < m.dt_inicio
				SHOW GET m.imp_btn DISABLE
			ELSE
				SHOW GET m.imp_btn  ENABLE
			ENDIF
		    ON KEY LABEL ESCAPE
			ON KEY LABEL END
		CASE tecla = "DELETE" AND isediting     && CANCELA EDICAO
			SHOW GET edit_btn,1 PROMPT "\<Edita"
			isediting = .f.
			_CUROBJ = 1	
			SHOW GET m.imp_btn  DISABLE
		    ON KEY LABEL ESCAPE
			ON KEY LABEL END
	ENDCASE
RETURN

*       жддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╥
*       ╨                                                         ╨
*       ╨ _4DH0N2ETX           m.canc_btn VALID                   ╨
*       ╨                                                         ╨
*       ╨ Function Origin:                                        ╨
*       ╨                                                         ╨
*       ╨ From Platform:       MS-DOS                             ╨
*       ╨ From Screen:         SCT0320,     Record Number:   55   ╨
*       ╨ Variable:            m.canc_btn                         ╨
*       ╨ Called By:           VALID Clause                       ╨
*       ╨ Object Type:         Push Button                        ╨
*       ╨ Snippet Number:      22                                 ╨
*       ╨                                                         ╨
*       сддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╫
*
FUNCTION _4dh0n2etx     &&  m.canc_btn VALID
#REGION 1
ON KEY LABEL ENTER
CLEAR GETS
CLEAR READ
isediting = .f.
RETURN .T.