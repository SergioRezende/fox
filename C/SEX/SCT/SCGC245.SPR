*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º 07/18/03             SCGC245.SPR               17:32:28 º
*       º                                                         º
*       ÇÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¶
*       º                                                         º
*       º Author's Name                                           º
*       º                                                         º
*       º Copyright (c) 2003 Company Name                         º
*       º Address                                                 º
*       º City,     Zip                                           º
*       º                                                         º
*       º Description:                                            º
*       º This program was automatically generated by GENSCRN.    º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½


*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º          SCGC245/MS-DOS Setup Code - SECTION 1          º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*

#REGION 1
*~ WIZARDSCREEN
*---------------------------------------------------------------------*
* ARQUIVOS UTILIZADOS :                                               *
*              - EMPRESA
*              - NOTA
*              - NOTAITE
*              - ITEMMOV
*              - FORNECE
* OBJETIVOS : APROPRIACAO DE CUSTO / PIS / COFINS
*---------------------------------------------------------------------*
******>>>> INICIO CONTROLE AMBIENTAL

CLEAR TYPEAHEAD
PUSH KEY CLEAR		&& desabilita teclas de atalho def. anteriormente
ON KEY LABEL F1		DO HLP2000.SPR WITH  POPUP(),PROMPT(),PROGRAM(),;
							WONTOP(),VARREAD()

******************************************************************
*		VARIAVEIS - PADRAO
******************************************************************
PRIVATE wl_areant, isediting,isadding,isreading,wp_record,wp_flgfecha
PRIVATE LFjanela, wp_ref_local
PRIVATE VLleitura, VLlerfim, VLcompara, VLchvlimi
PRIVATE LFemp, LFnfe, LFite,LFnfi,LFforn

******************************************************************
*		VARIAVEIS - ESPECIFICAS
******************************************************************


******************************************************************
ON KEY LABEL ESCAPE
wl_areant 	= 	ALLTRIM(ALIAS()) && PERMITE RETORNAR A AREA ANTER. A CHAMADA
m.isediting	=	.F.
m.isadding	=	.F.
m.isreading =   .F.
wp_flgfecha = 	.F. 		&& defaut nao fechamento da secao
WP_RECORD 	= 	0

STORE .F.  TO  LFemp, LFnfe, LFite,LFnfi,LFforn

wp_ref_local=  .f.     		&& NAO POSSUI CONTROLE DE REFRESH LOCAL

*****************>>>> INICIO CONTROLE ARQUIVOS<<<<<<<<
**************>> parametros repassados a btn_val <<

VLleitura = ""   && repassa chave de leitura p/ btn_val
VLlerfim  = ""   && p/ leitura do ultimo reg + 1
VLcompara = ""   && repassa chave de comparacao p/ btn_val
VLchvlimi = ""   && otimiza browse
**************************************************************

IF !USED("empresa")
	LFemp	= .T.
	IF ! NetUse("empresa")
		wp_flgfecha = .t.  && implica no fechamento da secao
	ENDIF
ENDIF
IF !USED("itemmov")
	LFite	= .T.
	IF ! NetUse("itemmov")
		wp_flgfecha = .t.  && implica no fechamento da secao
	ENDIF
ENDIF

IF !USED("fornece")
	LFforn	= .T.
	IF ! NetUse("fornece")
		wp_flgfecha = .t.  && implica no fechamento da secao
	ENDIF
ENDIF

IF !USED("notaent")
	LFnfe	= .T.
	IF ! NetUse("notaent")
		wp_flgfecha = .t.  && implica no fechamento da secao
	ENDIF
ENDIF
IF !USED("notaite")
	LFnfi	= .T.
	IF ! NetUse("notaite")
		wp_flgfecha = .t.  && implica no fechamento da secao
	ENDIF
ENDIF

IF wp_flgfecha
	do ULfecha
	RETURN
ENDIF

#REGION 0
REGIONAL m.currarea, m.talkstat, m.compstat

IF SET("TALK") = "ON"
	SET TALK OFF
	m.talkstat = "ON"
ELSE
	m.talkstat = "OFF"
ENDIF
m.compstat = SET("COMPATIBLE")
SET COMPATIBLE FOXPLUS

*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º                MS-DOS Window definitions                º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*

IF NOT WEXIST("scgc245") ;
	OR UPPER(WTITLE("SCGC245")) == "SCGC245.PJX" ;
	OR UPPER(WTITLE("SCGC245")) == "SCGC245.SCX" ;
	OR UPPER(WTITLE("SCGC245")) == "SCGC245.MNX" ;
	OR UPPER(WTITLE("SCGC245")) == "SCGC245.PRG" ;
	OR UPPER(WTITLE("SCGC245")) == "SCGC245.FRX" ;
	OR UPPER(WTITLE("SCGC245")) == "SCGC245.QPR"
	DEFINE WINDOW scgc245 ;
		FROM INT((SROW()-11)/2),INT((SCOL()-72)/2) ;
		TO INT((SROW()-11)/2)+10,INT((SCOL()-72)/2)+71 ;
		TITLE "[ Contabilizacao de Entradas ] " ;
		FOOTER "[ 245 ]" ;
		FLOAT ;
		NOCLOSE ;
		SHADOW ;
		NOMINIMIZE ;
		NONE ;
		COLOR SCHEME 1
ENDIF


*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º          SCGC245/MS-DOS Setup Code - SECTION 2          º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*

#REGION 1







*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º              SCGC245/MS-DOS Screen Layout               º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*

#REGION 1
IF WVISIBLE("scgc245")
	ACTIVATE WINDOW scgc245 SAME
ELSE
	ACTIVATE WINDOW scgc245 NOSHOW
ENDIF
@ 3,51 SAY "a" ;
	SIZE 1,1, 0
@ 7,2 TO 9,18 ;
	COLOR SCHEME 24
@ 9,3 TO 9,17 ;
	COLOR SCHEME 23
@ 8,18 SAY "³" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 23
@ 9,18 SAY "Ù" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 23
@ 7,18 SAY "¿" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 23
@ 7,27 TO 9,43 ;
	COLOR SCHEME 24
@ 9,28 TO 9,42 ;
	COLOR SCHEME 23
@ 8,43 SAY "³" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 23
@ 9,43 SAY "Ù" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 23
@ 7,43 SAY "¿" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 23
@ 7,52 TO 9,68 ;
	COLOR SCHEME 24
@ 9,53 TO 9,67 ;
	COLOR SCHEME 23
@ 8,68 SAY "³" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 23
@ 9,68 SAY "Ù" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 23
@ 7,68 SAY "¿" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 23
@ 0,0 TO 10,70 ;
	COLOR SCHEME 23
@ 10,1 TO 10,69 ;
	COLOR SCHEME 24
@ 10,70 SAY "Ù" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 1,70 TO 9,70 ;
	COLOR SCHEME 24
@ 0,70 SAY "¿" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 3,9 SAY "-" ;
	SIZE 1,1, 0
@ 2,3 TO 4,31 ;
	COLOR SCHEME 23
@ 4,4 TO 4,30 ;
	COLOR SCHEME 24
@ 4,31 SAY "Ù" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 3,31 SAY "³" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 2,31 SAY "¿" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 2,4 SAY "[Filial]" ;
	SIZE 1,8, 0
@ 2,37 TO 4,65 ;
	COLOR SCHEME 23
@ 4,38 TO 4,64 ;
	COLOR SCHEME 24
@ 4,65 SAY "Ù" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 3,65 SAY "³" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 2,65 SAY "¿" ;
	SIZE 1,1, 0 ;
	COLOR SCHEME 24
@ 2,38 SAY "[ Periodo ]" ;
	SIZE 1,11, 0
@ 3,6 GET m.empresa ;
	SIZE 1,3 ;
	DEFAULT " " ;
	PICTURE "999" ;
	WHEN _10411lhfa() ;
	VALID _10411lhfh()
@ 3,10 GET m.nome_emp ;
	SIZE 1,20 ;
	DEFAULT " " ;
	PICTURE "@!K" ;
	WHEN _10411lhfs()
@ 3,39 GET m.dt_inicio ;
	SIZE 1,10 ;
	DEFAULT {  /  /  } ;
	WHEN isediting ;
	VALID _10411lhft()
@ 3,53 GET m.dt_fim ;
	SIZE 1,10 ;
	DEFAULT {  /  /  } ;
	WHEN isediting ;
	VALID dt_inicio <= dt_fim ;
	ERROR "Data final deve ser MAIOR ou IGUAL a data inicial."
@ 8,6 GET m.edit_btn ;
	PICTURE "@*HN \<Edita" ;
	SIZE 1,9,1 ;
	DEFAULT 1 ;
	VALID btn_val1('EDIT') ;
	MESSAGE 'Permite a alteracao de dados do registro corrente'
@ 8,31 GET m.imp_btn ;
	PICTURE "@*HN \<Imprime" ;
	SIZE 1,9,1 ;
	DEFAULT 1 ;
	VALID _10411lhg6() ;
	DISABLE
@ 8,57 GET m.canc_btn ;
	PICTURE "@*HT \<Saida" ;
	SIZE 1,7,1 ;
	DEFAULT 1 ;
	VALID _10411lhi6()
@ 0,21 SAY "[ Contabilizacao de Entradas ]" ;
	SIZE 1,30, 0
@ 0,64 SAY "[245]" ;
	SIZE 1,5, 0

IF NOT WVISIBLE("scgc245")
	ACTIVATE WINDOW scgc245
ENDIF


*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º     MS-DOSREAD contains clauses from SCREEN scgc245     º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*

READ CYCLE MODAL ;
	ACTIVATE READACT() ;
	DEACTIVATE READDEAC() ;
	NOLOCK

RELEASE WINDOW scgc245

#REGION 0
IF m.talkstat = "ON"
	SET TALK ON
ENDIF
IF m.compstat = "ON"
	SET COMPATIBLE ON
ENDIF


*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º               SCGC245/MS-DOS Cleanup Code               º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*

#REGION 1
DO ULfecha 		&& FECHA ARQUIVOS ABERTOS
RETURN



*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º   SCGC245/MS-DOS Supporting Procedures and Functions    º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*

#REGION 1
PROCEDURE ULfecha
	IF LFemp		&& .t. =>  DEVE SER FECHADA NA SAIDA
		=UP_fecha("empresa")
	ENDIF
	IF LFnfe		&& .t. =>  DEVE SER FECHADA NA SAIDA
		=UP_fecha("notaent")
	ENDIF
	IF LFforn		&& .t. =>  DEVE SER FECHADA NA SAIDA
		=UP_fecha("fornece")
	ENDIF
	IF LFnfi		&& .t. =>  DEVE SER FECHADA NA SAIDA
		=UP_fecha("notaite")
	ENDIF
	IF LFite		&& .t. =>  DEVE SER FECHADA NA SAIDA
		=UP_fecha("itemmov")
	ENDIF
	wp_flgfecha = .F. 		&& defaut nao fechamento da secao
	IF !EMPTY(wl_areant) AND USED(wl_areant)
		SELECT &wl_areant
	ENDIF
	ON KEY LABEL ESCAPE
	SET FORMAT TO
	************************************
	POP KEY 			&& reabilita teclas de atalho def. anteriormente
RETURN

*-------------->

PROCEDURE BTN_VAL1
	PARAMETER tecla, m.chv_ler, m.chv_compara, m.chv_brow
	LN_prxobj = _CUROBJ
    DO CASE
		CASE tecla = "EDIT" AND !isediting   && INICIA EDICAO
			SHOW GET edit_btn,1 PROMPT "\<Ok"
			SHOW GET m.imp_btn DISABLE
			isediting = .t.
			_CUROBJ = 1	
		    ON KEY LABEL ESCAPE KEYBOARD "{BACKTAB}"
			ON KEY LABEL END DO BTN_VAL1 WITH 'DELETE'
		CASE tecla = "EDIT" AND isediting     && CONFIRMA EDICAO
			SHOW GET edit_btn,1 PROMPT "\<Edita"
			isediting = .f.
			_CUROBJ = 1	
			SHOW GET m.imp_btn ENABLE
		    ON KEY LABEL ESCAPE
			ON KEY LABEL END
		CASE tecla = "DELETE" AND isediting     && CANCELA EDICAO
			SHOW GET edit_btn,1 PROMPT "\<Edita"
			isediting = .f.
			_CUROBJ = 1	
			SHOW GET m.imp_btn DISABLE
		    ON KEY LABEL ESCAPE
			ON KEY LABEL END
	ENDCASE
RETURN

*============================================================*

FUNCTION ULNTicmCmprSubst
	PARAMETER LNicms_subs, LNvlr_icms
	PRIVATE LSarea,LNicms
	LNicms = 0.00
	
	IF LNicms_subs > 0
		LNicms = LNvlr_icms
	ELSE
		LNicms = 0.00
	ENDIF
RETURN(LNicms)


FUNCTION ULNTicmNormal
	PARAMETER LNicms_subs, LNvlr_icms
	PRIVATE LSarea,LNicms
	LNicms = 0.00
	IF LNicms_subs = 0
		LNicms = LNvlr_icms
	ELSE
		LNicms = 0.00
	ENDIF
RETURN(LNicms)



*************************************************************************
*	A rotina UULNTicmtransInterna serve de apoio ao relatorio
* para calcular o icms embutido nas transferencias internas de mercadoria
* com retencao para manter equivalencia dos custos
*************************************************************************

FUNCTION ULNTicmtransInterna
	PARAMETER LNemp,LStipo,LNcodforn,LNnota
				
	PRIVATE LSarea,LNicms,LNbase_Icms

	LNicms = 0.00

	*---------------------------------------------------------*
	* Mercadoria Substituicao em Operacao Interestadual
	*---------------------------------------------------------*


	LSarea = ALIAS()

	SELECT notaite
    SET ORDER TO TAG itemnota
    SET NEAR ON
    SEEK STR(LNemp,3)+ LEFT(LStipo,1)+STR(LNcodforn,5)+STR(LNnota,6)
	SET NEAR OFF
	IF notaite.ch_desti <> "1" OR notaite.ch_opera <> "2"
		SELECT &LSarea
		LNicms = 0.00
		RETURN(LNicms)	&& NAO E TRANSF ITERNA
	ENDIF

	DO WHILE !EOF() AND LNemp  = notaite.empresa ;
					AND LNnota = notaite.nota
		IF LStipo <> notaite.tipo OR  LNcodforn <> notaite.codforn
			 SKIP
			 LOOP
		ENDIF

		IF notaite.tp_mercad = 2		
				*********************************************************
				*    Inicio de tratamento nao parametrizavel ( ESPECIFICO)
				*		Para PNEUS Ind,Caminhao,Tratores,Agric,Terrapl
				*	> "00448"  e < "00800"	
				**********************************************************
				IF LEFT(notaite.classifica,5) > "00448" AND ;
				   LEFT(notaite.classifica,5) < "00800"
			 		LNicms = LNicms + ;
				 		(notaite.vlrvenda - (notaite.vlrvenda /1.24))
				ELSE
			 		LNicms = LNicms + ;
				 		(notaite.vlrvenda - (notaite.vlrvenda /1.26))
				ENDIF				
		ENDIF
		SKIP
	ENDDO				
	SELECT &LSarea
	LNicms = LNicms
RETURN(LNicms)



FUNCTION UITRtdoSaida_item
	PARAMETERS 	LSproduto,;
				LSufOrigem,;
				LSufDestino,;
				LNvlrMercadoria,;
				LNvlrIPI,;
				LNcdg_Forn

	PRIVATE LNicms
	*---------------------------------------------------------*
	LNicms = 0.00
	=W_DEFPROC("tributar.spr")
	LNicms = TRRtdoSaida(LSproduto,;
				LSufOrigem,;
				LSufDestino,;
				LNvlrMercadoria,;
				LNvlrIPI,;
				LNcdg_Forn)
	*---------------------------------------------------------*
RETURN(LNicms)

FUNCTION UITRtdoEntrada_item
	PARAMETERS 	LSproduto,;
				LSufOrigem,;
				LSufDestino,;
				LNvlrMercadoria,;
				LNvlrIPI,;
				LNcdg_Forn

	PRIVATE LNicms
	*---------------------------------------------------------*
	LNicms = 0.00
	=W_DEFPROC("tributar.spr")
	LNicms = TRRtdoEntrada(LSproduto,;
				LSufOrigem,;
				LSufDestino,;
				LNvlrMercadoria,;
				LNvlrIPI,;
				LNcdg_Forn)
	*---------------------------------------------------------*
RETURN(LNicms)


FUNCTION UITicmsnormal_item
	PARAMETERS 	LSproduto,;
				LSufOrigem,;
				LSufDestino,;
				LNvlrMercadoria,;
				LNvlrIPI,;
				LNcdg_Forn
				
	PRIVATE LSarea,LNicms,LNbase_Icms
	PRIVATE LNicmsOrigem
	PRIVATE LNRgTrbOrigem

	LNicms = 0.00

	*---------------------------------------------------------*
	=W_DEFPROC("tributar.spr")
	LNicms = TRicmNormal (LSproduto,;
				LSufOrigem,;
				LSufDestino,;
				LNvlrMercadoria,;
				LNvlrIPI,;
				LNcdg_Forn)
	*---------------------------------------------------------*

RETURN(LNicms)


FUNCTION  UITCusto
	PARAMETERS 	LSproduto,;
				LSufOrigem,;
				LSufDestino,;
				LNvlrMercadoria,;
				LNvlrIPI,;
				LNcdg_Forn,;
				PrmCUSTO_IND

	PRIVATE LNcusto
	LNcusto = 0

	=W_DEFPROC("preco.spr")
	LNcusto = PRCusto(LSproduto,;
				LSufOrigem,;
				LSufDestino,;
				LNvlrMercadoria,;
				LNvlrIPI,;
				LNcdg_Forn,;
				PrmCUSTO_IND)
	
RETURN(LNcusto)



*===============================================================*
*===============================================================*
*===============================================================*
*===============================================================*




FUNCTION UITicmtransInterna   	&& Calcula o ICMS Transferencia interna
	PARAMETERS 	LNtp_mercadoria,;
				LNvlrMercadoria,;
				LNAliq_ICMS,;
				LNiva,;
				LNdestino,;
				LNoperacao,;
				LSclassificacao,;
				LNcdg_Forn
				

	PRIVATE LSarea,LNicms,LNbase_Icms
	LNicms = 0.00

	IF LNoperacao <> "2"
		RETURN(LNicms)	&& NAO E TRANSF ITERNA
	ENDIF

	DO CASE
		CASE LNdestino = "1"			&& Transferencia Interna
			IF LNtp_mercadoria = 2		
				*********************************************************
				*    Inicio de tratamento nao parametrizavel ( ESPECIFICO)
				*		Para PNEUS Ind,Caminhao,Tratores,Agric,Terrapl
				*	> "00448"  e < "00800"	
				**********************************************************
				IF LEFT(LSclassificacao,5) > "00448" AND ;
				   LEFT(LSclassificacao,5) < "00800"
			 	   LNicms = LNicms + ;
				 		(LNvlrMercadoria - (LNvlrMercadoria /1.24))
				ELSE
			 	   LNicms = LNicms + ;
				 		(LNvlrMercadoria - (LNvlrMercadoria /1.26))
				ENDIF				
			ENDIF
		OTHERWISE
		  IF LNcdg_Forn = 1
	 		LNbase_Icms = LNvlrMercadoria - (LNvlrMercadoria * (4.9/100))
		  ELSE
	 		LNbase_Icms = LNvlrMercadoria
		  ENDIF
		  IF LNtp_mercadoria = 2
			 LNicms =  LNbase_Icms * LNAliq_ICMS/100
		  ENDIF
	ENDCASE
RETURN(LNicms)


*---------------------------------------------------------------------*
* UITicmCompraSubst
*  ICMS Embutido nas compras INTERNAS de produtos no regime de
*			substituicao  tributaria
*
*		  OBS: Operacoes de Transferencia interna o ICMS  tabem 
*              apurado.
*
*---------------------------------------------------------------------*

FUNCTION UITicmCompraSubst
	PARAMETERS 	LNtp_mercadoria,;
				LNvlrMercadoria,;
				LNAliq_ICMS,;
				LNdestino,;
				LNoperacao,;
				LNcdg_Forn
				

 	PRIVATE LSarea,LNicms,LNbase_Icms
	LNicms = 0.00

	IF LNoperacao = "2"
		RETURN(LNicms)	&& TRANSF ITERNA   CALCULADA A PARTE
	ENDIF

    IF LNcdg_Forn = 1
		LNbase_Icms = LNvlrMercadoria - (LNvlrMercadoria * (4.9/100))
	 ELSE
		LNbase_Icms = LNvlrMercadoria
	ENDIF

	IF LNtp_mercadoria = 2 && MERC. SUBSTRITUICA TRIBUTADA
		   LNicms =  LNbase_Icms * LNAliq_ICMS/100
	ENDIF
RETURN(LNicms)




FUNCTION XX

    IF nedata >= CTOD("01.05.2003")
		LNcusto = vlrvenda+vlr_ipi+;
			 UITicmCompraSubst(tp_mercad,vlrvenda,;
	   						aliq_icms,ch_desti,ch_opera)									

	ELSE

		LNcusto = vlrvenda+vlr_ipi;
				 - ;
				 UITicmsNormal_item(tp_mercad,vlrvenda,aliq_icms);
				 - ;
				 UITicmtransInterna(tp_mercad, vlrvenda,;
									aliq_icms,iva,ch_desti,;
									ch_opera, classifica)          ;
				 - ;
				 UITicmCompraSubst(tp_mercad,vlrvenda,;
			   						aliq_icms,ch_desti,ch_opera)									

	ENDIF
	
RETURN(LNcusto)
*---------------------------------------------------------------------*
* UITicmsDuploRegime_item_Normal
*
*	COMENTARIOS:
*
*	ICMS "normal" sobre produtos em que:
*		-Na ORIGEM  => regime  de MERC. TRIBUTADA
*		-Na DESTINO => regime  de MERC. SUBSTITUICAO
*
*---------------------------------------------------------------------*

FUNCTION UITicmsDuploRegime_item_Normal
	PARAMETERS 	LNvlrMercadoria,;
				LNAliq_ICMS,;
				LNdestino,;
				LSproduto,;
				LSUForigem,;
				LSUFdestino

	PRIVATE LSarea,LNicms, ORIGtp_mercad, DSTtp_mercad
	

	LNicms = 0.00
	IF LNdestino =  "1"
		RETURN(0.00)	&& OPERCAOES INTERNAS NAO SAO INCLUIDAS
	ENDIF

	* ORIGtp_mercad  = Tipo de Trib. Mercadoria na LSUForigem
	* DSTtp_mercad   = Tipo de Trib. Mercadoria na LSUFdestino
	* IF  ORIGtp_mercad = 1  AND DSTtp_mercad = 2
	* 	   LNicms =  LNvlrMercadoria * LNAliq_ICMS/100
	* ENDIF

RETURN(LNicms)

FUNCTION ULdisplay
PARAMETER LNnota
	    WAIT WINDOWS  str(LNnota,6) NOWAIT
 * 	    if LNnota =  127067
	*	    set step on
*	    endif
RETURN


*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _10411LHFA           m.empresa WHEN                     º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         SCGC245,     Record Number:   36   º
*       º Variable:            m.empresa                          º
*       º Called By:           WHEN Clause                        º
*       º Object Type:         Field                              º
*       º Snippet Number:      1                                  º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*
FUNCTION _10411lhfa     &&  m.empresa WHEN
#REGION 1
ON KEY LABEL ESCAPE	KEYBOARD "{END}"
IF LASTKEY() = 15 AND !(isediting)
	KEYBOARD "{ESCAPE}"
ENDIF
RETURN(isediting)

*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _10411LHFH           m.empresa VALID                    º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         SCGC245,     Record Number:   36   º
*       º Variable:            m.empresa                          º
*       º Called By:           VALID Clause                       º
*       º Object Type:         Field                              º
*       º Snippet Number:      2                                  º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*
FUNCTION _10411lhfh     &&  m.empresa VALID
#REGION 1
SELECT empresa
SET ORDER TO TAG empresa
IF LASTKEY() = 9
   ON KEY LABEL ESCAPE
   DO loc_dlog WITH .F.
   ON KEY LABEL ESCAPE DO BTN_VAL WITH 'DELETE'
   IF LASTKEY() = 27
		SELECT empresa
		RETURN .F.
	ENDIF
ELSE
	IF !SEEK(m.empresa)
		SELECT empresa
		RETURN .F.
	ENDIF
ENDIF
m.empresa   = empresa
m.nome_emp  = empresa.nome
SHOW GET m.empresa
SHOW GET m.nome_emp
SELECT empresa
RETURN .T.


*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _10411LHFS           m.nome_emp WHEN                    º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         SCGC245,     Record Number:   37   º
*       º Variable:            m.nome_emp                         º
*       º Called By:           WHEN Clause                        º
*       º Object Type:         Field                              º
*       º Snippet Number:      3                                  º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*
FUNCTION _10411lhfs     &&  m.nome_emp WHEN
#REGION 1
ON KEY LABEL ESCAPE KEYBOARD "{BACKTAB}"
RETURN(.f.)


*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _10411LHFT           m.dt_inicio VALID                  º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         SCGC245,     Record Number:   38   º
*       º Variable:            m.dt_inicio                        º
*       º Called By:           VALID Clause                       º
*       º Object Type:         Field                              º
*       º Snippet Number:      4                                  º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*
FUNCTION _10411lhft     &&  m.dt_inicio VALID
#REGION 1
m.dt_fim = m.dt_inicio
SHOW GET m.dt_fim
RETURN (.T.)


*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _10411LHG6           m.imp_btn VALID                    º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         SCGC245,     Record Number:   41   º
*       º Variable:            m.imp_btn                          º
*       º Called By:           VALID Clause                       º
*       º Object Type:         Push Button                        º
*       º Snippet Number:      5                                  º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*

FUNCTION _10411lhg6     &&  m.imp_btn VALID
#REGION 1
	PRIVATE TOTretido, TOTicmsop, TOTicmsnor, TOTnota, TOTTRANS

	STORE 0 TO TOTretido, TOTicmsop, TOTicmsnor, TOTnota, TOTTRANS

    ********************************************************
	SELE notaent
	SET ORDER TO TAG rldtentr
	SET NEAR ON
	SEEK STR(m.empresa,3)+DTOS(m.dt_inicio)
	SET NEAR OFF
	IF EOF() OR m.empresa <> notaent.empresa OR notaent.data > m.dt_fim	
		WAIT WINDOW "Nao Existem Dados Com Parametros Informados. <ENTER> "
		RETURN
	ENDIF
	******************** **************************************
	SELE EMPRESA
	SET ORDER TO TAG empresa
	SEEK m.empresa

	********************>  GERANDO ARQTMP **********************
	wl_arqtmp = ""
	LNtmp     = 65		&& TABELA ASCII A = 65
	IF !UPabretmp("cte")
		wp_flgfecha = .t.
	ENDIF
	IF wp_flgfecha
		UNLOCK
 		RETURN
 	ENDIF		

	*************************************************************
	* 1o    INICIO DO RELATORIO DIARIO DE ENTRADAS REL245			*
	*************************************************************

	WAIT WINDOW "AGUARDE. Gerando Arq. Temporario." NOWAIT

	LSarq1  = ALLTRIM(wp_dirdat)+"notaent"
	LSarq2  = ALLTRIM(wp_dirdat)+"fornece"

	LSarq1  = "notaent"
	LSarq2  = "fornece"

	SELE notaent
	SELECT   fornece.codigo,fornece.cta_contab, ;
			 notaent.ch_desti,notaent.ch_opera,;
			 notaent.nota,notaent.tipo,notaent.codforn, ;
			 notaent.empresa, notaent.data,;
			 IIF(notaent.data >= CTOD("01.05.2003"),0,notaent.icms_subs);
			      AS ICMS_SUBS, ;
			 notaent.vlr_icms, notaent.total_nota, ;
			 ULdisplay(nota) AS DSPL,;
			 IIF(notaent.data >= CTOD("01.05.2003"),0,;
			 ULNTicmtransInterna(empresa,tipo,codforn,nota))  AS ICMTRASINT,;
			 IIF(notaent.data >= CTOD("01.05.2003"),0,;
			 ULNTicmCmprSubst(notaent.icms_subs, notaent.vlr_icms);
			 		         ) AS ICMCMPRSUBST,;
			 ULNTicmNormal(notaent.icms_subs, notaent.vlr_icms) ;
			 		   AS ICMNORMAL;
	    		 FROM &LSarq1, &LSarq2 ;
				 WHERE (notaent.codforn = fornece.codigo ) AND  ;
						notaent.empresa = m.empresa AND ;
				 	   (notaent.data	>= m.dt_inicio AND ;
   				 	   notaent.data	<= m.dt_fim AND ;
   				 	    notaent.ch_opera $ "12" AND ;
   				 	    notaent.ch_condi $ "23" AND ;
   				 	    LEFT(notaent.situacao,1) = "C") ;
				 INTO CURSOR &wl_arqtmp ;
				 ORDER BY 	 cta_contab
	*******************
	*---->   (INICIALIZACAO DO CONTROLE DE STATUS IMPRESSAO)
	*******************	
	SELE &wl_arqtmp
	GO TOP
	IF EOF()
		WAIT WINDOW "Nao Existem Nf.Ent Com Parametros Informados. <ENTER> "
		USE
		RETURN
	ENDIF
	*******************	
	DO RELINIC.PRG          && INICIA VAR P/ TERMOMETRO
	LFsegue = .t.
	
	LNregistro = RECNO()
    COUNT TO LNimpressao
	LNimpressos = 0
	GO LNregistro
	*******************
	*---->   (COMPLETADO PREPARACAO DO CONTROLE DE STATUS IMPRESSAO)
	*******************	
	**************************>>> REGISTRO DE SAIDAS
	LFsegue  = .T.
	wp_arqname = ""
    LSrel = "REL245"
	LSorienta = " FOR LFsegue "
	***********
	set decimals to 6	&& TENTAR REDUZIR DIFERENCAS DE CALCULO DO ICMS
						&& ITEM A ITEM E PELA BASE FINAL NA NOTA
	DO UPimpressao      && COORDENA TRABALHO DE IMPRESSAO
  	set decimals to 2
	***********
	DO RELFIM.PRG          && FIM VAR P/ TERMOMETRO

	*-----------------------------
	*-----------------------------
    SET PRINTER TO SET('PRINTER',1)
	SET RELATION TO
	SET POINT TO
	SET SEPARATOR  TO
	SELE &wl_arqtmp
	USE

	*************************************************************
	* 2o  INICIO DO RESUMO DE ENTRADAS REL245A					*
	*************************************************************

	WAIT WINDOW "AGUARDE. Gerando Arq. Temporario." NOWAIT

	LSarq1  = ALLTRIM(wp_dirdat)+"notaite"
	LSarq2  = ALLTRIM(wp_dirdat)+"notaent"
	LSarq3  = ALLTRIM(wp_dirdat)+"empresa"

	SELE itemmov

****> 1 de 2 Passos - Selecionando registros e campos especificos
select	   		NFE.uf AS UfOrgigem,;
	   		EMP.estado AS UfDestino,;
			ITEM.codigo,;
	        ITEM.classifica,ITEM.descricao, ITEM.data, ;
			ITEM.ch_opera, ITEM.ch_desti,ITEM.nota,;
			ITEM.tipo, ITEM.codforn, ITEM.tp_mercad,;
			ITEM.iva, ITEM.operacao, ITEM.vlrvenda,;
			ITEM.vlripi, ITEM.aliq_icms, ;
			ITEM.CUSTO_IND,;
			ULdisplay(ITEM.nota) AS DSPL;
     FROM &LSarq1  ITEM , &LSarq2  NFE,  &LSarq3  EMP;
	 WHERE (ITEM.data >= m.dt_inicio AND ;
   				 	    ITEM.data <= m.dt_fim AND ;
						ITEM.empresa = m.empresa AND ;
   				 	    ITEM.ch_opera $ "12" AND ;
   				 	    ITEM.ch_condi $ "23" AND ;
   				 	    LEFT(ITEM.operacao,1) = "E") ;
			AND ITEM.EMPRESA = NFE.EMPRESA ;
   			AND ITEM.CODFORN = NFE.CODFORN ;
   			AND ITEM.NOTA    = NFE.NOTA ;
   			AND ITEM.SERIE   = NFE.SERIE ;
   			AND ITEM.TIPO    = NFE.TIPO  ;
   			AND ITEM.EMPRESA = EMP.EMPRESA ;
	 INTO CURSOR TMPREG1


****> 2 de 2 Passos - Calculando tributos e valores


	SELECT   * , ;
			 UITRtdoEntrada_item(codigo,UfOrgigem,UfDestino,;
			      vlrvenda,vlripi,codforn) AS RTIDO_ENTRADA,;
			 UITRtdoSaida_item(codigo,UfOrgigem,UfDestino,;
			      vlrvenda,vlripi,codforn) AS ICMRETIDO,;
			 UITicmsNormal_item(codigo,UfOrgigem,UfDestino,;
			      vlrvenda,vlripi,codforn) AS ICMNORMAL, ;
			 ULdisplay(nota) AS DSPL,;
			 0 AS ICMTRASINT, ;
		  	 0 AS ICMCPRAINT,;
			 UITCusto(codigo,UfOrgigem,UfDestino,;
			      vlrvenda,vlripi,codforn,CUSTO_IND) AS CUSTO ;									
	    FROM TMPREG1 ;
	    INTO CURSOR &wl_arqtmp ORDER BY 	 nota,classifica


******************************************************************
*	SELECT   notaite.classifica,notaite.descricao, notaite.data, ;
*			 notaite.ch_opera, notaite.ch_desti,notaite.nota,;
*			 notaite.tipo,notaite.codforn,notaite.tp_mercad,;
*			 notaite.iva,notaite.operacao , notaite.vlrvenda,;
*			 notaite.vlripi,  notaite.aliq_icms, ;
*			 UITRtdoSaida_item(17,tp_mercad,vlrvenda,vlripi,;
*		 			aliq_icms,iva,ch_desti,notaite.codforn) AS ICMRETIDO,;
*			 UITicmsNormal_item(tp_mercad,vlrvenda,;
*			 		aliq_icms,codforn) AS ICMNORMAL, ;
*			 ULdisplay(nota) AS DSPL,;
*			 UITicmtransInterna(tp_mercad, vlrvenda,;
*				aliq_icms,iva,ch_desti,;
*				ch_opera, classifica,codforn) AS ICMTRASINT, ;
*		  	 UITicmCompraSubst(tp_mercad,vlrvenda,;
*			   aliq_icms,ch_desti,ch_opera,codforn) AS ICMCPRAINT,;
*			 UITCusto(tp_mercad,vlrvenda,aliq_icms,;
*			 			iva,ch_desti,ch_opera, classifica,;
*			 			vlripi,data,codforn) AS CUSTO ;									
*	    		 FROM &LSarq1 ;
*				 WHERE (notaite.data >= m.dt_inicio AND ;
*  				 	    	notaite.data <= m.dt_fim AND ;
*							notaite.empresa = m.empresa AND ;
*   				 	    notaite.ch_opera $ "12" AND ;
*   				 	    notaite.ch_condi $ "23" AND ;
*   				 	    LEFT(notaite.operacao,1) = "E") ;
*				 INTO CURSOR &wl_arqtmp ORDER BY 	 nota,classifica
******************************************************************
	*******************
	*---->   (INICIALIZACAO DO CONTROLE DE STATUS IMPRESSAO)
	*******************	
	SELE &wl_arqtmp
	GO TOP
	IF EOF()
		WAIT WINDOW "Nao Existem Prod. Com Parametros Informados. <ENTER> "
		USE
		RETURN
	ENDIF
	*******************	
	DO RELINIC.PRG          && INICIA VAR P/ TERMOMETRO
	LFsegue = .t.
	
	LNregistro = RECNO()
    COUNT TO LNimpressao
	LNimpressos = 0
	GO LNregistro
	*******************
	*---->   (COMPLETADO PREPARACAO DO CONTROLE DE STATUS IMPRESSAO)
	*******************	
	SELE fornece
	SET ORDER TO TAG codigo
	SELE &wl_arqtmp
	SET RELATION TO codforn INTO fornece	

	**************************>>> REGISTRO DE SAIDAS
	LFsegue  = .T.
	wp_arqname = ""
    LSrel = "REL245A"
	LSorienta = " FOR LFsegue "
	***********
	set decimals to 6	&& TENTAR REDUZIR DIFERENCAS DE CALCULO DO ICMS
						&& ITEM A ITEM E PELA BASE FINAL NA NOTA
	DO UPimpressao      && COORDENA TRABALHO DE IMPRESSAO
  	set decimals to 2
	***********
	DO RELFIM.PRG          && FIM VAR P/ TERMOMETRO

	*-----------------------------

	*******************
	*---->   (INICIALIZACAO DO CONTROLE DE STATUS IMPRESSAO)
	*******************	
	SELE &wl_arqtmp
	GO TOP
	*******************	
	DO RELINIC.PRG          && INICIA VAR P/ TERMOMETRO
	LFsegue = .t.
	
	LNregistro = RECNO()
    COUNT TO LNimpressao
	LNimpressos = 0
	GO LNregistro
	*******************
	*---->   (COMPLETADO PREPARACAO DO CONTROLE DE STATUS IMPRESSAO)
	*******************	
	SELE fornece
	SET ORDER TO TAG codigo
	SELE &wl_arqtmp
	SET RELATION TO codforn INTO fornece	

	**************************>>> REGISTRO DE SAIDAS
	LFsegue  = .T.
	wp_arqname = ""
    LSrel = "REL245B"
	LSorienta = " FOR LFsegue "
	***********
	set decimals to 6	&& TENTAR REDUZIR DIFERENCAS DE CALCULO DO ICMS
						&& ITEM A ITEM E PELA BASE FINAL NA NOTA
	DO UPimpressao      && COORDENA TRABALHO DE IMPRESSAO
  	set decimals to 2
	***********
	DO RELFIM.PRG          && FIM VAR P/ TERMOMETRO

	*-----------------------------
    SET PRINTER TO SET('PRINTER',1)
	SET RELATION TO
	SET POINT TO
	SET SEPARATOR  TO
	SELE &wl_arqtmp
	USE

	SHOW WINDOW SCGC245 TOP
	SHOW GET m.imp_btn DISABLE

RETURN


*       ÖÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ·
*       º                                                         º
*       º _10411LHI6           m.canc_btn VALID                   º
*       º                                                         º
*       º Function Origin:                                        º
*       º                                                         º
*       º From Platform:       MS-DOS                             º
*       º From Screen:         SCGC245,     Record Number:   42   º
*       º Variable:            m.canc_btn                         º
*       º Called By:           VALID Clause                       º
*       º Object Type:         Push Button                        º
*       º Snippet Number:      6                                  º
*       º                                                         º
*       ÓÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ½
*
FUNCTION _10411lhi6     &&  m.canc_btn VALID
#REGION 1
CLEAR GETS
CLEAR READ
isediting = .f.
RETURN .T.